(self.webpackChunkangular_generic_table=self.webpackChunkangular_generic_table||[]).push([[179],{"./projects/core/src/lib/core.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{X:()=>CoreComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var _class,core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),Subject=__webpack_require__("./node_modules/rxjs/_esm2015/internal/Subject.js"),ReplaySubject=__webpack_require__("./node_modules/rxjs/_esm2015/internal/ReplaySubject.js"),BehaviorSubject=__webpack_require__("./node_modules/rxjs/_esm2015/internal/BehaviorSubject.js"),isObservable=__webpack_require__("./node_modules/rxjs/_esm2015/internal/util/isObservable.js"),of=__webpack_require__("./node_modules/rxjs/_esm2015/internal/observable/of.js"),combineLatest=__webpack_require__("./node_modules/rxjs/_esm2015/internal/observable/combineLatest.js"),fromEvent=__webpack_require__("./node_modules/rxjs/_esm2015/internal/observable/fromEvent.js"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),distinctUntilChanged=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/distinctUntilChanged.js"),tap=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/tap.js"),shareReplay=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/shareReplay.js"),startWith=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/startWith.js"),map=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/map.js"),switchMap=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/switchMap.js"),withLatestFrom=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/withLatestFrom.js"),filter=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/filter.js"),pluck=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/pluck.js"),take=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/take.js"),takeUntil=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/takeUntil.js"),utilities=__webpack_require__("./projects/core/src/lib/utilities/utilities.ts"),capital_case_pipe=__webpack_require__("./projects/core/src/lib/pipes/capital-case.pipe.ts"),sort_class_pipe=__webpack_require__("./projects/core/src/lib/pipes/sort-class.pipe.ts"),dash_case_pipe=__webpack_require__("./projects/core/src/lib/pipes/dash-case.pipe.ts"),dynamic_pipe=__webpack_require__("./projects/core/src/lib/pipes/dynamic.pipe.ts"),highlight_pipe=__webpack_require__("./projects/core/src/lib/pipes/highlight.pipe.ts"),row_selection_pipe=__webpack_require__("./projects/core/src/lib/pipes/row-selection.pipe.ts");let CoreComponent=((_class=class CoreComponent{constructor(){this.unsubscribe$=new Subject.xQ,this._navigationKeys=["ArrowDown","ArrowUp","ArrowLeft","ArrowRight","Home","End"],this._selectKeys=["Enter"," "],this._customClasses={selectedRow:"gt-selected",activeRow:"gt-active"},this.selection={},this.generateRowId=!0,this.rowClick=new core.EventEmitter,this.rowSelect=new core.EventEmitter,this.sortOrderChange=new core.EventEmitter,this._rowActive$=new ReplaySubject.t(1),this.rowActive=new core.EventEmitter,this.columnSort=new core.EventEmitter,this.pageChange=new core.EventEmitter,this.rowActive$=this._rowActive$.asObservable().pipe((0,distinctUntilChanged.x)(((p,q)=>this.rowIdKey&&p.row&&q.row?p.row[this.rowIdKey]===q.row[this.rowIdKey]:this.generateRowId&&p.row&&q.row?p.row._id===q.row._id:p.index===q.index)),(0,tap.b)((event=>this.activeRowIndex=event.index)),(0,tap.b)((event=>this.rowActive.emit(event))),(0,shareReplay.d)(1)),this.activeRowIndex=null,this._loading$=new ReplaySubject.t(1),this._sortOrder$=new BehaviorSubject.X([]),this._searchBy$=new ReplaySubject.t(1),this.searchBy$=this._searchBy$.pipe((0,startWith.O)(""),(0,map.U)((value=>(0,isObservable.b)(value)?value:(0,of.of)(value))),(0,switchMap.w)((obs=>obs)),(0,shareReplay.d)(1)),this._pagingInfo$=new BehaviorSubject.X({pageCurrent:null,pageNext:null,pagePrevious:null,pageSize:null,numberOfRecords:null}),this._tableConfig$=new BehaviorSubject.X({}),this.tableConfig$=this._tableConfig$.pipe((0,map.U)((value=>(0,isObservable.b)(value)?value:(0,of.of)(value))),(0,switchMap.w)((obs=>obs)),(0,tap.b)((config=>this._tableConfig=config)),(0,shareReplay.d)(1)),this._data$=new ReplaySubject.t(1),this.data$=this._data$.pipe((0,map.U)((value=>(0,isObservable.b)(value)?value:(0,of.of)(value))),(0,switchMap.w)((obs=>(0,combineLatest.aj)([obs]))),(0,withLatestFrom.M)(this.tableConfig$),(0,map.U)((([[data],config])=>{if(config.columns&&Object.values(config.columns).find((column=>!!column.mapTo))||config.rows&&Object.values(config.rows).find((column=>!!column.mapTo))){const newData=[];for(let i=0;i<data.length;i++){const row=data[i],newKeys=Object.entries(config.columns||config.rows||[]).filter((([key,value])=>!!value.mapTo)).reduce(((previousValue,[key,value])=>({...previousValue,[key]:this.nestedValue(row,value.mapTo.path,value.mapTo?.missingValue)})),{});newData[i]={...row,...newKeys}}data=newData}if(this.generateRowId&&!this.rowIdKey&&data.length>0){const dataWithId=[];for(let i=0;i<data.length;i++)dataWithId[i]={...data[i],_id:i};data=dataWithId}return{data,config}})),(0,switchMap.w)((obs=>(0,combineLatest.aj)([(0,of.of)(obs),this.sortOrder$,this.searchBy$]))),(0,map.U)((([table,sortBy,searchBy])=>(table.data=[...table.data],!sortBy?.length||table.config?.disableTableSort?searchBy&&!this.tableInfo?.lazyLoaded?(0,utilities.yC)(searchBy,!1,table.data,table.config):table.data:searchBy&&!this.tableInfo?.lazyLoaded?(0,utilities.yC)(searchBy,!1,table.data,table.config)?.sort((0,utilities.di)(sortBy)):table.data?.sort((0,utilities.di)(sortBy))))),(0,shareReplay.d)(1)),this.calculations$=(0,combineLatest.aj)([this.data$,this.tableConfig$]).pipe((0,map.U)((([data,config])=>(0,utilities.Kf)(data,config))),(0,shareReplay.d)(1)),this.table$=(0,combineLatest.aj)([this.data$,this.tableConfig$,this._pagingInfo$]).pipe((0,map.U)((([sorted,config,pagingInfo])=>null!==pagingInfo.pageCurrent&&null!==pagingInfo.numberOfRecords&&null!==pagingInfo.pageSize?{data:[sorted],config,info:{lazyLoaded:!0,numberOfRecords:pagingInfo.numberOfRecords,pageSize:pagingInfo.pageSize,pageTotal:pagingInfo.pageTotal??Math.ceil(pagingInfo.numberOfRecords/pagingInfo.pageSize)}}:config.pagination&&0!==config.pagination.length?{data:(0,utilities.yo)(sorted,+(config.pagination.length||0)),config,info:{numberOfRecords:sorted.length,pageSize:+(config.pagination.length||0),pageTotal:Math.ceil(sorted.length/+(config.pagination.length||0))}}:{data:[sorted],config,info:{numberOfRecords:sorted.length,pageTotal:1}})),(0,tap.b)((meta=>this._tableInfo$.next(meta.info))),(0,shareReplay.d)(1)),this._tableInfo$=new BehaviorSubject.X(void 0),this._currentPaginationIndex$=new BehaviorSubject.X(0),this.currentPaginationIndex$=(0,combineLatest.aj)([this._currentPaginationIndex$,this.table$]).pipe((0,map.U)((([page,table])=>{const lastPage=Math.ceil(table.info.records/(table.info.recordLength??(table.config?.pagination?.length||table.info.records)))-1;return+page<0?0:+page>lastPage?lastPage:+page})),(0,distinctUntilChanged.x)(),(0,tap.b)((index=>this.pageChange.emit({index}))),(0,shareReplay.d)(1)),this.colspan$=this.tableConfig$.pipe((0,switchMap.w)((config=>config.columns?(0,of.of)(Object.values(config.columns||config.rows||{}).filter((value=>!0!==value.hidden)).length):this.data$.pipe((0,map.U)((data=>data.length+1))))),(0,shareReplay.d)(1)),this.footerColspan$=this.tableConfig$.pipe((0,map.U)((config=>{let colspan=0;return Object.values(config?.footer?.columns||{}).forEach((calculations=>{Object.values(calculations).filter((value=>!1!==value)).length>=0&&(colspan+=1)}),{}),colspan})),(0,shareReplay.d)(1)),this.columnOrder=(a,b)=>(a.value.order||0)-(b.value.order||0),this._unsubscribeFromKeyboardEvents$=new Subject.xQ,this._keyboardArrowEvent$=(0,fromEvent.R)(document,"keydown").pipe((0,filter.h)((event=>[...this._navigationKeys,...this._selectKeys].indexOf(event.key)>-1)))}get navigationKeys(){return this._navigationKeys}set navigationKeys(value){this._navigationKeys=value}get selectKeys(){return this._selectKeys}set selectKeys(value){this._selectKeys=value}get sortOrder$(){return this._sortOrder$.asObservable()}set loading(isLoading){this._loading$.next(isLoading)}set paginationIndex(pageIndex){this._currentPaginationIndex$.next(pageIndex)}get paginationIndex(){return this._currentPaginationIndex$.getValue()}set pagingInfo(value){value&&(this._pagingInfo$.next(value),value.pageCurrent!==this._currentPaginationIndex$.getValue()+1&&null!==value.pageCurrent&&(this.paginationIndex=value.pageCurrent-1))}set customClasses(classes){this._customClasses={...this._customClasses,...classes}}get customClasses(){return this._customClasses}set isRowSelectedFn(fn){this._isRowSelectedFn=fn}get isRowSelectedFn(){return this._isRowSelectedFn}set trackRowByFn(fn){this._trackRowByFn=fn}get trackRowByFn(){return this._trackRowByFn}_trackRowByFn(index,row){return this.rowIdKey?row[this.rowIdKey]:row?._id}set search(string){this._searchBy$.next(string)}set config(config){this._tableConfig$.next(config)}set data(data){data&&this._data$.next(data)}set sortOrder(sortConfig){JSON.stringify(sortConfig)!==JSON.stringify(this._sortOrder$.value)&&(this.sortOrderChange.emit(sortConfig),this._sortOrder$.next(sortConfig))}_rowClick(row,index,event){this.rowClick.emit({row,index,event})}_rowActive(row,index,event){this.rowSelect.emit({row,index,event})}activateRow(arg,event){"number"==typeof arg?this.table$.pipe((0,pluck.j)("data"),(0,map.U)((data=>data[this.paginationIndex][arg])),(0,take.q)(1),(0,takeUntil.R)(this.unsubscribe$)).subscribe((row=>this._activateRow(row,arg,event))):"string"==typeof arg||this._activateRow(null,null)}_activateRow(row,index,event){this._rowActive$.next({row,index,event})}get loading$(){return this._loading$.pipe((0,startWith.O)(!1),(0,map.U)((value=>(0,isObservable.b)(value)?value:(0,of.of)(value))),(0,switchMap.w)((obs=>obs)),(0,shareReplay.d)(1))}get tableInfo$(){return this._tableInfo$.asObservable().pipe((0,filter.h)((info=>!!info)),(0,shareReplay.d)(1))}get tableInfo(){return this._tableInfo$.getValue()}sortByKey(key,$event){const shiftKey=!0===$event?.shiftKey,currentOrder=this._sortOrder$.value;let sortOrder="asc",newOrder=[];if(shiftKey){const existingSortPosition=currentOrder.findIndex((value=>value.key===key));if(-1===existingSortPosition)newOrder=[...currentOrder,{key,order:"asc"}];else{sortOrder=currentOrder[existingSortPosition].order;const newSortOrder="asc"===sortOrder?"desc":"asc";newOrder=[...currentOrder],newOrder[existingSortPosition]={...newOrder[existingSortPosition],order:newSortOrder}}}else if(currentOrder.length>0){const existingSortPosition=currentOrder.findIndex((value=>value.key===key));if(-1===existingSortPosition)newOrder=[{key,order:"asc"}];else{sortOrder=currentOrder[existingSortPosition].order;newOrder=[{key,order:"asc"===sortOrder?"desc":"asc"}]}}else newOrder=[{key,order:sortOrder}];const sortEvent={key,order:sortOrder,currentSortOrder:newOrder,addSortKey:shiftKey};$event&&(sortEvent.event=$event),this.columnSort.emit(sortEvent),this.tableInfo?.lazyLoaded||(this.sortOrder=newOrder)}nestedValue(object,mapTo,missingValue=null){const levels=mapTo.split(".");return levels.reduce(((previousValue,currentValue,index)=>previousValue[currentValue]||(index===levels.length-1?missingValue:{})),object)}listenToKeyboardEvents(){this._tableConfig?.activateRowOnKeyboardNavigation&&(this._unsubscribeFromKeyboardEvents$.next(!0),this._keyboardArrowEvent$.pipe((0,withLatestFrom.M)(this.data$,this.currentPaginationIndex$,this.tableInfo$),(0,takeUntil.R)(this._unsubscribeFromKeyboardEvents$),(0,takeUntil.R)(this.unsubscribe$)).subscribe((([event,rows,currentPage,tableInfo])=>{if(this._selectKeys.includes(event.key)&&null!==this.activeRowIndex){const rowIndex=this.activeRowIndex+currentPage*(tableInfo?.pageSize??0);return void this._rowActive(rows[rowIndex],rowIndex,event)}this._navigationKeys.includes(event.key)&&this._handleNavigationEvent(event,rows,currentPage,tableInfo)})))}unsubscribeFromKeyboardEvents(tableRef){this._tableConfig?.activateRowOnKeyboardNavigation&&tableRef!==document.activeElement&&(this._tableConfig?.activateRowOnHover&&this.activateRow(null),this._unsubscribeFromKeyboardEvents$.next(!0))}_handleNavigationEvent(event,rows,currentPage,tableInfo){const hasPagination=(tableInfo?.pageTotal||0)>1&&tableInfo,lastRowIndex=rows.length-1;let newIndex=this.activeRowIndex,indexModifier=0;if("Home"===event.key)return this.paginationIndex=0,void this.activateRow(0,event);if("End"===event.key){const indexOfLastRecord=hasPagination?rows.length-(tableInfo.pageTotal-1)*tableInfo.pageSize-1:lastRowIndex;return tableInfo?.pageTotal&&(this.paginationIndex=tableInfo.pageTotal-1),void this.activateRow(indexOfLastRecord,event)}if("ArrowDown"===event.key?indexModifier=1:"ArrowUp"===event.key&&(indexModifier=-1),null===newIndex?newIndex=0:newIndex+indexModifier>=0&&newIndex+indexModifier<=lastRowIndex&&(newIndex+=indexModifier),hasPagination&&tableInfo?.pageSize){const isNotLastPage=currentPage+1<tableInfo.pageTotal,recordsOnLastPage=rows.length-(tableInfo.pageTotal-1)*tableInfo.pageSize-1,maxIndex=isNotLastPage?tableInfo?.pageSize-1:recordsOnLastPage;if("ArrowLeft"===event.key&&currentPage>0)return this.paginationIndex=currentPage-1,void this.activateRow(newIndex,event);if("ArrowRight"===event.key&&isNotLastPage)return currentPage+1===tableInfo.pageTotal-1&&newIndex>recordsOnLastPage&&this.activateRow(recordsOnLastPage,event),this.paginationIndex=currentPage+1,void this.activateRow(newIndex,event);if(currentPage>0&&indexModifier<0&&newIndex+indexModifier<=lastRowIndex&&(this.activeRowIndex||0)+indexModifier<0)return this.activateRow(tableInfo?.pageSize-1,event),void(this.paginationIndex=currentPage-1);const pageIndex=newIndex%tableInfo?.pageSize;return newIndex>maxIndex&&currentPage+1<tableInfo.pageTotal&&(this.paginationIndex=currentPage+1),void this.activateRow(pageIndex>maxIndex?maxIndex:pageIndex,event)}this.activateRow(newIndex,event)}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.complete()}}).propDecorators={navigationKeys:[{type:core.Input}],selectKeys:[{type:core.Input}],loading:[{type:core.Input}],paginationIndex:[{type:core.Input}],pagingInfo:[{type:core.Input}],customClasses:[{type:core.Input}],isRowSelectedFn:[{type:core.Input}],selection:[{type:core.Input}],rowIdKey:[{type:core.Input}],generateRowId:[{type:core.Input}],trackRowByFn:[{type:core.Input}],search:[{type:core.Input}],config:[{type:core.Input}],data:[{type:core.Input}],sortOrder:[{type:core.Input}],rowClick:[{type:core.Output}],rowSelect:[{type:core.Output}],sortOrderChange:[{type:core.Output}],rowActive:[{type:core.Output}],columnSort:[{type:core.Output}],pageChange:[{type:core.Output}]},_class);CoreComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"angular-generic-table",template:'<table\n  [ngClass]="(tableConfig$ | async)?.class || \'table\'"\n  [class.table-mobile]="(tableConfig$ | async)?.mobileLayout"\n  [class.table-horizontal]="(tableConfig$ | async)?.rows"\n  [class.table-loading]="loading$ | async"\n  [class.gt-sticky-row-header]="\n    (tableConfig$ | async)?.stickyHeaders?.row && (tableConfig$ | async)?.rows\n  "\n  [class.gt-sticky-column-header]="\n    (tableConfig$ | async)?.stickyHeaders?.column\n  "\n  [attr.aria-busy]="(loading$ | async) === true ? true : null"\n  [tabindex]="(tableConfig$ | async)?.activateRowOnKeyboardNavigation ? 0 : -1"\n  #tableRef\n  (focus)="listenToKeyboardEvents()"\n  (focusout)="unsubscribeFromKeyboardEvents(tableRef)"\n  (mouseenter)="listenToKeyboardEvents()"\n  (mouseleave)="unsubscribeFromKeyboardEvents(tableRef)"\n>\n  <thead>\n    <tr\n      *ngIf="{\n        config: (tableConfig$ | async)!,\n        isLoading: loading$ | async\n      } as table"\n    >\n      <ng-container\n        *ngFor="let column of table.config?.columns | keyvalue: columnOrder"\n      >\n        <th\n          *ngIf="!column.value?.hidden"\n          ngClass="{{ (column.key | dashCase) + \'-column\' }} {{\n            column.value.class\n          }}"\n          [class.disabled]="table.isLoading"\n          [attr.aria-sort]="sortOrder$ | async | sortClass: column.key:\'aria\'"\n          [class.gt-sortable]="true"\n          scope="col"\n        >\n          <button\n            *ngIf="column.value?.sortable"\n            [attr.data-sort-order]="\n              sortOrder$ | async | sortClass: column.key:\'order\'\n            "\n            class="gt-sort"\n            (click)="\n              table.isLoading ||\n                !column.value.sortable ||\n                sortByKey(column.key, $event)\n            "\n          >\n            <span *ngIf="column.value?.header !== false">{{\n              column.value.header || column.key | capitalCase\n            }}</span>\n          </button>\n          <span\n            *ngIf="!column.value?.sortable && column.value?.header !== false"\n            >{{ column.value.header || column.key | capitalCase }}</span\n          >\n        </th>\n      </ng-container>\n      <ng-container\n        *ngIf="\n          ((table?.config?.rows | keyvalue: columnOrder) || [])[0] as headerRow\n        "\n      >\n        <th\n          class="row-header"\n          [attr.aria-sort]="\n            sortOrder$ | async | sortClass: headerRow.key:\'aria\'\n          "\n          ngClass="{{ headerRow.value.sortable ? \'sort \' : \'\' }} {{\n            sortOrder$ | async | sortClass: headerRow.key\n          }} {{ (headerRow.key | dashCase) + \'-column\' }}"\n          (click)="\n            table.isLoading ||\n              !headerRow.value.sortable ||\n              sortByKey(headerRow.key, $event)\n          "\n          scope="col"\n        >\n          <ng-container *ngIf="headerRow?.value?.header !== false">{{\n            headerRow?.value?.header || headerRow.key | capitalCase\n          }}</ng-container>\n        </th>\n        <th\n          *ngFor="let column of ((table$ | async)?.data || [])[0]"\n          ngClass="{{ headerRow.value.class }}"\n        >\n          <ng-container\n            [ngTemplateOutlet]="\n              (table.config.rows || {})[headerRow.key].templateRef\n                ? templateRef\n                : (table.config.rows || {})[headerRow.key].transform\n                ? transformData\n                : rawData\n            "\n            [ngTemplateOutletContext]="{\n              row: column,\n              column: headerRow,\n              transform: (table.config.rows || {})[headerRow.key].transform,\n              templateRef: (table.config.rows || {})[headerRow.key].templateRef,\n              index: 0\n            }"\n          >\n          </ng-container>\n        </th>\n      </ng-container>\n    </tr>\n  </thead>\n  <tbody *ngIf="loading$ | async; else tableContent">\n    <tr>\n      <td class="p-0" [colSpan]="colspan$ | async">\n        <ng-content select=".table-loading"></ng-content>\n      </td>\n    </tr>\n  </tbody>\n  <tfoot *ngIf="(table$ | async)! as table">\n    <ng-container *ngIf="table.data.length > 0 && !(loading$ | async)">\n      <ng-container *ngIf="(calculations$ | async)! as calculations">\n        <tr\n          *ngFor="let calculation of calculations.calculations; let i = index"\n        >\n          <ng-container\n            *ngIf="{\n              showHeader: (colspan$ | async) !== (footerColspan$ | async)\n            } as footerRow"\n          >\n            <th\n              *ngIf="footerRow.showHeader"\n              [colSpan]="\n                ((colspan$ | async) || 0) - ((footerColspan$ | async) || 0)\n              "\n              scope="row"\n            >\n              <ng-container\n                *ngIf="table.config?.footer?.headers?.[calculation] as showHeader"\n                >{{showHeader === true ? (calculation | capitalCase): table.config.footer?.headers?.[calculation]}}\n              </ng-container>\n            </th>\n            <ng-container\n              *ngFor="\n                let column of table.config?.columns | keyvalue: columnOrder\n              "\n            >\n              <td\n                *ngIf="\n                  !column.value?.hidden && calculations.calculated[column.key]\n                "\n                ngClass="{{ (column.key | dashCase) + \'-column\' }} {{\n                  column.value.class\n                }}"\n                [attr.data-header]="\n                  !footerRow.showHeader && table.config.footer?.headers?.[calculation]\n                    ? table.config.footer?.headers?.[calculation] === true ? (calculation | capitalCase) : table.config.footer?.headers?.[calculation]\n                    : null\n                "\n                [attr.data-label]="\n                  table.config.mobileLayout && column.value.mobileHeader\n                    ? column.value.mobileHeader !== true\n                      ? column.value.mobileHeader\n                      : (column.value.header || column.key | capitalCase)\n                    : null\n                "\n                [class.gt-no-content]="\n                  !calculations.calculated[column.key][calculation]\n                "\n              >\n                <ng-container\n                  [ngTemplateOutlet]="\n                    (table.config.columns || {})[column.key].templateRef\n                      ? templateRef\n                      : (table.config.columns || {})[column.key].transform\n                      ? transformFooter\n                      : rawFooter\n                  "\n                  [ngTemplateOutletContext]="{\n                    value: calculations.calculated[column.key][calculation],\n                    row: calculations.calculated[column.key],\n                    column: calculation,\n                    templateRef: (table.config.columns || {})[column.key]\n                      .templateRef,\n                    transform: (table.config.columns || {})[column.key]\n                      .transform\n                  }"\n                ></ng-container>\n              </td>\n            </ng-container>\n          </ng-container>\n        </tr>\n      </ng-container>\n    </ng-container>\n  </tfoot>\n</table>\n<ng-template #tableContent>\n  <ng-container *ngIf="(table$ | async)! as table">\n    <tbody *ngIf="(table!.data![0] || table!.data!).length > 0; else noData">\n      <ng-container *ngIf="table.config.columns">\n        <tr\n          *ngFor="\n            let row of table!.data![\n              table.info.lazyLoaded ? 0 : (currentPaginationIndex$ | async) || 0\n            ];\n            trackBy: trackRowByFn;\n            let i = index\n          "\n          [attr.id]="\'tableRow_\' + i"\n          (click)="table?.config?.rowClick && _rowClick(row, i, $event)"\n          (mouseenter)="\n            table?.config?.activateRowOnHover && _activateRow(row, i, $event)\n          "\n          (mouseleave)="\n            table?.config?.activateRowOnHover &&\n              _activateRow(null, null, $event)\n          "\n          [ngClass]="[\n            !!isRowSelectedFn\n              ? (row\n                | rowSelection\n                  : selection\n                  : isRowSelectedFn\n                  : customClasses.selectedRow)\n              : \'\',\n            (rowActive$ | async)?.index === i ? customClasses.activeRow : \'\'\n          ]"\n        >\n          <ng-container\n            *ngFor="let column of table.config?.columns | keyvalue: columnOrder"\n          >\n            <td\n              *ngIf="!column.value?.hidden"\n              ngClass="{{ (column.key | dashCase) + \'-column\' }} {{\n                column.value.class\n              }}"\n              [attr.data-label]="\n                table.config.mobileLayout && column.value.mobileHeader\n                  ? column.value.mobileHeader !== true\n                    ? column.value.mobileHeader\n                    : (column.value.header || column.key | capitalCase)\n                  : null\n              "\n            >\n              <ng-container\n                [ngTemplateOutlet]="\n                  (searchBy$ | async) &&\n                  !(table.config.columns || {})[column.key].templateRef\n                    ? highlighted\n                    : (table.config.columns || {})[column.key].templateRef\n                    ? templateRef\n                    : (table.config.columns || {})[column.key].transform\n                    ? transformData\n                    : rawData\n                "\n                [ngTemplateOutletContext]="{\n                  row: row,\n                  column: column,\n                  search: (searchBy$ | async),\n                  transform: (table.config.columns || {})[column.key].transform,\n                  templateRef: (table.config.columns || {})[column.key]\n                    .templateRef,\n                  index: i,\n                  data: table.data[\n                    table.info.lazyLoaded\n                      ? 0\n                      : (currentPaginationIndex$ | async) || 0\n                  ]\n                }"\n              ></ng-container>\n            </td>\n          </ng-container>\n        </tr>\n      </ng-container>\n      <ng-container *ngIf="table.config.rows">\n        <ng-container\n          *ngFor="\n            let row of table?.config?.rows | keyvalue: columnOrder | slice: 1;\n            let i = index\n          "\n        >\n          <tr\n            *ngIf="!row.value?.hidden"\n            [attr.id]="\'tableRow_\' + i"\n            ngClass="{{ (row.key | dashCase) + \'-row\' }}"\n            (click)="table?.config?.rowClick && _rowClick(row, i, $event)"\n            (mouseenter)="\n              table?.config?.activateRowOnHover && _activateRow(row, i, $event)\n            "\n            (mouseleave)="\n              table?.config?.activateRowOnHover &&\n                _activateRow(null, null, $event)\n            "\n            [ngClass]="[\n              !!isRowSelectedFn\n                ? (row\n                  | rowSelection\n                    : selection\n                    : isRowSelectedFn\n                    : customClasses.selectedRow)\n                : \'\',\n              (rowActive$ | async)?.index === i ? customClasses.activeRow : \'\'\n            ]"\n          >\n            <th class="row-header" scope="row">\n              {{ row.value.header || row.key | capitalCase }}\n            </th>\n            <td\n              *ngFor="let column of (table?.data || [])[0]; let y = index"\n              ngClass="{{ row.value.class }}"\n            >\n              <ng-container\n                [ngTemplateOutlet]="\n                  (table.config.rows || {})[row.key].templateRef\n                    ? templateRef\n                    : (table.config.rows || {})[row.key].transform\n                    ? transformData\n                    : rawData\n                "\n                [ngTemplateOutletContext]="{\n                  row: column,\n                  column: row,\n                  transform: (table.config.rows || {})[row.key].transform,\n                  templateRef: (table.config.rows || {})[row.key].templateRef,\n                  index: table.config.rows ? y : i,\n                  data: table.data[\n                    table.info.lazyLoaded\n                      ? 0\n                      : (currentPaginationIndex$ | async) || 0\n                  ]\n                }"\n              >\n              </ng-container>\n            </td>\n          </tr>\n        </ng-container>\n      </ng-container>\n    </tbody>\n  </ng-container>\n</ng-template>\n<ng-template #noData>\n  <tbody>\n    <tr>\n      <td class="p-0" [colSpan]="colspan$ | async">\n        <ng-content select=".table-no-data"></ng-content>\n      </td>\n    </tr>\n  </tbody>\n</ng-template>\n<ng-template\n  #highlighted\n  let-row="row"\n  let-column="column"\n  let-search="search"\n  let-transform="transform"\n>\n  <div\n    *ngIf="!transform"\n    [innerHTML]="row[column.key] | highlight: search"\n  ></div>\n  <div\n    *ngIf="transform"\n    [innerHTML]="\n      row[column.key]\n        | dynamicPipe: transform.pipe:transform?.args\n        | highlight: search\n    "\n  ></div>\n</ng-template>\n<ng-template #rawData let-row="row" let-column="column">\n  {{ row[column.key] }}\n</ng-template>\n<ng-template\n  #transformData\n  let-row="row"\n  let-column="column"\n  let-transform="transform"\n  let-data="data"\n>\n  {{ row[column.key] | dynamicPipe: transform.pipe:transform?.args }}\n</ng-template>\n<ng-template #transformFooter let-value="value" let-transform="transform">\n  {{\n    (value | dynamicPipe: transform.pipe:transform?.args) ||\n      (tableConfig$ | async)?.footer?.emptyContent\n  }}\n</ng-template>\n<ng-template #rawFooter let-value="value">\n  {{ value || (tableConfig$ | async)?.footer?.emptyContent }}\n</ng-template>\n<ng-template\n  #templateRef\n  let-row="row"\n  let-column="column"\n  let-index="index"\n  let-templateRef="templateRef"\n  let-data="data"\n>\n  <ng-container\n    [ngTemplateOutlet]="templateRef"\n    [ngTemplateOutletContext]="{\n      row: row,\n      col: column,\n      index: index,\n      data: data\n    }"\n  ></ng-container>\n</ng-template>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,standalone:!0,imports:[capital_case_pipe.m,common.Nd,sort_class_pipe.$,dash_case_pipe.s,row_selection_pipe.G,common.Ov,common.tP,common.OU,dynamic_pipe.e,highlight_pipe.S,common.mk,common.O5,common.sg]})],CoreComponent)},"./projects/core/src/lib/core.module.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{h:()=>GenericTableCoreModule});var tslib__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_angular_core__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),_core_component__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./projects/core/src/lib/core.component.ts"),_angular_common__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),_pipes_sort_class_pipe__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./projects/core/src/lib/pipes/sort-class.pipe.ts"),_pipes_dash_case_pipe__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./projects/core/src/lib/pipes/dash-case.pipe.ts"),_pipes_highlight_pipe__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./projects/core/src/lib/pipes/highlight.pipe.ts"),_pipes_capital_case_pipe__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./projects/core/src/lib/pipes/capital-case.pipe.ts"),_pipes_dynamic_pipe__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./projects/core/src/lib/pipes/dynamic.pipe.ts"),_gt_delta_gt_delta_component__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./projects/core/src/lib/gt-delta/gt-delta.component.ts"),_pipes_row_selection_pipe__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./projects/core/src/lib/pipes/row-selection.pipe.ts");let GenericTableCoreModule=class GenericTableCoreModule{};GenericTableCoreModule=(0,tslib__WEBPACK_IMPORTED_MODULE_8__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_9__.NgModule)({imports:[_angular_common__WEBPACK_IMPORTED_MODULE_10__.ez,_core_component__WEBPACK_IMPORTED_MODULE_0__.X,_pipes_sort_class_pipe__WEBPACK_IMPORTED_MODULE_1__.$,_pipes_dash_case_pipe__WEBPACK_IMPORTED_MODULE_2__.s,_pipes_highlight_pipe__WEBPACK_IMPORTED_MODULE_3__.S,_pipes_row_selection_pipe__WEBPACK_IMPORTED_MODULE_7__.G,_pipes_capital_case_pipe__WEBPACK_IMPORTED_MODULE_4__.m,_pipes_capital_case_pipe__WEBPACK_IMPORTED_MODULE_4__.m,_pipes_dynamic_pipe__WEBPACK_IMPORTED_MODULE_5__.e,_gt_delta_gt_delta_component__WEBPACK_IMPORTED_MODULE_6__.i],exports:[_core_component__WEBPACK_IMPORTED_MODULE_0__.X,_gt_delta_gt_delta_component__WEBPACK_IMPORTED_MODULE_6__.i],declarations:[]})],GenericTableCoreModule)},"./projects/core/src/lib/gt-delta/gt-delta.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{i:()=>GtDeltaComponent});var _class,tslib__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_home_runner_work_angular_generic_table_angular_generic_table_projects_core_src_lib_gt_delta_gt_delta_component_ts_css_ngResource_home_runner_work_angular_generic_table_angular_generic_table_node_modules_ngtools_webpack_src_loaders_inline_resource_js_data_CiAgICAgIDpob3N0IHsKICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICAgIH0KICAgIA_3D_3D_home_runner_work_angular_generic_table_angular_generic_table_projects_core_src_lib_gt_delta_gt_delta_component_ts__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./projects/core/src/lib/gt-delta/gt-delta.component.ts.css?ngResource!=!./node_modules/@ngtools/webpack/src/loaders/inline-resource.js?data=CiAgICAgIDpob3N0IHsKICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICAgIH0KICAgIA%3D%3D!./projects/core/src/lib/gt-delta/gt-delta.component.ts"),_home_runner_work_angular_generic_table_angular_generic_table_projects_core_src_lib_gt_delta_gt_delta_component_ts_css_ngResource_home_runner_work_angular_generic_table_angular_generic_table_node_modules_ngtools_webpack_src_loaders_inline_resource_js_data_CiAgICAgIDpob3N0IHsKICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICAgIH0KICAgIA_3D_3D_home_runner_work_angular_generic_table_angular_generic_table_projects_core_src_lib_gt_delta_gt_delta_component_ts__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_home_runner_work_angular_generic_table_angular_generic_table_projects_core_src_lib_gt_delta_gt_delta_component_ts_css_ngResource_home_runner_work_angular_generic_table_angular_generic_table_node_modules_ngtools_webpack_src_loaders_inline_resource_js_data_CiAgICAgIDpob3N0IHsKICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICAgIH0KICAgIA_3D_3D_home_runner_work_angular_generic_table_angular_generic_table_projects_core_src_lib_gt_delta_gt_delta_component_ts__WEBPACK_IMPORTED_MODULE_0__),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),_angular_common__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs");let GtDeltaComponent=((_class=class GtDeltaComponent{get value(){return this._value}set value(value){this._value=value}get deltaTemplate(){return this._deltaTemplate}constructor(){this.Math=Math,this.Number=Number,this.data=[],this.index=0,this.classes={span:"gt-delta",positive:"text-success",negative:"text-danger"},this.key="value",this.notApplicableValue=null,this.initialValue=null}set deltaTemplate(deltaTemplate){this._deltaTemplate=deltaTemplate}ngOnChanges(changes){if(!changes.data.currentValue)return;const data=changes.data?.currentValue,index=changes.index?.currentValue||this.index,baseIndex=changes.baseIndex?.currentValue,key=changes.key?.currentValue||this.key,initialValue=changes.initialValue?.currentValue||this.initialValue,deltaValue=0===index?initialValue:data[index][key]-(void 0===baseIndex?data[index-1][key]:data[baseIndex][key]),baseValue=0===index?1:void 0===baseIndex?data[index-1][key]:data[baseIndex][key],relative=0===index?initialValue:Math.sign(deltaValue)*Math.abs(deltaValue/baseValue);this.value={relative:Number.isFinite(relative)?relative:0===index?initialValue:changes.notApplicableValue?.currentValue||this.notApplicableValue,absolute:deltaValue}}}).ctorParameters=()=>[],_class.propDecorators={deltaTemplate:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input}],data:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input}],index:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input}],baseIndex:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input}],classes:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input}],key:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input}],notApplicableValue:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input}],initialValue:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input}]},_class);GtDeltaComponent=(0,tslib__WEBPACK_IMPORTED_MODULE_2__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Component)({selector:"gt-delta",template:'<span\n      *ngIf="value as delta"\n      [class]="[\n        classes.span,\n        delta.absolute > 0\n          ? classes.positive\n          : delta.absolute < 0\n          ? classes.negative\n          : null\n      ]"\n      [class.gt-delta-positive]="delta.absolute > 0"\n      [class.gt-delta-negative]="delta.absolute < 0"\n      ><ng-container\n        *ngTemplateOutlet="deltaTemplate || defaultTemplate; context: { delta }"\n      ></ng-container>\n    </span>\n    <ng-template #defaultTemplate let-delta="delta">\n      <span *ngIf="delta.relative">{{\n        delta.relative | percent: \'1.0-2\'\n      }}</span>\n    </ng-template>',changeDetection:_angular_core__WEBPACK_IMPORTED_MODULE_1__.ChangeDetectionStrategy.OnPush,standalone:!0,imports:[_angular_common__WEBPACK_IMPORTED_MODULE_3__.Zx,_angular_common__WEBPACK_IMPORTED_MODULE_3__.O5,_angular_common__WEBPACK_IMPORTED_MODULE_3__.tP],styles:[_home_runner_work_angular_generic_table_angular_generic_table_projects_core_src_lib_gt_delta_gt_delta_component_ts_css_ngResource_home_runner_work_angular_generic_table_angular_generic_table_node_modules_ngtools_webpack_src_loaders_inline_resource_js_data_CiAgICAgIDpob3N0IHsKICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICAgIH0KICAgIA_3D_3D_home_runner_work_angular_generic_table_angular_generic_table_projects_core_src_lib_gt_delta_gt_delta_component_ts__WEBPACK_IMPORTED_MODULE_0___default()]})],GtDeltaComponent)},"./projects/core/src/lib/pagination/pagination.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Q:()=>PaginationComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var _class,core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),ReplaySubject=__webpack_require__("./node_modules/rxjs/_esm2015/internal/ReplaySubject.js"),combineLatest=__webpack_require__("./node_modules/rxjs/_esm2015/internal/observable/combineLatest.js"),switchMap=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/switchMap.js"),pluck=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/pluck.js"),map=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/map.js"),shareReplay=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/shareReplay.js"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs");let PaginationComponent=(_class=class PaginationComponent{constructor(){this._table$=new ReplaySubject.t(1),this._ariaLabels={nav:"Table pagination",button:"Go to page "},this._classes={ul:"pagination",li:"page-item",button:"page-link"},this._paginationLength=5,this.paginationListItems$=this._table$.pipe((0,switchMap.w)((core=>(0,combineLatest.aj)([core?.table$.pipe((0,pluck.j)("info")),core?.currentPaginationIndex$]))),(0,map.U)((([info,currentPage])=>this._generateList(info.pageTotal,currentPage))),(0,shareReplay.d)(1))}get pagingInfo(){return this._pagingInfo||{pageNext:null,pageCurrent:null,pagePrevious:null,pageSize:null,numberOfRecords:null,pageTotal:null}}set pagingInfo(info){this._pagingInfo=info}get paginationLength(){return this._paginationLength}set paginationLength(length){this._paginationLength=+length}get classes(){return this._classes}set classes(classes){this._classes=classes}get ariaLabels(){return this._ariaLabels}set ariaLabels(labels){this._ariaLabels=labels}get table(){return this._table}set table(tableRef){this._table=tableRef,this._table$.next(tableRef)}_generateList(numberOfPages,currentPosition){const middle=Math.floor(this.paginationLength/2),length=numberOfPages<this.paginationLength?numberOfPages:this.paginationLength;return Array.from({length},((_,i)=>0===i?1:numberOfPages<this.paginationLength?i+1:i+1===length?numberOfPages:currentPosition>middle&&currentPosition<numberOfPages-middle?i+currentPosition-(middle-1):currentPosition>middle&&currentPosition<numberOfPages-(middle-1)?i+currentPosition-middle:currentPosition>middle&&currentPosition===numberOfPages-(middle-1)?i+currentPosition-(middle+1):currentPosition>middle&&currentPosition===numberOfPages-1?i+currentPosition-(middle+2):i+1))}goToPage(index){this.table&&(this.table.paginationIndex=index-1)}},_class.propDecorators={pagingInfo:[{type:core.Input}],paginationLength:[{type:core.Input}],classes:[{type:core.Input}],ariaLabels:[{type:core.Input}],table:[{type:core.Input}]},_class);PaginationComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"angular-generic-table-pagination",template:'<ng-container\n  *ngIf="{\n    links: paginationListItems$ | async,\n    currentPosition: table?.currentPaginationIndex$ | async\n  } as pagination"\n>\n  <nav\n    *ngIf="pagination.links && pagination.links.length > 1"\n    role="navigation"\n    [attr.aria-label]="ariaLabels.nav"\n    class="gt-pagination"\n    [class]="classes.nav"\n  >\n    <ul [class]="classes.ul">\n      <ng-container\n        *ngFor="\n          let position of pagination!.links;\n          let i = index;\n          let last = last\n        "\n      >\n        <li\n          [class]="classes.li"\n          [class.active]="position === (pagination!.currentPosition || 0) + 1"\n        >\n          <button\n            [class]="classes.button"\n            [attr.aria-label]="ariaLabels.button + position"\n            (click)="goToPage(position)"\n          >\n            {{ position }}\n          </button>\n        </li>\n        <li\n          [class]="classes.li"\n          class="gt-ellipsis"\n          *ngIf="position + 1 !== pagination!.links![i + 1] && !last"\n        >\n          <button [class]="classes.button" disabled tabindex="-1"></button>\n        </li>\n      </ng-container>\n    </ul>\n  </nav>\n</ng-container>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,standalone:!0,imports:[common.ez]})],PaginationComponent)},"./projects/core/src/lib/pagination/pagination.module.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{i:()=>GenericTablePaginationModule});var tslib__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_angular_core__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),_angular_common__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),_pagination_component__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./projects/core/src/lib/pagination/pagination.component.ts");let GenericTablePaginationModule=class GenericTablePaginationModule{};GenericTablePaginationModule=(0,tslib__WEBPACK_IMPORTED_MODULE_1__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.NgModule)({imports:[_angular_common__WEBPACK_IMPORTED_MODULE_3__.ez,_pagination_component__WEBPACK_IMPORTED_MODULE_0__.Q],exports:[_pagination_component__WEBPACK_IMPORTED_MODULE_0__.Q]})],GenericTablePaginationModule)},"./projects/core/src/lib/pipes/capital-case.pipe.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{m:()=>CapitalCasePipe});var tslib__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_angular_core__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),_utilities_utilities__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./projects/core/src/lib/utilities/utilities.ts");let CapitalCasePipe=class CapitalCasePipe{transform(s){return(0,_utilities_utilities__WEBPACK_IMPORTED_MODULE_0__.kC)(s)}};CapitalCasePipe=(0,tslib__WEBPACK_IMPORTED_MODULE_1__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Pipe)({name:"capitalCase",standalone:!0})],CapitalCasePipe)},"./projects/core/src/lib/pipes/dash-case.pipe.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{s:()=>DashCasePipe});var tslib__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_angular_core__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),_utilities_utilities__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./projects/core/src/lib/utilities/utilities.ts");let DashCasePipe=class DashCasePipe{transform(s){return(0,_utilities_utilities__WEBPACK_IMPORTED_MODULE_0__.HA)(s)}};DashCasePipe=(0,tslib__WEBPACK_IMPORTED_MODULE_1__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Pipe)({name:"dashCase",standalone:!0})],DashCasePipe)},"./projects/core/src/lib/pipes/dynamic.pipe.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{e:()=>DynamicPipe});var _class,tslib__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_angular_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let DynamicPipe=((_class=class DynamicPipe{constructor(injector){this.injector=injector}transform(value,requiredPipe,pipeArgs){return _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injector.create({name:"DynamicPipe",parent:this.injector,providers:[{provide:requiredPipe}]}).get(requiredPipe).transform(value,...pipeArgs||[])}}).ctorParameters=()=>[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Injector}],_class);DynamicPipe=(0,tslib__WEBPACK_IMPORTED_MODULE_1__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Pipe)({name:"dynamicPipe",standalone:!0})],DynamicPipe)},"./projects/core/src/lib/pipes/highlight.pipe.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{S:()=>HighlightPipe});var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let HighlightPipe=class HighlightPipe{transform(text,searchTerm){if(!searchTerm)return text;const haystackAlwaysString=text+"";let searchPattern,highlightedText=haystackAlwaysString;try{searchPattern=new RegExp("("+searchTerm.toLowerCase().match(/".*?"|[^ ]+/g).map((needle=>needle.replace(/"(.*?)"/,"$1"))).join("|")+")","ig")}catch(error){return highlightedText}const containsTagMatches=/(<.*?>)(.*)(<\/.*?>)/gi.exec(haystackAlwaysString);return highlightedText=containsTagMatches?containsTagMatches[1]+containsTagMatches[2].replace(searchPattern,'<span class="gt-highlight-search">$1</span>')+containsTagMatches[3]:haystackAlwaysString.replace(searchPattern,'<span class="gt-highlight-search">$1</span>'),highlightedText}};HighlightPipe=(0,tslib__WEBPACK_IMPORTED_MODULE_0__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Pipe)({name:"highlight",standalone:!0})],HighlightPipe)},"./projects/core/src/lib/pipes/row-selection.pipe.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{G:()=>RowSelectionPipe});var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let RowSelectionPipe=class RowSelectionPipe{transform(row,selection,comparator,className){return className&&comparator(row,selection)?className:""}};RowSelectionPipe=(0,tslib__WEBPACK_IMPORTED_MODULE_0__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Pipe)({name:"rowSelection",standalone:!0})],RowSelectionPipe)},"./projects/core/src/lib/pipes/sort-class.pipe.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{$:()=>SortClassPipe});var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let SortClassPipe=class SortClassPipe{transform(sortOrder,key,context="class"){const sortIndex=sortOrder?sortOrder.findIndex((s=>s.key===key)):-1;return"aria"===context?-1!==sortIndex&&sortOrder?`${sortOrder[sortIndex].order}ending`:null:"class"===context?-1!==sortIndex&&sortOrder?`gt-sort-${sortOrder[sortIndex].order}`:"":sortOrder&&1===sortOrder?.length||sortIndex<0?null:sortIndex+1+""}};SortClassPipe=(0,tslib__WEBPACK_IMPORTED_MODULE_0__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Pipe)({name:"sortClass",standalone:!0})],SortClassPipe)},"./projects/core/src/lib/utilities/utilities.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";let dashed,capitalize,chunk,search;__webpack_require__.d(__webpack_exports__,{HA:()=>dashed,Kf:()=>calculate,di:()=>sortOnMultipleKeys,kC:()=>capitalize,r$:()=>sortOrderToParams,yC:()=>search,yo:()=>chunk}),dashed=s=>s.replace(/[A-Z]/g,(m=>"-"+m.toLowerCase())),capitalize=s=>(s.charAt(0).toUpperCase()+s.slice(1)).replace(/_/g," ").replace(/([A-Z][a-z]+)/g," $1").replace(/([A-Z]{2,})/g," $1").replace(/\s{2,}/g," ").trim(),chunk=(array,chunkSize)=>{if(chunkSize<0)throw new Error("Invalid chunk size");if(0===chunkSize&&!chunkSize)return[array];const CHUNK=[];for(let i=0,len=array.length;i<len;i+=chunkSize)CHUNK.push(array.slice(i,i+chunkSize));return CHUNK},search=(text,caseSensitive,data,config)=>{if(config.columns){const searchColumns=Object.keys(config.columns).filter((key=>config.columns&&!config.columns[key]?.hidden&&!1!==config.columns[key]?.search)),FILTERED=[];for(let i=0;i<data.length;i++){const row=data[i],match=-1!==Object.entries(row).filter((([key,value])=>-1!==searchColumns.indexOf(key))).reduce(((acc,[key,value],index)=>{const search=config?.columns[key]?.search;return"function"==typeof search&&(value=search(row,key,value)),acc+(0===index?"":" ? ")+(caseSensitive?value+"":(value+"").toLowerCase())}),"").indexOf(caseSensitive?text:text.toLowerCase());match&&(FILTERED[FILTERED.length]=row)}return FILTERED}return data};let calculate=(data,config)=>{const CALCULATIONS={},COLUMN_CALCULATIONS={};let CALCULATED=Object.entries(config.footer?.columns||{}).filter((([columnName,calculations])=>Object.values(calculations||{}).filter((value=>!1!==value)).length>=0)).reduce(((acc,[columnName,calculations],index)=>(acc[columnName]=Object.entries(calculations||{}).filter((([calculation,value])=>!1!==value)).reduce(((acc,[calculation,value])=>(COLUMN_CALCULATIONS[columnName]?COLUMN_CALCULATIONS[columnName].push(calculation):!0===value&&(COLUMN_CALCULATIONS[columnName]=[calculation]),CALCULATIONS[calculation]=!0,"function"==typeof value&&(value=value(data,columnName)),acc[calculation]=!0===value?0:value,acc)),{}),acc)),{});if(Object.keys(CALCULATED).length>0){for(let i=0;i<data.length;i++)Object.entries(COLUMN_CALCULATIONS).forEach((([column,calculations])=>{calculations.indexOf("sum")>-1&&(CALCULATED[column].sum+=data[i][column]),calculations.indexOf("avg")>-1&&-1===calculations.indexOf("sum")&&(void 0===CALCULATED[column].sum&&(CALCULATED[column].sum=0),CALCULATED[column].sum+=data[i][column]),calculations.indexOf("max")>-1&&(!CALCULATED[column].max||+data[i][column]>CALCULATED[column].max)&&(CALCULATED[column].max=+data[i][column]),calculations.indexOf("min")>-1&&(!CALCULATED[column].min||+data[i][column]<CALCULATED[column].min)&&(CALCULATED[column].min=+data[i][column])}));Object.entries(COLUMN_CALCULATIONS).forEach((([column,calculations])=>{-1!==calculations.indexOf("avg")&&(CALCULATED[column].avg=CALCULATED[column]?.sum/data.length,-1===calculations.indexOf("sum")&&CALCULATED[column].sum&&delete CALCULATED[column].sum),-1!==calculations.indexOf("count")&&(CALCULATED[column].count=data.length)}))}return{calculated:CALCULATED,calculations:Object.keys(CALCULATIONS).sort(((a,b)=>(config.footer?.rowOrder?.indexOf(a)||0)-(config.footer?.rowOrder?.indexOf(b)||0))),calculatedColumnsCount:Object.keys(CALCULATED).length||0}};const sortOnMultipleKeys=keys=>{const order=keys.map((key=>"desc"===key.order?-1:1));return(a,b)=>{for(let i=0;i<keys.length;i++){const o=keys[i].key;if(a[o]>b[o])return order[i];if(a[o]<b[o])return-order[i]}return 0}},sortOrderToParams=sortOrder=>sortOrder.map((sortConfig=>(sortConfig=>`${"desc"===sortConfig.order?"-":"+"}${sortConfig.key}`)(sortConfig))).join(",")},"./projects/docs/src/app/components/tabs/tabs.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{n:()=>TabsComponent});var _class,tslib__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_tabs_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./projects/docs/src/app/components/tabs/tabs.component.scss?ngResource"),_tabs_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_tabs_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_0__),_angular_core__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),highlight_js_lib_core__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/highlight.js/es/core.js"),highlight_js_lib_languages_typescript__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/highlight.js/es/languages/typescript.js"),highlight_js_lib_languages_xml__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/highlight.js/es/languages/xml.js"),highlight_js_lib_languages_scss__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/highlight.js/es/languages/scss.js");highlight_js_lib_core__WEBPACK_IMPORTED_MODULE_4__.Z.registerLanguage("typescript",highlight_js_lib_languages_typescript__WEBPACK_IMPORTED_MODULE_1__.Z),highlight_js_lib_core__WEBPACK_IMPORTED_MODULE_4__.Z.registerLanguage("scss",highlight_js_lib_languages_scss__WEBPACK_IMPORTED_MODULE_3__.Z),highlight_js_lib_core__WEBPACK_IMPORTED_MODULE_4__.Z.registerLanguage("xml",highlight_js_lib_languages_xml__WEBPACK_IMPORTED_MODULE_2__.Z);let TabsComponent=((_class=class TabsComponent{get content(){return this._content}set content(value){this._content=value}constructor(){this.activeIndex=0,this._content=[]}ngOnInit(){this.activeContent=highlight_js_lib_core__WEBPACK_IMPORTED_MODULE_4__.Z.highlight(this.content[this.activeIndex].code,{language:this.content[this.activeIndex].language})}view(index){this.activeIndex=index,this.activeContent=highlight_js_lib_core__WEBPACK_IMPORTED_MODULE_4__.Z.highlight(this.content[index].code,{language:this.content[index].language})}}).ctorParameters=()=>[],_class.propDecorators={content:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_5__.Input}]},_class);TabsComponent=(0,tslib__WEBPACK_IMPORTED_MODULE_6__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Component)({selector:"docs-tabs",template:'\n    <ul class="nav nav-tabs mt-4 flex-nowrap text-nowrap overflow-auto">\n      <li class="nav-item" *ngFor="let item of content; let i = index">\n        <button\n          class="nav-link btn-link"\n          [class.active]="activeIndex === i"\n          (click)="view(i)"\n        >\n          {{ item.name }}\n        </button>\n      </li>\n    </ul>\n    <ng-container *ngIf="activeContent">\n      <pre><code [innerHTML]="activeContent.value" class="{{\'language-\' + activeContent.language}}"></code></pre>\n    </ng-container>\n  ',styles:[_tabs_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_0___default()]})],TabsComponent)},"./projects/docs/src/app/examples/pagination/pagination.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{t:()=>Pagination,Q:()=>PaginationComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),BehaviorSubject=__webpack_require__("./node_modules/rxjs/_esm2015/internal/BehaviorSubject.js"),ReplaySubject=__webpack_require__("./node_modules/rxjs/_esm2015/internal/ReplaySubject.js"),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),pluck=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/pluck.js"),tap=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/tap.js"),withLatestFrom=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/withLatestFrom.js");const ADVANCED_DOCS=[{name:"pagination.component.html",code:'<form [formGroup]="paginationForm">\n  <div class="row gy-3">\n    <div class="form-group col-12 col-sm-auto">\n      <label for="length_input">Length</label>\n      <input id="length_input" formControlName="length" type="number" class="form-control">\n    </div>\n    <div class="form-group col-12 col-sm-auto">\n      <label for="search_input">Search</label>\n      <input id="search_input" formControlName="search" type="text" class="form-control">\n    </div>\n  </div>\n</form>\n<div class="mx-n3 mx-sm-0 my-3 overflow-auto">\n  <angular-generic-table [data]="data$" [config]="tableConfig$" [search]="search$" [loading]="loading$" #table>\n    <div class="table-loading gt-skeleton-loader"></div>\n    <div class="table-no-data alert alert-info mt-3">\n      Table is empty\n    </div>\n  </angular-generic-table>\n</div>\n<angular-generic-table-pagination [table]="table">\n</angular-generic-table-pagination>',language:"xml"},{name:"pagination.component.ts",code:"import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\nimport { FormBuilder } from '@angular/forms';\nimport { TableConfig } from '@angular-generic-table/core';\nimport { pluck, tap, withLatestFrom } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'docs-pagination',\n  templateUrl: './pagination.component.html',\n  styles: [],\n})\nexport class PaginationComponent implements OnInit {\n  constructor(private fb: FormBuilder, private http: HttpClient) {}\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n  paginationForm = this.fb.group({\n    length: [10],\n    search: [''],\n  });\n  search$ = this.paginationForm.get('search')?.valueChanges as Observable<string>;\n  loading$ = new BehaviorSubject(true);\n  data$: Observable<any> = this.http.get('https://private-730c61-generictable.apiary-mock.com/data').pipe(\n    pluck('data'),\n    tap((_) => this.loading$.next(false))\n  );\n\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\n\n  ngOnInit(): void {\n    this.paginationForm\n      .get('length')\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\n      .subscribe(([length, config]) => {\n        length = +length;\n        this.tableConfig$.next({\n          ...config,\n          pagination: { ...config.pagination, length },\n        });\n      });\n    this.tableConfig$.next({\n      class: 'table text-nowrap',\n      columns: {\n        first_name: {\n          sortable: true,\n        },\n        last_name: {\n          sortable: true,\n        },\n        gender: {\n          sortable: true,\n        },\n        birthday: {\n          sortable: true,\n          class: 'text-end',\n          transform: {\n            pipe: DatePipe,\n            args: ['longDate'],\n          },\n        },\n      },\n      pagination: {\n        length: this.paginationForm.get('length')?.value || 0,\n      },\n    });\n  }\n}",language:"typescript"},{name:"app.module.ts",code:"import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { PaginationComponent } from './pagination.component';\nimport { GenericTableCoreModule, GenericTablePaginationModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [PaginationComponent],\n  imports: [\n    BrowserModule,\n    GenericTableCoreModule,\n    GenericTablePaginationModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  bootstrap: [PaginationComponent]\n})\nexport class AppModule {}",language:"typescript"}];var _class,http=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs");let PaginationComponent=(_class=class PaginationComponent{constructor(fb,http){this.fb=fb,this.http=http,this.paginationForm=this.fb.group({length:[10],search:[""]}),this.search$=this.paginationForm.get("search")?.valueChanges,this.loading$=new BehaviorSubject.X(!0),this.data$=this.http.get("https://private-730c61-generictable.apiary-mock.com/data").pipe((0,pluck.j)("data"),(0,tap.b)((_=>this.loading$.next(!1)))),this.tableConfig$=new ReplaySubject.t(1),this.SNIPPETS=ADVANCED_DOCS}ngOnInit(){this.paginationForm.get("length")?.valueChanges.pipe((0,withLatestFrom.M)(this.tableConfig$)).subscribe((([length,config])=>{length=+length,this.tableConfig$.next({...config,pagination:{...config.pagination,length}})})),this.tableConfig$.next({class:"table text-nowrap",columns:{first_name:{sortable:!0},last_name:{sortable:!0},gender:{sortable:!0},birthday:{sortable:!0,class:"text-end justify-content-end",search:(row,column)=>(0,common.p6)(row[column],"longDate","en"),transform:{pipe:common.uU,args:["longDate"]}}},pagination:{length:this.paginationForm.get("length")?.value||0}})}},_class.ctorParameters=()=>[{type:fesm2020_forms.UntypedFormBuilder},{type:http.eN}],_class.propDecorators={actions:[{type:core.ViewChild,args:["actions",{static:!0}]}],color:[{type:core.ViewChild,args:["color",{static:!0}]}]},_class);PaginationComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"docs-pagination",template:'<form [formGroup]="paginationForm">\n  <div class="row gy-3">\n    <div class="form-group col-12 col-sm-auto">\n      <label for="length_input">Number of rows</label>\n      <input\n        id="length_input"\n        formControlName="length"\n        type="number"\n        class="form-control"\n        min="0"\n      />\n    </div>\n    <div class="form-group col-12 col-sm-auto">\n      <label for="search_input">Search</label>\n      <input\n        id="search_input"\n        formControlName="search"\n        type="text"\n        class="form-control"\n      />\n    </div>\n  </div>\n</form>\n<div class="mx-n3 mx-sm-0 my-3 overflow-auto">\n  <angular-generic-table\n    [data]="data$"\n    [config]="tableConfig$"\n    [search]="search$"\n    [loading]="loading$"\n    #table\n  >\n    <div class="table-loading gt-skeleton-loader"></div>\n    <div class="table-no-data alert alert-info mt-3">Table is empty</div>\n  </angular-generic-table>\n</div>\n<angular-generic-table-pagination [table]="table">\n</angular-generic-table-pagination>\n<docs-tabs [content]="SNIPPETS"></docs-tabs>\n'})],PaginationComponent);const Pagination=args=>({props:args,component:PaginationComponent})},"./projects/docs/src/polyfills.ts":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__("./node_modules/zone.js/fesm2015/zone.js")},"./.storybook/preview.js-generated-config-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,{__namedExportsOrder:()=>__namedExportsOrder,parameters:()=>parameters});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-properties.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");var ClientApi=__webpack_require__("./node_modules/@storybook/client-api/dist/esm/ClientApi.js"),angular=__webpack_require__("./node_modules/@storybook/addon-docs/angular/index.js");const documentation_namespaceObject=JSON.parse('{"pipes":[{"name":"CapitalCasePipe","id":"pipe-CapitalCasePipe-96bcb6bce70367e79731d26c84db241c4ce18f66daf640a6451058a35df21a3999d4524db1320b735cb653807fedbf3940ac8eef02d517c60317af70f6e1aee0","file":"projects/core/src/lib/pipes/capital-case.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"s","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":9,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"s","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"ngname":"capitalCase","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\nimport { capitalize } from \'../utilities/utilities\';\\n\\n@Pipe({\\n  name: \'capitalCase\',\\n  standalone: true,\\n})\\nexport class CapitalCasePipe implements PipeTransform {\\n  transform(s: string): any {\\n    return capitalize(s);\\n  }\\n}\\n"},{"name":"DashCasePipe","id":"pipe-DashCasePipe-4b881ec0c37bd1d0b192e1ad42c2ec93254176a9668f8911bda81a7f576253351f74e50ba8ff7b5f1f01ce45403bb209952c139275916103a3d2ee5b47f15cbc","file":"projects/core/src/lib/pipes/dash-case.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"s","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":9,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"s","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"ngname":"dashCase","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\nimport { dashed } from \'../utilities/utilities\';\\n\\n@Pipe({\\n  name: \'dashCase\',\\n  standalone: true,\\n})\\nexport class DashCasePipe implements PipeTransform {\\n  transform(s: string): any {\\n    return dashed(s);\\n  }\\n}\\n"},{"name":"DynamicPipe","id":"pipe-DynamicPipe-9410f04590a5057e37c4936afcce2e30c5c79cb1a458c0cf34a9335ab0ccf3a07cdfa981c9a03c91e296b2b220211aa0f8bc4b5c95aa94343feb759183088c76","file":"projects/core/src/lib/pipes/dynamic.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""},{"name":"requiredPipe","type":"Type<any>","deprecated":false,"deprecationMessage":""},{"name":"pipeArgs","type":"any[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":10,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"requiredPipe","type":"Type<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"pipeArgs","type":"any[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"ngname":"dynamicPipe","sourceCode":"import { Injector, Pipe, PipeTransform, Type } from \'@angular/core\';\\n\\n@Pipe({\\n  name: \'dynamicPipe\',\\n  standalone: true,\\n})\\nexport class DynamicPipe implements PipeTransform {\\n  constructor(private injector: Injector) {}\\n\\n  transform(value: any, requiredPipe: Type<any>, pipeArgs: any[]): any {\\n    const injector = Injector.create({\\n      name: \'DynamicPipe\',\\n      parent: this.injector,\\n      providers: [{ provide: requiredPipe }],\\n    });\\n    const pipe = injector.get(requiredPipe);\\n    return pipe.transform(value, ...(pipeArgs || []));\\n  }\\n}\\n"},{"name":"GenderPipe","id":"pipe-GenderPipe-2ccdf200e7b7f3afa39e0e6fdca8c7ea0f53af37d1eb3722378cbcaba073ec2e8a214f10e4485e4464b0ea63b3d083009815564424e37fbd8206a83200f4ed92","file":"projects/docs/src/app/examples/mobile-layout/mobile-layout.component.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"gender","type":"\\"male\\" | \\"female\\"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"gender","type":"\\"male\\" | \\"female\\"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"ngname":"genderPipe","sourceCode":"import {\\n  Component,\\n  Pipe,\\n  PipeTransform,\\n  TemplateRef,\\n  ViewChild,\\n  ViewEncapsulation,\\n} from \'@angular/core\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport {\\n  TableColumn,\\n  TableConfig,\\n  TableRow,\\n} from \'@angular-generic-table/core\';\\nimport { BehaviorSubject, Observable } from \'rxjs\';\\nimport { map } from \'rxjs/operators\';\\nimport { MOBILE_LAYOUT_SNIPPETS } from \'./mobileLayout.snippets\';\\n\\n@Pipe({\\n  name: \'genderPipe\',\\n})\\nexport class GenderPipe implements PipeTransform {\\n  transform(gender: \'male\' | \'female\'): string {\\n    return gender === \'male\' ? \'👨\' : \'👩\';\\n  }\\n}\\n\\n@Component({\\n  selector: \'docs-mobile-layout\',\\n  template: `\\n    <div class=\\"d-flex justify-content-end mb-1 align-items-center\\">\\n      {{ clicked }}\\n      <button class=\\"btn btn-link d-sm-none \\" (click)=\\"toggleLayout()\\">\\n        {{ (mobileLayout$ | async) ? \'Desktop \' : \'Mobile \' }} layout\\n      </button>\\n    </div>\\n    <div [class.overflow-auto]=\\"(mobileLayout$ | async) === false\\">\\n      <angular-generic-table\\n        [data]=\\"data\\"\\n        [config]=\\"config$\\"\\n      ></angular-generic-table>\\n    </div>\\n    <ng-template #actions let-row=\\"row\\" let-col=\\"col\\" let-index=\\"index\\">\\n      <button\\n        class=\\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\\"\\n        (click)=\\"clickAction(row, col, index)\\"\\n      >\\n        Click me!\\n      </button>\\n    </ng-template>\\n    <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n  `,\\n  styles: [\\n    `\\n      .table th {\\n        white-space: nowrap;\\n      }\\n    `,\\n  ],\\n  encapsulation: ViewEncapsulation.None,\\n})\\nexport class MobileLayoutComponent {\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  clicked = \'\';\\n\\n  mobileLayout$ = new BehaviorSubject(true);\\n  data = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ];\\n  config$: Observable<TableConfig> = this.mobileLayout$.pipe(\\n    map((mobileLayout) => ({\\n      mobileLayout,\\n      columns: {\\n        firstName: {\\n          mobileHeader: true,\\n          sortable: true,\\n        },\\n        lastName: {\\n          mobileHeader: true,\\n          sortable: true,\\n        },\\n        gender: {\\n          mobileHeader: true,\\n          transform: {\\n            pipe: GenderPipe,\\n          },\\n        },\\n        favoriteFood: {\\n          mobileHeader: true,\\n        },\\n        action: {\\n          mobileHeader: false,\\n          header: false,\\n          templateRef: this.actions,\\n        },\\n      },\\n    }))\\n  );\\n\\n  SNIPPETS = MOBILE_LAYOUT_SNIPPETS;\\n\\n  toggleLayout = (): void => {\\n    this.mobileLayout$.next(!this.mobileLayout$.getValue());\\n  };\\n  clickAction(\\n    row: TableRow,\\n    column: { key: string; value: TableColumn },\\n    index: number\\n  ): void {\\n    console.log(\'clicked row:\', row, \'col:\', column);\\n    this.clicked = `Clicked row number: ${index}`;\\n  }\\n}\\n\\nexport const Mobile: Story<MobileLayoutComponent> = (\\n  args: MobileLayoutComponent\\n) => ({\\n  props: args,\\n  component: MobileLayoutComponent,\\n});\\n"},{"name":"HighlightPipe","id":"pipe-HighlightPipe-c640cfacbaa8ab6377ac6b98273c18898ed01e151a03e64d2dd508fe2a2c875a40c61302433bb02f3da110ed882e4562d989c211d8727ba88ce9576c7bbe2cc4","file":"projects/core/src/lib/pipes/highlight.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"text","type":"any","deprecated":false,"deprecationMessage":""},{"name":"searchTerm","type":"string | null","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":8,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"text","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"searchTerm","type":"string | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"ngname":"highlight","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\n\\n@Pipe({\\n  name: \'highlight\',\\n  standalone: true,\\n})\\nexport class HighlightPipe implements PipeTransform {\\n  transform(text: any, searchTerm: string | null): string {\\n    if (!searchTerm) {\\n      return text;\\n    }\\n    const haystackAlwaysString = text + \'\';\\n    let highlightedText = haystackAlwaysString; // fallback\\n\\n    let searchPattern;\\n    try {\\n      searchPattern = new RegExp(\\n        \'(\' +\\n          // @ts-ignore\\n          searchTerm\\n            .toLowerCase()\\n            .match(/\\".*?\\"|[^ ]+/g) // extract words\\n            .map(\\n              (needle) => needle.replace(/\\"(.*?)\\"/, \'$1\') // strip away \'\\"\'\\n            )\\n            .join(\'|\') + // combine words\\n          \')\',\\n        \'ig\'\\n      );\\n    } catch (error) {\\n      return highlightedText;\\n    }\\n\\n    const containsTagPattern = /(<.*?>)(.*)(<\\\\/.*?>)/gi;\\n    const containsTagMatches = containsTagPattern.exec(haystackAlwaysString);\\n\\n    if (containsTagMatches) {\\n      // tag exists in haystack\\n      highlightedText =\\n        containsTagMatches[1] +\\n        containsTagMatches[2].replace(\\n          searchPattern,\\n          \'<span class=\\"gt-highlight-search\\">$1</span>\'\\n        ) +\\n        containsTagMatches[3];\\n    } else {\\n      highlightedText = haystackAlwaysString.replace(\\n        searchPattern,\\n        \'<span class=\\"gt-highlight-search\\">$1</span>\'\\n      );\\n    }\\n\\n    return highlightedText;\\n  }\\n}\\n"},{"name":"RowSelectionPipe","id":"pipe-RowSelectionPipe-d56e24fac0c739a507ae0a67e419a21abda16fef09d1fd488cd1e5b746a5675d9b41c6c5412a2fa86c183630fe883c0888a6d1353d0a53f32f01b37fb63f5e06","file":"projects/core/src/lib/pipes/row-selection.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"row","type":"TableRow","deprecated":false,"deprecationMessage":""},{"name":"selection","type":"any","deprecated":false,"deprecationMessage":""},{"name":"comparator","type":"function","deprecated":false,"deprecationMessage":"","function":[{"name":"row","type":"TableRow","deprecated":false,"deprecationMessage":""},{"name":"selection","type":"any","deprecated":false,"deprecationMessage":""}]},{"name":"className","type":"string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"string","typeParameters":[],"line":9,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"row","type":"TableRow","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"selection","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"comparator","type":"function","deprecated":false,"deprecationMessage":"","function":[{"name":"row","type":"TableRow","deprecated":false,"deprecationMessage":""},{"name":"selection","type":"any","deprecated":false,"deprecationMessage":""}],"tagName":{"text":"param"}},{"name":"className","type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]}],"ngname":"rowSelection","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\nimport { TableRow } from \'../models/table-row.interface\';\\n\\n@Pipe({\\n  name: \'rowSelection\',\\n  standalone: true,\\n})\\nexport class RowSelectionPipe implements PipeTransform {\\n  transform(\\n    row: TableRow,\\n    selection: any,\\n    comparator: (row: TableRow, selection: any) => boolean,\\n    className?: string\\n  ): string {\\n    return className && comparator(row, selection) ? className : \'\';\\n  }\\n}\\n"},{"name":"SortClassPipe","id":"pipe-SortClassPipe-863827bcec157b80e5ad58b4ff87c5f6565a17557ffd0599b89ab1b91376e17b2adf6498974035e450cd05d0d86f4b953c02b4de5860733e761f4615c2e3b3e9","file":"projects/core/src/lib/pipes/sort-class.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"sortOrder","type":"GtSortOrder | null","deprecated":false,"deprecationMessage":""},{"name":"key","type":"string","deprecated":false,"deprecationMessage":""},{"name":"context","type":"\\"class\\" | \\"aria\\" | \\"order\\"","deprecated":false,"deprecationMessage":"","defaultValue":"\'class\'"}],"optional":false,"returnType":"string | null","typeParameters":[],"line":9,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"sortOrder","type":"GtSortOrder | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"key","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"context","type":"\\"class\\" | \\"aria\\" | \\"order\\"","deprecated":false,"deprecationMessage":"","defaultValue":"\'class\'","tagName":{"text":"param"}}]}],"ngname":"sortClass","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\nimport { GtSortOrder } from \'../models/table-sort.interface\';\\n\\n@Pipe({\\n  name: \'sortClass\',\\n  standalone: true,\\n})\\nexport class SortClassPipe implements PipeTransform {\\n  transform(\\n    sortOrder: GtSortOrder | null,\\n    key: string,\\n    context: \'class\' | \'aria\' | \'order\' = \'class\'\\n  ): string | null {\\n    const sortIndex = sortOrder\\n      ? sortOrder.findIndex((s) => s.key === key)\\n      : -1;\\n    if (context === \'aria\') {\\n      if (sortIndex === -1 || !sortOrder) {\\n        return null;\\n      } else {\\n        return `${sortOrder[sortIndex].order}ending`;\\n      }\\n    } else if (context === \'class\') {\\n      if (sortIndex === -1 || !sortOrder) {\\n        return \'\';\\n      } else {\\n        return `gt-sort-${sortOrder[sortIndex].order}`;\\n      }\\n    } else {\\n      return (sortOrder && sortOrder?.length === 1) || sortIndex < 0\\n        ? null\\n        : sortIndex + 1 + \'\';\\n    }\\n  }\\n}\\n"}],"interfaces":[{"name":"BasicData","id":"interface-BasicData-694868655a17d764ba2ea4b3cec45a1da4821c89b5e10705be2cdafe489383b24c58c393e0f3abb055c4a617c285a2b05722a166766c3f680803a92b574cf339","file":"projects/docs/src/app/examples/simple/simple.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Component } from \'@angular/core\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { SIMPLE_SNIPPETS } from \'./simple.snippets\';\\nimport { TableConfig } from \'@angular-generic-table/core\';\\ninterface BasicData {\\n  firstName: string;\\n  lastName: string;\\n  gender: \'male\' | \'female\';\\n  favoriteFood: string;\\n}\\n@Component({\\n  template: `\\n    <div class=\\"overflow-auto\\">\\n      <angular-generic-table\\n        [data]=\\"data\\"\\n        [config]=\\"config\\"\\n      ></angular-generic-table>\\n    </div>\\n    <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n  `,\\n  styles: [],\\n})\\nexport class SimpleComponent {\\n  data: Array<BasicData> = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ];\\n  config: TableConfig<BasicData> = {\\n    class: \'table table-striped table-bordered\',\\n    columns: {\\n      firstName: {},\\n      lastName: {},\\n      gender: {},\\n      favoriteFood: {},\\n    },\\n  };\\n\\n  SNIPPETS = SIMPLE_SNIPPETS;\\n}\\n\\nexport const Simple: Story<SimpleComponent> = (args: SimpleComponent) => ({\\n  props: args,\\n  component: SimpleComponent,\\n});\\n","properties":[{"name":"favoriteFood","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":9},{"name":"firstName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6},{"name":"gender","deprecated":false,"deprecationMessage":"","type":"\\"male\\" | \\"female\\"","optional":false,"description":"","line":8},{"name":"lastName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":7}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"CalcFunc","id":"interface-CalcFunc-a056644fdde68f4dadffd51d84324a6a3f2f5c5703bb1e4cd6e4c9d7f843a429f1dc80a81e8f220d59a2976a9e0ac93b92fb890d2aacf2769262f336f6f3feaa","file":"projects/core/src/lib/models/table-config.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { TableColumn } from \'./table-column.interface\';\\nimport { TableRow } from \'./table-row.interface\';\\n\\nexport interface TableConfig<R = TableRow> {\\n  /** Disable sorting of table data, useful when sorting is handled externally e.g. server-side pagination. Table will still use sortOrder to visually show how the data is sorted. <p>**Default:** `false`</p> */\\n  disableTableSort?: boolean;\\n  /** Allows for a more mobile friendly layout by displaying columns as rows instead. This is accomplished with css by adding `table-mobile` class to table element and adding column headers as data labels to each row. <p>**Default:** `false`</p>*/\\n  mobileLayout?: boolean;\\n  /** Make row and/or column headers sticky by adding `gt-sticky-row-header` and `gt-sticky-column-header` to table to alter table behaviour using css. Please note that in order for headers to be sticky, table can\'t be placed inside element with overflow set to auto. <p>**Default:** `{row:false, column:false}`</p>*/\\n  stickyHeaders?: {\\n    row?: boolean;\\n    column?: boolean;\\n  };\\n  /** Add one or more CSS classes to the table element e.g. `table table-striped table-bordered`. <p>**Default:** `table`</p>*/\\n  class?: string;\\n  rows?: {\\n    [Property in keyof R]: TableColumn<R>;\\n  };\\n  columns?: {\\n    [Property in keyof R]: TableColumn<R>;\\n  };\\n  pagination?: {\\n    length?: number;\\n  };\\n  rowClick?: boolean;\\n  /** Toggle row active state on mouse enter/leave (hover) <p>**Default:** `false`</p>*/\\n  activateRowOnHover?: boolean;\\n  /** Toggle row active state on keyboard navigation <p>**Default:** `false`</p>*/\\n  activateRowOnKeyboardNavigation?: boolean;\\n  deactivateRowOnLostFocus?: boolean;\\n  footer?: {\\n    headers?: {\\n      [key: FooterCalculation | string]: string | boolean;\\n    };\\n    columns?: {\\n      [Property in keyof R]: Partial<TableFooterColumn<R>>;\\n    };\\n    rowOrder?: Array<keyof R | FooterCalculation>;\\n    emptyContent?: string;\\n  };\\n}\\n\\ninterface TableFooterColumn<R> {\\n  [key: FooterCalculation | string]: boolean | number | string | CalcFunc<R>;\\n}\\ninterface CalcFunc<R> {\\n  (data: Array<R>, key: keyof R): number | string;\\n}\\ntype FooterCalculation = \'sum\' | \'avg\' | \'count\' | \'max\' | \'min\';\\n","properties":[{"id":"call-declaration-a056644fdde68f4dadffd51d84324a6a3f2f5c5703bb1e4cd6e4c9d7f843a429f1dc80a81e8f220d59a2976a9e0ac93b92fb890d2aacf2769262f336f6f3feaa","args":[{"name":"data","type":"Array<R>","deprecated":false,"deprecationMessage":""},{"name":"key","type":"","deprecated":false,"deprecationMessage":""}],"returnType":"number | string","line":46,"deprecated":false,"deprecationMessage":""}],"indexSignatures":[],"kind":173,"methods":[]},{"name":"Data","id":"interface-Data-04a1d485521dad8971455ab5319b9f61d0a1d60bd1e65141e5361e4e4c86e61215cc9827e2cc5f02aafd2b325c567aafdc84afe04ea907618fd71567987b3421","file":"projects/docs/src/app/examples/nested-data/nested-data.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { NESTED_SNIPPETS } from \'./nested.snippets\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { TableConfig } from \'@angular-generic-table/core\';\\ninterface NestedData {\\n  name: {\\n    first: string;\\n    last: string;\\n  };\\n  data: {\\n    details?: {\\n      gender: \'male\' | \'female\';\\n      favoriteFood: \'Pasta\' | \'Pizza\';\\n    };\\n  };\\n}\\n\\ninterface Data {\\n  firstName: string;\\n  lastName: string;\\n  gender: \'male\' | \'female\';\\n  favoriteFood: \'Pasta\' | \'Pizza\';\\n  missing: string;\\n}\\n@Component({\\n  selector: \'nested-data\',\\n  template: `\\n    <div class=\\"row gy-3\\">\\n      <div class=\\"col col-sm-auto\\">\\n        <button class=\\"btn btn-outline-primary mb-3\\" (click)=\\"loadData()\\">\\n          Load other data\\n        </button>\\n      </div>\\n      <div class=\\"col col-sm-auto\\">\\n        <button class=\\"btn btn-outline-primary mb-3\\" (click)=\\"resetData()\\">\\n          Reset\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\"overflow-auto\\">\\n      <angular-generic-table\\n        [data]=\\"data\\"\\n        [config]=\\"config\\"\\n      ></angular-generic-table>\\n    </div>\\n    <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n    <ng-template #gender let-row=\\"row\\" let-col=\\"col\\">\\n      <div [ngSwitch]=\\"row[col.key]\\">\\n        <ng-container *ngSwitchCase=\\"\'male\'\\">♂️</ng-container>\\n        <ng-container *ngSwitchCase=\\"\'female\'\\">♀️</ng-container>\\n      </div>\\n    </ng-template>\\n  `,\\n  styles: [],\\n})\\nexport class NestedDataComponent implements OnInit {\\n  @ViewChild(\'gender\', { static: true }) gender: TemplateRef<any> | undefined;\\n\\n  config: TableConfig<Data> = {};\\n  data: Array<NestedData> = [];\\n  ngOnInit(): void {\\n    this.resetData();\\n    this.config = {\\n      columns: {\\n        firstName: {\\n          sortable: true,\\n          mapTo: { path: \'name.first\' },\\n        },\\n        lastName: {\\n          sortable: true,\\n          mapTo: { path: \'name.last\' },\\n        },\\n        gender: {\\n          mapTo: { path: \'data.details.gender\' },\\n          templateRef: this.gender,\\n        },\\n        favoriteFood: {\\n          sortable: true,\\n          mapTo: { path: \'data.details.favoriteFood\', missingValue: \'n/a\' },\\n        },\\n        missing: {\\n          mapTo: { path: \'data.missingKey.noMatch\', missingValue: \'n/a\' },\\n        },\\n      },\\n    };\\n  }\\n\\n  resetData() {\\n    this.data = [\\n      {\\n        name: {\\n          first: \'Peter\',\\n          last: \'Parker\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'male\',\\n            favoriteFood: \'Pasta\',\\n          },\\n        },\\n      },\\n      {\\n        name: {\\n          first: \'Mary Jane\',\\n          last: \'Watson\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'female\',\\n            favoriteFood: \'Pizza\',\\n          },\\n        },\\n      },\\n    ];\\n  }\\n\\n  loadData(): void {\\n    this.data = [\\n      {\\n        name: {\\n          first: \'John\',\\n          last: \'Doe\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'male\',\\n            favoriteFood: \'Pasta\',\\n          },\\n        },\\n      },\\n      {\\n        name: {\\n          first: \'Jane\',\\n          last: \'Doe\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'female\',\\n            favoriteFood: \'Pizza\',\\n          },\\n        },\\n      },\\n      {\\n        name: {\\n          first: \'Foo\',\\n          last: \'Bar\',\\n        },\\n        data: {},\\n      },\\n    ];\\n  }\\n\\n  SNIPPETS = NESTED_SNIPPETS;\\n}\\n\\nexport const Nested: Story<NestedDataComponent> = (\\n  args: NestedDataComponent\\n) => ({\\n  props: args,\\n  component: NestedDataComponent,\\n});\\n","properties":[{"name":"favoriteFood","deprecated":false,"deprecationMessage":"","type":"\\"Pasta\\" | \\"Pizza\\"","optional":false,"description":"","line":22},{"name":"firstName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":19},{"name":"gender","deprecated":false,"deprecationMessage":"","type":"\\"male\\" | \\"female\\"","optional":false,"description":"","line":21},{"name":"lastName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":20},{"name":"missing","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":23}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"GtDelta","id":"interface-GtDelta-d8eaa54ebedc2786bbacacc9d40879c45252ff3cfeba6048488dcc628854c5f69f0ffd5a78d21d33b244eb515886c66a7b92a11a818dd7b7cf160b4dc6fce7a6","file":"projects/core/src/lib/gt-delta/gt-delta.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import {\\n  ChangeDetectionStrategy,\\n  Component,\\n  Input,\\n  OnChanges,\\n  SimpleChanges,\\n  TemplateRef,\\n} from \'@angular/core\';\\nimport { TableRow } from \'../models/table-row.interface\';\\nimport { NgIf, NgTemplateOutlet, PercentPipe } from \'@angular/common\';\\n\\nexport interface GtDelta {\\n  relative: number | string;\\n  absolute: number;\\n}\\n@Component({\\n  selector: \'gt-delta\',\\n  template: `<span\\n      *ngIf=\\"value as delta\\"\\n      [class]=\\"[\\n        classes.span,\\n        delta.absolute > 0\\n          ? classes.positive\\n          : delta.absolute < 0\\n          ? classes.negative\\n          : null\\n      ]\\"\\n      [class.gt-delta-positive]=\\"delta.absolute > 0\\"\\n      [class.gt-delta-negative]=\\"delta.absolute < 0\\"\\n      ><ng-container\\n        *ngTemplateOutlet=\\"deltaTemplate || defaultTemplate; context: { delta }\\"\\n      ></ng-container>\\n    </span>\\n    <ng-template #defaultTemplate let-delta=\\"delta\\">\\n      <span *ngIf=\\"delta.relative\\">{{\\n        delta.relative | percent: \'1.0-2\'\\n      }}</span>\\n    </ng-template>`,\\n  styles: [\\n    `\\n      :host {\\n        display: inline-block;\\n      }\\n    `,\\n  ],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  standalone: true,\\n  imports: [PercentPipe, NgIf, NgTemplateOutlet],\\n})\\nexport class GtDeltaComponent implements OnChanges {\\n  get value() {\\n    return this._value;\\n  }\\n\\n  set value(value) {\\n    this._value = value;\\n  }\\n  get deltaTemplate(): TemplateRef<any> {\\n    return this._deltaTemplate;\\n  }\\n  constructor() {}\\n  @Input() set deltaTemplate(deltaTemplate: TemplateRef<any>) {\\n    this._deltaTemplate = deltaTemplate;\\n  }\\n  Math = Math;\\n  Number = Number;\\n  @Input() data: Array<TableRow> = [];\\n  @Input() index: number = 0;\\n  @Input() baseIndex?: number;\\n  @Input() classes = {\\n    span: \'gt-delta\',\\n    positive: \'text-success\',\\n    negative: \'text-danger\',\\n  };\\n  @Input() key: string = \'value\';\\n  @Input() notApplicableValue: string | null = null;\\n  @Input() initialValue: string | number | null = null;\\n  private _value?: GtDelta;\\n  private _deltaTemplate?: any;\\n  ngOnChanges(changes: SimpleChanges): void {\\n    if (!changes.data.currentValue) {\\n      return;\\n    }\\n    const data = changes.data?.currentValue;\\n    const index = changes.index?.currentValue || this.index;\\n    const baseIndex = changes.baseIndex?.currentValue;\\n    const key = changes.key?.currentValue || this.key;\\n    const initialValue =\\n      changes.initialValue?.currentValue || this.initialValue;\\n\\n    const deltaValue =\\n      index === 0\\n        ? initialValue\\n        : data[index][key] -\\n          (baseIndex === undefined\\n            ? data[index - 1][key]\\n            : data[baseIndex][key]);\\n    const baseValue =\\n      index === 0\\n        ? 1\\n        : baseIndex === undefined\\n        ? data[index - 1][key]\\n        : data[baseIndex][key];\\n\\n    const relative =\\n      index === 0\\n        ? initialValue\\n        : Math.sign(deltaValue) * Math.abs(deltaValue / baseValue);\\n\\n    this.value = {\\n      relative: Number.isFinite(relative)\\n        ? relative\\n        : index === 0\\n        ? initialValue\\n        : changes.notApplicableValue?.currentValue || this.notApplicableValue,\\n      absolute: deltaValue,\\n    };\\n  }\\n}\\n","properties":[{"name":"absolute","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":14},{"name":"relative","deprecated":false,"deprecationMessage":"","type":"number | string","optional":false,"description":"","line":13}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"GtPageChangeEvent","id":"interface-GtPageChangeEvent-d83279f9fe73cc6d6d1e7e259619f31f4a9007af673e4ae13f3fab2303aee9598ae0a131ae03eb8db0d14d394585cf674a760da87a8eb444236f77f50ff1aec3","file":"projects/core/src/lib/models/table-events.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { TableRow } from \'./table-row.interface\';\\nimport { GtOrder, GtSortOrder } from \'./table-sort.interface\';\\n\\nexport interface GtRowClickEvent<R = TableRow> {\\n  row: R;\\n  index: number;\\n  event: MouseEvent;\\n}\\n\\nexport interface GtRowActiveEvent<R = TableRow> {\\n  row: R | null;\\n  index: number | null;\\n  event?: MouseEvent | KeyboardEvent;\\n}\\n\\nexport interface GtRowSelectEvent<R = TableRow> {\\n  row: R | null;\\n  index: number | null;\\n  event?: KeyboardEvent;\\n}\\n\\nexport interface GtSortEvent<R = TableRow> {\\n  key: keyof R;\\n  order: GtOrder;\\n  currentSortOrder: GtSortOrder<R>;\\n  event?: MouseEvent;\\n  addSortKey: boolean /** Add additional key to sort on multiple properties? True if the user is holding shift while sorting */;\\n}\\n\\nexport interface GtPageChangeEvent {\\n  index: number;\\n}\\n","properties":[{"name":"index","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":31}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"GtPaginationAriaLabels","id":"interface-GtPaginationAriaLabels-67c9c91404196704dbda45aea0fde9f0db7f106812d0c9c94b8cb4df7d5f11a13f0a26e4f1f14f7a06994ae0f8a8beefe16f58d37930e48f69cd86874d64df77","file":"projects/core/src/lib/models/gt-pagination.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface GtPaginationClasses {\\n  nav?: string;\\n  ul?: string;\\n  li?: string;\\n  button?: string;\\n}\\n\\nexport interface GtPaginationAriaLabels {\\n  nav: string;\\n  button: string;\\n}\\n\\nexport interface GtPaginationInfo {\\n  pageNext: number | null;\\n  pageCurrent: number | null;\\n  pagePrevious: number | null;\\n  pageSize: number | null;\\n  numberOfRecords: number | null;\\n  pageTotal?: number | null;\\n}\\n","properties":[{"name":"button","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":10},{"name":"nav","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":9}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"GtPaginationClasses","id":"interface-GtPaginationClasses-67c9c91404196704dbda45aea0fde9f0db7f106812d0c9c94b8cb4df7d5f11a13f0a26e4f1f14f7a06994ae0f8a8beefe16f58d37930e48f69cd86874d64df77","file":"projects/core/src/lib/models/gt-pagination.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface GtPaginationClasses {\\n  nav?: string;\\n  ul?: string;\\n  li?: string;\\n  button?: string;\\n}\\n\\nexport interface GtPaginationAriaLabels {\\n  nav: string;\\n  button: string;\\n}\\n\\nexport interface GtPaginationInfo {\\n  pageNext: number | null;\\n  pageCurrent: number | null;\\n  pagePrevious: number | null;\\n  pageSize: number | null;\\n  numberOfRecords: number | null;\\n  pageTotal?: number | null;\\n}\\n","properties":[{"name":"button","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":5},{"name":"li","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":4},{"name":"nav","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":2},{"name":"ul","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":3}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"GtPaginationInfo","id":"interface-GtPaginationInfo-67c9c91404196704dbda45aea0fde9f0db7f106812d0c9c94b8cb4df7d5f11a13f0a26e4f1f14f7a06994ae0f8a8beefe16f58d37930e48f69cd86874d64df77","file":"projects/core/src/lib/models/gt-pagination.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface GtPaginationClasses {\\n  nav?: string;\\n  ul?: string;\\n  li?: string;\\n  button?: string;\\n}\\n\\nexport interface GtPaginationAriaLabels {\\n  nav: string;\\n  button: string;\\n}\\n\\nexport interface GtPaginationInfo {\\n  pageNext: number | null;\\n  pageCurrent: number | null;\\n  pagePrevious: number | null;\\n  pageSize: number | null;\\n  numberOfRecords: number | null;\\n  pageTotal?: number | null;\\n}\\n","properties":[{"name":"numberOfRecords","deprecated":false,"deprecationMessage":"","type":"number | null","optional":false,"description":"","line":18},{"name":"pageCurrent","deprecated":false,"deprecationMessage":"","type":"number | null","optional":false,"description":"","line":15},{"name":"pageNext","deprecated":false,"deprecationMessage":"","type":"number | null","optional":false,"description":"","line":14},{"name":"pagePrevious","deprecated":false,"deprecationMessage":"","type":"number | null","optional":false,"description":"","line":16},{"name":"pageSize","deprecated":false,"deprecationMessage":"","type":"number | null","optional":false,"description":"","line":17},{"name":"pageTotal","deprecated":false,"deprecationMessage":"","type":"number | null","optional":true,"description":"","line":19}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"GtRowActiveEvent","id":"interface-GtRowActiveEvent-d83279f9fe73cc6d6d1e7e259619f31f4a9007af673e4ae13f3fab2303aee9598ae0a131ae03eb8db0d14d394585cf674a760da87a8eb444236f77f50ff1aec3","file":"projects/core/src/lib/models/table-events.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { TableRow } from \'./table-row.interface\';\\nimport { GtOrder, GtSortOrder } from \'./table-sort.interface\';\\n\\nexport interface GtRowClickEvent<R = TableRow> {\\n  row: R;\\n  index: number;\\n  event: MouseEvent;\\n}\\n\\nexport interface GtRowActiveEvent<R = TableRow> {\\n  row: R | null;\\n  index: number | null;\\n  event?: MouseEvent | KeyboardEvent;\\n}\\n\\nexport interface GtRowSelectEvent<R = TableRow> {\\n  row: R | null;\\n  index: number | null;\\n  event?: KeyboardEvent;\\n}\\n\\nexport interface GtSortEvent<R = TableRow> {\\n  key: keyof R;\\n  order: GtOrder;\\n  currentSortOrder: GtSortOrder<R>;\\n  event?: MouseEvent;\\n  addSortKey: boolean /** Add additional key to sort on multiple properties? True if the user is holding shift while sorting */;\\n}\\n\\nexport interface GtPageChangeEvent {\\n  index: number;\\n}\\n","properties":[{"name":"event","deprecated":false,"deprecationMessage":"","type":"MouseEvent | KeyboardEvent","optional":true,"description":"","line":13},{"name":"index","deprecated":false,"deprecationMessage":"","type":"number | null","optional":false,"description":"","line":12},{"name":"row","deprecated":false,"deprecationMessage":"","type":"R | null","optional":false,"description":"","line":11}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"GtRowClickEvent","id":"interface-GtRowClickEvent-d83279f9fe73cc6d6d1e7e259619f31f4a9007af673e4ae13f3fab2303aee9598ae0a131ae03eb8db0d14d394585cf674a760da87a8eb444236f77f50ff1aec3","file":"projects/core/src/lib/models/table-events.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { TableRow } from \'./table-row.interface\';\\nimport { GtOrder, GtSortOrder } from \'./table-sort.interface\';\\n\\nexport interface GtRowClickEvent<R = TableRow> {\\n  row: R;\\n  index: number;\\n  event: MouseEvent;\\n}\\n\\nexport interface GtRowActiveEvent<R = TableRow> {\\n  row: R | null;\\n  index: number | null;\\n  event?: MouseEvent | KeyboardEvent;\\n}\\n\\nexport interface GtRowSelectEvent<R = TableRow> {\\n  row: R | null;\\n  index: number | null;\\n  event?: KeyboardEvent;\\n}\\n\\nexport interface GtSortEvent<R = TableRow> {\\n  key: keyof R;\\n  order: GtOrder;\\n  currentSortOrder: GtSortOrder<R>;\\n  event?: MouseEvent;\\n  addSortKey: boolean /** Add additional key to sort on multiple properties? True if the user is holding shift while sorting */;\\n}\\n\\nexport interface GtPageChangeEvent {\\n  index: number;\\n}\\n","properties":[{"name":"event","deprecated":false,"deprecationMessage":"","type":"MouseEvent","optional":false,"description":"","line":7},{"name":"index","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":6},{"name":"row","deprecated":false,"deprecationMessage":"","type":"R","optional":false,"description":"","line":5}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"GtRowSelectEvent","id":"interface-GtRowSelectEvent-d83279f9fe73cc6d6d1e7e259619f31f4a9007af673e4ae13f3fab2303aee9598ae0a131ae03eb8db0d14d394585cf674a760da87a8eb444236f77f50ff1aec3","file":"projects/core/src/lib/models/table-events.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { TableRow } from \'./table-row.interface\';\\nimport { GtOrder, GtSortOrder } from \'./table-sort.interface\';\\n\\nexport interface GtRowClickEvent<R = TableRow> {\\n  row: R;\\n  index: number;\\n  event: MouseEvent;\\n}\\n\\nexport interface GtRowActiveEvent<R = TableRow> {\\n  row: R | null;\\n  index: number | null;\\n  event?: MouseEvent | KeyboardEvent;\\n}\\n\\nexport interface GtRowSelectEvent<R = TableRow> {\\n  row: R | null;\\n  index: number | null;\\n  event?: KeyboardEvent;\\n}\\n\\nexport interface GtSortEvent<R = TableRow> {\\n  key: keyof R;\\n  order: GtOrder;\\n  currentSortOrder: GtSortOrder<R>;\\n  event?: MouseEvent;\\n  addSortKey: boolean /** Add additional key to sort on multiple properties? True if the user is holding shift while sorting */;\\n}\\n\\nexport interface GtPageChangeEvent {\\n  index: number;\\n}\\n","properties":[{"name":"event","deprecated":false,"deprecationMessage":"","type":"KeyboardEvent","optional":true,"description":"","line":19},{"name":"index","deprecated":false,"deprecationMessage":"","type":"number | null","optional":false,"description":"","line":18},{"name":"row","deprecated":false,"deprecationMessage":"","type":"R | null","optional":false,"description":"","line":17}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"GtSortConfig","id":"interface-GtSortConfig-5ebf8d79dde996f6f1b846feb6f5a9d53bf8e9f71148b865d03bc29797c0d564d6ee23f47f5cbbfcd943834b7b67e01e5653790f1e63dda88407e78dbdeb4895","file":"projects/core/src/lib/models/table-sort.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { TableRow } from \'./table-row.interface\';\\n\\nexport type GtSortOrder<R = TableRow> = Array<GtSortConfig<R>>;\\nexport interface GtSortConfig<R = {}> {\\n  key: keyof R;\\n  order: GtOrder;\\n}\\n\\nexport type GtOrder = \'asc\' | \'desc\';\\n","properties":[{"name":"key","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":5},{"name":"order","deprecated":false,"deprecationMessage":"","type":"GtOrder","optional":false,"description":"","line":6}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"GtSortEvent","id":"interface-GtSortEvent-d83279f9fe73cc6d6d1e7e259619f31f4a9007af673e4ae13f3fab2303aee9598ae0a131ae03eb8db0d14d394585cf674a760da87a8eb444236f77f50ff1aec3","file":"projects/core/src/lib/models/table-events.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { TableRow } from \'./table-row.interface\';\\nimport { GtOrder, GtSortOrder } from \'./table-sort.interface\';\\n\\nexport interface GtRowClickEvent<R = TableRow> {\\n  row: R;\\n  index: number;\\n  event: MouseEvent;\\n}\\n\\nexport interface GtRowActiveEvent<R = TableRow> {\\n  row: R | null;\\n  index: number | null;\\n  event?: MouseEvent | KeyboardEvent;\\n}\\n\\nexport interface GtRowSelectEvent<R = TableRow> {\\n  row: R | null;\\n  index: number | null;\\n  event?: KeyboardEvent;\\n}\\n\\nexport interface GtSortEvent<R = TableRow> {\\n  key: keyof R;\\n  order: GtOrder;\\n  currentSortOrder: GtSortOrder<R>;\\n  event?: MouseEvent;\\n  addSortKey: boolean /** Add additional key to sort on multiple properties? True if the user is holding shift while sorting */;\\n}\\n\\nexport interface GtPageChangeEvent {\\n  index: number;\\n}\\n","properties":[{"name":"addSortKey","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":27},{"name":"currentSortOrder","deprecated":false,"deprecationMessage":"","type":"GtSortOrder<R>","optional":false,"description":"","line":25},{"name":"event","deprecated":false,"deprecationMessage":"","type":"MouseEvent","optional":true,"description":"","line":26},{"name":"key","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":23},{"name":"order","deprecated":false,"deprecationMessage":"","type":"GtOrder","optional":false,"description":"","line":24}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"LazyLoadingData","id":"interface-LazyLoadingData-84632bae79cd4899d6deb72214bfa38d32b216248b69830bb0ca440dec337ac8231dd42726cf0c8ab2fb2873ad182bf71c3f00fe899de8e6ebebf0d1ca5dd422","file":"projects/docs/src/app/examples/server-side-pagination/server-side-pagination.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import {\\n  ChangeDetectionStrategy,\\n  Component,\\n  OnInit,\\n  TemplateRef,\\n  ViewChild,\\n} from \'@angular/core\';\\nimport { DatePipe, formatDate } from \'@angular/common\';\\nimport {\\n  GtPageChangeEvent,\\n  GtSortEvent,\\n  GtSortOrder,\\n  TableConfig,\\n  GtPaginationInfo,\\n  sortOrderToParams,\\n} from \'@angular-generic-table/core\';\\nimport { FormBuilder } from \'@angular/forms\';\\nimport { HttpClient } from \'@angular/common/http\';\\nimport { BehaviorSubject, Observable, ReplaySubject } from \'rxjs\';\\nimport { pluck, shareReplay, switchMap, tap } from \'rxjs/operators\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { LAZY_LOADING_DOCS } from \'./server-side-pagination.snippets\';\\ninterface LazyLoadingData {\\n  birthday: string;\\n  email: string;\\n  favorite_color: string;\\n  first_name: string;\\n  gender: string;\\n  id: number;\\n  last_name: string;\\n}\\n\\ninterface LazyLoadingResponse {\\n  data: Array<LazyLoadingData>;\\n  paging: GtPaginationInfo;\\n  sorting: GtSortOrder<LazyLoadingData>;\\n  filters: [\\n    {\\n      [Property in keyof LazyLoadingResponse]: { [key: string]: any };\\n    }\\n  ];\\n  request: any;\\n  error: any;\\n}\\n@Component({\\n  selector: \'docs-lazy-loading\',\\n  templateUrl: \'./server-side-pagination.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class ServerSidePaginationComponent implements OnInit {\\n  constructor(private fb: FormBuilder, private http: HttpClient) {}\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  @ViewChild(\'color\', { static: true }) color: TemplateRef<any> | undefined;\\n  paginationForm = this.fb.group({\\n    search: [\'\'],\\n  });\\n  requestParams$ = new BehaviorSubject({\\n    page: 1,\\n    page_size: 10,\\n    sort_by: \'+id\',\\n  });\\n  search$ = this.paginationForm.controls.search.valueChanges.pipe(\\n    shareReplay(1)\\n  );\\n  loading$ = new BehaviorSubject(true);\\n\\n  request$ = this.requestParams$.pipe(\\n    tap((_) => this.loading$.next(true)), // show loading indicator whenever requests are changed (remove to disable loading indicator)\\n    switchMap((params) =>\\n      this.http.get<LazyLoadingResponse>(\\n        \'https://private-a6da3-generictableapi.apiary-mock.com/data\',\\n        {\\n          params,\\n        }\\n      )\\n    ),\\n    tap((_) => this.loading$.next(false)), // hide loading indicator\\n    shareReplay(1)\\n  );\\n\\n  data$: Observable<Array<LazyLoadingData>> = this.request$.pipe(\\n    pluck(\'data\'),\\n    shareReplay(1)\\n  );\\n  paging$: Observable<GtPaginationInfo> = this.request$.pipe(\\n    pluck(\'paging\'),\\n    shareReplay(1)\\n  );\\n\\n  sorting$ = this.request$.pipe(pluck(\'sorting\'), shareReplay(1));\\n\\n  onPageChange(event: GtPageChangeEvent): void {\\n    const current = { ...this.requestParams$.value };\\n    if (current.page != event.index + 1) {\\n      this.requestParams$.next({\\n        ...current,\\n        page: event.index + 1,\\n      });\\n    }\\n  }\\n\\n  onSortOrderChange(event: GtSortEvent): void {\\n    let sort_by = sortOrderToParams([...event.currentSortOrder]);\\n    const current = { ...this.requestParams$.value };\\n    if (current.sort_by !== sort_by) {\\n      this.requestParams$.next({\\n        ...current,\\n        page: 1, // reset page to 1 when sorting changes\\n        sort_by,\\n      });\\n    }\\n  }\\n\\n  tableConfig$: ReplaySubject<TableConfig<LazyLoadingData>> = new ReplaySubject(\\n    1\\n  );\\n  ngOnInit(): void {\\n    this.tableConfig$.next({\\n      class: \'table text-nowrap\',\\n      columns: {\\n        id: {\\n          sortable: true,\\n        },\\n        first_name: {},\\n        last_name: {\\n          sortable: true,\\n        },\\n        gender: {\\n          sortable: true,\\n        },\\n        birthday: {\\n          class: \'text-end justify-content-end\',\\n          search: (row, column) => formatDate(row[column], \'longDate\', \'en\'),\\n          transform: {\\n            pipe: DatePipe,\\n            args: [\'longDate\'],\\n          },\\n        },\\n        favorite_color: {\\n          hidden: true,\\n        },\\n        email: {\\n          hidden: true,\\n        },\\n      },\\n      pagination: {\\n        length: 10,\\n      },\\n    });\\n  }\\n  SNIPPETS = LAZY_LOADING_DOCS;\\n}\\n\\nexport const ServerSidePagination: Story<ServerSidePaginationComponent> = (\\n  args: ServerSidePaginationComponent\\n) => ({\\n  props: args,\\n  component: ServerSidePaginationComponent,\\n});\\n","properties":[{"name":"birthday","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":24},{"name":"email","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":25},{"name":"favorite_color","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":26},{"name":"first_name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":27},{"name":"gender","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":28},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":29},{"name":"last_name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":30}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"LazyLoadingResponse","id":"interface-LazyLoadingResponse-84632bae79cd4899d6deb72214bfa38d32b216248b69830bb0ca440dec337ac8231dd42726cf0c8ab2fb2873ad182bf71c3f00fe899de8e6ebebf0d1ca5dd422","file":"projects/docs/src/app/examples/server-side-pagination/server-side-pagination.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import {\\n  ChangeDetectionStrategy,\\n  Component,\\n  OnInit,\\n  TemplateRef,\\n  ViewChild,\\n} from \'@angular/core\';\\nimport { DatePipe, formatDate } from \'@angular/common\';\\nimport {\\n  GtPageChangeEvent,\\n  GtSortEvent,\\n  GtSortOrder,\\n  TableConfig,\\n  GtPaginationInfo,\\n  sortOrderToParams,\\n} from \'@angular-generic-table/core\';\\nimport { FormBuilder } from \'@angular/forms\';\\nimport { HttpClient } from \'@angular/common/http\';\\nimport { BehaviorSubject, Observable, ReplaySubject } from \'rxjs\';\\nimport { pluck, shareReplay, switchMap, tap } from \'rxjs/operators\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { LAZY_LOADING_DOCS } from \'./server-side-pagination.snippets\';\\ninterface LazyLoadingData {\\n  birthday: string;\\n  email: string;\\n  favorite_color: string;\\n  first_name: string;\\n  gender: string;\\n  id: number;\\n  last_name: string;\\n}\\n\\ninterface LazyLoadingResponse {\\n  data: Array<LazyLoadingData>;\\n  paging: GtPaginationInfo;\\n  sorting: GtSortOrder<LazyLoadingData>;\\n  filters: [\\n    {\\n      [Property in keyof LazyLoadingResponse]: { [key: string]: any };\\n    }\\n  ];\\n  request: any;\\n  error: any;\\n}\\n@Component({\\n  selector: \'docs-lazy-loading\',\\n  templateUrl: \'./server-side-pagination.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class ServerSidePaginationComponent implements OnInit {\\n  constructor(private fb: FormBuilder, private http: HttpClient) {}\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  @ViewChild(\'color\', { static: true }) color: TemplateRef<any> | undefined;\\n  paginationForm = this.fb.group({\\n    search: [\'\'],\\n  });\\n  requestParams$ = new BehaviorSubject({\\n    page: 1,\\n    page_size: 10,\\n    sort_by: \'+id\',\\n  });\\n  search$ = this.paginationForm.controls.search.valueChanges.pipe(\\n    shareReplay(1)\\n  );\\n  loading$ = new BehaviorSubject(true);\\n\\n  request$ = this.requestParams$.pipe(\\n    tap((_) => this.loading$.next(true)), // show loading indicator whenever requests are changed (remove to disable loading indicator)\\n    switchMap((params) =>\\n      this.http.get<LazyLoadingResponse>(\\n        \'https://private-a6da3-generictableapi.apiary-mock.com/data\',\\n        {\\n          params,\\n        }\\n      )\\n    ),\\n    tap((_) => this.loading$.next(false)), // hide loading indicator\\n    shareReplay(1)\\n  );\\n\\n  data$: Observable<Array<LazyLoadingData>> = this.request$.pipe(\\n    pluck(\'data\'),\\n    shareReplay(1)\\n  );\\n  paging$: Observable<GtPaginationInfo> = this.request$.pipe(\\n    pluck(\'paging\'),\\n    shareReplay(1)\\n  );\\n\\n  sorting$ = this.request$.pipe(pluck(\'sorting\'), shareReplay(1));\\n\\n  onPageChange(event: GtPageChangeEvent): void {\\n    const current = { ...this.requestParams$.value };\\n    if (current.page != event.index + 1) {\\n      this.requestParams$.next({\\n        ...current,\\n        page: event.index + 1,\\n      });\\n    }\\n  }\\n\\n  onSortOrderChange(event: GtSortEvent): void {\\n    let sort_by = sortOrderToParams([...event.currentSortOrder]);\\n    const current = { ...this.requestParams$.value };\\n    if (current.sort_by !== sort_by) {\\n      this.requestParams$.next({\\n        ...current,\\n        page: 1, // reset page to 1 when sorting changes\\n        sort_by,\\n      });\\n    }\\n  }\\n\\n  tableConfig$: ReplaySubject<TableConfig<LazyLoadingData>> = new ReplaySubject(\\n    1\\n  );\\n  ngOnInit(): void {\\n    this.tableConfig$.next({\\n      class: \'table text-nowrap\',\\n      columns: {\\n        id: {\\n          sortable: true,\\n        },\\n        first_name: {},\\n        last_name: {\\n          sortable: true,\\n        },\\n        gender: {\\n          sortable: true,\\n        },\\n        birthday: {\\n          class: \'text-end justify-content-end\',\\n          search: (row, column) => formatDate(row[column], \'longDate\', \'en\'),\\n          transform: {\\n            pipe: DatePipe,\\n            args: [\'longDate\'],\\n          },\\n        },\\n        favorite_color: {\\n          hidden: true,\\n        },\\n        email: {\\n          hidden: true,\\n        },\\n      },\\n      pagination: {\\n        length: 10,\\n      },\\n    });\\n  }\\n  SNIPPETS = LAZY_LOADING_DOCS;\\n}\\n\\nexport const ServerSidePagination: Story<ServerSidePaginationComponent> = (\\n  args: ServerSidePaginationComponent\\n) => ({\\n  props: args,\\n  component: ServerSidePaginationComponent,\\n});\\n","properties":[{"name":"data","deprecated":false,"deprecationMessage":"","type":"Array<LazyLoadingData>","optional":false,"description":"","line":34},{"name":"error","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":43},{"name":"filters","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":37},{"name":"paging","deprecated":false,"deprecationMessage":"","type":"GtPaginationInfo","optional":false,"description":"","line":35},{"name":"request","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":42},{"name":"sorting","deprecated":false,"deprecationMessage":"","type":"GtSortOrder<LazyLoadingData>","optional":false,"description":"","line":36}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"NestedData","id":"interface-NestedData-04a1d485521dad8971455ab5319b9f61d0a1d60bd1e65141e5361e4e4c86e61215cc9827e2cc5f02aafd2b325c567aafdc84afe04ea907618fd71567987b3421","file":"projects/docs/src/app/examples/nested-data/nested-data.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { NESTED_SNIPPETS } from \'./nested.snippets\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { TableConfig } from \'@angular-generic-table/core\';\\ninterface NestedData {\\n  name: {\\n    first: string;\\n    last: string;\\n  };\\n  data: {\\n    details?: {\\n      gender: \'male\' | \'female\';\\n      favoriteFood: \'Pasta\' | \'Pizza\';\\n    };\\n  };\\n}\\n\\ninterface Data {\\n  firstName: string;\\n  lastName: string;\\n  gender: \'male\' | \'female\';\\n  favoriteFood: \'Pasta\' | \'Pizza\';\\n  missing: string;\\n}\\n@Component({\\n  selector: \'nested-data\',\\n  template: `\\n    <div class=\\"row gy-3\\">\\n      <div class=\\"col col-sm-auto\\">\\n        <button class=\\"btn btn-outline-primary mb-3\\" (click)=\\"loadData()\\">\\n          Load other data\\n        </button>\\n      </div>\\n      <div class=\\"col col-sm-auto\\">\\n        <button class=\\"btn btn-outline-primary mb-3\\" (click)=\\"resetData()\\">\\n          Reset\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\"overflow-auto\\">\\n      <angular-generic-table\\n        [data]=\\"data\\"\\n        [config]=\\"config\\"\\n      ></angular-generic-table>\\n    </div>\\n    <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n    <ng-template #gender let-row=\\"row\\" let-col=\\"col\\">\\n      <div [ngSwitch]=\\"row[col.key]\\">\\n        <ng-container *ngSwitchCase=\\"\'male\'\\">♂️</ng-container>\\n        <ng-container *ngSwitchCase=\\"\'female\'\\">♀️</ng-container>\\n      </div>\\n    </ng-template>\\n  `,\\n  styles: [],\\n})\\nexport class NestedDataComponent implements OnInit {\\n  @ViewChild(\'gender\', { static: true }) gender: TemplateRef<any> | undefined;\\n\\n  config: TableConfig<Data> = {};\\n  data: Array<NestedData> = [];\\n  ngOnInit(): void {\\n    this.resetData();\\n    this.config = {\\n      columns: {\\n        firstName: {\\n          sortable: true,\\n          mapTo: { path: \'name.first\' },\\n        },\\n        lastName: {\\n          sortable: true,\\n          mapTo: { path: \'name.last\' },\\n        },\\n        gender: {\\n          mapTo: { path: \'data.details.gender\' },\\n          templateRef: this.gender,\\n        },\\n        favoriteFood: {\\n          sortable: true,\\n          mapTo: { path: \'data.details.favoriteFood\', missingValue: \'n/a\' },\\n        },\\n        missing: {\\n          mapTo: { path: \'data.missingKey.noMatch\', missingValue: \'n/a\' },\\n        },\\n      },\\n    };\\n  }\\n\\n  resetData() {\\n    this.data = [\\n      {\\n        name: {\\n          first: \'Peter\',\\n          last: \'Parker\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'male\',\\n            favoriteFood: \'Pasta\',\\n          },\\n        },\\n      },\\n      {\\n        name: {\\n          first: \'Mary Jane\',\\n          last: \'Watson\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'female\',\\n            favoriteFood: \'Pizza\',\\n          },\\n        },\\n      },\\n    ];\\n  }\\n\\n  loadData(): void {\\n    this.data = [\\n      {\\n        name: {\\n          first: \'John\',\\n          last: \'Doe\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'male\',\\n            favoriteFood: \'Pasta\',\\n          },\\n        },\\n      },\\n      {\\n        name: {\\n          first: \'Jane\',\\n          last: \'Doe\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'female\',\\n            favoriteFood: \'Pizza\',\\n          },\\n        },\\n      },\\n      {\\n        name: {\\n          first: \'Foo\',\\n          last: \'Bar\',\\n        },\\n        data: {},\\n      },\\n    ];\\n  }\\n\\n  SNIPPETS = NESTED_SNIPPETS;\\n}\\n\\nexport const Nested: Story<NestedDataComponent> = (\\n  args: NestedDataComponent\\n) => ({\\n  props: args,\\n  component: NestedDataComponent,\\n});\\n","properties":[{"name":"data","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":10},{"name":"name","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":6}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"RawData","id":"interface-RawData-0a5c0cb27d235dfe9659a36988e8f66a453ff89ad5e286c1c983f66beb2ec0e2a4b9694bf4c3ff2f652e68001624f00f6630abc1e58f843290dac6f691044c0c","file":"projects/docs/src/app/examples/transpose/transpose.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { BehaviorSubject, Observable } from \'rxjs\';\\nimport { TableConfig, GtDeltaComponent } from \'@angular-generic-table/core\';\\nimport { UntypedFormBuilder } from \'@angular/forms\';\\nimport { withLatestFrom } from \'rxjs/operators\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { TRANSPOSE_SNIPPETS } from \'./transpose.snippets\';\\ninterface RawData {\\n  year: string;\\n  value: number;\\n}\\ninterface YearData extends RawData {\\n  delta: number;\\n  deltaIndex: number;\\n  combined: number;\\n  deltaAbsolute: number;\\n}\\n@Component({\\n  selector: \'docs-transpose\',\\n  template: `\\n    <form [formGroup]=\\"reactiveForm\\">\\n      <div class=\\"row gy-3 gx-3 align-items-end mb-3\\">\\n        <div class=\\"form-group col-6 col-sm-auto\\">\\n          <label for=\\"length_input\\">Number of rows</label>\\n          <input\\n            id=\\"length_input\\"\\n            formControlName=\\"length\\"\\n            type=\\"number\\"\\n            class=\\"form-control\\"\\n          />\\n        </div>\\n        <div class=\\"form-group col-6 col-sm-auto\\">\\n          <label for=\\"search_input\\">Search</label>\\n          <input\\n            id=\\"search_input\\"\\n            formControlName=\\"search\\"\\n            type=\\"text\\"\\n            class=\\"form-control\\"\\n          />\\n        </div>\\n        <div class=\\"col-auto\\">\\n          <button\\n            class=\\"btn btn-outline-primary w-100\\"\\n            (click)=\\"simulateLoad()\\"\\n          >\\n            Simulate load\\n          </button>\\n        </div>\\n        <div class=\\"col col-sm-auto\\">\\n          <button class=\\"btn btn-outline-danger w-100\\" (click)=\\"empty()\\">\\n            Empty\\n          </button>\\n        </div>\\n        <div class=\\"col col-sm-auto\\">\\n          <button class=\\"btn btn-outline-primary w-100\\" (click)=\\"load()\\">\\n            Reset\\n          </button>\\n        </div>\\n        <div class=\\"col col-sm-auto\\">\\n          <button class=\\"btn btn-outline-primary w-100\\" (click)=\\"transpose()\\">\\n            Transpose\\n          </button>\\n        </div>\\n      </div>\\n      <div class=\\"overflow-auto\\">\\n        <angular-generic-table\\n          #table\\n          [data]=\\"data\\"\\n          [config]=\\"tableConfig$\\"\\n          [loading]=\\"loading$\\"\\n          [search]=\\"search$\\"\\n        >\\n          <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n          <div class=\\"table-no-data alert alert-info mt-3\\">Table is empty</div>\\n        </angular-generic-table>\\n      </div>\\n      <angular-generic-table-pagination [table]=\\"table\\">\\n      </angular-generic-table-pagination>\\n      <ng-template #delta let-index=\\"index\\" let-data=\\"data\\">\\n        <gt-delta [index]=\\"index\\" [data]=\\"data\\"></gt-delta>\\n      </ng-template>\\n      <ng-template #deltaAbsolute let-index=\\"index\\" let-data=\\"data\\">\\n        <gt-delta\\n          [index]=\\"index\\"\\n          [data]=\\"data\\"\\n          [deltaTemplate]=\\"deltaTemplate\\"\\n        ></gt-delta>\\n      </ng-template>\\n      <ng-template #deltaIndex let-index=\\"index\\" let-data=\\"data\\">\\n        <gt-delta [index]=\\"index\\" [data]=\\"data\\" [baseIndex]=\\"0\\"></gt-delta>\\n      </ng-template>\\n      <ng-template\\n        #combined\\n        let-index=\\"index\\"\\n        let-data=\\"data\\"\\n        let-row=\\"row\\"\\n        let-col=\\"col\\"\\n      >\\n        {{ row.value }}\\n        <ng-container *ngIf=\\"index > 0\\">\\n          <gt-delta [index]=\\"index\\" [data]=\\"data\\"></gt-delta>\\n        </ng-container>\\n      </ng-template>\\n      <ng-template #deltaTemplate let-delta=\\"delta\\">\\n        <span>{{ delta.absolute }}</span></ng-template\\n      >\\n      <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n    </form>\\n  `,\\n  styles: [],\\n})\\nexport class TransposeComponent implements OnInit {\\n  @ViewChild(\'delta\', { static: true }) delta:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  @ViewChild(\'deltaAbsolute\', { static: true }) deltaAbsolute:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  @ViewChild(\'deltaIndex\', { static: true }) deltaIndex:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  @ViewChild(\'combined\', { static: true }) combined:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  loading$ = new BehaviorSubject(false);\\n  reactiveForm = this.fb.group({\\n    length: [10],\\n    search: [\'\'],\\n  });\\n  search$ = this.reactiveForm.get(\'search\')?.valueChanges as Observable<string>;\\n  tableConfig$: BehaviorSubject<TableConfig<YearData>> = new BehaviorSubject<\\n    TableConfig<YearData>\\n  >({});\\n  data: Array<RawData> = [];\\n\\n  constructor(private fb: UntypedFormBuilder) {}\\n\\n  ngOnInit(): void {\\n    this.transpose();\\n    this.load();\\n    this.reactiveForm\\n      .get(\'length\')\\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\\n      .subscribe(([length, config]) => {\\n        length = +length;\\n        this.tableConfig$.next({\\n          ...config,\\n          pagination: { ...config.pagination, length },\\n        });\\n      });\\n  }\\n\\n  simulateLoad(): void {\\n    this.loading$.next(true);\\n    // set loading state to false after 2 seconds\\n    setTimeout(() => this.loading$.next(false), 2000);\\n  }\\n  empty(): void {\\n    this.data = [];\\n  }\\n  load(): void {\\n    this.data = [\\n      {\\n        year: \'2010\',\\n        value: 15,\\n      },\\n      {\\n        year: \'2011\',\\n        value: 30,\\n      },\\n      {\\n        year: \'2012\',\\n        value: 25,\\n      },\\n      {\\n        year: \'2013\',\\n        value: 0,\\n      },\\n      {\\n        year: \'2014\',\\n        value: 40,\\n      },\\n      {\\n        year: \'2015\',\\n        value: 0,\\n      },\\n      {\\n        year: \'2016\',\\n        value: -5,\\n      },\\n      {\\n        year: \'2018\',\\n        value: 75,\\n      },\\n      {\\n        year: \'2019\',\\n        value: 100,\\n      },\\n      {\\n        year: \'2020\',\\n        value: 250,\\n      },\\n      {\\n        year: \'2021\',\\n        value: 50,\\n      },\\n      {\\n        year: \'2022\',\\n        value: 60,\\n      },\\n    ];\\n  }\\n  transpose(): void {\\n    if (this.tableConfig$.value.columns) {\\n      this.tableConfig$.next({\\n        stickyHeaders: {\\n          row: true,\\n          column: true,\\n        },\\n        rows: {\\n          year: {\\n            sortable: true,\\n            header: false,\\n            class: \'text-end\',\\n          },\\n          value: {\\n            class: \'text-end\',\\n          },\\n          delta: {\\n            header: \'Delta %\',\\n            templateRef: this.delta,\\n            class: \'text-end\',\\n          },\\n          deltaIndex: {\\n            header: \'Since inception %\',\\n            templateRef: this.deltaIndex,\\n            class: \'text-end\',\\n          },\\n          deltaAbsolute: {\\n            header: \'Delta\',\\n            templateRef: this.deltaAbsolute,\\n            class: \'text-end\',\\n          },\\n          combined: {\\n            header: \'Value with change\',\\n            templateRef: this.combined,\\n            class: \'text-end text-nowrap\',\\n          },\\n        },\\n      });\\n    } else {\\n      this.tableConfig$.next({\\n        stickyHeaders: {\\n          row: true,\\n          column: true,\\n        },\\n        columns: {\\n          year: {\\n            sortable: true,\\n          },\\n          value: {\\n            class: \'text-end\',\\n          },\\n          delta: {\\n            header: \'Delta %\',\\n            templateRef: this.delta,\\n            class: \'text-end\',\\n          },\\n          deltaIndex: {\\n            header: \'Since inception %\',\\n            templateRef: this.deltaIndex,\\n            class: \'text-end\',\\n          },\\n          deltaAbsolute: {\\n            header: \'Delta\',\\n            templateRef: this.deltaAbsolute,\\n            class: \'text-end\',\\n          },\\n          combined: {\\n            header: \'Value with change\',\\n            templateRef: this.combined,\\n            class: \'text-end text-nowrap\',\\n          },\\n        },\\n        pagination: { length: this.reactiveForm.get(\'length\')?.value },\\n      });\\n    }\\n  }\\n  SNIPPETS = TRANSPOSE_SNIPPETS;\\n}\\n\\nexport const Transpose: Story<TransposeComponent> = (\\n  args: TransposeComponent\\n) => ({\\n  props: args,\\n  component: TransposeComponent,\\n});\\n","properties":[{"name":"value","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":10},{"name":"year","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":9}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"RowData","id":"interface-RowData-8d1455cbb2f6a9a3f0a2d0624612fe1e7a9df70f0f985eafad90346b93f9d5cde6ee74163e55bbfd18699a0bcacaacc542e8eb9df57e8eff39d9e50674d16b34","file":"projects/docs/src/app/examples/row-select/row-select.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { ChangeDetectionStrategy, Component, OnDestroy } from \'@angular/core\';\\nimport {\\n  GtRowSelectEvent,\\n  GtRowClickEvent,\\n  TableRow,\\n  GtRowActiveEvent,\\n} from \'@angular-generic-table/core\';\\nimport { BehaviorSubject, combineLatest, Observable, Subject } from \'rxjs\';\\nimport {\\n  map,\\n  pluck,\\n  shareReplay,\\n  startWith,\\n  take,\\n  takeUntil,\\n  tap,\\n} from \'rxjs/operators\';\\nimport { HttpClient } from \'@angular/common/http\';\\nimport { FormControl } from \'@angular/forms\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { CUSTOM_TEMPLATES_DOCS } from \'../custom-templates/custom-templates.snippets\';\\nimport { ROW_SELECT_SNIPPETS } from \'./row-select.snippets\';\\ninterface RowData {\\n  birthday: string;\\n  email: string;\\n  favorite_color: string;\\n  first_name: string;\\n  gender: \'Female\' | \'Male\';\\n  id: number;\\n  last_name: string;\\n}\\n@Component({\\n  templateUrl: \'./row-select.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  styles: [\\n    `\\n      :host ::ng-deep .gt-active {\\n        background-color: var(--bs-highlight-bg);\\n      }\\n      :host ::ng-deep .table > tbody > tr {\\n        cursor: pointer;\\n      }\\n    `,\\n  ],\\n})\\nexport class RowSelectComponent implements OnDestroy {\\n  constructor(private http: HttpClient) {}\\n\\n  get activateOnRowHover$(): Observable<boolean> {\\n    return this._activateOnRowHover$.asObservable();\\n  }\\n  get activateOnRowHover(): boolean {\\n    return this._activateOnRowHover$.getValue();\\n  }\\n  toggleRowHover() {\\n    this._activateOnRowHover$.next(!this.activateOnRowHover);\\n  }\\n  private _activateOnRowHover$ = new BehaviorSubject<boolean>(true);\\n\\n  get activateOnNavigation$(): Observable<boolean> {\\n    return this._activateOnNavigation$.asObservable();\\n  }\\n  get activateOnNavigation(): boolean {\\n    return this._activateOnNavigation$.getValue();\\n  }\\n  toggleRowNavigation() {\\n    this._activateOnNavigation$.next(!this.activateOnNavigation);\\n  }\\n  private _activateOnNavigation$ = new BehaviorSubject<boolean>(true);\\n\\n  private unsubscribe$ = new Subject();\\n  loading$ = new BehaviorSubject<boolean>(true);\\n  customClassNames = {\\n    selectedRow: \'table-active\',\\n  };\\n  lengthCtrl = new FormControl(15);\\n  data$ = this.http\\n    .get<{ data: TableRow[] }>(\\n      \'https://private-730c61-generictable.apiary-mock.com/data\'\\n    )\\n    .pipe(\\n      pluck(\'data\'),\\n      tap((_) => this.loading$.next(false)),\\n      takeUntil(this.unsubscribe$),\\n      shareReplay(1)\\n    );\\n  config$ = combineLatest([\\n    this.lengthCtrl.valueChanges.pipe(\\n      startWith(this.lengthCtrl.value),\\n      map((length) =>\\n        length ? { pagination: { length: length < 0 ? 0 : length } } : {}\\n      )\\n    ),\\n    this.activateOnRowHover$,\\n    this.activateOnNavigation$,\\n  ]).pipe(\\n    map(\\n      ([pagination, activateRowOnHover, activateRowOnKeyboardNavigation]) => ({\\n        columns: {\\n          id: {\\n            sortable: true,\\n          },\\n          first_name: {\\n            sortable: true,\\n          },\\n          last_name: {\\n            sortable: true,\\n          },\\n          gender: {\\n            sortable: true,\\n          },\\n          email: {\\n            sortable: true,\\n          },\\n        },\\n        ...pagination,\\n        rowClick: true,\\n        activateRowOnHover,\\n        activateRowOnKeyboardNavigation,\\n        rowSelect: true,\\n      })\\n    )\\n  );\\n\\n  setActiveRow(event: GtRowActiveEvent) {\\n    console.log(event);\\n    if (event.event && event.event.type === \'keydown\') {\\n      // stop the event from propagating, otherwise the page will scroll\\n      event.event.preventDefault();\\n    }\\n    this._activeRow$.next(<RowData | null>event.row);\\n  }\\n  get activeRow$() {\\n    return this._activeRow$.asObservable();\\n  }\\n  private _activeRow$ = new BehaviorSubject<RowData | null>(null);\\n  isSelected(row: RowData, selection: typeof this.selection) {\\n    return selection[row.id];\\n  }\\n\\n  selection: { [key: string]: boolean } = {};\\n\\n  selectRow(event: GtRowClickEvent | GtRowSelectEvent) {\\n    const selection = { ...this.selection };\\n    const row = event.row;\\n    if (!row) return;\\n    if (!selection[row.id]) {\\n      selection[row.id] = true;\\n    } else {\\n      delete selection[row.id];\\n    }\\n    // update the selection\\n    this.selection = selection;\\n  }\\n\\n  get isAllSelected() {\\n    return Object.keys(this.selection).length > 0;\\n  }\\n  toggleAll() {\\n    if (this.isAllSelected) {\\n      this.selection = {};\\n      return;\\n    }\\n    const selection = { ...this.selection };\\n    this.data$.pipe(take(1), takeUntil(this.unsubscribe$)).subscribe((data) => {\\n      data.forEach((row, index) => {\\n        selection[index] = true;\\n      });\\n    });\\n    this.selection = selection;\\n  }\\n\\n  ngOnDestroy() {\\n    this.unsubscribe$.next();\\n    this.unsubscribe$.complete();\\n  }\\n  SNIPPETS = ROW_SELECT_SNIPPETS;\\n}\\n\\nexport const RowSelect: Story<RowSelectComponent> = (\\n  args: RowSelectComponent\\n) => ({\\n  props: args,\\n  component: RowSelectComponent,\\n});\\n","properties":[{"name":"birthday","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":24},{"name":"email","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":25},{"name":"favorite_color","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":26},{"name":"first_name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":27},{"name":"gender","deprecated":false,"deprecationMessage":"","type":"\\"Female\\" | \\"Male\\"","optional":false,"description":"","line":28},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":29},{"name":"last_name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":30}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"SortingData","id":"interface-SortingData-4ef62adeec6897b8e534c6091a292d9ae7fd533c6079340b6b9edf96420c885a8d8a92be14944773a784a876cca1d3299a6e8762760799e0958f49349cb5bd9a","file":"projects/docs/src/app/examples/sorting/sorting.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Component } from \'@angular/core\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { SIMPLE_SNIPPETS } from \'./sorting.snippets\';\\nimport {\\n  GtSortEvent,\\n  GtSortOrder,\\n  TableConfig,\\n} from \'@angular-generic-table/core\';\\nimport { DatePipe } from \'@angular/common\';\\n\\ninterface SortingData {\\n  firstName: string;\\n  lastName: string;\\n  gender: \'male\' | \'female\';\\n  favoriteFood: string;\\n  birthdate: number;\\n}\\n@Component({\\n  template: `\\n    <div class=\\"overflow-auto\\">\\n      <angular-generic-table\\n        #table\\n        [data]=\\"data\\"\\n        [config]=\\"config\\"\\n        [(sortOrder)]=\\"sortOrder\\"\\n        (columnSort)=\\"logSortChange($event)\\"\\n      ></angular-generic-table>\\n    </div>\\n    <div class=\\"row mb-3 gy-3\\">\\n      <div class=\\"col-12 col-sm-auto\\">\\n        <button\\n          class=\\"btn btn-primary w-100\\"\\n          (click)=\\"table.sortByKey(\'firstName\', $event)\\"\\n        >\\n          Sort on first name\\n        </button>\\n      </div>\\n      <div class=\\"col-12 col-sm-auto\\">\\n        <button class=\\"btn btn-primary w-100\\" (click)=\\"resetSort()\\">\\n          Reset sorting\\n        </button>\\n      </div>\\n    </div>\\n    <strong>Current sort order</strong>\\n    <p>\\n      <code>\\n        {{ sortOrder | json }}\\n      </code>\\n    </p>\\n    <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n  `,\\n  styles: [],\\n})\\nexport class SortingComponent {\\n  initialSortOrder: GtSortOrder<SortingData> = [\\n    { key: \'birthdate\', order: \'asc\' },\\n    { key: \'gender\', order: \'asc\' },\\n    { key: \'firstName\', order: \'desc\' },\\n  ];\\n  sortOrder: GtSortOrder<SortingData> = this.initialSortOrder;\\n  data: Array<SortingData> = [\\n    {\\n      firstName: \'John\',\\n      lastName: \'Doe\',\\n      gender: \'male\',\\n      favoriteFood: \'pizza\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Jane\',\\n      lastName: \'Smith\',\\n      gender: \'female\',\\n      favoriteFood: \'sushi\',\\n      birthdate: 803404800000,\\n    },\\n    {\\n      firstName: \'Bob\',\\n      lastName: \'Johnson\',\\n      gender: \'male\',\\n      favoriteFood: \'burgers\',\\n      birthdate: 649345600000,\\n    },\\n    {\\n      firstName: \'Emily\',\\n      lastName: \'Williams\',\\n      gender: \'female\',\\n      favoriteFood: \'chicken\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Michael\',\\n      lastName: \'Jones\',\\n      gender: \'male\',\\n      favoriteFood: \'steak\',\\n      birthdate: 803404800000,\\n    },\\n    {\\n      firstName: \'Matthew\',\\n      lastName: \'Brown\',\\n      gender: \'male\',\\n      favoriteFood: \'seafood\',\\n      birthdate: 649345600000,\\n    },\\n    {\\n      firstName: \'Jessica\',\\n      lastName: \'Miller\',\\n      gender: \'female\',\\n      favoriteFood: \'salad\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Jacob\',\\n      lastName: \'Moore\',\\n      gender: \'male\',\\n      favoriteFood: \'pasta\',\\n      birthdate: 803404800000,\\n    },\\n    {\\n      firstName: \'Nicholas\',\\n      lastName: \'Taylor\',\\n      gender: \'male\',\\n      favoriteFood: \'soup\',\\n      birthdate: 649345600000,\\n    },\\n    {\\n      firstName: \'Ashley\',\\n      lastName: \'Anderson\',\\n      gender: \'female\',\\n      favoriteFood: \'tacos\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Brandon\',\\n      lastName: \'Thomas\',\\n      gender: \'male\',\\n      favoriteFood: \'nachos\',\\n      birthdate: 803404800000,\\n    },\\n  ];\\n  config: TableConfig<SortingData> = {\\n    columns: {\\n      firstName: {\\n        sortable: true,\\n      },\\n      lastName: {\\n        sortable: true,\\n      },\\n      gender: {\\n        sortable: true,\\n      },\\n      favoriteFood: {\\n        sortable: true,\\n      },\\n      birthdate: {\\n        sortable: true,\\n        transform: {\\n          pipe: DatePipe,\\n        },\\n      },\\n    },\\n  };\\n\\n  logSortChange(sortEvent: GtSortEvent<SortingData>) {\\n    console.log(sortEvent);\\n  }\\n\\n  resetSort() {\\n    this.sortOrder = this.initialSortOrder;\\n  }\\n\\n  SNIPPETS = SIMPLE_SNIPPETS;\\n}\\n\\nexport const Sorting: Story<SortingComponent> = (args: SortingComponent) => ({\\n  props: args,\\n  component: SortingComponent,\\n});\\n","properties":[{"name":"birthdate","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":16},{"name":"favoriteFood","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":15},{"name":"firstName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":12},{"name":"gender","deprecated":false,"deprecationMessage":"","type":"\\"male\\" | \\"female\\"","optional":false,"description":"","line":14},{"name":"lastName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":13}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"TableColumn","id":"interface-TableColumn-953ad06f9a505d8a3bc23bf8b041124803f2f420df138001d72f681df6ad23eb54e307a24cf377dfcd0319f22d8c55b2b25dbeb468be7f9b181977039888b69b","file":"projects/core/src/lib/models/table-column.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { TemplateRef } from \'@angular/core\';\\nimport { TableRow } from \'./table-row.interface\';\\nexport interface TableColumn<R = TableRow> {\\n  header?: string | false;\\n  mobileHeader?: string | boolean;\\n  hidden?: boolean;\\n  sortable?: boolean;\\n  order?: number;\\n  search?: boolean | SearchFunction<R>;\\n  templateRef?: TemplateRef<any>;\\n  transform?: {\\n    pipe: any;\\n    args?: Array<any>;\\n  };\\n  class?: string;\\n  mapTo?: {\\n    path: string;\\n    missingValue?: string | number;\\n  };\\n}\\n\\nexport type SearchFunction<R = TableRow> = (\\n  row: R,\\n  column: keyof R,\\n  value: typeof row[keyof R]\\n) => string;\\n","properties":[{"name":"class","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":15},{"name":"header","deprecated":false,"deprecationMessage":"","type":"string | ","optional":true,"description":"","line":4},{"name":"hidden","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":6},{"name":"mapTo","deprecated":false,"deprecationMessage":"","type":"literal type","optional":true,"description":"","line":16},{"name":"mobileHeader","deprecated":false,"deprecationMessage":"","type":"string | boolean","optional":true,"description":"","line":5},{"name":"order","deprecated":false,"deprecationMessage":"","type":"number","optional":true,"description":"","line":8},{"name":"search","deprecated":false,"deprecationMessage":"","type":"boolean | SearchFunction<R>","optional":true,"description":"","line":9},{"name":"sortable","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":7},{"name":"templateRef","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":true,"description":"","line":10},{"name":"transform","deprecated":false,"deprecationMessage":"","type":"literal type","optional":true,"description":"","line":11}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"TableConfig","id":"interface-TableConfig-a056644fdde68f4dadffd51d84324a6a3f2f5c5703bb1e4cd6e4c9d7f843a429f1dc80a81e8f220d59a2976a9e0ac93b92fb890d2aacf2769262f336f6f3feaa","file":"projects/core/src/lib/models/table-config.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { TableColumn } from \'./table-column.interface\';\\nimport { TableRow } from \'./table-row.interface\';\\n\\nexport interface TableConfig<R = TableRow> {\\n  /** Disable sorting of table data, useful when sorting is handled externally e.g. server-side pagination. Table will still use sortOrder to visually show how the data is sorted. <p>**Default:** `false`</p> */\\n  disableTableSort?: boolean;\\n  /** Allows for a more mobile friendly layout by displaying columns as rows instead. This is accomplished with css by adding `table-mobile` class to table element and adding column headers as data labels to each row. <p>**Default:** `false`</p>*/\\n  mobileLayout?: boolean;\\n  /** Make row and/or column headers sticky by adding `gt-sticky-row-header` and `gt-sticky-column-header` to table to alter table behaviour using css. Please note that in order for headers to be sticky, table can\'t be placed inside element with overflow set to auto. <p>**Default:** `{row:false, column:false}`</p>*/\\n  stickyHeaders?: {\\n    row?: boolean;\\n    column?: boolean;\\n  };\\n  /** Add one or more CSS classes to the table element e.g. `table table-striped table-bordered`. <p>**Default:** `table`</p>*/\\n  class?: string;\\n  rows?: {\\n    [Property in keyof R]: TableColumn<R>;\\n  };\\n  columns?: {\\n    [Property in keyof R]: TableColumn<R>;\\n  };\\n  pagination?: {\\n    length?: number;\\n  };\\n  rowClick?: boolean;\\n  /** Toggle row active state on mouse enter/leave (hover) <p>**Default:** `false`</p>*/\\n  activateRowOnHover?: boolean;\\n  /** Toggle row active state on keyboard navigation <p>**Default:** `false`</p>*/\\n  activateRowOnKeyboardNavigation?: boolean;\\n  deactivateRowOnLostFocus?: boolean;\\n  footer?: {\\n    headers?: {\\n      [key: FooterCalculation | string]: string | boolean;\\n    };\\n    columns?: {\\n      [Property in keyof R]: Partial<TableFooterColumn<R>>;\\n    };\\n    rowOrder?: Array<keyof R | FooterCalculation>;\\n    emptyContent?: string;\\n  };\\n}\\n\\ninterface TableFooterColumn<R> {\\n  [key: FooterCalculation | string]: boolean | number | string | CalcFunc<R>;\\n}\\ninterface CalcFunc<R> {\\n  (data: Array<R>, key: keyof R): number | string;\\n}\\ntype FooterCalculation = \'sum\' | \'avg\' | \'count\' | \'max\' | \'min\';\\n","properties":[{"name":"activateRowOnHover","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"<p>Toggle row active state on mouse enter/leave (hover) <p><strong>Default:</strong> <code>false</code></p></p>\\n","line":27,"rawdescription":"\\nToggle row active state on mouse enter/leave (hover) <p>**Default:** `false`</p>"},{"name":"activateRowOnKeyboardNavigation","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"<p>Toggle row active state on keyboard navigation <p><strong>Default:</strong> <code>false</code></p></p>\\n","line":29,"rawdescription":"\\nToggle row active state on keyboard navigation <p>**Default:** `false`</p>"},{"name":"class","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>Add one or more CSS classes to the table element e.g. <code>table table-striped table-bordered</code>. <p><strong>Default:</strong> <code>table</code></p></p>\\n","line":15,"rawdescription":"\\nAdd one or more CSS classes to the table element e.g. `table table-striped table-bordered`. <p>**Default:** `table`</p>"},{"name":"columns","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":19},{"name":"deactivateRowOnLostFocus","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":30},{"name":"disableTableSort","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"<p>Disable sorting of table data, useful when sorting is handled externally e.g. server-side pagination. Table will still use sortOrder to visually show how the data is sorted. <p><strong>Default:</strong> <code>false</code></p></p>\\n","line":6,"rawdescription":"\\nDisable sorting of table data, useful when sorting is handled externally e.g. server-side pagination. Table will still use sortOrder to visually show how the data is sorted. <p>**Default:** `false`</p>"},{"name":"footer","deprecated":false,"deprecationMessage":"","type":"literal type","optional":true,"description":"","line":31},{"name":"mobileLayout","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"<p>Allows for a more mobile friendly layout by displaying columns as rows instead. This is accomplished with css by adding <code>table-mobile</code> class to table element and adding column headers as data labels to each row. <p><strong>Default:</strong> <code>false</code></p></p>\\n","line":8,"rawdescription":"\\nAllows for a more mobile friendly layout by displaying columns as rows instead. This is accomplished with css by adding `table-mobile` class to table element and adding column headers as data labels to each row. <p>**Default:** `false`</p>"},{"name":"pagination","deprecated":false,"deprecationMessage":"","type":"literal type","optional":true,"description":"","line":22},{"name":"rowClick","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":25},{"name":"rows","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":16},{"name":"stickyHeaders","deprecated":false,"deprecationMessage":"","type":"literal type","optional":true,"description":"<p>Make row and/or column headers sticky by adding <code>gt-sticky-row-header</code> and <code>gt-sticky-column-header</code> to table to alter table behaviour using css. Please note that in order for headers to be sticky, table can&#39;t be placed inside element with overflow set to auto. <p><strong>Default:</strong> <code>{row:false, column:false}</code></p></p>\\n","line":10,"rawdescription":"\\nMake row and/or column headers sticky by adding `gt-sticky-row-header` and `gt-sticky-column-header` to table to alter table behaviour using css. Please note that in order for headers to be sticky, table can\'t be placed inside element with overflow set to auto. <p>**Default:** `{row:false, column:false}`</p>"}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"TableFooterColumn","id":"interface-TableFooterColumn-a056644fdde68f4dadffd51d84324a6a3f2f5c5703bb1e4cd6e4c9d7f843a429f1dc80a81e8f220d59a2976a9e0ac93b92fb890d2aacf2769262f336f6f3feaa","file":"projects/core/src/lib/models/table-config.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { TableColumn } from \'./table-column.interface\';\\nimport { TableRow } from \'./table-row.interface\';\\n\\nexport interface TableConfig<R = TableRow> {\\n  /** Disable sorting of table data, useful when sorting is handled externally e.g. server-side pagination. Table will still use sortOrder to visually show how the data is sorted. <p>**Default:** `false`</p> */\\n  disableTableSort?: boolean;\\n  /** Allows for a more mobile friendly layout by displaying columns as rows instead. This is accomplished with css by adding `table-mobile` class to table element and adding column headers as data labels to each row. <p>**Default:** `false`</p>*/\\n  mobileLayout?: boolean;\\n  /** Make row and/or column headers sticky by adding `gt-sticky-row-header` and `gt-sticky-column-header` to table to alter table behaviour using css. Please note that in order for headers to be sticky, table can\'t be placed inside element with overflow set to auto. <p>**Default:** `{row:false, column:false}`</p>*/\\n  stickyHeaders?: {\\n    row?: boolean;\\n    column?: boolean;\\n  };\\n  /** Add one or more CSS classes to the table element e.g. `table table-striped table-bordered`. <p>**Default:** `table`</p>*/\\n  class?: string;\\n  rows?: {\\n    [Property in keyof R]: TableColumn<R>;\\n  };\\n  columns?: {\\n    [Property in keyof R]: TableColumn<R>;\\n  };\\n  pagination?: {\\n    length?: number;\\n  };\\n  rowClick?: boolean;\\n  /** Toggle row active state on mouse enter/leave (hover) <p>**Default:** `false`</p>*/\\n  activateRowOnHover?: boolean;\\n  /** Toggle row active state on keyboard navigation <p>**Default:** `false`</p>*/\\n  activateRowOnKeyboardNavigation?: boolean;\\n  deactivateRowOnLostFocus?: boolean;\\n  footer?: {\\n    headers?: {\\n      [key: FooterCalculation | string]: string | boolean;\\n    };\\n    columns?: {\\n      [Property in keyof R]: Partial<TableFooterColumn<R>>;\\n    };\\n    rowOrder?: Array<keyof R | FooterCalculation>;\\n    emptyContent?: string;\\n  };\\n}\\n\\ninterface TableFooterColumn<R> {\\n  [key: FooterCalculation | string]: boolean | number | string | CalcFunc<R>;\\n}\\ninterface CalcFunc<R> {\\n  (data: Array<R>, key: keyof R): number | string;\\n}\\ntype FooterCalculation = \'sum\' | \'avg\' | \'count\' | \'max\' | \'min\';\\n","properties":[],"indexSignatures":[{"id":"index-declaration-a056644fdde68f4dadffd51d84324a6a3f2f5c5703bb1e4cd6e4c9d7f843a429f1dc80a81e8f220d59a2976a9e0ac93b92fb890d2aacf2769262f336f6f3feaa","args":[{"name":"key","type":"FooterCalculation | string","deprecated":false,"deprecationMessage":""}],"returnType":"boolean | number | string | CalcFunc","line":43,"deprecated":false,"deprecationMessage":""}],"kind":175,"methods":[]},{"name":"TableInfo","id":"interface-TableInfo-f30509a3174982288af341e6c44bc9babd4acb7eec9e2785f830176b8084b20b22b8b19f02c028608d05a8dd887d2e4fa60ad129181dc3cab9f387813246af98","file":"projects/core/src/lib/models/table-info.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface TableInfo {\\n  numberOfRecords: number;\\n  pageSize: number;\\n  pageTotal: number;\\n  lazyLoaded?: boolean;\\n}\\n","properties":[{"name":"lazyLoaded","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":5},{"name":"numberOfRecords","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":2},{"name":"pageSize","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":3},{"name":"pageTotal","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":4}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"TableMeta","id":"interface-TableMeta-4eb01c0282b0d791a921b064593674d0a5cd30a4bde5800964a3d874c1b57b29d65b965af3dcc9d628c5f33e25672e33cbfbf8d7d5a59794a3de8db4b7b5c650","file":"projects/core/src/lib/models/table-meta.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { TableRow } from \'./table-row.interface\';\\nimport { TableConfig } from \'./table-config.interface\';\\nimport { TableInfo } from \'./table-info.interface\';\\n\\nexport interface TableMeta<R = TableRow> {\\n  data: Array<Array<R>>;\\n  config: TableConfig<R>;\\n  info: TableInfo;\\n}\\n","properties":[{"name":"config","deprecated":false,"deprecationMessage":"","type":"TableConfig<R>","optional":false,"description":"","line":7},{"name":"data","deprecated":false,"deprecationMessage":"","type":"Array<Array<R>>","optional":false,"description":"","line":6},{"name":"info","deprecated":false,"deprecationMessage":"","type":"TableInfo","optional":false,"description":"","line":8}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"TableRow","id":"interface-TableRow-07d21ec216ac57aa3afd8511561789b13f17014fba23877c3fda056b25bda6bde814bdcd393d3473308be3b792d18b564e884730fc400a69e39f2ff6da42d0ff","file":"projects/core/src/lib/models/table-row.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface TableRow {\\n  [key: string]: number | string | boolean | any;\\n}\\n","properties":[],"indexSignatures":[{"id":"index-declaration-07d21ec216ac57aa3afd8511561789b13f17014fba23877c3fda056b25bda6bde814bdcd393d3473308be3b792d18b564e884730fc400a69e39f2ff6da42d0ff","args":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"number | string | boolean | any","line":1,"deprecated":false,"deprecationMessage":""}],"kind":175,"methods":[]},{"name":"YearData","id":"interface-YearData-0a5c0cb27d235dfe9659a36988e8f66a453ff89ad5e286c1c983f66beb2ec0e2a4b9694bf4c3ff2f652e68001624f00f6630abc1e58f843290dac6f691044c0c","file":"projects/docs/src/app/examples/transpose/transpose.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { BehaviorSubject, Observable } from \'rxjs\';\\nimport { TableConfig, GtDeltaComponent } from \'@angular-generic-table/core\';\\nimport { UntypedFormBuilder } from \'@angular/forms\';\\nimport { withLatestFrom } from \'rxjs/operators\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { TRANSPOSE_SNIPPETS } from \'./transpose.snippets\';\\ninterface RawData {\\n  year: string;\\n  value: number;\\n}\\ninterface YearData extends RawData {\\n  delta: number;\\n  deltaIndex: number;\\n  combined: number;\\n  deltaAbsolute: number;\\n}\\n@Component({\\n  selector: \'docs-transpose\',\\n  template: `\\n    <form [formGroup]=\\"reactiveForm\\">\\n      <div class=\\"row gy-3 gx-3 align-items-end mb-3\\">\\n        <div class=\\"form-group col-6 col-sm-auto\\">\\n          <label for=\\"length_input\\">Number of rows</label>\\n          <input\\n            id=\\"length_input\\"\\n            formControlName=\\"length\\"\\n            type=\\"number\\"\\n            class=\\"form-control\\"\\n          />\\n        </div>\\n        <div class=\\"form-group col-6 col-sm-auto\\">\\n          <label for=\\"search_input\\">Search</label>\\n          <input\\n            id=\\"search_input\\"\\n            formControlName=\\"search\\"\\n            type=\\"text\\"\\n            class=\\"form-control\\"\\n          />\\n        </div>\\n        <div class=\\"col-auto\\">\\n          <button\\n            class=\\"btn btn-outline-primary w-100\\"\\n            (click)=\\"simulateLoad()\\"\\n          >\\n            Simulate load\\n          </button>\\n        </div>\\n        <div class=\\"col col-sm-auto\\">\\n          <button class=\\"btn btn-outline-danger w-100\\" (click)=\\"empty()\\">\\n            Empty\\n          </button>\\n        </div>\\n        <div class=\\"col col-sm-auto\\">\\n          <button class=\\"btn btn-outline-primary w-100\\" (click)=\\"load()\\">\\n            Reset\\n          </button>\\n        </div>\\n        <div class=\\"col col-sm-auto\\">\\n          <button class=\\"btn btn-outline-primary w-100\\" (click)=\\"transpose()\\">\\n            Transpose\\n          </button>\\n        </div>\\n      </div>\\n      <div class=\\"overflow-auto\\">\\n        <angular-generic-table\\n          #table\\n          [data]=\\"data\\"\\n          [config]=\\"tableConfig$\\"\\n          [loading]=\\"loading$\\"\\n          [search]=\\"search$\\"\\n        >\\n          <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n          <div class=\\"table-no-data alert alert-info mt-3\\">Table is empty</div>\\n        </angular-generic-table>\\n      </div>\\n      <angular-generic-table-pagination [table]=\\"table\\">\\n      </angular-generic-table-pagination>\\n      <ng-template #delta let-index=\\"index\\" let-data=\\"data\\">\\n        <gt-delta [index]=\\"index\\" [data]=\\"data\\"></gt-delta>\\n      </ng-template>\\n      <ng-template #deltaAbsolute let-index=\\"index\\" let-data=\\"data\\">\\n        <gt-delta\\n          [index]=\\"index\\"\\n          [data]=\\"data\\"\\n          [deltaTemplate]=\\"deltaTemplate\\"\\n        ></gt-delta>\\n      </ng-template>\\n      <ng-template #deltaIndex let-index=\\"index\\" let-data=\\"data\\">\\n        <gt-delta [index]=\\"index\\" [data]=\\"data\\" [baseIndex]=\\"0\\"></gt-delta>\\n      </ng-template>\\n      <ng-template\\n        #combined\\n        let-index=\\"index\\"\\n        let-data=\\"data\\"\\n        let-row=\\"row\\"\\n        let-col=\\"col\\"\\n      >\\n        {{ row.value }}\\n        <ng-container *ngIf=\\"index > 0\\">\\n          <gt-delta [index]=\\"index\\" [data]=\\"data\\"></gt-delta>\\n        </ng-container>\\n      </ng-template>\\n      <ng-template #deltaTemplate let-delta=\\"delta\\">\\n        <span>{{ delta.absolute }}</span></ng-template\\n      >\\n      <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n    </form>\\n  `,\\n  styles: [],\\n})\\nexport class TransposeComponent implements OnInit {\\n  @ViewChild(\'delta\', { static: true }) delta:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  @ViewChild(\'deltaAbsolute\', { static: true }) deltaAbsolute:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  @ViewChild(\'deltaIndex\', { static: true }) deltaIndex:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  @ViewChild(\'combined\', { static: true }) combined:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  loading$ = new BehaviorSubject(false);\\n  reactiveForm = this.fb.group({\\n    length: [10],\\n    search: [\'\'],\\n  });\\n  search$ = this.reactiveForm.get(\'search\')?.valueChanges as Observable<string>;\\n  tableConfig$: BehaviorSubject<TableConfig<YearData>> = new BehaviorSubject<\\n    TableConfig<YearData>\\n  >({});\\n  data: Array<RawData> = [];\\n\\n  constructor(private fb: UntypedFormBuilder) {}\\n\\n  ngOnInit(): void {\\n    this.transpose();\\n    this.load();\\n    this.reactiveForm\\n      .get(\'length\')\\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\\n      .subscribe(([length, config]) => {\\n        length = +length;\\n        this.tableConfig$.next({\\n          ...config,\\n          pagination: { ...config.pagination, length },\\n        });\\n      });\\n  }\\n\\n  simulateLoad(): void {\\n    this.loading$.next(true);\\n    // set loading state to false after 2 seconds\\n    setTimeout(() => this.loading$.next(false), 2000);\\n  }\\n  empty(): void {\\n    this.data = [];\\n  }\\n  load(): void {\\n    this.data = [\\n      {\\n        year: \'2010\',\\n        value: 15,\\n      },\\n      {\\n        year: \'2011\',\\n        value: 30,\\n      },\\n      {\\n        year: \'2012\',\\n        value: 25,\\n      },\\n      {\\n        year: \'2013\',\\n        value: 0,\\n      },\\n      {\\n        year: \'2014\',\\n        value: 40,\\n      },\\n      {\\n        year: \'2015\',\\n        value: 0,\\n      },\\n      {\\n        year: \'2016\',\\n        value: -5,\\n      },\\n      {\\n        year: \'2018\',\\n        value: 75,\\n      },\\n      {\\n        year: \'2019\',\\n        value: 100,\\n      },\\n      {\\n        year: \'2020\',\\n        value: 250,\\n      },\\n      {\\n        year: \'2021\',\\n        value: 50,\\n      },\\n      {\\n        year: \'2022\',\\n        value: 60,\\n      },\\n    ];\\n  }\\n  transpose(): void {\\n    if (this.tableConfig$.value.columns) {\\n      this.tableConfig$.next({\\n        stickyHeaders: {\\n          row: true,\\n          column: true,\\n        },\\n        rows: {\\n          year: {\\n            sortable: true,\\n            header: false,\\n            class: \'text-end\',\\n          },\\n          value: {\\n            class: \'text-end\',\\n          },\\n          delta: {\\n            header: \'Delta %\',\\n            templateRef: this.delta,\\n            class: \'text-end\',\\n          },\\n          deltaIndex: {\\n            header: \'Since inception %\',\\n            templateRef: this.deltaIndex,\\n            class: \'text-end\',\\n          },\\n          deltaAbsolute: {\\n            header: \'Delta\',\\n            templateRef: this.deltaAbsolute,\\n            class: \'text-end\',\\n          },\\n          combined: {\\n            header: \'Value with change\',\\n            templateRef: this.combined,\\n            class: \'text-end text-nowrap\',\\n          },\\n        },\\n      });\\n    } else {\\n      this.tableConfig$.next({\\n        stickyHeaders: {\\n          row: true,\\n          column: true,\\n        },\\n        columns: {\\n          year: {\\n            sortable: true,\\n          },\\n          value: {\\n            class: \'text-end\',\\n          },\\n          delta: {\\n            header: \'Delta %\',\\n            templateRef: this.delta,\\n            class: \'text-end\',\\n          },\\n          deltaIndex: {\\n            header: \'Since inception %\',\\n            templateRef: this.deltaIndex,\\n            class: \'text-end\',\\n          },\\n          deltaAbsolute: {\\n            header: \'Delta\',\\n            templateRef: this.deltaAbsolute,\\n            class: \'text-end\',\\n          },\\n          combined: {\\n            header: \'Value with change\',\\n            templateRef: this.combined,\\n            class: \'text-end text-nowrap\',\\n          },\\n        },\\n        pagination: { length: this.reactiveForm.get(\'length\')?.value },\\n      });\\n    }\\n  }\\n  SNIPPETS = TRANSPOSE_SNIPPETS;\\n}\\n\\nexport const Transpose: Story<TransposeComponent> = (\\n  args: TransposeComponent\\n) => ({\\n  props: args,\\n  component: TransposeComponent,\\n});\\n","properties":[{"name":"combined","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":15},{"name":"delta","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":13},{"name":"deltaAbsolute","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":16},{"name":"deltaIndex","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":14}],"indexSignatures":[],"kind":165,"methods":[],"extends":"RawData"}],"injectables":[{"name":"CoreService","id":"injectable-CoreService-aa6c97a9fa8aaeb04ef59acbab00bca3734e79841c357f3bf212f24c045414c295ec1cd3b16188e237ce977a4ffec26961195586d7de5f10277a1cb0f8bf2896","file":"projects/core/src/lib/core.service.ts","properties":[],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\n\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class CoreService {\\n  constructor() {}\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":6},"type":"injectable"}],"guards":[],"interceptors":[],"classes":[],"directives":[],"components":[{"name":"AdvancedComponent","id":"component-AdvancedComponent-aa3269c27116d9775410b813026ef7f46afe20737bff31b59f1148e8e8ef63f474a692e0e2ad763ef3955321c6793e379b240d9c293e2ab2242fb840c4421dd8","file":"projects/docs/src/app/examples/advanced/advanced.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"docs-advanced","styleUrls":[],"styles":[],"templateUrl":["./advanced.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"_currentPage$","defaultValue":"new BehaviorSubject(0)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":53,"modifierKind":[121]},{"name":"actions","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any> | undefined","optional":false,"description":"","line":27,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'actions\', {static: true}"}]},{"name":"clicked","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":55},{"name":"color","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any> | undefined","optional":false,"description":"","line":28,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'color\', {static: true}"}]},{"name":"colors","defaultValue":"[\'#33d60b\', \'#dcafff\', \'#3fc9ff\', \'#ff1600\', \'#5238b1\', \'#fff\']","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":76},{"name":"data$","defaultValue":"new BehaviorSubject([\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteColor: \'#26BFAF\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteColor: \'#0f0\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ])","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<any>","optional":false,"description":"","line":36},{"name":"femaleFirstNames","defaultValue":"[\'Mary Jane\', \'Kim\', \'Sarah\', \'Michelle\', \'Ann\']","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":57},{"name":"foods","defaultValue":"[\\n    \'Pizza\',\\n    \'Pasta\',\\n    \'Hamburger\',\\n    \'Pancakes\',\\n    \'Tacos\',\\n    \'Lasagna\',\\n    \'Meatloaf\',\\n  ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":67},{"name":"lastNames","defaultValue":"[\\n    \'Andersson\',\\n    \'Smith\',\\n    \'Parker\',\\n    \'Kent\',\\n    \'Rogers\',\\n    \'Lane\',\\n    \'Jackson\',\\n  ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":58},{"name":"loading$","defaultValue":"new BehaviorSubject(true)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":35},{"name":"maleFirstNames","defaultValue":"[\'Peter\', \'Clark\', \'Ruben\', \'John\', \'Jack\', \'Roscoe\']","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":56},{"name":"next","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":126},{"name":"paginationForm","defaultValue":"this.fb.group({\\n    length: [10],\\n    search: [\'\'],\\n  })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":29},{"name":"prev","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":129},{"name":"search$","defaultValue":"this.paginationForm.get(\'search\')\\n    ?.valueChanges as Observable<string>","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":33},{"name":"SNIPPETS","defaultValue":"ADVANCED_DOCS","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":79},{"name":"tableConfig$","defaultValue":"new ReplaySubject(1)","deprecated":false,"deprecationMessage":"","type":"ReplaySubject<TableConfig>","optional":false,"description":"","line":78}],"methodsClass":[{"name":"addData","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":81,"deprecated":false,"deprecationMessage":""},{"name":"clickAction","args":[{"name":"row","type":"TableRow","deprecated":false,"deprecationMessage":""},{"name":"column","type":"literal type","deprecated":false,"deprecationMessage":""},{"name":"index","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":95,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"row","type":"TableRow","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"column","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":133,"deprecated":false,"deprecationMessage":""},{"name":"randomRecord","args":[],"optional":false,"returnType":"TableRow","typeParameters":[],"line":104,"deprecated":false,"deprecationMessage":""},{"name":"removeData","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":85,"deprecated":false,"deprecationMessage":""},{"name":"simulateLoad","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":89,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { BehaviorSubject, Observable, ReplaySubject } from \'rxjs\';\\nimport { UntypedFormBuilder } from \'@angular/forms\';\\nimport {\\n  TableConfig,\\n  TableRow,\\n  TableColumn,\\n} from \'@angular-generic-table/core\';\\nimport { withLatestFrom } from \'rxjs/operators\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { ADVANCED_DOCS } from \'./advanced.snippets\';\\n\\n@Component({\\n  selector: \'docs-advanced\',\\n  templateUrl: \'./advanced.component.html\',\\n  styles: [],\\n})\\nexport class AdvancedComponent implements OnInit {\\n  get currentPage$(): Observable<number> {\\n    return this._currentPage$.asObservable();\\n  }\\n\\n  set currentPage(value: number) {\\n    this._currentPage$.next(value);\\n  }\\n  constructor(private fb: UntypedFormBuilder) {}\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  @ViewChild(\'color\', { static: true }) color: TemplateRef<any> | undefined;\\n  paginationForm = this.fb.group({\\n    length: [10],\\n    search: [\'\'],\\n  });\\n  search$ = this.paginationForm.get(\'search\')\\n    ?.valueChanges as Observable<string>;\\n  loading$ = new BehaviorSubject(true);\\n  data$: BehaviorSubject<any> = new BehaviorSubject([\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteColor: \'#26BFAF\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteColor: \'#0f0\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ]);\\n\\n  private _currentPage$ = new BehaviorSubject(0);\\n\\n  clicked: string = \'\';\\n  maleFirstNames = [\'Peter\', \'Clark\', \'Ruben\', \'John\', \'Jack\', \'Roscoe\'];\\n  femaleFirstNames = [\'Mary Jane\', \'Kim\', \'Sarah\', \'Michelle\', \'Ann\'];\\n  lastNames = [\\n    \'Andersson\',\\n    \'Smith\',\\n    \'Parker\',\\n    \'Kent\',\\n    \'Rogers\',\\n    \'Lane\',\\n    \'Jackson\',\\n  ];\\n  foods = [\\n    \'Pizza\',\\n    \'Pasta\',\\n    \'Hamburger\',\\n    \'Pancakes\',\\n    \'Tacos\',\\n    \'Lasagna\',\\n    \'Meatloaf\',\\n  ];\\n  colors = [\'#33d60b\', \'#dcafff\', \'#3fc9ff\', \'#ff1600\', \'#5238b1\', \'#fff\'];\\n\\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\\n  SNIPPETS = ADVANCED_DOCS;\\n\\n  addData(): void {\\n    this.data$.next([...this.data$.getValue(), this.randomRecord()]);\\n  }\\n\\n  removeData(): void {\\n    this.data$.next([]);\\n  }\\n\\n  simulateLoad(): void {\\n    this.loading$.next(true);\\n    // set loading state to false after 2 seconds\\n    setTimeout(() => this.loading$.next(false), 2000);\\n  }\\n\\n  clickAction(\\n    row: TableRow,\\n    column: { key: string; value: TableColumn },\\n    index: number\\n  ): void {\\n    console.log(\'clicked row:\', row, \'col:\', column);\\n    this.clicked = `clicked row number: ${index}`;\\n  }\\n\\n  randomRecord(): TableRow {\\n    const random = Math.floor(Math.random() * 2);\\n    const newRecord = {\\n      firstName: random\\n        ? this.maleFirstNames[\\n            Math.floor(Math.random() * this.maleFirstNames.length)\\n          ]\\n        : this.femaleFirstNames[\\n            Math.floor(Math.random() * this.femaleFirstNames.length)\\n          ],\\n      lastName:\\n        this.lastNames[Math.floor(Math.random() * this.lastNames.length)],\\n      gender: random ? \'male\' : \'female\',\\n      favoriteColor:\\n        this.colors[Math.floor(Math.random() * this.colors.length)],\\n      favoriteFood: this.foods[Math.floor(Math.random() * this.foods.length)],\\n    };\\n    console.log(\'added new random record:\', newRecord);\\n\\n    return newRecord;\\n  }\\n\\n  next = () => {\\n    this.currentPage = this._currentPage$.value + 1;\\n  };\\n  prev = () => {\\n    this.currentPage = this._currentPage$.value - 1;\\n  };\\n\\n  ngOnInit(): void {\\n    this.simulateLoad();\\n    this.paginationForm\\n      .get(\'length\')\\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\\n      .subscribe(([length, config]) => {\\n        length = +length;\\n        this.tableConfig$.next({\\n          ...config,\\n          pagination: { ...config.pagination, length },\\n        });\\n      });\\n    this.tableConfig$.next({\\n      class: \'table text-nowrap mb-0\',\\n      mobileLayout: true,\\n      columns: {\\n        firstName: {\\n          header: \'First name\',\\n          mobileHeader: true,\\n          sortable: true,\\n          order: 0,\\n        },\\n        lastName: {\\n          header: \'Last name\',\\n          mobileHeader: true,\\n          hidden: false,\\n          sortable: true,\\n        },\\n        gender: {\\n          mobileHeader: \'Sex\',\\n          sortable: true,\\n          order: 1,\\n        },\\n        favoriteColor: {\\n          header: \'Favorite color\',\\n          mobileHeader: true,\\n          templateRef: this.color,\\n          sortable: false,\\n          order: 2,\\n          search: false,\\n          class: \'custom-class\',\\n        },\\n        favoriteFood: {\\n          mobileHeader: true,\\n          header: \'Favorite food\',\\n          hidden: false,\\n          sortable: true,\\n          order: 0,\\n        },\\n        action: {\\n          mobileHeader: false,\\n          header: false,\\n          templateRef: this.actions,\\n          order: 6,\\n          class: \'py-1 text-end\',\\n        },\\n      },\\n      pagination: {\\n        length: this.paginationForm.get(\'length\')?.value || 0,\\n      },\\n      footer: {\\n        columns: {\\n          gender: {\\n            count: (data, key) => {\\n              let men = 0;\\n              let women = 0;\\n              for (let i = 0; i < data.length; i++) {\\n                if (data[i][key] === \'female\') {\\n                  women++;\\n                } else if (data[i][key] === \'male\') {\\n                  men++;\\n                }\\n              }\\n              return `♂ ${men} ♀ ${women}`;\\n            },\\n          },\\n          favoriteColor: {},\\n          action: { count: (data, key) => `Total: ${data.length}` },\\n        },\\n      },\\n    });\\n  }\\n}\\n\\nexport const Advanced: Story<AdvancedComponent> = (\\n  args: AdvancedComponent\\n) => ({\\n  props: args,\\n  component: AdvancedComponent,\\n});\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"fb","type":"UntypedFormBuilder","deprecated":false,"deprecationMessage":""}],"line":25,"jsdoctags":[{"name":"fb","type":"UntypedFormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"accessors":{"currentPage$":{"name":"currentPage$","getSignature":{"name":"currentPage$","type":"","returnType":"Observable<number>","line":19}},"currentPage":{"name":"currentPage","setSignature":{"name":"currentPage","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":23,"jsdoctags":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}},"templateData":"<div class=\\"row mb-3 gy-3 gx-2\\">\\n  <div class=\\"col-12 col-sm-auto\\">\\n    <button class=\\"btn btn-primary w-100\\" (click)=\\"addData()\\">\\n      Add random data\\n    </button>\\n  </div>\\n  <div class=\\"col-12 col-sm-auto\\">\\n    <button class=\\"btn btn-danger w-100\\" (click)=\\"removeData()\\">\\n      Remove data\\n    </button>\\n  </div>\\n  <div class=\\"col-12 col-sm-auto\\">\\n    <button class=\\"btn btn-secondary w-100\\" (click)=\\"simulateLoad()\\">\\n      Load\\n    </button>\\n  </div>\\n</div>\\n<form [formGroup]=\\"paginationForm\\">\\n  <div class=\\"row gy-3\\">\\n    <div class=\\"form-group col-6 col-sm-auto\\">\\n      <label for=\\"length_input\\">Length</label>\\n      <input\\n        id=\\"length_input\\"\\n        formControlName=\\"length\\"\\n        type=\\"number\\"\\n        class=\\"form-control\\"\\n      />\\n    </div>\\n    <div class=\\"form-group col-6 col-sm-auto\\">\\n      <label for=\\"search_input\\">Search</label>\\n      <input\\n        id=\\"search_input\\"\\n        formControlName=\\"search\\"\\n        type=\\"text\\"\\n        class=\\"form-control\\"\\n      />\\n    </div>\\n  </div>\\n</form>\\n<div class=\\"overflow-scroll mt-3 pb-3\\">\\n  <angular-generic-table\\n    [data]=\\"data$\\"\\n    [config]=\\"tableConfig$\\"\\n    [paginationIndex]=\\"(currentPage$ | async)!\\"\\n    [search]=\\"search$\\"\\n    [loading]=\\"loading$\\"\\n    #table\\n  >\\n    <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n    <div class=\\"table-no-data alert alert-info mt-3\\">Table is empty</div>\\n  </angular-generic-table>\\n</div>\\n<div\\n  class=\\"row justify-content-center align-items-center gy-3\\"\\n  *ngIf=\\"{\\n    current: (currentPage$ | async) || 0,\\n    total: (table.table$ | async)?.info?.pageTotal || 1\\n  } as pagination\\"\\n>\\n  <div class=\\"col-6 col-sm-auto\\">\\n    <button\\n      class=\\"btn btn-primary w-100\\"\\n      (click)=\\"prev()\\"\\n      [disabled]=\\"pagination.current === 0\\"\\n    >\\n      Prev\\n    </button>\\n  </div>\\n  <div class=\\"col-6 col-sm-auto\\">\\n    <button\\n      class=\\"btn btn-primary w-100\\"\\n      (click)=\\"next()\\"\\n      [disabled]=\\"pagination.total - 1 === pagination.current\\"\\n    >\\n      Next\\n    </button>\\n  </div>\\n  <div class=\\"col-auto\\">Current page: {{ pagination.current + 1 }}</div>\\n  <div class=\\"col-auto\\">Total pages: {{ pagination.total }}</div>\\n  <div class=\\"col-auto\\">Records: {{ (data$ | async).length }}</div>\\n  <div class=\\"col-auto\\">\\n    {{ clicked }}\\n  </div>\\n</div>\\n<ng-template #actions let-row=\\"row\\" let-col=\\"col\\" let-index=\\"index\\">\\n  <button\\n    *ngIf=\\"index !== undefined\\"\\n    class=\\"btn btn-outline-primary btn-sm\\"\\n    (click)=\\"clickAction(row, col, index)\\"\\n  >\\n    Click me!\\n  </button>\\n</ng-template>\\n<ng-template #color let-row=\\"row\\" let-col=\\"col\\">\\n  <div\\n    [style.background]=\\"row[col.key]\\"\\n    style=\\"width: 1.5rem; height: 1.5rem; border-radius: 50%\\"\\n  ></div>\\n</ng-template>\\n<docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n"},{"name":"AppComponent","id":"component-AppComponent-10170bf38e7dc2a28616cbfea1fc809395e11fb867221ff3cc76f91c523536e289f58bad5c2d985eea4d0e94f9cfc9c26585652e9dabc71c53493779779285bb","file":"projects/docs/src/app/app.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-root","styleUrls":["./app.component.scss"],"styles":[],"templateUrl":["./app.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"_currentPage$","defaultValue":"new BehaviorSubject(0)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":48,"modifierKind":[121]},{"name":"actions","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any> | undefined","optional":false,"description":"","line":23,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'actions\', {static: true}"}]},{"name":"clicked","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":50},{"name":"color","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any> | undefined","optional":false,"description":"","line":24,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'color\', {static: true}"}]},{"name":"colors","defaultValue":"[\'#33d60b\', \'#dcafff\', \'#3fc9ff\', \'#ff1600\', \'#5238b1\', \'#fff\']","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":55},{"name":"data$","defaultValue":"new BehaviorSubject([\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteColor: \'#26BFAF\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteColor: \'#0f0\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ])","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<any>","optional":false,"description":"","line":31},{"name":"femaleFirstNames","defaultValue":"[\'Mary Jane\', \'Kim\', \'Sarah\', \'Michelle\', \'Ann\']","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":52},{"name":"foods","defaultValue":"[\'Pizza\', \'Pasta\', \'Hamburger\', \'Pancakes\', \'Tacos\', \'Lasagna\', \'Meatloaf\']","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":54},{"name":"lastNames","defaultValue":"[\'Andersson\', \'Smith\', \'Parker\', \'Kent\', \'Rogers\', \'Lane\', \'Jackson\']","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":53},{"name":"loading$","defaultValue":"new BehaviorSubject(true)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":30},{"name":"maleFirstNames","defaultValue":"[\'Peter\', \'Clark\', \'Ruben\', \'John\', \'Jack\', \'Roscoe\']","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":51},{"name":"next","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":94},{"name":"paginationForm","defaultValue":"this.fb.group({\\n    length: [10],\\n    search: [\'\'],\\n  })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":25},{"name":"prev","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":97},{"name":"search$","defaultValue":"this.paginationForm.get(\'search\')!.valueChanges","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":29},{"name":"tableConfig$","defaultValue":"new ReplaySubject(1)","deprecated":false,"deprecationMessage":"","type":"ReplaySubject<TableConfig>","optional":false,"description":"","line":57}],"methodsClass":[{"name":"addData","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":""},{"name":"clickAction","args":[{"name":"row","type":"TableRow","deprecated":false,"deprecationMessage":""},{"name":"column","type":"literal type","deprecated":false,"deprecationMessage":""},{"name":"index","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"row","type":"TableRow","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"column","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":101,"deprecated":false,"deprecationMessage":""},{"name":"randomRecord","args":[],"optional":false,"returnType":"TableRow","typeParameters":[],"line":78,"deprecated":false,"deprecationMessage":""},{"name":"removeData","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":""},{"name":"simulateLoad","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":67,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { BehaviorSubject, Observable, ReplaySubject } from \'rxjs\';\\nimport { UntypedFormBuilder } from \'@angular/forms\';\\nimport { TableConfig, TableRow, TableColumn } from \'@angular-generic-table/core\';\\nimport { withLatestFrom } from \'rxjs/operators\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\n\\n@Component({\\n  selector: \'app-root\',\\n  templateUrl: \'./app.component.html\',\\n  styleUrls: [\'./app.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class AppComponent implements OnInit {\\n  get currentPage$(): Observable<number> {\\n    return this._currentPage$.asObservable();\\n  }\\n\\n  set currentPage(value: number) {\\n    this._currentPage$.next(value);\\n  }\\n  constructor(private fb: UntypedFormBuilder) {}\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  @ViewChild(\'color\', { static: true }) color: TemplateRef<any> | undefined;\\n  paginationForm = this.fb.group({\\n    length: [10],\\n    search: [\'\'],\\n  });\\n  search$ = this.paginationForm.get(\'search\')!.valueChanges;\\n  loading$ = new BehaviorSubject(true);\\n  data$: BehaviorSubject<any> = new BehaviorSubject([\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteColor: \'#26BFAF\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteColor: \'#0f0\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ]);\\n\\n  private _currentPage$ = new BehaviorSubject(0);\\n\\n  clicked: string = \'\';\\n  maleFirstNames = [\'Peter\', \'Clark\', \'Ruben\', \'John\', \'Jack\', \'Roscoe\'];\\n  femaleFirstNames = [\'Mary Jane\', \'Kim\', \'Sarah\', \'Michelle\', \'Ann\'];\\n  lastNames = [\'Andersson\', \'Smith\', \'Parker\', \'Kent\', \'Rogers\', \'Lane\', \'Jackson\'];\\n  foods = [\'Pizza\', \'Pasta\', \'Hamburger\', \'Pancakes\', \'Tacos\', \'Lasagna\', \'Meatloaf\'];\\n  colors = [\'#33d60b\', \'#dcafff\', \'#3fc9ff\', \'#ff1600\', \'#5238b1\', \'#fff\'];\\n\\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\\n\\n  addData(): void {\\n    this.data$.next([...this.data$.getValue(), this.randomRecord()]);\\n  }\\n\\n  removeData(): void {\\n    this.data$.next([]);\\n  }\\n\\n  simulateLoad(): void {\\n    this.loading$.next(true);\\n    // set loading state to false after 2 seconds\\n    setTimeout(() => this.loading$.next(false), 2000);\\n  }\\n\\n  clickAction(row: TableRow, column: { key: string; value: TableColumn }, index: number): void {\\n    console.log(\'clicked row:\', row, \'col:\', column);\\n    this.clicked = `clicked row number: ${index}`;\\n  }\\n\\n  randomRecord(): TableRow {\\n    const random = Math.floor(Math.random() * 2);\\n    const newRecord = {\\n      firstName: random\\n        ? this.maleFirstNames[Math.floor(Math.random() * this.maleFirstNames.length)]\\n        : this.femaleFirstNames[Math.floor(Math.random() * this.femaleFirstNames.length)],\\n      lastName: this.lastNames[Math.floor(Math.random() * this.lastNames.length)],\\n      gender: random ? \'male\' : \'female\',\\n      favoriteColor: this.colors[Math.floor(Math.random() * this.colors.length)],\\n      favoriteFood: this.foods[Math.floor(Math.random() * this.foods.length)],\\n    };\\n    console.log(\'added new random record:\', newRecord);\\n\\n    return newRecord;\\n  }\\n\\n  next = () => {\\n    this.currentPage = this._currentPage$.value + 1;\\n  };\\n  prev = () => {\\n    this.currentPage = this._currentPage$.value - 1;\\n  };\\n\\n  ngOnInit(): void {\\n    this.simulateLoad();\\n    this.paginationForm\\n      .get(\'length\')\\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\\n      .subscribe(([length, config]) => {\\n        length = +length;\\n        this.tableConfig$.next({\\n          ...config,\\n          pagination: { ...config.pagination, length },\\n        });\\n      });\\n    this.tableConfig$.next({\\n      class: \'table table-mobile text-nowrap mb-0\',\\n      columns: {\\n        firstName: {\\n          header: \'First name\',\\n          mobileHeader: true,\\n          sortable: true,\\n          order: 0,\\n        },\\n        lastName: {\\n          header: \'Last name\',\\n          mobileHeader: true,\\n          hidden: false,\\n          sortable: true,\\n        },\\n        gender: {\\n          header: \'Gender\',\\n          mobileHeader: \'Sex\',\\n          sortable: true,\\n          order: 1,\\n        },\\n        favoriteColor: {\\n          header: \'Favorite color\',\\n          mobileHeader: true,\\n          templateRef: this.color,\\n          sortable: false,\\n          order: 2,\\n          search: false,\\n          class: \'custom-class\',\\n        },\\n        favoriteFood: {\\n          mobileHeader: true,\\n          header: \'Favorite food\',\\n          hidden: false,\\n          sortable: true,\\n          order: 0,\\n        },\\n        action: {\\n          mobileHeader: false,\\n          header: \'Action\',\\n          templateRef: this.actions,\\n          order: 6,\\n        },\\n      },\\n      pagination: {\\n        length: this.paginationForm.get(\'length\')?.value || 0,\\n      },\\n    });\\n  }\\n}\\n\\nexport const Advanced: Story<AppComponent> = (args: AppComponent) => ({\\n  props: args,\\n  component: AppComponent,\\n});\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./app.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"fb","type":"UntypedFormBuilder","deprecated":false,"deprecationMessage":""}],"line":21,"jsdoctags":[{"name":"fb","type":"UntypedFormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"accessors":{"currentPage$":{"name":"currentPage$","getSignature":{"name":"currentPage$","type":"","returnType":"Observable<number>","line":15}},"currentPage":{"name":"currentPage","setSignature":{"name":"currentPage","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":19,"jsdoctags":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}},"templateData":"\x3c!--<div class=\\"card mt-3\\">\\n  <h4 class=\\"card-header\\">Table</h4>\\n  <div class=\\"card-body\\">\\n    <div class=\\"row mb-3\\">\\n      <div class=\\"col col-sm-auto\\">\\n        <button class=\\"btn btn-primary w-100\\" (click)=\\"addData()\\">Add random data</button>\\n      </div>\\n      <div class=\\"col col-sm-auto\\">\\n        <button class=\\"btn btn-danger w-100\\" (click)=\\"removeData()\\">Remove data</button>\\n      </div>\\n      <div class=\\"col col-sm-auto\\">\\n        <button class=\\"btn btn-secondary w-100\\" (click)=\\"simulateLoad()\\">Load</button>\\n      </div>\\n    </div>\\n    <form [formGroup]=\\"paginationForm\\">\\n      <div class=\\"row\\">\\n        <div class=\\"form-group col-12 col-sm-auto\\">\\n          <label for=\\"length_input\\">Length</label>\\n          <input id=\\"length_input\\" formControlName=\\"length\\" type=\\"number\\" class=\\"form-control\\">\\n        </div>\\n        <div class=\\"form-group col-12 col-sm-auto\\">\\n          <label for=\\"search_input\\">Search</label>\\n          <input id=\\"search_input\\" formControlName=\\"search\\" type=\\"text\\" class=\\"form-control\\">\\n        </div>\\n      </div>\\n    </form>\\n    <div class=\\"mx-n3 mx-sm-0\\">\\n    <angular-generic-table [data]=\\"data$\\" [config]=\\"tableConfig$\\" [page]=\\"currentPage$\\" [search]=\\"search$\\" [loading]=\\"loading$\\">\\n      <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n      <div class=\\"table-no-data alert alert-info mt-3\\">\\n        Table is empty\\n      </div>\\n    </angular-generic-table>\\n    </div>\\n    <div class=\\"row justify-content-between justify-content-sm-center align-items-center mt-3\\">\\n      <div class=\\"col-auto\\">\\n        <button class=\\"btn btn-primary\\" (click)=\\"prev()\\">Prev</button>\\n      </div>\\n      <div class=\\"col-auto\\">\\n        <button class=\\"btn btn-primary\\" (click)=\\"next()\\">Next</button>\\n      </div>\\n      <div class=\\"col-auto\\">Current page: {{currentPage$ | async}}</div>\\n      <div class=\\"col-auto\\">\\n        Records: {{(data$ | async).length}}\\n      </div>\\n      <div class=\\"col-auto\\">\\n        {{clicked}}\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<ng-template #actions let-row=\\"row\\" let-col=\\"col\\" let-index=\\"index\\">\\n  <button class=\\"btn btn-outline-primary btn-sm my-sm-n3\\" (click)=\\"clickAction(row, col, index)\\">Click me!</button>\\n</ng-template>\\n<ng-template #color let-row=\\"row\\" let-col=\\"col\\">\\n  <div [style.background]=\\"row[col.key]\\" style=\\"width: 1.5rem; height: 1.5rem; border-radius: 50%\\"></div>\\n</ng-template>\\n--\x3e\\n<div class=\\"card mt-3 mx-sm-3\\">\\n  <h4 class=\\"card-header\\">Example</h4>\\n  <div class=\\"card-body\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n"},{"name":"CoreComponent","id":"component-CoreComponent-ae0721ef4f64a638e0cf4b002ee58bc419f1d6c7f6c7b2b9750edc056a4fc9ba85dd7ddd6b167bb60b1ca3c7708b02ba80e35ad6f1c7e8399752e25f875a7f93","file":"projects/core/src/lib/core.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"angular-generic-table","styleUrls":[],"styles":[],"templateUrl":["./core.component.html"],"viewProviders":[],"inputsClass":[{"name":"config","deprecated":false,"deprecationMessage":"","line":231,"type":"Observable | TableConfig","decorators":[]},{"name":"customClasses","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":3864,"end":3956,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":3865,"end":3876,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"description"},"comment":"<p>An object that contains custom classes for various elements in the table.</p>\\n"},{"pos":3956,"end":4071,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":341,"tagName":{"pos":3957,"end":3961,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":151,"escapedText":"type"},"comment":"<ul>\\n<li>{ selectedRow: string, activeRow: string } - default classes are &#39;gt-selected&#39; and &#39;gt-active&#39;</li>\\n</ul>\\n","typeExpression":{"pos":3962,"end":3970,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":307,"type":{"pos":3963,"end":3969,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":147}}}],"rawdescription":"\\ncustomClasses\\n","description":"<p>customClasses</p>\\n","line":161,"type":"Partial<>","decorators":[]},{"name":"data","deprecated":false,"deprecationMessage":"","line":238,"type":"Observable | Array | null","decorators":[]},{"name":"generateRowId","defaultValue":"true","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":5421,"end":5525,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":5422,"end":5433,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"description"},"comment":"<p>Whether or not to generate a unique id for each row in the table. Defaults to <code>true</code>.</p>\\n"},{"pos":5525,"end":5544,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":341,"tagName":{"pos":5526,"end":5530,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":151,"escapedText":"type"},"comment":"","typeExpression":{"pos":5531,"end":5540,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":307,"type":{"pos":5532,"end":5539,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":133}}}],"rawdescription":"\\ngenerateRowId\\n","description":"<p>generateRowId</p>\\n","line":205,"type":"boolean","decorators":[]},{"name":"isRowSelectedFn","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":4433,"end":4500,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":4434,"end":4445,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"description"},"comment":"<p>Function to determine if row is selected or not.</p>\\n"},{"pos":4500,"end":4664,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":341,"tagName":{"pos":4501,"end":4505,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":151,"escapedText":"type"},"comment":"<p>A function that receives a row object and optional state for current selection that can be used to determine if row should be marked as selected or not.</p>\\n","typeExpression":{"pos":4506,"end":4510,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":307,"type":{"pos":4507,"end":4509,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":177,"typeName":{"pos":4507,"end":4509,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"}}}}],"rawdescription":"\\nisRowSelectedFn","description":"<p>isRowSelectedFn</p>\\n","line":177,"type":"boolean","decorators":[]},{"name":"loading","deprecated":false,"deprecationMessage":"","line":133,"type":"Observable | boolean","decorators":[]},{"name":"navigationKeys","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":2223,"end":2402,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":2224,"end":2235,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"description"},"comment":"<p>An array of keyboard keys that will trigger navigation and active row, currently only supports arrow keys, home and end (omit key name from array to disable it)</p>\\n"},{"pos":2402,"end":2424,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":341,"tagName":{"pos":2403,"end":2407,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":151,"escapedText":"type"},"comment":"","typeExpression":{"pos":2408,"end":2418,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":307,"type":{"pos":2409,"end":2417,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":182,"elementType":{"pos":2409,"end":2415,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":149}}}},{"pos":2424,"end":2503,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":2425,"end":2432,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>[&#39;ArrowDown&#39;, &#39;ArrowUp&#39;, &#39;ArrowLeft&#39;, &#39;ArrowRight&#39;, &#39;Home&#39;, &#39;End&#39;]</p>\\n"}],"rawdescription":"\\nnavigationKeys\\n","description":"<p>navigationKeys</p>\\n","line":103,"type":"","decorators":[]},{"name":"paginationIndex","deprecated":false,"deprecationMessage":"","line":137,"type":"number","decorators":[]},{"name":"pagingInfo","deprecated":false,"deprecationMessage":"","line":145,"type":"GtPaginationInfo | null","decorators":[]},{"name":"rowIdKey","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":5164,"end":5333,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":5165,"end":5176,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"description"},"comment":"<p>row key to use as unique id for table row. If passed, table won&#39;t generate unique ids for each row but instead use key to retrieve unique id from row.</p>\\n"},{"pos":5333,"end":5351,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":341,"tagName":{"pos":5334,"end":5338,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":151,"escapedText":"type"},"comment":"","typeExpression":{"pos":5339,"end":5347,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":307,"type":{"pos":5340,"end":5346,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":149}}}],"rawdescription":"\\nrowIdKey\\n","description":"<p>rowIdKey</p>\\n","line":199,"type":"string | undefined","decorators":[]},{"name":"search","deprecated":false,"deprecationMessage":"","line":226,"type":"Observable | string | null","decorators":[]},{"name":"selection","defaultValue":"{}","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":4925,"end":5093,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":4926,"end":4937,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"description"},"comment":"<p>An object that contains the currently selected row(s) in the table. It&#39;s passed to the selection function to determine which rows should be selected.</p>\\n"},{"pos":5093,"end":5108,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":341,"tagName":{"pos":5094,"end":5098,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":151,"escapedText":"type"},"comment":"","typeExpression":{"pos":5099,"end":5104,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":307,"type":{"pos":5100,"end":5103,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":130}}}],"rawdescription":"\\nselection\\n","description":"<p>selection</p>\\n","line":193,"type":"any","decorators":[]},{"name":"selectKeys","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":2825,"end":2942,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":2826,"end":2837,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"description"},"comment":"<p>An array of keyboard keys that will trigger row selection (omit key name from array to disable it)</p>\\n"},{"pos":2942,"end":2964,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":341,"tagName":{"pos":2943,"end":2947,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":151,"escapedText":"type"},"comment":"","typeExpression":{"pos":2948,"end":2958,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":307,"type":{"pos":2949,"end":2957,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":182,"elementType":{"pos":2949,"end":2955,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":149}}}},{"pos":2964,"end":2991,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":2965,"end":2972,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>[&#39;Enter&#39;, &#39; &#39;]</p>\\n"}],"rawdescription":"\\nselectKeys\\n","description":"<p>selectKeys</p>\\n","line":124,"type":"string[]","decorators":[]},{"name":"sortOrder","deprecated":false,"deprecationMessage":"","line":244,"type":"GtSortOrder | any","decorators":[]},{"name":"trackRowByFn","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":5614,"end":5755,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":5615,"end":5626,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"description"},"comment":"<p>A function that returns a unique identifier for each row in the table to optimize rendering when data is added or removed.</p>\\n"},{"pos":5755,"end":5874,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":341,"tagName":{"pos":5756,"end":5760,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":151,"escapedText":"type"},"comment":"<ul>\\n<li>TrackByFunction to retrieve unique id based on index and/or row. Defaults to using <code>row[this.rowIdKey]</code>.</li>\\n</ul>\\n","typeExpression":{"pos":5761,"end":5763,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":307,"type":{"pos":5761,"end":5763,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":177,"typeName":{"pos":5761,"end":5763,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"}}}}],"rawdescription":"\\ntrackRowByFn\\n","description":"<p>trackRowByFn</p>\\n","line":211,"type":"TrackByFunction<TableRow>","decorators":[]}],"outputsClass":[{"name":"columnSort","defaultValue":"new EventEmitter<GtSortEvent>()","deprecated":false,"deprecationMessage":"","line":265,"type":"EventEmitter"},{"name":"pageChange","defaultValue":"new EventEmitter<GtPageChangeEvent>()","deprecated":false,"deprecationMessage":"","rawdescription":"\\npage change event - emitted when current page/index changes for pagination","description":"<p>page change event - emitted when current page/index changes for pagination</p>\\n","line":267,"type":"EventEmitter"},{"name":"rowActive","defaultValue":"new EventEmitter<GtRowActiveEvent>()","deprecated":false,"deprecationMessage":"","line":264,"type":"EventEmitter"},{"name":"rowClick","defaultValue":"new EventEmitter<GtRowClickEvent>()","deprecated":false,"deprecationMessage":"","line":251,"type":"EventEmitter"},{"name":"rowSelect","defaultValue":"new EventEmitter<GtRowSelectEvent>()","deprecated":false,"deprecationMessage":"","line":252,"type":"EventEmitter"},{"name":"sortOrderChange","defaultValue":"new EventEmitter<GtSortOrder<TableRow>>()","deprecated":false,"deprecationMessage":"","line":253,"type":"EventEmitter"}],"propertiesClass":[{"name":"_currentPaginationIndex$","defaultValue":"new BehaviorSubject(0)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<number>","optional":false,"description":"","line":493,"modifierKind":[121]},{"name":"_customClasses","defaultValue":"{\\n    selectedRow: \'gt-selected\',\\n    activeRow: \'gt-active\',\\n  }","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":169,"modifierKind":[121]},{"name":"_data$","defaultValue":"new ReplaySubject(1)","deprecated":false,"deprecationMessage":"","type":"ReplaySubject<Array | Observable>","optional":false,"description":"","line":358,"modifierKind":[121]},{"name":"_isRowSelectedFn","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":187,"modifierKind":[121]},{"name":"_keyboardArrowEvent$","defaultValue":"fromEvent<KeyboardEvent>(\\n    document,\\n    \'keydown\'\\n  ).pipe(\\n    filter(\\n      (event) =>\\n        [...this._navigationKeys, ...this._selectKeys].indexOf(event.key) > -1\\n    )\\n  )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":637,"modifierKind":[121]},{"name":"_loading$","defaultValue":"new ReplaySubject(1)","deprecated":false,"deprecationMessage":"","type":"ReplaySubject<Observable | boolean>","optional":false,"description":"","line":323,"modifierKind":[121]},{"name":"_navigationKeys","defaultValue":"[\\n    \'ArrowDown\',\\n    \'ArrowUp\',\\n    \'ArrowLeft\',\\n    \'ArrowRight\',\\n    \'Home\',\\n    \'End\',\\n  ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":107,"modifierKind":[121]},{"name":"_pagingInfo$","defaultValue":"new BehaviorSubject<GtPaginationInfo>({\\n    pageCurrent: null,\\n    pageNext: null,\\n    pagePrevious: null,\\n    pageSize: null,\\n    numberOfRecords: null,\\n    //recordsAfterFilter: null,\\n    //recordsAfterSearch: null,\\n    //recordsAll: null,\\n  })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":336,"modifierKind":[121]},{"name":"_rowActive$","defaultValue":"new ReplaySubject<GtRowActiveEvent>(1)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":263,"modifierKind":[121]},{"name":"_searchBy$","defaultValue":"new ReplaySubject(1)","deprecated":false,"deprecationMessage":"","type":"ReplaySubject<Observable | string | null>","optional":false,"description":"","line":327,"modifierKind":[121]},{"name":"_selectKeys","defaultValue":"[\'Enter\', \' \']","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":128,"modifierKind":[121]},{"name":"_sortOrder$","defaultValue":"new BehaviorSubject<GtSortOrder>([])","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<GtSortOrder>","optional":false,"description":"","line":325,"modifierKind":[121]},{"name":"_tableConfig","deprecated":false,"deprecationMessage":"","type":"TableConfig<any> | undefined","optional":false,"description":"","line":235,"modifierKind":[121]},{"name":"_tableConfig$","defaultValue":"new BehaviorSubject({})","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<TableConfig | Observable>","optional":false,"description":"","line":348,"modifierKind":[121]},{"name":"_tableInfo$","defaultValue":"new BehaviorSubject<TableInfo | undefined>(undefined)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":491,"modifierKind":[121]},{"name":"_unsubscribeFromKeyboardEvents$","defaultValue":"new Subject()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":636,"modifierKind":[121]},{"name":"activeRowIndex","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"number | null","optional":false,"description":"","line":283},{"name":"calculations$","defaultValue":"combineLatest([this.data$, this.tableConfig$]).pipe(\\n    map(([data, config]) => calculate(data, config)),\\n    shareReplay(1)\\n  )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":421},{"name":"colspan$","defaultValue":"this.tableConfig$.pipe(\\n    switchMap((config) =>\\n      config.columns\\n        ? of(\\n            Object.values(config.columns || config.rows || {}).filter(\\n              (value) => value.hidden !== true\\n            ).length\\n          )\\n        : this.data$.pipe(map((data) => data.length + 1))\\n    ),\\n    shareReplay(1)\\n  )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":515},{"name":"columnOrder","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":615},{"name":"currentPaginationIndex$","defaultValue":"combineLatest([\\n    this._currentPaginationIndex$,\\n    this.table$,\\n  ]).pipe(\\n    map(([page, table]: any) => {\\n      // determine last page\\n      const lastPage =\\n        Math.ceil(\\n          table.info.records /\\n            (table.info.recordLength ??\\n              (table.config?.pagination?.length || table.info.records))\\n        ) - 1;\\n      // determine min/max position\\n      return +page < 0 ? 0 : +page > lastPage ? lastPage : +page;\\n    }),\\n    distinctUntilChanged(),\\n    tap((index) => this.pageChange.emit({ index })),\\n    shareReplay(1)\\n  )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":495},{"name":"data$","defaultValue":"this._data$.pipe(\\n    map((value) => (isObservable(value) ? value : of(value))),\\n    switchMap((obs) => combineLatest([obs])),\\n    withLatestFrom(this.tableConfig$),\\n    map(([[data], config]) => {\\n      // if columns or rows contains config for mapTo...\\n      if (\\n        (config.columns &&\\n          !!Object.values(config.columns).find((column) => !!column.mapTo)) ||\\n        (config.rows &&\\n          !!Object.values(config.rows).find((column) => !!column.mapTo))\\n      ) {\\n        // ...map data to new keys on row...\\n        const newData: TableRow[] = [];\\n        for (let i = 0; i < data.length; i++) {\\n          const row = data[i];\\n          const newKeys = Object.entries(config.columns || config.rows || [])\\n            .filter(([key, value]) => !!value.mapTo) // add keys for columns with mapTo config...\\n            .reduce(\\n              (previousValue, [key, value]) => ({\\n                ...previousValue,\\n                [key]: this.nestedValue(\\n                  row,\\n                  value.mapTo!.path,\\n                  value.mapTo?.missingValue\\n                ),\\n              }),\\n              {}\\n            );\\n          newData[i] = { ...row, ...newKeys };\\n        }\\n        data = newData;\\n      }\\n      if (this.generateRowId && !this.rowIdKey && data.length > 0) {\\n        const dataWithId = [];\\n        for (let i = 0; i < data.length; i++) {\\n          dataWithId[i] = { ...data[i], _id: i };\\n        }\\n        data = dataWithId;\\n      }\\n      return { data, config };\\n    }),\\n    switchMap((obs) =>\\n      combineLatest([of(obs), this.sortOrder$, this.searchBy$])\\n    ),\\n    map(([table, sortBy, searchBy]) => {\\n      // create a new array reference and sort new array (prevent mutating existing state)\\n      table.data = [...table.data];\\n      return !sortBy?.length || table.config?.disableTableSort\\n        ? searchBy && !this.tableInfo?.lazyLoaded\\n          ? search(searchBy, false, table.data, table.config)\\n          : table.data\\n        : searchBy && !this.tableInfo?.lazyLoaded\\n        ? search(searchBy, false, table.data, table.config)?.sort(\\n            sortOnMultipleKeys(sortBy)\\n          )\\n        : table.data?.sort(sortOnMultipleKeys(sortBy));\\n    }),\\n    shareReplay(1)\\n  )","deprecated":false,"deprecationMessage":"","type":"Observable<Array<TableRow>>","optional":false,"description":"","line":360},{"name":"footerColspan$","defaultValue":"this.tableConfig$.pipe(\\n    map((config) => {\\n      let colspan = 0;\\n      Object.values(config?.footer?.columns || {}).forEach((calculations) => {\\n        if (\\n          Object.values(calculations).filter((value) => value !== false)\\n            .length >= 0\\n        ) {\\n          colspan += 1;\\n        }\\n      }, {});\\n      return colspan;\\n    }),\\n    shareReplay(1)\\n  )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":528},{"name":"rowActive$","defaultValue":"this._rowActive$.asObservable().pipe(\\n    distinctUntilChanged((p, q) => {\\n      if (this.rowIdKey && p.row && q.row) {\\n        return p.row[this.rowIdKey] === q.row[this.rowIdKey];\\n      } else if (this.generateRowId && p.row && q.row) {\\n        return p.row._id === q.row._id;\\n      } else {\\n        return p.index === q.index;\\n      }\\n    }),\\n    tap((event) => (this.activeRowIndex = event.index)),\\n    tap((event) => this.rowActive.emit(event)),\\n    shareReplay(1)\\n  )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":268},{"name":"searchBy$","defaultValue":"this._searchBy$.pipe(\\n    startWith(\'\'),\\n    map((value) => (isObservable(value) ? value : of(value))),\\n    switchMap((obs) => obs),\\n    shareReplay(1)\\n  )","deprecated":false,"deprecationMessage":"","type":"Observable<string | null>","optional":false,"description":"","line":329},{"name":"table$","defaultValue":"combineLatest([\\n    this.data$,\\n    this.tableConfig$,\\n    this._pagingInfo$,\\n  ]).pipe(\\n    map(([sorted, config, pagingInfo]) => {\\n      if (\\n        pagingInfo.pageCurrent !== null &&\\n        pagingInfo.numberOfRecords !== null &&\\n        pagingInfo.pageSize !== null\\n      ) {\\n        return {\\n          data: [sorted],\\n          config,\\n          info: <TableInfo>{\\n            lazyLoaded: true,\\n            numberOfRecords: pagingInfo.numberOfRecords,\\n            pageSize: pagingInfo.pageSize,\\n            pageTotal:\\n              pagingInfo.pageTotal ??\\n              Math.ceil(pagingInfo.numberOfRecords / pagingInfo.pageSize),\\n          },\\n        };\\n      }\\n      // if pagination is disabled...\\n      if (!config.pagination || config.pagination.length === 0) {\\n        // ...return unaltered array\\n        return {\\n          data: [sorted],\\n          config,\\n          info: <TableInfo>{ numberOfRecords: sorted.length, pageTotal: 1 },\\n        };\\n      }\\n      // return record set\\n      return {\\n        data: chunk(sorted, +(config.pagination.length || 0)),\\n        config,\\n        info: <TableInfo>{\\n          numberOfRecords: sorted.length,\\n          pageSize: +(config.pagination.length || 0),\\n          pageTotal: Math.ceil(\\n            sorted.length / +(config.pagination.length || 0)\\n          ),\\n        },\\n      };\\n    }),\\n    tap((meta) => this._tableInfo$.next(meta.info)),\\n    shareReplay(1)\\n  )","deprecated":false,"deprecationMessage":"","type":"Observable<TableMeta>","optional":false,"description":"","line":426},{"name":"tableConfig$","defaultValue":"this._tableConfig$.pipe(\\n    map((value) => (isObservable(value) ? value : of(value))),\\n    switchMap((obs) => obs),\\n    tap((config) => (this._tableConfig = config)),\\n    shareReplay(1)\\n  )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":351},{"name":"unsubscribe$","defaultValue":"new Subject()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":93}],"methodsClass":[{"name":"_activateRow","args":[{"name":"row","type":"TableRow | null","deprecated":false,"deprecationMessage":""},{"name":"index","type":"number | null","deprecated":false,"deprecationMessage":""},{"name":"event","type":"MouseEvent | KeyboardEvent","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":306,"deprecated":false,"deprecationMessage":"","modifierKind":[122],"jsdoctags":[{"name":"row","type":"TableRow | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"index","type":"number | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"event","type":"MouseEvent | KeyboardEvent","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"_handleNavigationEvent","args":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":""},{"name":"rows","type":"any[]","deprecated":false,"deprecationMessage":""},{"name":"currentPage","type":"number","deprecated":false,"deprecationMessage":""},{"name":"tableInfo","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":692,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"rows","type":"any[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"currentPage","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"tableInfo","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"_rowActive","args":[{"name":"row","type":"TableRow","deprecated":false,"deprecationMessage":""},{"name":"index","type":"number","deprecated":false,"deprecationMessage":""},{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":259,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"row","type":"TableRow","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"_rowClick","args":[{"name":"row","type":"TableRow","deprecated":false,"deprecationMessage":""},{"name":"index","type":"number","deprecated":false,"deprecationMessage":""},{"name":"event","type":"MouseEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":255,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"row","type":"TableRow","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"event","type":"MouseEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"_trackRowByFn","args":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":""},{"name":"row","type":"TableRow","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"TrackByFunction<TableRow>","typeParameters":[],"line":218,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"row","type":"TableRow","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"activateRow","args":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":""},{"name":"event","type":"MouseEvent | KeyboardEvent","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":284,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"event","type":"MouseEvent | KeyboardEvent","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"activateRow","args":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":""},{"name":"event","type":"MouseEvent | KeyboardEvent","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":285,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"event","type":"MouseEvent | KeyboardEvent","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"activateRow","args":[{"name":"none","type":"","deprecated":false,"deprecationMessage":""},{"name":"event","type":"MouseEvent | KeyboardEvent","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":286,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"none","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"event","type":"MouseEvent | KeyboardEvent","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"activateRow","args":[{"name":"arg","type":"string | number | null","deprecated":false,"deprecationMessage":""},{"name":"event","type":"MouseEvent | KeyboardEvent","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":287,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"arg","type":"string | number | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"event","type":"MouseEvent | KeyboardEvent","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"listenToKeyboardEvents","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":647,"deprecated":false,"deprecationMessage":"","modifierKind":[122]},{"name":"nestedValue","args":[{"name":"object","type":"any","deprecated":false,"deprecationMessage":""},{"name":"mapTo","type":"string","deprecated":false,"deprecationMessage":""},{"name":"missingValue","type":"string | number | null","deprecated":false,"deprecationMessage":"","defaultValue":"null"}],"optional":false,"returnType":"","typeParameters":[],"line":622,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"object","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mapTo","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"missingValue","type":"string | number | null","deprecated":false,"deprecationMessage":"","defaultValue":"null","tagName":{"text":"param"}}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":783,"deprecated":false,"deprecationMessage":""},{"name":"sortByKey","args":[{"name":"key","type":"","deprecated":false,"deprecationMessage":""},{"name":"$event","type":"MouseEvent","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":548,"deprecated":false,"deprecationMessage":"","rawdescription":"\\nsortByKey - Sort by key in table row\\n","description":"<p>sortByKey - Sort by key in table row</p>\\n","jsdoctags":[{"name":{"pos":16440,"end":16443,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"key"},"type":"","deprecated":false,"deprecationMessage":"","tagName":{"pos":16434,"end":16439,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>key to sort by</li>\\n</ul>\\n"},{"name":{"pos":16489,"end":16495,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"$event"},"type":"MouseEvent","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":16467,"end":16472,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>Mouse event triggering sort, if shift key is pressed sort key will be added to already present sort keys</li>\\n</ul>\\n","typeExpression":{"pos":16473,"end":16487,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":307,"type":{"pos":16474,"end":16485,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":177,"typeName":{"pos":16474,"end":16485,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"MouseEvent"}}}}]},{"name":"unsubscribeFromKeyboardEvents","args":[{"name":"tableRef","type":"HTMLTableElement","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":678,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"tableRef","type":"HTMLTableElement","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  ChangeDetectionStrategy,\\n  Component,\\n  EventEmitter,\\n  Input,\\n  OnDestroy,\\n  Output,\\n  TrackByFunction,\\n} from \'@angular/core\';\\nimport {\\n  BehaviorSubject,\\n  combineLatest,\\n  fromEvent,\\n  isObservable,\\n  Observable,\\n  of,\\n  ReplaySubject,\\n  Subject,\\n} from \'rxjs\';\\nimport { TableConfig } from \'./models/table-config.interface\';\\nimport {\\n  AsyncPipe,\\n  KeyValue,\\n  KeyValuePipe,\\n  NgClass,\\n  NgForOf,\\n  NgIf,\\n  NgTemplateOutlet,\\n  SlicePipe,\\n} from \'@angular/common\';\\nimport {\\n  debounceTime,\\n  distinctUntilChanged,\\n  filter,\\n  map,\\n  pluck,\\n  shareReplay,\\n  startWith,\\n  switchMap,\\n  take,\\n  takeUntil,\\n  tap,\\n  withLatestFrom,\\n} from \'rxjs/operators\';\\nimport { TableColumn } from \'./models/table-column.interface\';\\nimport {\\n  calculate,\\n  chunk,\\n  search,\\n  sortOnMultipleKeys,\\n} from \'./utilities/utilities\';\\nimport { TableRow } from \'./models/table-row.interface\';\\nimport { GtOrder, GtSortOrder } from \'./models/table-sort.interface\';\\nimport { TableMeta } from \'./models/table-meta.interface\';\\nimport {\\n  GtPageChangeEvent,\\n  GtRowSelectEvent,\\n  GtRowClickEvent,\\n  GtRowActiveEvent,\\n  GtSortEvent,\\n} from \'./models/table-events.interface\';\\nimport { CapitalCasePipe } from \'./pipes/capital-case.pipe\';\\nimport { SortClassPipe } from \'./pipes/sort-class.pipe\';\\nimport { DashCasePipe } from \'./pipes/dash-case.pipe\';\\nimport { DynamicPipe } from \'./pipes/dynamic.pipe\';\\nimport { HighlightPipe } from \'./pipes/highlight.pipe\';\\nimport { RowSelectionPipe } from \'./pipes/row-selection.pipe\';\\nimport { GtPaginationInfo } from \'./models/gt-pagination\';\\nimport { TableInfo } from \'./models/table-info.interface\';\\n\\n@Component({\\n  selector: \'angular-generic-table\',\\n  templateUrl: \'./core.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  standalone: true,\\n  imports: [\\n    CapitalCasePipe,\\n    KeyValuePipe,\\n    SortClassPipe,\\n    DashCasePipe,\\n    RowSelectionPipe,\\n    AsyncPipe,\\n    NgTemplateOutlet,\\n    SlicePipe,\\n    DynamicPipe,\\n    HighlightPipe,\\n    NgClass,\\n    NgIf,\\n    NgForOf,\\n  ],\\n})\\nexport class CoreComponent implements OnDestroy {\\n  unsubscribe$ = new Subject();\\n  get navigationKeys(): typeof this._navigationKeys {\\n    return this._navigationKeys;\\n  }\\n\\n  /** navigationKeys\\n   * @description An array of keyboard keys that will trigger navigation and active row, currently only supports arrow keys, home and end (omit key name from array to disable it)\\n   * @type {string[]}\\n   * @default [\'ArrowDown\', \'ArrowUp\', \'ArrowLeft\', \'ArrowRight\', \'Home\', \'End\']\\n   */\\n  @Input() set navigationKeys(value: typeof this._navigationKeys) {\\n    this._navigationKeys = value;\\n  }\\n\\n  private _navigationKeys = [\\n    \'ArrowDown\',\\n    \'ArrowUp\',\\n    \'ArrowLeft\',\\n    \'ArrowRight\',\\n    \'Home\',\\n    \'End\',\\n  ];\\n  get selectKeys(): string[] {\\n    return this._selectKeys;\\n  }\\n\\n  /** selectKeys\\n   * @description An array of keyboard keys that will trigger row selection (omit key name from array to disable it)\\n   * @type {string[]}\\n   * @default [\'Enter\', \' \']\\n   */\\n  @Input() set selectKeys(value: string[]) {\\n    this._selectKeys = value;\\n  }\\n\\n  private _selectKeys = [\'Enter\', \' \'];\\n  get sortOrder$(): Observable<GtSortOrder> {\\n    return this._sortOrder$.asObservable();\\n  }\\n\\n  @Input() set loading(isLoading: Observable<boolean> | boolean) {\\n    this._loading$.next(isLoading);\\n  }\\n  @Input()\\n  set paginationIndex(pageIndex: number) {\\n    this._currentPaginationIndex$.next(pageIndex);\\n  }\\n\\n  get paginationIndex(): number {\\n    return this._currentPaginationIndex$.getValue();\\n  }\\n\\n  @Input() set pagingInfo(value: GtPaginationInfo | null) {\\n    if (value) {\\n      this._pagingInfo$.next(value);\\n      if (\\n        value.pageCurrent !== this._currentPaginationIndex$.getValue() + 1 &&\\n        value.pageCurrent !== null\\n      ) {\\n        this.paginationIndex = value.pageCurrent - 1;\\n      }\\n    }\\n  }\\n\\n  /** customClasses\\n   * @description An object that contains custom classes for various elements in the table.\\n   * @type {object} - { selectedRow: string, activeRow: string } - default classes are \'gt-selected\' and \'gt-active\'\\n   */\\n  @Input() set customClasses(classes: Partial<typeof this._customClasses>) {\\n    this._customClasses = { ...this._customClasses, ...classes };\\n  }\\n\\n  get customClasses(): typeof this._customClasses {\\n    return this._customClasses;\\n  }\\n\\n  private _customClasses = {\\n    selectedRow: \'gt-selected\',\\n    activeRow: \'gt-active\',\\n  };\\n\\n  /** isRowSelectedFn\\n   * @description Function to determine if row is selected or not.\\n   * @type {fn} A function that receives a row object and optional state for current selection that can be used to determine if row should be marked as selected or not. */\\n  @Input() set isRowSelectedFn(\\n    fn: (row: TableRow | any, selection?: any) => boolean\\n  ) {\\n    this._isRowSelectedFn = fn;\\n  }\\n\\n  get isRowSelectedFn(): any {\\n    return this._isRowSelectedFn;\\n  }\\n\\n  private _isRowSelectedFn: any;\\n\\n  /** selection\\n   * @description An object that contains the currently selected row(s) in the table. It\'s passed to the selection function to determine which rows should be selected.\\n   * @type {any}\\n   */\\n  @Input() selection: any = {};\\n\\n  /** rowIdKey\\n   * @description row key to use as unique id for table row. If passed, table won\'t generate unique ids for each row but instead use key to retrieve unique id from row.\\n   * @type {string}\\n   */\\n  @Input() rowIdKey: string | undefined;\\n\\n  /** generateRowId\\n   * @description Whether or not to generate a unique id for each row in the table. Defaults to `true`.\\n   * @type {boolean}\\n   */\\n  @Input() generateRowId: boolean = true;\\n\\n  /** trackRowByFn\\n   * @description A function that returns a unique identifier for each row in the table to optimize rendering when data is added or removed.\\n   * @type fn - TrackByFunction to retrieve unique id based on index and/or row. Defaults to using `row[this.rowIdKey]`.\\n   */\\n  @Input() set trackRowByFn(fn: TrackByFunction<TableRow>) {\\n    this._trackRowByFn = fn;\\n  }\\n  get trackRowByFn(): TrackByFunction<TableRow> {\\n    return this._trackRowByFn;\\n  }\\n\\n  private _trackRowByFn(\\n    index: number,\\n    row: TableRow\\n  ): TrackByFunction<TableRow> {\\n    return this.rowIdKey ? row[this.rowIdKey] : row?._id;\\n  }\\n\\n  @Input()\\n  set search(string: Observable<string | null> | string | null) {\\n    this._searchBy$.next(string);\\n  }\\n\\n  @Input()\\n  set config(config: Observable<TableConfig<any>> | TableConfig<any>) {\\n    this._tableConfig$.next(config);\\n  }\\n\\n  private _tableConfig: TableConfig<any> | undefined;\\n\\n  @Input()\\n  set data(data: Observable<Array<TableRow>> | Array<TableRow> | null) {\\n    if (data) {\\n      this._data$.next(data);\\n    }\\n  }\\n\\n  @Input() set sortOrder(sortConfig: GtSortOrder<TableRow> | any) {\\n    if (JSON.stringify(sortConfig) !== JSON.stringify(this._sortOrder$.value)) {\\n      this.sortOrderChange.emit(sortConfig);\\n      this._sortOrder$.next(sortConfig);\\n    }\\n  }\\n\\n  @Output() rowClick = new EventEmitter<GtRowClickEvent>();\\n  @Output() rowSelect = new EventEmitter<GtRowSelectEvent>();\\n  @Output() sortOrderChange = new EventEmitter<GtSortOrder<TableRow>>();\\n\\n  _rowClick(row: TableRow, index: number, event: MouseEvent): void {\\n    this.rowClick.emit({ row, index, event });\\n  }\\n\\n  _rowActive(row: TableRow, index: number, event: KeyboardEvent): void {\\n    this.rowSelect.emit({ row, index, event });\\n  }\\n\\n  private _rowActive$ = new ReplaySubject<GtRowActiveEvent>(1);\\n  @Output() rowActive = new EventEmitter<GtRowActiveEvent>();\\n  @Output() columnSort = new EventEmitter<GtSortEvent>();\\n  /** page change event - emitted when current page/index changes for pagination */\\n  @Output() pageChange = new EventEmitter<GtPageChangeEvent>();\\n  rowActive$ = this._rowActive$.asObservable().pipe(\\n    distinctUntilChanged((p, q) => {\\n      if (this.rowIdKey && p.row && q.row) {\\n        return p.row[this.rowIdKey] === q.row[this.rowIdKey];\\n      } else if (this.generateRowId && p.row && q.row) {\\n        return p.row._id === q.row._id;\\n      } else {\\n        return p.index === q.index;\\n      }\\n    }),\\n    tap((event) => (this.activeRowIndex = event.index)),\\n    tap((event) => this.rowActive.emit(event)),\\n    shareReplay(1)\\n  );\\n\\n  activeRowIndex: number | null = null;\\n  activateRow(id: string, event?: MouseEvent | KeyboardEvent): void;\\n  activateRow(index: number, event?: MouseEvent | KeyboardEvent): void;\\n  activateRow(none: null, event?: MouseEvent | KeyboardEvent): void;\\n  activateRow(\\n    arg: string | number | null,\\n    event?: MouseEvent | KeyboardEvent\\n  ): void {\\n    if (typeof arg === \'number\') {\\n      this.table$\\n        .pipe(\\n          pluck(\'data\'),\\n          map((data) => data[this.paginationIndex][arg]),\\n          take(1),\\n          takeUntil(this.unsubscribe$)\\n        )\\n        .subscribe((row) => this._activateRow(row, arg, event));\\n    } else if (typeof arg === \'string\') {\\n      // TODO: implement hover by id\\n    } else {\\n      this._activateRow(null, null);\\n    }\\n  }\\n  protected _activateRow(\\n    row: TableRow | null,\\n    index: number | null,\\n    event?: MouseEvent | KeyboardEvent\\n  ): void {\\n    this._rowActive$.next({ row, index, event });\\n  }\\n\\n  get loading$(): Observable<boolean> {\\n    return this._loading$.pipe(\\n      startWith(false),\\n      map((value) => (isObservable(value) ? value : of(value))),\\n      switchMap((obs) => obs),\\n      shareReplay(1)\\n    );\\n  }\\n\\n  private _loading$: ReplaySubject<Observable<boolean> | boolean> =\\n    new ReplaySubject(1);\\n  private _sortOrder$: BehaviorSubject<GtSortOrder> =\\n    new BehaviorSubject<GtSortOrder>([]);\\n  private _searchBy$: ReplaySubject<Observable<string | null> | string | null> =\\n    new ReplaySubject(1);\\n  searchBy$: Observable<string | null> = this._searchBy$.pipe(\\n    startWith(\'\'),\\n    map((value) => (isObservable(value) ? value : of(value))),\\n    switchMap((obs) => obs),\\n    shareReplay(1)\\n  );\\n\\n  private _pagingInfo$ = new BehaviorSubject<GtPaginationInfo>({\\n    pageCurrent: null,\\n    pageNext: null,\\n    pagePrevious: null,\\n    pageSize: null,\\n    numberOfRecords: null,\\n    //recordsAfterFilter: null,\\n    //recordsAfterSearch: null,\\n    //recordsAll: null,\\n  });\\n\\n  // tslint:disable-next-line:variable-name\\n  private _tableConfig$: BehaviorSubject<\\n    TableConfig<any> | Observable<TableConfig<any>>\\n  > = new BehaviorSubject({});\\n  tableConfig$ = this._tableConfig$.pipe(\\n    map((value) => (isObservable(value) ? value : of(value))),\\n    switchMap((obs) => obs),\\n    tap((config) => (this._tableConfig = config)),\\n    shareReplay(1)\\n  );\\n\\n  private _data$: ReplaySubject<Array<TableRow> | Observable<Array<TableRow>>> =\\n    new ReplaySubject(1);\\n  data$: Observable<Array<TableRow>> = this._data$.pipe(\\n    map((value) => (isObservable(value) ? value : of(value))),\\n    switchMap((obs) => combineLatest([obs])),\\n    withLatestFrom(this.tableConfig$),\\n    map(([[data], config]) => {\\n      // if columns or rows contains config for mapTo...\\n      if (\\n        (config.columns &&\\n          !!Object.values(config.columns).find((column) => !!column.mapTo)) ||\\n        (config.rows &&\\n          !!Object.values(config.rows).find((column) => !!column.mapTo))\\n      ) {\\n        // ...map data to new keys on row...\\n        const newData: TableRow[] = [];\\n        for (let i = 0; i < data.length; i++) {\\n          const row = data[i];\\n          const newKeys = Object.entries(config.columns || config.rows || [])\\n            .filter(([key, value]) => !!value.mapTo) // add keys for columns with mapTo config...\\n            .reduce(\\n              (previousValue, [key, value]) => ({\\n                ...previousValue,\\n                [key]: this.nestedValue(\\n                  row,\\n                  value.mapTo!.path,\\n                  value.mapTo?.missingValue\\n                ),\\n              }),\\n              {}\\n            );\\n          newData[i] = { ...row, ...newKeys };\\n        }\\n        data = newData;\\n      }\\n      if (this.generateRowId && !this.rowIdKey && data.length > 0) {\\n        const dataWithId = [];\\n        for (let i = 0; i < data.length; i++) {\\n          dataWithId[i] = { ...data[i], _id: i };\\n        }\\n        data = dataWithId;\\n      }\\n      return { data, config };\\n    }),\\n    switchMap((obs) =>\\n      combineLatest([of(obs), this.sortOrder$, this.searchBy$])\\n    ),\\n    map(([table, sortBy, searchBy]) => {\\n      // create a new array reference and sort new array (prevent mutating existing state)\\n      table.data = [...table.data];\\n      return !sortBy?.length || table.config?.disableTableSort\\n        ? searchBy && !this.tableInfo?.lazyLoaded\\n          ? search(searchBy, false, table.data, table.config)\\n          : table.data\\n        : searchBy && !this.tableInfo?.lazyLoaded\\n        ? search(searchBy, false, table.data, table.config)?.sort(\\n            sortOnMultipleKeys(sortBy)\\n          )\\n        : table.data?.sort(sortOnMultipleKeys(sortBy));\\n    }),\\n    shareReplay(1)\\n  );\\n\\n  calculations$ = combineLatest([this.data$, this.tableConfig$]).pipe(\\n    map(([data, config]) => calculate(data, config)),\\n    shareReplay(1)\\n  );\\n\\n  table$: Observable<TableMeta> = combineLatest([\\n    this.data$,\\n    this.tableConfig$,\\n    this._pagingInfo$,\\n  ]).pipe(\\n    map(([sorted, config, pagingInfo]) => {\\n      if (\\n        pagingInfo.pageCurrent !== null &&\\n        pagingInfo.numberOfRecords !== null &&\\n        pagingInfo.pageSize !== null\\n      ) {\\n        return {\\n          data: [sorted],\\n          config,\\n          info: <TableInfo>{\\n            lazyLoaded: true,\\n            numberOfRecords: pagingInfo.numberOfRecords,\\n            pageSize: pagingInfo.pageSize,\\n            pageTotal:\\n              pagingInfo.pageTotal ??\\n              Math.ceil(pagingInfo.numberOfRecords / pagingInfo.pageSize),\\n          },\\n        };\\n      }\\n      // if pagination is disabled...\\n      if (!config.pagination || config.pagination.length === 0) {\\n        // ...return unaltered array\\n        return {\\n          data: [sorted],\\n          config,\\n          info: <TableInfo>{ numberOfRecords: sorted.length, pageTotal: 1 },\\n        };\\n      }\\n      // return record set\\n      return {\\n        data: chunk(sorted, +(config.pagination.length || 0)),\\n        config,\\n        info: <TableInfo>{\\n          numberOfRecords: sorted.length,\\n          pageSize: +(config.pagination.length || 0),\\n          pageTotal: Math.ceil(\\n            sorted.length / +(config.pagination.length || 0)\\n          ),\\n        },\\n      };\\n    }),\\n    tap((meta) => this._tableInfo$.next(meta.info)),\\n    shareReplay(1)\\n  );\\n\\n  /** tableInfo$ - returns observable for table info\\n   * @return Observable<TableInfo> */\\n  get tableInfo$(): Observable<TableInfo | undefined> {\\n    return this._tableInfo$.asObservable().pipe(\\n      filter((info) => !!info),\\n      shareReplay(1)\\n    );\\n  }\\n\\n  /** tableInfo - returns the current table info\\n   * @return TableInfo */\\n  get tableInfo(): TableInfo | undefined {\\n    return this._tableInfo$.getValue();\\n  }\\n\\n  private _tableInfo$ = new BehaviorSubject<TableInfo | undefined>(undefined);\\n\\n  private _currentPaginationIndex$: BehaviorSubject<number> =\\n    new BehaviorSubject(0);\\n  currentPaginationIndex$ = combineLatest([\\n    this._currentPaginationIndex$,\\n    this.table$,\\n  ]).pipe(\\n    map(([page, table]: any) => {\\n      // determine last page\\n      const lastPage =\\n        Math.ceil(\\n          table.info.records /\\n            (table.info.recordLength ??\\n              (table.config?.pagination?.length || table.info.records))\\n        ) - 1;\\n      // determine min/max position\\n      return +page < 0 ? 0 : +page > lastPage ? lastPage : +page;\\n    }),\\n    distinctUntilChanged(),\\n    tap((index) => this.pageChange.emit({ index })),\\n    shareReplay(1)\\n  );\\n\\n  colspan$ = this.tableConfig$.pipe(\\n    switchMap((config) =>\\n      config.columns\\n        ? of(\\n            Object.values(config.columns || config.rows || {}).filter(\\n              (value) => value.hidden !== true\\n            ).length\\n          )\\n        : this.data$.pipe(map((data) => data.length + 1))\\n    ),\\n    shareReplay(1)\\n  );\\n\\n  footerColspan$ = this.tableConfig$.pipe(\\n    map((config) => {\\n      let colspan = 0;\\n      Object.values(config?.footer?.columns || {}).forEach((calculations) => {\\n        if (\\n          Object.values(calculations).filter((value) => value !== false)\\n            .length >= 0\\n        ) {\\n          colspan += 1;\\n        }\\n      }, {});\\n      return colspan;\\n    }),\\n    shareReplay(1)\\n  );\\n\\n  /** sortByKey - Sort by key in table row\\n   * @param key - key to sort by\\n   * @param { MouseEvent } [$event] - Mouse event triggering sort, if shift key is pressed sort key will be added to already present sort keys\\n   */\\n  sortByKey(key: keyof TableRow, $event?: MouseEvent): void {\\n    const shiftKey = $event?.shiftKey === true;\\n    const currentOrder = this._sortOrder$.value;\\n    let sortOrder: GtOrder = \'asc\';\\n    let newOrder: GtSortOrder = [];\\n    // if shift key is pressed while sorting...\\n    if (shiftKey) {\\n      // ...check if key is already sorted\\n      const existingSortPosition = currentOrder.findIndex(\\n        (value) => value.key === key\\n      );\\n      if (existingSortPosition === -1) {\\n        // ...if key is not sorted, add it to the end of the sort order\\n        newOrder = [...currentOrder, { key, order: \'asc\' }];\\n      } else {\\n        // ...if key is already sorted, toggle sort order\\n        sortOrder = currentOrder[existingSortPosition].order;\\n        const newSortOrder = sortOrder === \'asc\' ? \'desc\' : \'asc\';\\n        newOrder = [...currentOrder];\\n        newOrder[existingSortPosition] = {\\n          ...newOrder[existingSortPosition],\\n          order: newSortOrder,\\n        };\\n      }\\n    } else {\\n      // ...else if shift key is not pressed...\\n      if (currentOrder.length > 0) {\\n        // ...check if key is already sorted\\n        const existingSortPosition = currentOrder.findIndex(\\n          (value) => value.key === key\\n        );\\n        // ...if key is already sorted, toggle sort order\\n        if (existingSortPosition === -1) {\\n          newOrder = [{ key, order: \'asc\' }];\\n        } else {\\n          sortOrder = currentOrder[existingSortPosition].order;\\n          const newSortOrder = sortOrder === \'asc\' ? \'desc\' : \'asc\';\\n          newOrder = [{ key, order: newSortOrder }];\\n        }\\n      } else {\\n        // ...if key is not sorted set sort order for key to ascending\\n        newOrder = [{ key, order: sortOrder }];\\n      }\\n    }\\n    // create sort event\\n    const sortEvent: GtSortEvent = {\\n      key,\\n      order: sortOrder,\\n      currentSortOrder: newOrder,\\n      addSortKey: shiftKey,\\n    };\\n\\n    // if event is passed to sort function...\\n    if ($event) {\\n      // ...emit it as well\\n      sortEvent.event = $event;\\n    }\\n    // emit sort event\\n    this.columnSort.emit(sortEvent);\\n\\n    // if table is not lazy loaded (sorting is then handled server-side)...\\n    if (!this.tableInfo?.lazyLoaded) {\\n      // ...update sort order\\n      this.sortOrder = newOrder;\\n    }\\n  }\\n\\n  columnOrder = (\\n    a: KeyValue<string, TableColumn>,\\n    b: KeyValue<string, TableColumn>\\n  ): number => {\\n    return (a.value.order || 0) - (b.value.order || 0);\\n  };\\n\\n  nestedValue(\\n    object: any,\\n    mapTo: string,\\n    missingValue: string | number | null = null\\n  ): unknown {\\n    const levels = mapTo.split(\'.\');\\n    return levels.reduce(\\n      (previousValue, currentValue, index) =>\\n        previousValue[currentValue] ||\\n        (index === levels.length - 1 ? missingValue : {}),\\n      object\\n    );\\n  }\\n\\n  private _unsubscribeFromKeyboardEvents$ = new Subject();\\n  private _keyboardArrowEvent$ = fromEvent<KeyboardEvent>(\\n    document,\\n    \'keydown\'\\n  ).pipe(\\n    filter(\\n      (event) =>\\n        [...this._navigationKeys, ...this._selectKeys].indexOf(event.key) > -1\\n    )\\n  );\\n\\n  protected listenToKeyboardEvents(): void {\\n    if (!this._tableConfig?.activateRowOnKeyboardNavigation) {\\n      return;\\n    }\\n\\n    this._unsubscribeFromKeyboardEvents$.next(true);\\n    this._keyboardArrowEvent$\\n      .pipe(\\n        withLatestFrom(\\n          this.data$,\\n          this.currentPaginationIndex$,\\n          this.tableInfo$\\n        ),\\n        takeUntil(this._unsubscribeFromKeyboardEvents$),\\n        takeUntil(this.unsubscribe$)\\n      )\\n      .subscribe(([event, rows, currentPage, tableInfo]) => {\\n        const selectEvent = this._selectKeys.includes(event.key);\\n        if (selectEvent && this.activeRowIndex !== null) {\\n          const rowIndex =\\n            this.activeRowIndex + currentPage * (tableInfo?.pageSize ?? 0);\\n          this._rowActive(rows[rowIndex], rowIndex, event);\\n          return;\\n        }\\n\\n        const navigationEvent = this._navigationKeys.includes(event.key);\\n        if (navigationEvent) {\\n          this._handleNavigationEvent(event, rows, currentPage, tableInfo);\\n        }\\n      });\\n  }\\n  unsubscribeFromKeyboardEvents(tableRef: HTMLTableElement): void {\\n    if (!this._tableConfig?.activateRowOnKeyboardNavigation) {\\n      return;\\n    }\\n    // only unsubscribe if table is not focused\\n    if (tableRef !== document.activeElement) {\\n      if (this._tableConfig?.activateRowOnHover) {\\n        // unset active row\\n        this.activateRow(null);\\n      }\\n      this._unsubscribeFromKeyboardEvents$.next(true);\\n    }\\n  }\\n\\n  private _handleNavigationEvent(\\n    event: KeyboardEvent,\\n    rows: any[],\\n    currentPage: number,\\n    tableInfo: any\\n  ): void {\\n    const hasPagination = (tableInfo?.pageTotal || 0) > 1 && tableInfo;\\n    const lastRowIndex = rows.length - 1;\\n    let newIndex = this.activeRowIndex;\\n    let indexModifier = 0;\\n\\n    if (event.key === \'Home\') {\\n      this.paginationIndex = 0;\\n      this.activateRow(0, event);\\n      return;\\n    }\\n\\n    if (event.key === \'End\') {\\n      const indexOfLastRecord = hasPagination\\n        ? rows.length - (tableInfo.pageTotal - 1) * tableInfo.pageSize - 1\\n        : lastRowIndex;\\n      if (tableInfo?.pageTotal) {\\n        this.paginationIndex = tableInfo.pageTotal - 1;\\n      }\\n      this.activateRow(indexOfLastRecord, event);\\n      return;\\n    }\\n\\n    if (event.key === \'ArrowDown\') {\\n      indexModifier = 1;\\n    } else if (event.key === \'ArrowUp\') {\\n      indexModifier = -1;\\n    }\\n\\n    if (newIndex === null) {\\n      newIndex = 0;\\n    } else if (\\n      newIndex + indexModifier >= 0 &&\\n      newIndex + indexModifier <= lastRowIndex\\n    ) {\\n      newIndex = newIndex + indexModifier;\\n    }\\n\\n    if (hasPagination && tableInfo?.pageSize) {\\n      const isNotLastPage = currentPage + 1 < tableInfo.pageTotal;\\n      const recordsOnLastPage =\\n        rows.length - (tableInfo.pageTotal - 1) * tableInfo.pageSize - 1;\\n      const maxIndex = isNotLastPage\\n        ? tableInfo?.pageSize - 1\\n        : recordsOnLastPage;\\n\\n      if (event.key === \'ArrowLeft\' && currentPage > 0) {\\n        this.paginationIndex = currentPage - 1;\\n        this.activateRow(newIndex, event);\\n        return;\\n      } else if (event.key === \'ArrowRight\' && isNotLastPage) {\\n        if (\\n          currentPage + 1 === tableInfo.pageTotal - 1 &&\\n          newIndex > recordsOnLastPage\\n        ) {\\n          this.activateRow(recordsOnLastPage, event);\\n        }\\n        this.paginationIndex = currentPage + 1;\\n        this.activateRow(newIndex, event);\\n        return;\\n      }\\n\\n      if (\\n        currentPage > 0 &&\\n        indexModifier < 0 &&\\n        newIndex + indexModifier <= lastRowIndex &&\\n        (this.activeRowIndex || 0) + indexModifier < 0\\n      ) {\\n        // set last row of previous page as active\\n        this.activateRow(tableInfo?.pageSize - 1, event);\\n        this.paginationIndex = currentPage - 1;\\n        return;\\n      }\\n\\n      const pageIndex = newIndex % tableInfo?.pageSize;\\n\\n      if (newIndex > maxIndex && currentPage + 1 < tableInfo.pageTotal) {\\n        this.paginationIndex = currentPage + 1;\\n      }\\n      this.activateRow(pageIndex > maxIndex ? maxIndex : pageIndex, event);\\n      return;\\n    }\\n\\n    this.activateRow(newIndex, event);\\n  }\\n\\n  ngOnDestroy() {\\n    this.unsubscribe$.next(true);\\n    this.unsubscribe$.complete();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","implements":["OnDestroy"],"accessors":{"navigationKeys":{"name":"navigationKeys","setSignature":{"name":"navigationKeys","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":103,"rawdescription":"\\nnavigationKeys\\n","description":"<p>navigationKeys</p>\\n","jsdoctags":[{"name":"value","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"navigationKeys","type":"","returnType":"","line":94}},"selectKeys":{"name":"selectKeys","setSignature":{"name":"selectKeys","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string[]","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":124,"rawdescription":"\\nselectKeys\\n","description":"<p>selectKeys</p>\\n","jsdoctags":[{"name":"value","type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"selectKeys","type":"[]","returnType":"string[]","line":115}},"sortOrder$":{"name":"sortOrder$","getSignature":{"name":"sortOrder$","type":"","returnType":"Observable<GtSortOrder>","line":129}},"loading":{"name":"loading","setSignature":{"name":"loading","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"isLoading","type":"Observable<boolean> | boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":133,"jsdoctags":[{"name":"isLoading","type":"Observable<boolean> | boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"paginationIndex":{"name":"paginationIndex","setSignature":{"name":"paginationIndex","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"pageIndex","type":"number","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":137,"jsdoctags":[{"name":"pageIndex","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"paginationIndex","type":"number","returnType":"number","line":141}},"pagingInfo":{"name":"pagingInfo","setSignature":{"name":"pagingInfo","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"GtPaginationInfo | null","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":145,"jsdoctags":[{"name":"value","type":"GtPaginationInfo | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"customClasses":{"name":"customClasses","setSignature":{"name":"customClasses","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"classes","type":"Partial<>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":161,"rawdescription":"\\ncustomClasses\\n","description":"<p>customClasses</p>\\n","jsdoctags":[{"name":"classes","type":"Partial<>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"customClasses","type":"","returnType":"","line":165}},"isRowSelectedFn":{"name":"isRowSelectedFn","setSignature":{"name":"isRowSelectedFn","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"fn","type":"function","deprecated":false,"deprecationMessage":"","function":[{"name":"row","type":"TableRow | any","deprecated":false,"deprecationMessage":""},{"name":"selection","type":"any","deprecated":false,"deprecationMessage":"","optional":true}]}],"returnType":"void","line":177,"rawdescription":"\\nisRowSelectedFn","description":"<p>isRowSelectedFn</p>\\n","jsdoctags":[{"name":"fn","type":"function","deprecated":false,"deprecationMessage":"","function":[{"name":"row","type":"TableRow | any","deprecated":false,"deprecationMessage":""},{"name":"selection","type":"any","deprecated":false,"deprecationMessage":"","optional":true}],"tagName":{"text":"param"}}]},"getSignature":{"name":"isRowSelectedFn","type":"any","returnType":"any","line":183}},"trackRowByFn":{"name":"trackRowByFn","setSignature":{"name":"trackRowByFn","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"fn","type":"TrackByFunction<TableRow>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":211,"rawdescription":"\\ntrackRowByFn\\n","description":"<p>trackRowByFn</p>\\n","jsdoctags":[{"name":"fn","type":"TrackByFunction<TableRow>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"trackRowByFn","type":"","returnType":"TrackByFunction<TableRow>","line":214}},"search":{"name":"search","setSignature":{"name":"search","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"string","type":"Observable<string | null> | string | null","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":226,"jsdoctags":[{"name":"string","type":"Observable<string | null> | string | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"config":{"name":"config","setSignature":{"name":"config","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"config","type":"Observable<TableConfig<any>> | TableConfig<any>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":231,"jsdoctags":[{"name":"config","type":"Observable<TableConfig<any>> | TableConfig<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"data":{"name":"data","setSignature":{"name":"data","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"data","type":"Observable<Array<TableRow>> | Array<TableRow> | null","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":238,"jsdoctags":[{"name":"data","type":"Observable<Array<TableRow>> | Array<TableRow> | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"sortOrder":{"name":"sortOrder","setSignature":{"name":"sortOrder","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"sortConfig","type":"GtSortOrder<TableRow> | any","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":244,"jsdoctags":[{"name":"sortConfig","type":"GtSortOrder<TableRow> | any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"loading$":{"name":"loading$","getSignature":{"name":"loading$","type":"","returnType":"Observable<boolean>","line":314}},"tableInfo$":{"name":"tableInfo$","getSignature":{"name":"tableInfo$","type":"","returnType":"Observable<TableInfo | undefined>","line":478,"rawdescription":"\\ntableInfo$ - returns observable for table info","description":"<p>tableInfo$ - returns observable for table info</p>\\n","jsdoctags":[{"pos":14531,"end":14561,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":339,"tagName":{"pos":14532,"end":14538,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":105,"escapedText":"return"},"comment":"<p>Observable<TableInfo></p>\\n"}]}},"tableInfo":{"name":"tableInfo","getSignature":{"name":"tableInfo","type":"","returnType":"TableInfo | undefined","line":487,"rawdescription":"\\ntableInfo - returns the current table info","description":"<p>tableInfo - returns the current table info</p>\\n","jsdoctags":[{"pos":14788,"end":14806,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":339,"tagName":{"pos":14789,"end":14795,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":105,"escapedText":"return"},"comment":"<p>TableInfo</p>\\n"}]}}},"templateData":"<table\\n  [ngClass]=\\"(tableConfig$ | async)?.class || \'table\'\\"\\n  [class.table-mobile]=\\"(tableConfig$ | async)?.mobileLayout\\"\\n  [class.table-horizontal]=\\"(tableConfig$ | async)?.rows\\"\\n  [class.table-loading]=\\"loading$ | async\\"\\n  [class.gt-sticky-row-header]=\\"\\n    (tableConfig$ | async)?.stickyHeaders?.row && (tableConfig$ | async)?.rows\\n  \\"\\n  [class.gt-sticky-column-header]=\\"\\n    (tableConfig$ | async)?.stickyHeaders?.column\\n  \\"\\n  [attr.aria-busy]=\\"(loading$ | async) === true ? true : null\\"\\n  [tabindex]=\\"(tableConfig$ | async)?.activateRowOnKeyboardNavigation ? 0 : -1\\"\\n  #tableRef\\n  (focus)=\\"listenToKeyboardEvents()\\"\\n  (focusout)=\\"unsubscribeFromKeyboardEvents(tableRef)\\"\\n  (mouseenter)=\\"listenToKeyboardEvents()\\"\\n  (mouseleave)=\\"unsubscribeFromKeyboardEvents(tableRef)\\"\\n>\\n  <thead>\\n    <tr\\n      *ngIf=\\"{\\n        config: (tableConfig$ | async)!,\\n        isLoading: loading$ | async\\n      } as table\\"\\n    >\\n      <ng-container\\n        *ngFor=\\"let column of table.config?.columns | keyvalue: columnOrder\\"\\n      >\\n        <th\\n          *ngIf=\\"!column.value?.hidden\\"\\n          ngClass=\\"{{ (column.key | dashCase) + \'-column\' }} {{\\n            column.value.class\\n          }}\\"\\n          [class.disabled]=\\"table.isLoading\\"\\n          [attr.aria-sort]=\\"sortOrder$ | async | sortClass: column.key:\'aria\'\\"\\n          [class.gt-sortable]=\\"true\\"\\n          scope=\\"col\\"\\n        >\\n          <button\\n            *ngIf=\\"column.value?.sortable\\"\\n            [attr.data-sort-order]=\\"\\n              sortOrder$ | async | sortClass: column.key:\'order\'\\n            \\"\\n            class=\\"gt-sort\\"\\n            (click)=\\"\\n              table.isLoading ||\\n                !column.value.sortable ||\\n                sortByKey(column.key, $event)\\n            \\"\\n          >\\n            <span *ngIf=\\"column.value?.header !== false\\">{{\\n              column.value.header || column.key | capitalCase\\n            }}</span>\\n          </button>\\n          <span\\n            *ngIf=\\"!column.value?.sortable && column.value?.header !== false\\"\\n            >{{ column.value.header || column.key | capitalCase }}</span\\n          >\\n        </th>\\n      </ng-container>\\n      <ng-container\\n        *ngIf=\\"\\n          ((table?.config?.rows | keyvalue: columnOrder) || [])[0] as headerRow\\n        \\"\\n      >\\n        <th\\n          class=\\"row-header\\"\\n          [attr.aria-sort]=\\"\\n            sortOrder$ | async | sortClass: headerRow.key:\'aria\'\\n          \\"\\n          ngClass=\\"{{ headerRow.value.sortable ? \'sort \' : \'\' }} {{\\n            sortOrder$ | async | sortClass: headerRow.key\\n          }} {{ (headerRow.key | dashCase) + \'-column\' }}\\"\\n          (click)=\\"\\n            table.isLoading ||\\n              !headerRow.value.sortable ||\\n              sortByKey(headerRow.key, $event)\\n          \\"\\n          scope=\\"col\\"\\n        >\\n          <ng-container *ngIf=\\"headerRow?.value?.header !== false\\">{{\\n            headerRow?.value?.header || headerRow.key | capitalCase\\n          }}</ng-container>\\n        </th>\\n        <th\\n          *ngFor=\\"let column of ((table$ | async)?.data || [])[0]\\"\\n          ngClass=\\"{{ headerRow.value.class }}\\"\\n        >\\n          <ng-container\\n            [ngTemplateOutlet]=\\"\\n              (table.config.rows || {})[headerRow.key].templateRef\\n                ? templateRef\\n                : (table.config.rows || {})[headerRow.key].transform\\n                ? transformData\\n                : rawData\\n            \\"\\n            [ngTemplateOutletContext]=\\"{\\n              row: column,\\n              column: headerRow,\\n              transform: (table.config.rows || {})[headerRow.key].transform,\\n              templateRef: (table.config.rows || {})[headerRow.key].templateRef,\\n              index: 0\\n            }\\"\\n          >\\n          </ng-container>\\n        </th>\\n      </ng-container>\\n    </tr>\\n  </thead>\\n  <tbody *ngIf=\\"loading$ | async; else tableContent\\">\\n    <tr>\\n      <td class=\\"p-0\\" [colSpan]=\\"colspan$ | async\\">\\n        <ng-content select=\\".table-loading\\"></ng-content>\\n      </td>\\n    </tr>\\n  </tbody>\\n  <tfoot *ngIf=\\"(table$ | async)! as table\\">\\n    <ng-container *ngIf=\\"table.data.length > 0 && !(loading$ | async)\\">\\n      <ng-container *ngIf=\\"(calculations$ | async)! as calculations\\">\\n        <tr\\n          *ngFor=\\"let calculation of calculations.calculations; let i = index\\"\\n        >\\n          <ng-container\\n            *ngIf=\\"{\\n              showHeader: (colspan$ | async) !== (footerColspan$ | async)\\n            } as footerRow\\"\\n          >\\n            <th\\n              *ngIf=\\"footerRow.showHeader\\"\\n              [colSpan]=\\"\\n                ((colspan$ | async) || 0) - ((footerColspan$ | async) || 0)\\n              \\"\\n              scope=\\"row\\"\\n            >\\n              <ng-container\\n                *ngIf=\\"table.config?.footer?.headers?.[calculation] as showHeader\\"\\n                >{{showHeader === true ? (calculation | capitalCase): table.config.footer?.headers?.[calculation]}}\\n              </ng-container>\\n            </th>\\n            <ng-container\\n              *ngFor=\\"\\n                let column of table.config?.columns | keyvalue: columnOrder\\n              \\"\\n            >\\n              <td\\n                *ngIf=\\"\\n                  !column.value?.hidden && calculations.calculated[column.key]\\n                \\"\\n                ngClass=\\"{{ (column.key | dashCase) + \'-column\' }} {{\\n                  column.value.class\\n                }}\\"\\n                [attr.data-header]=\\"\\n                  !footerRow.showHeader && table.config.footer?.headers?.[calculation]\\n                    ? table.config.footer?.headers?.[calculation] === true ? (calculation | capitalCase) : table.config.footer?.headers?.[calculation]\\n                    : null\\n                \\"\\n                [attr.data-label]=\\"\\n                  table.config.mobileLayout && column.value.mobileHeader\\n                    ? column.value.mobileHeader !== true\\n                      ? column.value.mobileHeader\\n                      : (column.value.header || column.key | capitalCase)\\n                    : null\\n                \\"\\n                [class.gt-no-content]=\\"\\n                  !calculations.calculated[column.key][calculation]\\n                \\"\\n              >\\n                <ng-container\\n                  [ngTemplateOutlet]=\\"\\n                    (table.config.columns || {})[column.key].templateRef\\n                      ? templateRef\\n                      : (table.config.columns || {})[column.key].transform\\n                      ? transformFooter\\n                      : rawFooter\\n                  \\"\\n                  [ngTemplateOutletContext]=\\"{\\n                    value: calculations.calculated[column.key][calculation],\\n                    row: calculations.calculated[column.key],\\n                    column: calculation,\\n                    templateRef: (table.config.columns || {})[column.key]\\n                      .templateRef,\\n                    transform: (table.config.columns || {})[column.key]\\n                      .transform\\n                  }\\"\\n                ></ng-container>\\n              </td>\\n            </ng-container>\\n          </ng-container>\\n        </tr>\\n      </ng-container>\\n    </ng-container>\\n  </tfoot>\\n</table>\\n<ng-template #tableContent>\\n  <ng-container *ngIf=\\"(table$ | async)! as table\\">\\n    <tbody *ngIf=\\"(table!.data![0] || table!.data!).length > 0; else noData\\">\\n      <ng-container *ngIf=\\"table.config.columns\\">\\n        <tr\\n          *ngFor=\\"\\n            let row of table!.data![\\n              table.info.lazyLoaded ? 0 : (currentPaginationIndex$ | async) || 0\\n            ];\\n            trackBy: trackRowByFn;\\n            let i = index\\n          \\"\\n          [attr.id]=\\"\'tableRow_\' + i\\"\\n          (click)=\\"table?.config?.rowClick && _rowClick(row, i, $event)\\"\\n          (mouseenter)=\\"\\n            table?.config?.activateRowOnHover && _activateRow(row, i, $event)\\n          \\"\\n          (mouseleave)=\\"\\n            table?.config?.activateRowOnHover &&\\n              _activateRow(null, null, $event)\\n          \\"\\n          [ngClass]=\\"[\\n            !!isRowSelectedFn\\n              ? (row\\n                | rowSelection\\n                  : selection\\n                  : isRowSelectedFn\\n                  : customClasses.selectedRow)\\n              : \'\',\\n            (rowActive$ | async)?.index === i ? customClasses.activeRow : \'\'\\n          ]\\"\\n        >\\n          <ng-container\\n            *ngFor=\\"let column of table.config?.columns | keyvalue: columnOrder\\"\\n          >\\n            <td\\n              *ngIf=\\"!column.value?.hidden\\"\\n              ngClass=\\"{{ (column.key | dashCase) + \'-column\' }} {{\\n                column.value.class\\n              }}\\"\\n              [attr.data-label]=\\"\\n                table.config.mobileLayout && column.value.mobileHeader\\n                  ? column.value.mobileHeader !== true\\n                    ? column.value.mobileHeader\\n                    : (column.value.header || column.key | capitalCase)\\n                  : null\\n              \\"\\n            >\\n              <ng-container\\n                [ngTemplateOutlet]=\\"\\n                  (searchBy$ | async) &&\\n                  !(table.config.columns || {})[column.key].templateRef\\n                    ? highlighted\\n                    : (table.config.columns || {})[column.key].templateRef\\n                    ? templateRef\\n                    : (table.config.columns || {})[column.key].transform\\n                    ? transformData\\n                    : rawData\\n                \\"\\n                [ngTemplateOutletContext]=\\"{\\n                  row: row,\\n                  column: column,\\n                  search: (searchBy$ | async),\\n                  transform: (table.config.columns || {})[column.key].transform,\\n                  templateRef: (table.config.columns || {})[column.key]\\n                    .templateRef,\\n                  index: i,\\n                  data: table.data[\\n                    table.info.lazyLoaded\\n                      ? 0\\n                      : (currentPaginationIndex$ | async) || 0\\n                  ]\\n                }\\"\\n              ></ng-container>\\n            </td>\\n          </ng-container>\\n        </tr>\\n      </ng-container>\\n      <ng-container *ngIf=\\"table.config.rows\\">\\n        <ng-container\\n          *ngFor=\\"\\n            let row of table?.config?.rows | keyvalue: columnOrder | slice: 1;\\n            let i = index\\n          \\"\\n        >\\n          <tr\\n            *ngIf=\\"!row.value?.hidden\\"\\n            [attr.id]=\\"\'tableRow_\' + i\\"\\n            ngClass=\\"{{ (row.key | dashCase) + \'-row\' }}\\"\\n            (click)=\\"table?.config?.rowClick && _rowClick(row, i, $event)\\"\\n            (mouseenter)=\\"\\n              table?.config?.activateRowOnHover && _activateRow(row, i, $event)\\n            \\"\\n            (mouseleave)=\\"\\n              table?.config?.activateRowOnHover &&\\n                _activateRow(null, null, $event)\\n            \\"\\n            [ngClass]=\\"[\\n              !!isRowSelectedFn\\n                ? (row\\n                  | rowSelection\\n                    : selection\\n                    : isRowSelectedFn\\n                    : customClasses.selectedRow)\\n                : \'\',\\n              (rowActive$ | async)?.index === i ? customClasses.activeRow : \'\'\\n            ]\\"\\n          >\\n            <th class=\\"row-header\\" scope=\\"row\\">\\n              {{ row.value.header || row.key | capitalCase }}\\n            </th>\\n            <td\\n              *ngFor=\\"let column of (table?.data || [])[0]; let y = index\\"\\n              ngClass=\\"{{ row.value.class }}\\"\\n            >\\n              <ng-container\\n                [ngTemplateOutlet]=\\"\\n                  (table.config.rows || {})[row.key].templateRef\\n                    ? templateRef\\n                    : (table.config.rows || {})[row.key].transform\\n                    ? transformData\\n                    : rawData\\n                \\"\\n                [ngTemplateOutletContext]=\\"{\\n                  row: column,\\n                  column: row,\\n                  transform: (table.config.rows || {})[row.key].transform,\\n                  templateRef: (table.config.rows || {})[row.key].templateRef,\\n                  index: table.config.rows ? y : i,\\n                  data: table.data[\\n                    table.info.lazyLoaded\\n                      ? 0\\n                      : (currentPaginationIndex$ | async) || 0\\n                  ]\\n                }\\"\\n              >\\n              </ng-container>\\n            </td>\\n          </tr>\\n        </ng-container>\\n      </ng-container>\\n    </tbody>\\n  </ng-container>\\n</ng-template>\\n<ng-template #noData>\\n  <tbody>\\n    <tr>\\n      <td class=\\"p-0\\" [colSpan]=\\"colspan$ | async\\">\\n        <ng-content select=\\".table-no-data\\"></ng-content>\\n      </td>\\n    </tr>\\n  </tbody>\\n</ng-template>\\n<ng-template\\n  #highlighted\\n  let-row=\\"row\\"\\n  let-column=\\"column\\"\\n  let-search=\\"search\\"\\n  let-transform=\\"transform\\"\\n>\\n  <div\\n    *ngIf=\\"!transform\\"\\n    [innerHTML]=\\"row[column.key] | highlight: search\\"\\n  ></div>\\n  <div\\n    *ngIf=\\"transform\\"\\n    [innerHTML]=\\"\\n      row[column.key]\\n        | dynamicPipe: transform.pipe:transform?.args\\n        | highlight: search\\n    \\"\\n  ></div>\\n</ng-template>\\n<ng-template #rawData let-row=\\"row\\" let-column=\\"column\\">\\n  {{ row[column.key] }}\\n</ng-template>\\n<ng-template\\n  #transformData\\n  let-row=\\"row\\"\\n  let-column=\\"column\\"\\n  let-transform=\\"transform\\"\\n  let-data=\\"data\\"\\n>\\n  {{ row[column.key] | dynamicPipe: transform.pipe:transform?.args }}\\n</ng-template>\\n<ng-template #transformFooter let-value=\\"value\\" let-transform=\\"transform\\">\\n  {{\\n    (value | dynamicPipe: transform.pipe:transform?.args) ||\\n      (tableConfig$ | async)?.footer?.emptyContent\\n  }}\\n</ng-template>\\n<ng-template #rawFooter let-value=\\"value\\">\\n  {{ value || (tableConfig$ | async)?.footer?.emptyContent }}\\n</ng-template>\\n<ng-template\\n  #templateRef\\n  let-row=\\"row\\"\\n  let-column=\\"column\\"\\n  let-index=\\"index\\"\\n  let-templateRef=\\"templateRef\\"\\n  let-data=\\"data\\"\\n>\\n  <ng-container\\n    [ngTemplateOutlet]=\\"templateRef\\"\\n    [ngTemplateOutletContext]=\\"{\\n      row: row,\\n      col: column,\\n      index: index,\\n      data: data\\n    }\\"\\n  ></ng-container>\\n</ng-template>\\n"},{"name":"CustomTemplatesComponent","id":"component-CustomTemplatesComponent-6cecf532b8a2e4c2eaf23ea4201513aedce4fd037994d2ffc381a761e281dfc1b925f4a7d1c7439b0d14f4d6ea855e4ddb4d7152151bee330f72ba15f3c570b3","file":"projects/docs/src/app/examples/custom-templates/custom-templates.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"docs-custom-templates","styleUrls":[],"styles":[],"template":"<div class=\\"overflow-auto\\">\\n  <angular-generic-table\\n    [data]=\\"data\\"\\n    [config]=\\"config$\\"\\n  ></angular-generic-table>\\n</div>\\n<ng-template #actions let-row=\\"row\\" let-col=\\"col\\" let-index=\\"index\\">\\n  <button\\n    class=\\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\\"\\n    (click)=\\"clickAction(row, col, index)\\"\\n  >\\n    Click me!\\n  </button>\\n</ng-template>\\n<ng-template #color let-row=\\"row\\" let-col=\\"col\\">\\n  <div\\n    [style.background]=\\"row[col.key]\\"\\n    style=\\"width: 1.5rem; height: 1.5rem; border-radius: 50%\\"\\n  ></div>\\n</ng-template>\\n{{ clicked }}\\n<docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"actions","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any> | undefined","optional":false,"description":"","line":39,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'actions\', {static: true}"}]},{"name":"clicked","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":41},{"name":"color","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any> | undefined","optional":false,"description":"","line":40,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'color\', {static: true}"}]},{"name":"config$","defaultValue":"new ReplaySubject(1)","deprecated":false,"deprecationMessage":"","type":"ReplaySubject<TableConfig>","optional":false,"description":"","line":59},{"name":"data","defaultValue":"[\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteColor: \'#26BFAF\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteColor: \'#0f0\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":43},{"name":"SNIPPETS","defaultValue":"CUSTOM_TEMPLATES_DOCS","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":61}],"methodsClass":[{"name":"clickAction","args":[{"name":"row","type":"TableRow","deprecated":false,"deprecationMessage":""},{"name":"column","type":"literal type","deprecated":false,"deprecationMessage":""},{"name":"index","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":78,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"row","type":"TableRow","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"column","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":62,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport {\\n  TableConfig,\\n  TableRow,\\n  TableColumn,\\n} from \'@angular-generic-table/core\';\\nimport { ReplaySubject } from \'rxjs\';\\nimport { CUSTOM_TEMPLATES_DOCS } from \'./custom-templates.snippets\';\\n\\n@Component({\\n  selector: \'docs-custom-templates\',\\n  template: `\\n    <div class=\\"overflow-auto\\">\\n      <angular-generic-table\\n        [data]=\\"data\\"\\n        [config]=\\"config$\\"\\n      ></angular-generic-table>\\n    </div>\\n    <ng-template #actions let-row=\\"row\\" let-col=\\"col\\" let-index=\\"index\\">\\n      <button\\n        class=\\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\\"\\n        (click)=\\"clickAction(row, col, index)\\"\\n      >\\n        Click me!\\n      </button>\\n    </ng-template>\\n    <ng-template #color let-row=\\"row\\" let-col=\\"col\\">\\n      <div\\n        [style.background]=\\"row[col.key]\\"\\n        style=\\"width: 1.5rem; height: 1.5rem; border-radius: 50%\\"\\n      ></div>\\n    </ng-template>\\n    {{ clicked }}\\n    <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n  `,\\n})\\nexport class CustomTemplatesComponent implements OnInit {\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  @ViewChild(\'color\', { static: true }) color: TemplateRef<any> | undefined;\\n  clicked = \'\';\\n\\n  data = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteColor: \'#26BFAF\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteColor: \'#0f0\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ];\\n  config$: ReplaySubject<TableConfig> = new ReplaySubject(1);\\n\\n  SNIPPETS = CUSTOM_TEMPLATES_DOCS;\\n  ngOnInit(): void {\\n    this.config$.next({\\n      columns: {\\n        firstName: {},\\n        lastName: {},\\n        gender: {},\\n        favoriteColor: {\\n          templateRef: this.color,\\n        },\\n        favoriteFood: {},\\n        action: {\\n          templateRef: this.actions,\\n        },\\n      },\\n    });\\n  }\\n  clickAction(\\n    row: TableRow,\\n    column: { key: string; value: TableColumn },\\n    index: number\\n  ): void {\\n    console.log(\'clicked row:\', row, \'col:\', column);\\n    this.clicked = `clicked row number: ${index}`;\\n  }\\n}\\n\\nexport const CustomTemplates: Story<CustomTemplatesComponent> = (\\n  args: CustomTemplatesComponent\\n) => ({\\n  props: args,\\n  component: CustomTemplatesComponent,\\n});\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","implements":["OnInit"]},{"name":"FooterComponent","id":"component-FooterComponent-279416f7fd88af719e98be071e896b679843031ad1befb1ea2fa6c30b81737e612c86b23d592062a444ee77c2b9919b5b94409e96ab92e90ac09b0d6ef4e1e92","file":"projects/docs/src/app/examples/footer/footer.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"docs-footer","styleUrls":[],"styles":[],"template":"<div class=\\"overflow-auto\\">\\n  <angular-generic-table [data]=\\"data\\" [config]=\\"config\\">\\n  </angular-generic-table>\\n</div>\\n<docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n<ng-template #heightTmplRef let-row=\\"row\\" let-col=\\"col\\">\\n  <ng-container *ngIf=\\"row[col.key || col] as height\\"\\n    >{{ height }} m\\n  </ng-container>\\n</ng-template>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"config","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"TableConfig","optional":false,"description":"","line":46},{"name":"data","defaultValue":"[\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n      age: 27,\\n      weight: 85.457,\\n      height: 1.85,\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n      age: 25,\\n      weight: 60.123,\\n      height: 1.65,\\n    },\\n  ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":26},{"name":"heightTmplRef","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any> | undefined","optional":false,"description":"","line":23,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'heightTmplRef\', {static: true}"}]},{"name":"SNIPPETS","defaultValue":"SIMPLE_SNIPPETS","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":155}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { SIMPLE_SNIPPETS } from \'./simple.snippets\';\\nimport { TableConfig, TableRow } from \'@angular-generic-table/core\';\\nimport { DecimalPipe } from \'@angular/common\';\\n\\n@Component({\\n  selector: \'docs-footer\',\\n  template: `\\n    <div class=\\"overflow-auto\\">\\n      <angular-generic-table [data]=\\"data\\" [config]=\\"config\\">\\n      </angular-generic-table>\\n    </div>\\n    <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n    <ng-template #heightTmplRef let-row=\\"row\\" let-col=\\"col\\">\\n      <ng-container *ngIf=\\"row[col.key || col] as height\\"\\n        >{{ height }} m\\n      </ng-container>\\n    </ng-template>\\n  `,\\n})\\nexport class FooterComponent implements OnInit {\\n  @ViewChild(\'heightTmplRef\', { static: true }) heightTmplRef:\\n    | TemplateRef<any>\\n    | undefined;\\n  data = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n      age: 27,\\n      weight: 85.457,\\n      height: 1.85,\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n      age: 25,\\n      weight: 60.123,\\n      height: 1.65,\\n    },\\n  ];\\n  config: TableConfig = {};\\n\\n  ngOnInit() {\\n    this.config = {\\n      mobileLayout: true,\\n      columns: {\\n        firstName: {\\n          mobileHeader: true,\\n        },\\n        lastName: {\\n          mobileHeader: true,\\n        },\\n        gender: {\\n          mobileHeader: true,\\n        },\\n        favoriteFood: {\\n          mobileHeader: true,\\n          class: \'text-end flex-end\',\\n        },\\n        age: {\\n          mobileHeader: true,\\n          class: \'text-end\',\\n        },\\n        weight: {\\n          mobileHeader: true,\\n          class: \'text-end\',\\n          transform: {\\n            pipe: DecimalPipe,\\n            args: [\'1.0-2\'],\\n          },\\n        },\\n        height: {\\n          mobileHeader: true,\\n          class: \'text-end\',\\n          templateRef: this.heightTmplRef,\\n        },\\n      },\\n      footer: {\\n        headers: {\\n          sum: \'Total\',\\n          numberOfWomen: \'Number of women\',\\n          numberOfMen: \'Number of men\',\\n          min: true,\\n          max: true,\\n          avg: true,\\n          count: true,\\n          static: true,\\n          first: true,\\n        },\\n        rowOrder: [\\n          \'first\',\\n          \'numberOfWomen\',\\n          \'numberOfMen\',\\n          \'min\',\\n          \'max\',\\n          \'sum\',\\n          \'avg\',\\n          \'count\',\\n        ],\\n        columns: {\\n          firstName: {},\\n          lastName: {\\n            static: \'n/a\',\\n          },\\n          gender: {\\n            numberOfWomen: (data: Array<TableRow>, key) => {\\n              let count = 0;\\n              for (let i = 0; i < data.length; i++) {\\n                if (data[i][key] === \'female\') {\\n                  count++;\\n                }\\n              }\\n              return count;\\n            },\\n            numberOfMen: (data: Array<TableRow>, key) => {\\n              let count = 0;\\n              for (let i = 0; i < data.length; i++) {\\n                if (data[i][key] === \'male\') {\\n                  count++;\\n                }\\n              }\\n              return count;\\n            },\\n          },\\n          favoriteFood: {\\n            first: (data: Array<TableRow>, key) => data[0][key],\\n          },\\n          age: {\\n            sum: true,\\n            avg: true,\\n            count: true,\\n            max: true,\\n            min: true,\\n          },\\n          weight: {\\n            sum: true,\\n            avg: true,\\n            min: true,\\n          },\\n          height: {\\n            avg: true,\\n            min: true,\\n            max: true,\\n          },\\n        },\\n      },\\n    };\\n  }\\n\\n  SNIPPETS = SIMPLE_SNIPPETS;\\n}\\n\\nexport const Footer: Story<FooterComponent> = (args: FooterComponent) => ({\\n  props: args,\\n  component: FooterComponent,\\n});\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","implements":["OnInit"]},{"name":"GtDeltaComponent","id":"component-GtDeltaComponent-d8eaa54ebedc2786bbacacc9d40879c45252ff3cfeba6048488dcc628854c5f69f0ffd5a78d21d33b244eb515886c66a7b92a11a818dd7b7cf160b4dc6fce7a6","file":"projects/core/src/lib/gt-delta/gt-delta.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"gt-delta","styleUrls":[],"styles":["\\n      :host {\\n        display: inline-block;\\n      }\\n    "],"template":"<span      *ngIf=\\"value as delta\\"\\n      [class]=\\"[\\n        classes.span,\\n        delta.absolute > 0\\n          ? classes.positive\\n          : delta.absolute < 0\\n          ? classes.negative\\n          : null\\n      ]\\"\\n      [class.gt-delta-positive]=\\"delta.absolute > 0\\"\\n      [class.gt-delta-negative]=\\"delta.absolute < 0\\"\\n      ><ng-container\\n        *ngTemplateOutlet=\\"deltaTemplate || defaultTemplate; context: { delta }\\"\\n      ></ng-container>\\n    </span>\\n    <ng-template #defaultTemplate let-delta=\\"delta\\">\\n      <span *ngIf=\\"delta.relative\\">{{\\n        delta.relative | percent: \'1.0-2\'\\n      }}</span>\\n    </ng-template>","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"baseIndex","deprecated":false,"deprecationMessage":"","line":69,"type":"number","decorators":[]},{"name":"classes","defaultValue":"{\\n    span: \'gt-delta\',\\n    positive: \'text-success\',\\n    negative: \'text-danger\',\\n  }","deprecated":false,"deprecationMessage":"","line":70,"type":"{ span: string; positive: string; negative: string; }","decorators":[]},{"name":"data","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":67,"type":"Array<TableRow>","decorators":[]},{"name":"deltaTemplate","deprecated":false,"deprecationMessage":"","line":62,"type":"TemplateRef<any>","decorators":[]},{"name":"index","defaultValue":"0","deprecated":false,"deprecationMessage":"","line":68,"type":"number","decorators":[]},{"name":"initialValue","defaultValue":"null","deprecated":false,"deprecationMessage":"","line":77,"type":"string | number | null","decorators":[]},{"name":"key","defaultValue":"\'value\'","deprecated":false,"deprecationMessage":"","line":75,"type":"string","decorators":[]},{"name":"notApplicableValue","defaultValue":"null","deprecated":false,"deprecationMessage":"","line":76,"type":"string | null","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"_deltaTemplate","deprecated":false,"deprecationMessage":"","type":"any","optional":true,"description":"","line":79,"modifierKind":[121]},{"name":"_value","deprecated":false,"deprecationMessage":"","type":"GtDelta","optional":true,"description":"","line":78,"modifierKind":[121]},{"name":"Math","defaultValue":"Math","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":65},{"name":"Number","defaultValue":"Number","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":66}],"methodsClass":[{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":80,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  ChangeDetectionStrategy,\\n  Component,\\n  Input,\\n  OnChanges,\\n  SimpleChanges,\\n  TemplateRef,\\n} from \'@angular/core\';\\nimport { TableRow } from \'../models/table-row.interface\';\\nimport { NgIf, NgTemplateOutlet, PercentPipe } from \'@angular/common\';\\n\\nexport interface GtDelta {\\n  relative: number | string;\\n  absolute: number;\\n}\\n@Component({\\n  selector: \'gt-delta\',\\n  template: `<span\\n      *ngIf=\\"value as delta\\"\\n      [class]=\\"[\\n        classes.span,\\n        delta.absolute > 0\\n          ? classes.positive\\n          : delta.absolute < 0\\n          ? classes.negative\\n          : null\\n      ]\\"\\n      [class.gt-delta-positive]=\\"delta.absolute > 0\\"\\n      [class.gt-delta-negative]=\\"delta.absolute < 0\\"\\n      ><ng-container\\n        *ngTemplateOutlet=\\"deltaTemplate || defaultTemplate; context: { delta }\\"\\n      ></ng-container>\\n    </span>\\n    <ng-template #defaultTemplate let-delta=\\"delta\\">\\n      <span *ngIf=\\"delta.relative\\">{{\\n        delta.relative | percent: \'1.0-2\'\\n      }}</span>\\n    </ng-template>`,\\n  styles: [\\n    `\\n      :host {\\n        display: inline-block;\\n      }\\n    `,\\n  ],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  standalone: true,\\n  imports: [PercentPipe, NgIf, NgTemplateOutlet],\\n})\\nexport class GtDeltaComponent implements OnChanges {\\n  get value() {\\n    return this._value;\\n  }\\n\\n  set value(value) {\\n    this._value = value;\\n  }\\n  get deltaTemplate(): TemplateRef<any> {\\n    return this._deltaTemplate;\\n  }\\n  constructor() {}\\n  @Input() set deltaTemplate(deltaTemplate: TemplateRef<any>) {\\n    this._deltaTemplate = deltaTemplate;\\n  }\\n  Math = Math;\\n  Number = Number;\\n  @Input() data: Array<TableRow> = [];\\n  @Input() index: number = 0;\\n  @Input() baseIndex?: number;\\n  @Input() classes = {\\n    span: \'gt-delta\',\\n    positive: \'text-success\',\\n    negative: \'text-danger\',\\n  };\\n  @Input() key: string = \'value\';\\n  @Input() notApplicableValue: string | null = null;\\n  @Input() initialValue: string | number | null = null;\\n  private _value?: GtDelta;\\n  private _deltaTemplate?: any;\\n  ngOnChanges(changes: SimpleChanges): void {\\n    if (!changes.data.currentValue) {\\n      return;\\n    }\\n    const data = changes.data?.currentValue;\\n    const index = changes.index?.currentValue || this.index;\\n    const baseIndex = changes.baseIndex?.currentValue;\\n    const key = changes.key?.currentValue || this.key;\\n    const initialValue =\\n      changes.initialValue?.currentValue || this.initialValue;\\n\\n    const deltaValue =\\n      index === 0\\n        ? initialValue\\n        : data[index][key] -\\n          (baseIndex === undefined\\n            ? data[index - 1][key]\\n            : data[baseIndex][key]);\\n    const baseValue =\\n      index === 0\\n        ? 1\\n        : baseIndex === undefined\\n        ? data[index - 1][key]\\n        : data[baseIndex][key];\\n\\n    const relative =\\n      index === 0\\n        ? initialValue\\n        : Math.sign(deltaValue) * Math.abs(deltaValue / baseValue);\\n\\n    this.value = {\\n      relative: Number.isFinite(relative)\\n        ? relative\\n        : index === 0\\n        ? initialValue\\n        : changes.notApplicableValue?.currentValue || this.notApplicableValue,\\n      absolute: deltaValue,\\n    };\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"\\n      :host {\\n        display: inline-block;\\n      }\\n    \\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":60},"implements":["OnChanges"],"accessors":{"value":{"name":"value","setSignature":{"name":"value","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":55,"jsdoctags":[{"name":"value","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"value","type":"","returnType":"","line":51}},"deltaTemplate":{"name":"deltaTemplate","setSignature":{"name":"deltaTemplate","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"deltaTemplate","type":"TemplateRef<any>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":62,"jsdoctags":[{"name":"deltaTemplate","type":"TemplateRef<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"deltaTemplate","type":"","returnType":"TemplateRef<any>","line":58}}}},{"name":"HorizontalTableComponent","id":"component-HorizontalTableComponent-60f5c580588de332c24651656ba6a0778ea28e728a0ea8ebf1a6e6d0cbae3fb3c52a03d8cf305be7481aa6c12c9cb657e6ccf4a10b2593d1f84ed922b434823c","file":"projects/docs/src/app/examples/horizontal-table/horizontal-table.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"docs-horizontal-table","styleUrls":[],"styles":[],"template":"<button class=\\"btn btn-outline-primary\\" (click)=\\"simulateLoad()\\">\\n  Simulate load\\n</button>\\n<button class=\\"btn btn-outline-danger mx-3\\" (click)=\\"empty()\\">Empty</button>\\n<button class=\\"btn btn-outline-primary\\" (click)=\\"load()\\">Reset</button>\\n<div class=\\"overflow-auto\\">\\n  <angular-generic-table\\n    [data]=\\"data\\"\\n    [config]=\\"config\\"\\n    [loading]=\\"loading$\\"\\n  >\\n    <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n    <div class=\\"table-no-data alert alert-info mt-3\\">Table is empty</div>\\n  </angular-generic-table>\\n</div>\\n<ng-template #feelings let-row=\\"row\\" let-col=\\"col\\">\\n  <div [ngSwitch]=\\"row[col.key]\\">\\n    <ng-container *ngSwitchCase=\\"\'thrilled\'\\">😀</ng-container>\\n    <ng-container *ngSwitchCase=\\"\'positive\'\\">🙂</ng-container>\\n    <ng-container *ngSwitchCase=\\"\'neutral\'\\">😐</ng-container>\\n    <ng-container *ngSwitchCase=\\"\'negative\'\\">😭</ng-container>\\n  </div>\\n</ng-template>\\n<ng-template #delta let-data=\\"data\\" let-index=\\"index\\">\\n  <gt-delta [index]=\\"index\\" [data]=\\"data\\"></gt-delta>\\n</ng-template>\\n<ng-template #deltaIndex let-data=\\"data\\" let-index=\\"index\\">\\n  <gt-delta [index]=\\"index\\" [baseIndex]=\\"0\\" [data]=\\"data\\"></gt-delta>\\n</ng-template>\\n<docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"config","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"TableConfig","optional":false,"description":"","line":54},{"name":"data","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":55},{"name":"delta","deprecated":false,"deprecationMessage":"","type":"TemplateRef<GtDeltaComponent> | undefined","optional":false,"description":"","line":47,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'delta\', {static: true}"}]},{"name":"deltaIndex","deprecated":false,"deprecationMessage":"","type":"TemplateRef<GtDeltaComponent> | undefined","optional":false,"description":"","line":50,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'deltaIndex\', {static: true}"}]},{"name":"feelings","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any> | undefined","optional":false,"description":"","line":44,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'feelings\', {static: true}"}]},{"name":"loading$","defaultValue":"new BehaviorSubject(false)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":53},{"name":"SNIPPETS","defaultValue":"HORIZONTAL_TABLE_SNIPPETS","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":127}],"methodsClass":[{"name":"empty","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":94,"deprecated":false,"deprecationMessage":""},{"name":"load","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":97,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":57,"deprecated":false,"deprecationMessage":""},{"name":"simulateLoad","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":89,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { HORIZONTAL_TABLE_SNIPPETS } from \'./horizontal-table.snippets\';\\nimport { GtDeltaComponent, TableConfig } from \'@angular-generic-table/core\';\\nimport { BehaviorSubject } from \'rxjs\';\\n\\n@Component({\\n  selector: \'docs-horizontal-table\',\\n  template: `\\n    <button class=\\"btn btn-outline-primary\\" (click)=\\"simulateLoad()\\">\\n      Simulate load\\n    </button>\\n    <button class=\\"btn btn-outline-danger mx-3\\" (click)=\\"empty()\\">Empty</button>\\n    <button class=\\"btn btn-outline-primary\\" (click)=\\"load()\\">Reset</button>\\n    <div class=\\"overflow-auto\\">\\n      <angular-generic-table\\n        [data]=\\"data\\"\\n        [config]=\\"config\\"\\n        [loading]=\\"loading$\\"\\n      >\\n        <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n        <div class=\\"table-no-data alert alert-info mt-3\\">Table is empty</div>\\n      </angular-generic-table>\\n    </div>\\n    <ng-template #feelings let-row=\\"row\\" let-col=\\"col\\">\\n      <div [ngSwitch]=\\"row[col.key]\\">\\n        <ng-container *ngSwitchCase=\\"\'thrilled\'\\">😀</ng-container>\\n        <ng-container *ngSwitchCase=\\"\'positive\'\\">🙂</ng-container>\\n        <ng-container *ngSwitchCase=\\"\'neutral\'\\">😐</ng-container>\\n        <ng-container *ngSwitchCase=\\"\'negative\'\\">😭</ng-container>\\n      </div>\\n    </ng-template>\\n    <ng-template #delta let-data=\\"data\\" let-index=\\"index\\">\\n      <gt-delta [index]=\\"index\\" [data]=\\"data\\"></gt-delta>\\n    </ng-template>\\n    <ng-template #deltaIndex let-data=\\"data\\" let-index=\\"index\\">\\n      <gt-delta [index]=\\"index\\" [baseIndex]=\\"0\\" [data]=\\"data\\"></gt-delta>\\n    </ng-template>\\n    <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n  `,\\n  styles: [],\\n})\\nexport class HorizontalTableComponent implements OnInit {\\n  @ViewChild(\'feelings\', { static: true }) feelings:\\n    | TemplateRef<any>\\n    | undefined;\\n  @ViewChild(\'delta\', { static: true }) delta:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  @ViewChild(\'deltaIndex\', { static: true }) deltaIndex:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  loading$ = new BehaviorSubject(false);\\n  config: TableConfig = {};\\n  data: any = [];\\n\\n  ngOnInit(): void {\\n    this.config = {\\n      stickyHeaders: {\\n        row: true,\\n      },\\n      mobileLayout: true,\\n      rows: {\\n        year: {\\n          class: \'text-end\',\\n          header: false,\\n        },\\n        value: {\\n          class: \'text-end\',\\n        },\\n        delta: {\\n          header: \'Delta %\',\\n          templateRef: this.delta,\\n          class: \'text-end\',\\n        },\\n        deltaIndex: {\\n          header: \'Since inception %\',\\n          templateRef: this.deltaIndex,\\n          class: \'text-end\',\\n        },\\n        feeling: {\\n          templateRef: this.feelings,\\n          class: \'text-end\',\\n        },\\n      },\\n    };\\n    this.load();\\n  }\\n  simulateLoad(): void {\\n    this.loading$.next(true);\\n    // set loading state to false after 2 seconds\\n    setTimeout(() => this.loading$.next(false), 2000);\\n  }\\n  empty(): void {\\n    this.data = [];\\n  }\\n  load(): void {\\n    this.data = [\\n      {\\n        year: \'2017\',\\n        value: 50,\\n        feeling: \'neutral\',\\n      },\\n      {\\n        year: \'2018\',\\n        value: 75,\\n        feeling: \'positive\',\\n      },\\n      {\\n        year: \'2019\',\\n        value: 100,\\n        feeling: \'thrilled\',\\n      },\\n      {\\n        year: \'2020\',\\n        value: 250,\\n        feeling: \'thrilled\',\\n      },\\n      {\\n        year: \'2021\',\\n        value: 50,\\n        feeling: \'negative\',\\n      },\\n    ];\\n  }\\n\\n  SNIPPETS = HORIZONTAL_TABLE_SNIPPETS;\\n}\\n\\nexport const Horizontal: Story<HorizontalTableComponent> = (\\n  args: HorizontalTableComponent\\n) => ({\\n  props: args,\\n  component: HorizontalTableComponent,\\n});\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","implements":["OnInit"]},{"name":"MobileLayoutComponent","id":"component-MobileLayoutComponent-2ccdf200e7b7f3afa39e0e6fdca8c7ea0f53af37d1eb3722378cbcaba073ec2e8a214f10e4485e4464b0ea63b3d083009815564424e37fbd8206a83200f4ed92","file":"projects/docs/src/app/examples/mobile-layout/mobile-layout.component.ts","encapsulation":["ViewEncapsulation.None"],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"docs-mobile-layout","styleUrls":[],"styles":["\\n      .table th {\\n        white-space: nowrap;\\n      }\\n    "],"template":"<div class=\\"d-flex justify-content-end mb-1 align-items-center\\">\\n  {{ clicked }}\\n  <button class=\\"btn btn-link d-sm-none \\" (click)=\\"toggleLayout()\\">\\n    {{ (mobileLayout$ | async) ? \'Desktop \' : \'Mobile \' }} layout\\n  </button>\\n</div>\\n<div [class.overflow-auto]=\\"(mobileLayout$ | async) === false\\">\\n  <angular-generic-table\\n    [data]=\\"data\\"\\n    [config]=\\"config$\\"\\n  ></angular-generic-table>\\n</div>\\n<ng-template #actions let-row=\\"row\\" let-col=\\"col\\" let-index=\\"index\\">\\n  <button\\n    class=\\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\\"\\n    (click)=\\"clickAction(row, col, index)\\"\\n  >\\n    Click me!\\n  </button>\\n</ng-template>\\n<docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"actions","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any> | undefined","optional":false,"description":"","line":63,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'actions\', {static: true}"}]},{"name":"clicked","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":64},{"name":"config$","defaultValue":"this.mobileLayout$.pipe(\\n    map((mobileLayout) => ({\\n      mobileLayout,\\n      columns: {\\n        firstName: {\\n          mobileHeader: true,\\n          sortable: true,\\n        },\\n        lastName: {\\n          mobileHeader: true,\\n          sortable: true,\\n        },\\n        gender: {\\n          mobileHeader: true,\\n          transform: {\\n            pipe: GenderPipe,\\n          },\\n        },\\n        favoriteFood: {\\n          mobileHeader: true,\\n        },\\n        action: {\\n          mobileHeader: false,\\n          header: false,\\n          templateRef: this.actions,\\n        },\\n      },\\n    }))\\n  )","deprecated":false,"deprecationMessage":"","type":"Observable<TableConfig>","optional":false,"description":"","line":81},{"name":"data","defaultValue":"[\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":67},{"name":"mobileLayout$","defaultValue":"new BehaviorSubject(true)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":66},{"name":"SNIPPETS","defaultValue":"MOBILE_LAYOUT_SNIPPETS","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":111},{"name":"toggleLayout","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":113}],"methodsClass":[{"name":"clickAction","args":[{"name":"row","type":"TableRow","deprecated":false,"deprecationMessage":""},{"name":"column","type":"literal type","deprecated":false,"deprecationMessage":""},{"name":"index","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":116,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"row","type":"TableRow","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"column","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  Component,\\n  Pipe,\\n  PipeTransform,\\n  TemplateRef,\\n  ViewChild,\\n  ViewEncapsulation,\\n} from \'@angular/core\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport {\\n  TableColumn,\\n  TableConfig,\\n  TableRow,\\n} from \'@angular-generic-table/core\';\\nimport { BehaviorSubject, Observable } from \'rxjs\';\\nimport { map } from \'rxjs/operators\';\\nimport { MOBILE_LAYOUT_SNIPPETS } from \'./mobileLayout.snippets\';\\n\\n@Pipe({\\n  name: \'genderPipe\',\\n})\\nexport class GenderPipe implements PipeTransform {\\n  transform(gender: \'male\' | \'female\'): string {\\n    return gender === \'male\' ? \'👨\' : \'👩\';\\n  }\\n}\\n\\n@Component({\\n  selector: \'docs-mobile-layout\',\\n  template: `\\n    <div class=\\"d-flex justify-content-end mb-1 align-items-center\\">\\n      {{ clicked }}\\n      <button class=\\"btn btn-link d-sm-none \\" (click)=\\"toggleLayout()\\">\\n        {{ (mobileLayout$ | async) ? \'Desktop \' : \'Mobile \' }} layout\\n      </button>\\n    </div>\\n    <div [class.overflow-auto]=\\"(mobileLayout$ | async) === false\\">\\n      <angular-generic-table\\n        [data]=\\"data\\"\\n        [config]=\\"config$\\"\\n      ></angular-generic-table>\\n    </div>\\n    <ng-template #actions let-row=\\"row\\" let-col=\\"col\\" let-index=\\"index\\">\\n      <button\\n        class=\\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\\"\\n        (click)=\\"clickAction(row, col, index)\\"\\n      >\\n        Click me!\\n      </button>\\n    </ng-template>\\n    <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n  `,\\n  styles: [\\n    `\\n      .table th {\\n        white-space: nowrap;\\n      }\\n    `,\\n  ],\\n  encapsulation: ViewEncapsulation.None,\\n})\\nexport class MobileLayoutComponent {\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  clicked = \'\';\\n\\n  mobileLayout$ = new BehaviorSubject(true);\\n  data = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ];\\n  config$: Observable<TableConfig> = this.mobileLayout$.pipe(\\n    map((mobileLayout) => ({\\n      mobileLayout,\\n      columns: {\\n        firstName: {\\n          mobileHeader: true,\\n          sortable: true,\\n        },\\n        lastName: {\\n          mobileHeader: true,\\n          sortable: true,\\n        },\\n        gender: {\\n          mobileHeader: true,\\n          transform: {\\n            pipe: GenderPipe,\\n          },\\n        },\\n        favoriteFood: {\\n          mobileHeader: true,\\n        },\\n        action: {\\n          mobileHeader: false,\\n          header: false,\\n          templateRef: this.actions,\\n        },\\n      },\\n    }))\\n  );\\n\\n  SNIPPETS = MOBILE_LAYOUT_SNIPPETS;\\n\\n  toggleLayout = (): void => {\\n    this.mobileLayout$.next(!this.mobileLayout$.getValue());\\n  };\\n  clickAction(\\n    row: TableRow,\\n    column: { key: string; value: TableColumn },\\n    index: number\\n  ): void {\\n    console.log(\'clicked row:\', row, \'col:\', column);\\n    this.clicked = `Clicked row number: ${index}`;\\n  }\\n}\\n\\nexport const Mobile: Story<MobileLayoutComponent> = (\\n  args: MobileLayoutComponent\\n) => ({\\n  props: args,\\n  component: MobileLayoutComponent,\\n});\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"\\n      .table th {\\n        white-space: nowrap;\\n      }\\n    \\n"},{"name":"NestedDataComponent","id":"component-NestedDataComponent-04a1d485521dad8971455ab5319b9f61d0a1d60bd1e65141e5361e4e4c86e61215cc9827e2cc5f02aafd2b325c567aafdc84afe04ea907618fd71567987b3421","file":"projects/docs/src/app/examples/nested-data/nested-data.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"nested-data","styleUrls":[],"styles":[],"template":"<div class=\\"row gy-3\\">\\n  <div class=\\"col col-sm-auto\\">\\n    <button class=\\"btn btn-outline-primary mb-3\\" (click)=\\"loadData()\\">\\n      Load other data\\n    </button>\\n  </div>\\n  <div class=\\"col col-sm-auto\\">\\n    <button class=\\"btn btn-outline-primary mb-3\\" (click)=\\"resetData()\\">\\n      Reset\\n    </button>\\n  </div>\\n</div>\\n<div class=\\"overflow-auto\\">\\n  <angular-generic-table\\n    [data]=\\"data\\"\\n    [config]=\\"config\\"\\n  ></angular-generic-table>\\n</div>\\n<docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n<ng-template #gender let-row=\\"row\\" let-col=\\"col\\">\\n  <div [ngSwitch]=\\"row[col.key]\\">\\n    <ng-container *ngSwitchCase=\\"\'male\'\\">♂️</ng-container>\\n    <ng-container *ngSwitchCase=\\"\'female\'\\">♀️</ng-container>\\n  </div>\\n</ng-template>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"config","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"TableConfig<Data>","optional":false,"description":"","line":59},{"name":"data","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<NestedData>","optional":false,"description":"","line":60},{"name":"gender","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any> | undefined","optional":false,"description":"","line":57,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'gender\', {static: true}"}]},{"name":"SNIPPETS","defaultValue":"NESTED_SNIPPETS","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":153}],"methodsClass":[{"name":"loadData","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":""},{"name":"resetData","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":88,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { NESTED_SNIPPETS } from \'./nested.snippets\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { TableConfig } from \'@angular-generic-table/core\';\\ninterface NestedData {\\n  name: {\\n    first: string;\\n    last: string;\\n  };\\n  data: {\\n    details?: {\\n      gender: \'male\' | \'female\';\\n      favoriteFood: \'Pasta\' | \'Pizza\';\\n    };\\n  };\\n}\\n\\ninterface Data {\\n  firstName: string;\\n  lastName: string;\\n  gender: \'male\' | \'female\';\\n  favoriteFood: \'Pasta\' | \'Pizza\';\\n  missing: string;\\n}\\n@Component({\\n  selector: \'nested-data\',\\n  template: `\\n    <div class=\\"row gy-3\\">\\n      <div class=\\"col col-sm-auto\\">\\n        <button class=\\"btn btn-outline-primary mb-3\\" (click)=\\"loadData()\\">\\n          Load other data\\n        </button>\\n      </div>\\n      <div class=\\"col col-sm-auto\\">\\n        <button class=\\"btn btn-outline-primary mb-3\\" (click)=\\"resetData()\\">\\n          Reset\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\"overflow-auto\\">\\n      <angular-generic-table\\n        [data]=\\"data\\"\\n        [config]=\\"config\\"\\n      ></angular-generic-table>\\n    </div>\\n    <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n    <ng-template #gender let-row=\\"row\\" let-col=\\"col\\">\\n      <div [ngSwitch]=\\"row[col.key]\\">\\n        <ng-container *ngSwitchCase=\\"\'male\'\\">♂️</ng-container>\\n        <ng-container *ngSwitchCase=\\"\'female\'\\">♀️</ng-container>\\n      </div>\\n    </ng-template>\\n  `,\\n  styles: [],\\n})\\nexport class NestedDataComponent implements OnInit {\\n  @ViewChild(\'gender\', { static: true }) gender: TemplateRef<any> | undefined;\\n\\n  config: TableConfig<Data> = {};\\n  data: Array<NestedData> = [];\\n  ngOnInit(): void {\\n    this.resetData();\\n    this.config = {\\n      columns: {\\n        firstName: {\\n          sortable: true,\\n          mapTo: { path: \'name.first\' },\\n        },\\n        lastName: {\\n          sortable: true,\\n          mapTo: { path: \'name.last\' },\\n        },\\n        gender: {\\n          mapTo: { path: \'data.details.gender\' },\\n          templateRef: this.gender,\\n        },\\n        favoriteFood: {\\n          sortable: true,\\n          mapTo: { path: \'data.details.favoriteFood\', missingValue: \'n/a\' },\\n        },\\n        missing: {\\n          mapTo: { path: \'data.missingKey.noMatch\', missingValue: \'n/a\' },\\n        },\\n      },\\n    };\\n  }\\n\\n  resetData() {\\n    this.data = [\\n      {\\n        name: {\\n          first: \'Peter\',\\n          last: \'Parker\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'male\',\\n            favoriteFood: \'Pasta\',\\n          },\\n        },\\n      },\\n      {\\n        name: {\\n          first: \'Mary Jane\',\\n          last: \'Watson\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'female\',\\n            favoriteFood: \'Pizza\',\\n          },\\n        },\\n      },\\n    ];\\n  }\\n\\n  loadData(): void {\\n    this.data = [\\n      {\\n        name: {\\n          first: \'John\',\\n          last: \'Doe\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'male\',\\n            favoriteFood: \'Pasta\',\\n          },\\n        },\\n      },\\n      {\\n        name: {\\n          first: \'Jane\',\\n          last: \'Doe\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'female\',\\n            favoriteFood: \'Pizza\',\\n          },\\n        },\\n      },\\n      {\\n        name: {\\n          first: \'Foo\',\\n          last: \'Bar\',\\n        },\\n        data: {},\\n      },\\n    ];\\n  }\\n\\n  SNIPPETS = NESTED_SNIPPETS;\\n}\\n\\nexport const Nested: Story<NestedDataComponent> = (\\n  args: NestedDataComponent\\n) => ({\\n  props: args,\\n  component: NestedDataComponent,\\n});\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","implements":["OnInit"]},{"name":"PaginationComponent","id":"component-PaginationComponent-f41dcb9eb9b3d9479c0ad637906cb4f93d17730ea480dfacf5af6dd2068485a68d6cce0c42050f6e9bb4fd325d0a31a143a14cb4f85a00b68005404936f72379","file":"projects/core/src/lib/pagination/pagination.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"angular-generic-table-pagination","styleUrls":[],"styles":[],"templateUrl":["./pagination.component.html"],"viewProviders":[],"inputsClass":[{"name":"ariaLabels","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":2112,"end":2177,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":2113,"end":2124,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"description"},"comment":"<p>aria labels that describe pagination component</p>\\n"},{"pos":2177,"end":2315,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":341,"tagName":{"pos":2178,"end":2182,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":151,"escapedText":"type"},"comment":"<ul>\\n<li>aria labels for pagination. Defaults to: <code>{ nav: &#39;Table pagination&#39;, button: &#39;Go to page &#39;, }</code></li>\\n</ul>\\n","typeExpression":{"pos":2183,"end":2189,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":307,"type":{"pos":2183,"end":2189,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":177,"typeName":{"pos":2183,"end":2189,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"labels"}}}}],"rawdescription":"\\nariaLabels\\n    nav: \'Table pagination\',\\n    button: \'Go to page \',\\n  }`\\n","description":"<p>ariaLabels\\n    nav: &#39;Table pagination&#39;,\\n    button: &#39;Go to page &#39;,\\n  }`</p>\\n","line":76,"type":"GtPaginationAriaLabels","decorators":[]},{"name":"classes","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1675,"end":1772,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1676,"end":1687,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"description"},"comment":"<p>classes that should be used within pagination component for different elements</p>\\n"},{"pos":1772,"end":1920,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":341,"tagName":{"pos":1773,"end":1777,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":151,"escapedText":"type"},"comment":"<ul>\\n<li>classes to be used. Defaults to: <code>{ ul: &#39;pagination&#39;, li: &#39;page-item&#39;, button: &#39;page-link&#39;, }</code></li>\\n</ul>\\n","typeExpression":{"pos":1778,"end":1785,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":307,"type":{"pos":1778,"end":1785,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":177,"typeName":{"pos":1778,"end":1785,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"classes"}}}}],"rawdescription":"\\nclasses\\n    ul: \'pagination\',\\n    li: \'page-item\',\\n    button: \'page-link\',\\n  }`\\n","description":"<p>classes\\n    ul: &#39;pagination&#39;,\\n    li: &#39;page-item&#39;,\\n    button: &#39;page-link&#39;,\\n  }`</p>\\n","line":62,"type":"GtPaginationClasses","decorators":[]},{"name":"paginationLength","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1371,"end":1429,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1372,"end":1383,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"description"},"comment":"<p>number of buttons to show in pagination</p>\\n"},{"pos":1429,"end":1491,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":341,"tagName":{"pos":1430,"end":1434,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":151,"escapedText":"type"},"comment":"<ul>\\n<li>number of buttons to show. Defaults to: <code>5</code></li>\\n</ul>\\n","typeExpression":{"pos":1435,"end":1441,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":307,"type":{"pos":1435,"end":1441,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":177,"typeName":{"pos":1435,"end":1441,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"length"}}}}],"rawdescription":"\\npaginationLength\\n","description":"<p>paginationLength</p>\\n","line":47,"type":"number","decorators":[]},{"name":"pagingInfo","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":932,"end":1130,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":933,"end":944,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"description"},"comment":"<p>when provided, pagination component will use this information to render pagination instead of data from table. Use this option when pagination is handled by backend (server side).</p>\\n"},{"pos":1130,"end":1180,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":341,"tagName":{"pos":1131,"end":1135,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":151,"escapedText":"type"},"comment":"<ul>\\n<li>metadata for pagination component</li>\\n</ul>\\n","typeExpression":{"pos":1136,"end":1140,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":307,"type":{"pos":1136,"end":1140,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":177,"typeName":{"pos":1136,"end":1140,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"info"}}}}],"rawdescription":"\\npagingInfo\\n","description":"<p>pagingInfo</p>\\n","line":36,"type":"GtPaginationInfo","decorators":[]},{"name":"table","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":2505,"end":2571,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":2506,"end":2517,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"description"},"comment":"<p>table component to which pagination is attached</p>\\n"},{"pos":2571,"end":2607,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":341,"tagName":{"pos":2572,"end":2576,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":151,"escapedText":"type"},"comment":"<ul>\\n<li>table component</li>\\n</ul>\\n","typeExpression":{"pos":2577,"end":2585,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":307,"type":{"pos":2577,"end":2585,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":177,"typeName":{"pos":2577,"end":2585,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"tableRef"}}}}],"rawdescription":"\\ntable\\n","description":"<p>table</p>\\n","line":87,"type":"CoreComponent","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"_ariaLabels","defaultValue":"{\\n    nav: \'Table pagination\',\\n    button: \'Go to page \',\\n  }","deprecated":false,"deprecationMessage":"","type":"GtPaginationAriaLabels","optional":false,"description":"","line":95,"modifierKind":[121]},{"name":"_classes","defaultValue":"{\\n    ul: \'pagination\',\\n    li: \'page-item\',\\n    button: \'page-link\',\\n  }","deprecated":false,"deprecationMessage":"","type":"GtPaginationClasses","optional":false,"description":"","line":99,"modifierKind":[121]},{"name":"_paginationLength","defaultValue":"5","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":104,"modifierKind":[121]},{"name":"_pagingInfo","deprecated":false,"deprecationMessage":"","type":"GtPaginationInfo | undefined","optional":false,"description":"","line":92,"modifierKind":[121]},{"name":"_table","deprecated":false,"deprecationMessage":"","type":"CoreComponent | undefined","optional":false,"description":"","line":94,"modifierKind":[121]},{"name":"_table$","defaultValue":"new ReplaySubject(1)","deprecated":false,"deprecationMessage":"","type":"ReplaySubject<CoreComponent>","optional":false,"description":"","line":93,"modifierKind":[121]},{"name":"paginationListItems$","defaultValue":"this._table$.pipe(\\n    switchMap((core) =>\\n      combineLatest([\\n        core?.table$.pipe(pluck(\'info\')),\\n        core?.currentPaginationIndex$,\\n      ])\\n    ),\\n    map(([info, currentPage]) =>\\n      this._generateList(info.pageTotal, currentPage)\\n    ),\\n    shareReplay(1)\\n  )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>paginationListItems$ - observable for page numbers to show based on number of pages and current position</p>\\n","line":107,"rawdescription":"\\npaginationListItems$ - observable for page numbers to show based on number of pages and current position"}],"methodsClass":[{"name":"_generateList","args":[{"name":"numberOfPages","type":"number","deprecated":false,"deprecationMessage":""},{"name":"currentPosition","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Array<number>","typeParameters":[],"line":125,"deprecated":false,"deprecationMessage":"","rawdescription":"\\ngenerate list - generate an array with page numbers to show based on number of pages and current position\\n","description":"<p>generate list - generate an array with page numbers to show based on number of pages and current position</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":3709,"end":3722,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"numberOfPages"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":3703,"end":3708,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>number of pages to show</p>\\n"},{"name":{"pos":3759,"end":3774,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"currentPosition"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":3753,"end":3758,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>current position (page index) being shown in table</p>\\n"},{"tagName":{"pos":3832,"end":3839,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Array<number> array of page numbers to show</p>\\n"}]},{"name":"goToPage","args":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":171,"deprecated":false,"deprecationMessage":"","rawdescription":"\\ngo to page\\n","description":"<p>go to page</p>\\n","jsdoctags":[{"name":{"pos":5150,"end":5155,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"index"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":5144,"end":5149,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>page index to go to</li>\\n</ul>\\n"}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\nimport { combineLatest, ReplaySubject } from \'rxjs\';\\nimport { map, pluck, shareReplay, switchMap } from \'rxjs/operators\';\\nimport { CoreComponent } from \'../core.component\';\\nimport {\\n  GtPaginationAriaLabels,\\n  GtPaginationClasses,\\n  GtPaginationInfo,\\n} from \'../models/gt-pagination\';\\nimport { CommonModule } from \'@angular/common\';\\n\\n@Component({\\n  selector: \'angular-generic-table-pagination\',\\n  templateUrl: \'./pagination.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  standalone: true,\\n  imports: [CommonModule],\\n})\\nexport class PaginationComponent {\\n  get pagingInfo(): GtPaginationInfo {\\n    return (\\n      this._pagingInfo || {\\n        pageNext: null,\\n        pageCurrent: null,\\n        pagePrevious: null,\\n        pageSize: null,\\n        numberOfRecords: null,\\n        pageTotal: null,\\n      }\\n    );\\n  }\\n  /** pagingInfo\\n   * @description when provided, pagination component will use this information to render pagination instead of data from table. Use this option when pagination is handled by backend (server side).\\n   * @type info - metadata for pagination component\\n   */\\n  @Input() set pagingInfo(info: GtPaginationInfo) {\\n    this._pagingInfo = info;\\n  }\\n  get paginationLength(): number {\\n    return this._paginationLength;\\n  }\\n\\n  /** paginationLength\\n   * @description number of buttons to show in pagination\\n   * @type length - number of buttons to show. Defaults to: `5`\\n   */\\n  @Input() set paginationLength(length: number) {\\n    this._paginationLength = +length;\\n  }\\n  get classes(): GtPaginationClasses {\\n    return this._classes;\\n  }\\n\\n  /** classes\\n   * @description classes that should be used within pagination component for different elements\\n   * @type classes - classes to be used. Defaults to: `{\\n   *     ul: \'pagination\',\\n   *     li: \'page-item\',\\n   *     button: \'page-link\',\\n   *   }`\\n   */\\n  @Input() set classes(classes: GtPaginationClasses) {\\n    this._classes = classes;\\n  }\\n  get ariaLabels(): GtPaginationAriaLabels {\\n    return this._ariaLabels;\\n  }\\n\\n  /** ariaLabels\\n   * @description aria labels that describe pagination component\\n   * @type labels - aria labels for pagination. Defaults to: `{\\n   *     nav: \'Table pagination\',\\n   *     button: \'Go to page \',\\n   *   }`\\n   */\\n  @Input() set ariaLabels(labels: GtPaginationAriaLabels) {\\n    this._ariaLabels = labels;\\n  }\\n  get table(): CoreComponent {\\n    return <CoreComponent>this._table;\\n  }\\n\\n  /** table\\n   * @description table component to which pagination is attached\\n   * @type tableRef - table component\\n   */\\n  @Input() set table(tableRef: CoreComponent) {\\n    this._table = tableRef;\\n    this._table$.next(tableRef);\\n  }\\n\\n  private _pagingInfo: GtPaginationInfo | undefined;\\n  private _table$: ReplaySubject<CoreComponent> = new ReplaySubject(1);\\n  private _table: CoreComponent | undefined;\\n  private _ariaLabels: GtPaginationAriaLabels = {\\n    nav: \'Table pagination\',\\n    button: \'Go to page \',\\n  };\\n  private _classes: GtPaginationClasses = {\\n    ul: \'pagination\',\\n    li: \'page-item\',\\n    button: \'page-link\',\\n  };\\n  private _paginationLength: number = 5;\\n\\n  /** paginationListItems$ - observable for page numbers to show based on number of pages and current position  */\\n  paginationListItems$ = this._table$.pipe(\\n    switchMap((core) =>\\n      combineLatest([\\n        core?.table$.pipe(pluck(\'info\')),\\n        core?.currentPaginationIndex$,\\n      ])\\n    ),\\n    map(([info, currentPage]) =>\\n      this._generateList(info.pageTotal, currentPage)\\n    ),\\n    shareReplay(1)\\n  );\\n\\n  /** generate list - generate an array with page numbers to show based on number of pages and current position\\n   * @param numberOfPages number of pages to show\\n   * @param currentPosition current position (page index) being shown in table\\n   * @returns Array<number> array of page numbers to show\\n   */\\n  private _generateList(\\n    numberOfPages: number,\\n    currentPosition: number\\n  ): Array<number> {\\n    const middle = Math.floor(this.paginationLength / 2);\\n    const length =\\n      numberOfPages < this.paginationLength\\n        ? numberOfPages\\n        : this.paginationLength;\\n\\n    return Array.from({ length }, (_, i) => {\\n      if (i === 0) {\\n        return 1;\\n      } else if (numberOfPages < this.paginationLength) {\\n        return i + 1;\\n      } else if (i + 1 === length) {\\n        return numberOfPages;\\n      } else if (\\n        currentPosition > middle &&\\n        currentPosition < numberOfPages - middle\\n      ) {\\n        return i + currentPosition - (middle - 1);\\n      } else if (\\n        currentPosition > middle &&\\n        currentPosition < numberOfPages - (middle - 1)\\n      ) {\\n        return i + currentPosition - middle;\\n      } else if (\\n        currentPosition > middle &&\\n        currentPosition === numberOfPages - (middle - 1)\\n      ) {\\n        return i + currentPosition - (middle + 1);\\n      } else if (\\n        currentPosition > middle &&\\n        currentPosition === numberOfPages - 1\\n      ) {\\n        return i + currentPosition - (middle + 2);\\n      } else {\\n        return i + 1;\\n      }\\n    });\\n  }\\n\\n  /** go to page\\n   * @param index - page index to go to\\n   */\\n  goToPage(index: number): void {\\n    if (this.table) {\\n      this.table.paginationIndex = index - 1;\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","accessors":{"pagingInfo":{"name":"pagingInfo","setSignature":{"name":"pagingInfo","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"info","type":"GtPaginationInfo","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":36,"rawdescription":"\\npagingInfo\\n","description":"<p>pagingInfo</p>\\n","jsdoctags":[{"name":"info","type":"GtPaginationInfo","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"pagingInfo","type":"","returnType":"GtPaginationInfo","line":20}},"paginationLength":{"name":"paginationLength","setSignature":{"name":"paginationLength","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"length","type":"number","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":47,"rawdescription":"\\npaginationLength\\n","description":"<p>paginationLength</p>\\n","jsdoctags":[{"name":"length","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"paginationLength","type":"number","returnType":"number","line":39}},"classes":{"name":"classes","setSignature":{"name":"classes","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"classes","type":"GtPaginationClasses","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":62,"rawdescription":"\\nclasses\\n    ul: \'pagination\',\\n    li: \'page-item\',\\n    button: \'page-link\',\\n  }`\\n","description":"<p>classes\\n    ul: &#39;pagination&#39;,\\n    li: &#39;page-item&#39;,\\n    button: &#39;page-link&#39;,\\n  }`</p>\\n","jsdoctags":[{"name":"classes","type":"GtPaginationClasses","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"classes","type":"","returnType":"GtPaginationClasses","line":50}},"ariaLabels":{"name":"ariaLabels","setSignature":{"name":"ariaLabels","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"labels","type":"GtPaginationAriaLabels","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":76,"rawdescription":"\\nariaLabels\\n    nav: \'Table pagination\',\\n    button: \'Go to page \',\\n  }`\\n","description":"<p>ariaLabels\\n    nav: &#39;Table pagination&#39;,\\n    button: &#39;Go to page &#39;,\\n  }`</p>\\n","jsdoctags":[{"name":"labels","type":"GtPaginationAriaLabels","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"ariaLabels","type":"","returnType":"GtPaginationAriaLabels","line":65}},"table":{"name":"table","setSignature":{"name":"table","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"tableRef","type":"CoreComponent","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":87,"rawdescription":"\\ntable\\n","description":"<p>table</p>\\n","jsdoctags":[{"name":"tableRef","type":"CoreComponent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"table","type":"","returnType":"CoreComponent","line":79}}},"templateData":"<ng-container\\n  *ngIf=\\"{\\n    links: paginationListItems$ | async,\\n    currentPosition: table?.currentPaginationIndex$ | async\\n  } as pagination\\"\\n>\\n  <nav\\n    *ngIf=\\"pagination.links && pagination.links.length > 1\\"\\n    role=\\"navigation\\"\\n    [attr.aria-label]=\\"ariaLabels.nav\\"\\n    class=\\"gt-pagination\\"\\n    [class]=\\"classes.nav\\"\\n  >\\n    <ul [class]=\\"classes.ul\\">\\n      <ng-container\\n        *ngFor=\\"\\n          let position of pagination!.links;\\n          let i = index;\\n          let last = last\\n        \\"\\n      >\\n        <li\\n          [class]=\\"classes.li\\"\\n          [class.active]=\\"position === (pagination!.currentPosition || 0) + 1\\"\\n        >\\n          <button\\n            [class]=\\"classes.button\\"\\n            [attr.aria-label]=\\"ariaLabels.button + position\\"\\n            (click)=\\"goToPage(position)\\"\\n          >\\n            {{ position }}\\n          </button>\\n        </li>\\n        <li\\n          [class]=\\"classes.li\\"\\n          class=\\"gt-ellipsis\\"\\n          *ngIf=\\"position + 1 !== pagination!.links![i + 1] && !last\\"\\n        >\\n          <button [class]=\\"classes.button\\" disabled tabindex=\\"-1\\"></button>\\n        </li>\\n      </ng-container>\\n    </ul>\\n  </nav>\\n</ng-container>\\n"},{"name":"PaginationComponent","id":"component-PaginationComponent-4e6e8e4d5250575d577b279ad5d214c85c8eaf92b8a54835f9917a7b8965dd6cb098c13a624394f0d651c0a53d664c04fa3c1a526c4b017fcd736d432b2f4c2c-1","file":"projects/docs/src/app/examples/pagination/pagination.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"docs-pagination","styleUrls":[],"styles":[],"templateUrl":["./pagination.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"actions","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any> | undefined","optional":false,"description":"","line":18,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'actions\', {static: true}"}]},{"name":"color","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any> | undefined","optional":false,"description":"","line":19,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'color\', {static: true}"}]},{"name":"data$","defaultValue":"this.http\\n    .get(\'https://private-730c61-generictable.apiary-mock.com/data\')\\n    .pipe(\\n      pluck(\'data\'),\\n      tap((_) => this.loading$.next(false))\\n    )","deprecated":false,"deprecationMessage":"","type":"Observable<any>","optional":false,"description":"","line":27},{"name":"loading$","defaultValue":"new BehaviorSubject(true)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":26},{"name":"paginationForm","defaultValue":"this.fb.group({\\n    length: [10],\\n    search: [\'\'],\\n  })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":20},{"name":"search$","defaultValue":"this.paginationForm.get(\'search\')\\n    ?.valueChanges as Observable<string>","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":24},{"name":"SNIPPETS","defaultValue":"ADVANCED_DOCS","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":35},{"name":"tableConfig$","defaultValue":"new ReplaySubject(1)","deprecated":false,"deprecationMessage":"","type":"ReplaySubject<TableConfig>","optional":false,"description":"","line":34}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { BehaviorSubject, Observable, ReplaySubject } from \'rxjs\';\\nimport { UntypedFormBuilder } from \'@angular/forms\';\\nimport { TableConfig } from \'@angular-generic-table/core\';\\nimport { pluck, tap, withLatestFrom } from \'rxjs/operators\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { ADVANCED_DOCS } from \'./pagination.snippets\';\\nimport { HttpClient } from \'@angular/common/http\';\\nimport { DatePipe, formatDate } from \'@angular/common\';\\n\\n@Component({\\n  selector: \'docs-pagination\',\\n  templateUrl: \'./pagination.component.html\',\\n  styles: [],\\n})\\nexport class PaginationComponent implements OnInit {\\n  constructor(private fb: UntypedFormBuilder, private http: HttpClient) {}\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  @ViewChild(\'color\', { static: true }) color: TemplateRef<any> | undefined;\\n  paginationForm = this.fb.group({\\n    length: [10],\\n    search: [\'\'],\\n  });\\n  search$ = this.paginationForm.get(\'search\')\\n    ?.valueChanges as Observable<string>;\\n  loading$ = new BehaviorSubject(true);\\n  data$: Observable<any> = this.http\\n    .get(\'https://private-730c61-generictable.apiary-mock.com/data\')\\n    .pipe(\\n      pluck(\'data\'),\\n      tap((_) => this.loading$.next(false))\\n    );\\n\\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\\n  SNIPPETS = ADVANCED_DOCS;\\n\\n  ngOnInit(): void {\\n    this.paginationForm\\n      .get(\'length\')\\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\\n      .subscribe(([length, config]) => {\\n        length = +length;\\n        this.tableConfig$.next({\\n          ...config,\\n          pagination: { ...config.pagination, length },\\n        });\\n      });\\n    this.tableConfig$.next({\\n      class: \'table text-nowrap\',\\n      columns: {\\n        first_name: {\\n          sortable: true,\\n        },\\n        last_name: {\\n          sortable: true,\\n        },\\n        gender: {\\n          sortable: true,\\n        },\\n        birthday: {\\n          sortable: true,\\n          class: \'text-end justify-content-end\',\\n          search: (row, column) => formatDate(row[column], \'longDate\', \'en\'),\\n          transform: {\\n            pipe: DatePipe,\\n            args: [\'longDate\'],\\n          },\\n        },\\n      },\\n      pagination: {\\n        length: this.paginationForm.get(\'length\')?.value || 0,\\n      },\\n    });\\n  }\\n}\\n\\nexport const Pagination: Story<PaginationComponent> = (\\n  args: PaginationComponent\\n) => ({\\n  props: args,\\n  component: PaginationComponent,\\n});\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"fb","type":"UntypedFormBuilder","deprecated":false,"deprecationMessage":""},{"name":"http","type":"HttpClient","deprecated":false,"deprecationMessage":""}],"line":16,"jsdoctags":[{"name":"fb","type":"UntypedFormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"http","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"isDuplicate":true,"duplicateId":1,"duplicateName":"PaginationComponent-1","templateData":"<form [formGroup]=\\"paginationForm\\">\\n  <div class=\\"row gy-3\\">\\n    <div class=\\"form-group col-12 col-sm-auto\\">\\n      <label for=\\"length_input\\">Number of rows</label>\\n      <input\\n        id=\\"length_input\\"\\n        formControlName=\\"length\\"\\n        type=\\"number\\"\\n        class=\\"form-control\\"\\n        min=\\"0\\"\\n      />\\n    </div>\\n    <div class=\\"form-group col-12 col-sm-auto\\">\\n      <label for=\\"search_input\\">Search</label>\\n      <input\\n        id=\\"search_input\\"\\n        formControlName=\\"search\\"\\n        type=\\"text\\"\\n        class=\\"form-control\\"\\n      />\\n    </div>\\n  </div>\\n</form>\\n<div class=\\"mx-n3 mx-sm-0 my-3 overflow-auto\\">\\n  <angular-generic-table\\n    [data]=\\"data$\\"\\n    [config]=\\"tableConfig$\\"\\n    [search]=\\"search$\\"\\n    [loading]=\\"loading$\\"\\n    #table\\n  >\\n    <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n    <div class=\\"table-no-data alert alert-info mt-3\\">Table is empty</div>\\n  </angular-generic-table>\\n</div>\\n<angular-generic-table-pagination [table]=\\"table\\">\\n</angular-generic-table-pagination>\\n<docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n"},{"name":"RowHoverClickComponent","id":"component-RowHoverClickComponent-171664e65c5762e367fc37743e3fb7d07b0a76a4e5995d1ecae10c1a9d8feb42a09def05a7a1ad2c73b19e1dfd05e0ed865e6bb597743946c3599295c021156d","file":"projects/docs/src/app/examples/row-hover-click/row-hover-click.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"docs-row-hover-click","styleUrls":[],"styles":["\\n      :host ::ng-deep .gt-active {\\n        background-color: var(--bs-highlight-bg);\\n      }\\n    "],"template":"<div class=\\"overflow-auto\\">\\n  <button\\n    class=\\"btn btn-outline-primary me-3\\"\\n    (click)=\\"tableRef.activateRow(1)\\"\\n  >\\n    Mark second row as active\\n  </button>\\n  <button\\n    class=\\"btn btn-outline-primary\\"\\n    (click)=\\"tableRef.activateRow(null)\\"\\n  >\\n    Remove active state\\n  </button>\\n  <angular-generic-table\\n    [data]=\\"data\\"\\n    [config]=\\"config\\"\\n    (rowClick)=\\"onRowClick($event)\\"\\n    (rowActive)=\\"onRowHover($event)\\"\\n    #tableRef\\n  ></angular-generic-table>\\n</div>\\n{{ clicked }}\\n<docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"clicked","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":46},{"name":"config","defaultValue":"{\\n    columns: {\\n      firstName: {},\\n      lastName: {},\\n      gender: {},\\n      favoriteFood: {},\\n    },\\n    rowClick: true,\\n    activateRowOnHover: true,\\n  }","deprecated":false,"deprecationMessage":"","type":"TableConfig","optional":false,"description":"","line":61},{"name":"data","defaultValue":"[\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":47},{"name":"SNIPPETS","defaultValue":"ROW_HOVER_CLICK_SNIPPETS","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":80}],"methodsClass":[{"name":"onRowClick","args":[{"name":"event","type":"GtRowClickEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":72,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"GtRowClickEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onRowHover","args":[{"name":"event","type":"GtRowActiveEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"GtRowActiveEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { ROW_HOVER_CLICK_SNIPPETS } from \'./row-hower-click.snippets\';\\nimport {\\n  GtRowClickEvent,\\n  GtRowActiveEvent,\\n  TableConfig,\\n} from \'@angular-generic-table/core\';\\n\\n@Component({\\n  selector: \'docs-row-hover-click\',\\n  template: `\\n    <div class=\\"overflow-auto\\">\\n      <button\\n        class=\\"btn btn-outline-primary me-3\\"\\n        (click)=\\"tableRef.activateRow(1)\\"\\n      >\\n        Mark second row as active\\n      </button>\\n      <button\\n        class=\\"btn btn-outline-primary\\"\\n        (click)=\\"tableRef.activateRow(null)\\"\\n      >\\n        Remove active state\\n      </button>\\n      <angular-generic-table\\n        [data]=\\"data\\"\\n        [config]=\\"config\\"\\n        (rowClick)=\\"onRowClick($event)\\"\\n        (rowActive)=\\"onRowHover($event)\\"\\n        #tableRef\\n      ></angular-generic-table>\\n    </div>\\n    {{ clicked }}\\n    <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n  `,\\n  styles: [\\n    `\\n      :host ::ng-deep .gt-active {\\n        background-color: var(--bs-highlight-bg);\\n      }\\n    `,\\n  ],\\n})\\nexport class RowHoverClickComponent {\\n  clicked = \'\';\\n  data = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ];\\n  config: TableConfig = {\\n    columns: {\\n      firstName: {},\\n      lastName: {},\\n      gender: {},\\n      favoriteFood: {},\\n    },\\n    rowClick: true,\\n    activateRowOnHover: true,\\n  };\\n\\n  onRowClick(event: GtRowClickEvent) {\\n    console.log(\'row clicked\', event);\\n    this.clicked = `clicked row number: ${event.index}`;\\n  }\\n  onRowHover(event: GtRowActiveEvent) {\\n    console.log(\'row hovered\', event);\\n  }\\n\\n  SNIPPETS = ROW_HOVER_CLICK_SNIPPETS;\\n}\\n\\nexport const RowHoverClick: Story<RowHoverClickComponent> = (\\n  args: RowHoverClickComponent\\n) => ({\\n  props: args,\\n  component: RowHoverClickComponent,\\n});\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"\\n      :host ::ng-deep .gt-active {\\n        background-color: var(--bs-highlight-bg);\\n      }\\n    \\n"},{"name":"RowSelectComponent","id":"component-RowSelectComponent-8d1455cbb2f6a9a3f0a2d0624612fe1e7a9df70f0f985eafad90346b93f9d5cde6ee74163e55bbfd18699a0bcacaacc542e8eb9df57e8eff39d9e50674d16b34","file":"projects/docs/src/app/examples/row-select/row-select.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"styleUrls":[],"styles":["\\n      :host ::ng-deep .gt-active {\\n        background-color: var(--bs-highlight-bg);\\n      }\\n      :host ::ng-deep .table > tbody > tr {\\n        cursor: pointer;\\n      }\\n    "],"templateUrl":["./row-select.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"_activateOnNavigation$","defaultValue":"new BehaviorSubject<boolean>(true)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":69,"modifierKind":[121]},{"name":"_activateOnRowHover$","defaultValue":"new BehaviorSubject<boolean>(true)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":58,"modifierKind":[121]},{"name":"_activeRow$","defaultValue":"new BehaviorSubject<RowData | null>(null)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":136,"modifierKind":[121]},{"name":"config$","defaultValue":"combineLatest([\\n    this.lengthCtrl.valueChanges.pipe(\\n      startWith(this.lengthCtrl.value),\\n      map((length) =>\\n        length ? { pagination: { length: length < 0 ? 0 : length } } : {}\\n      )\\n    ),\\n    this.activateOnRowHover$,\\n    this.activateOnNavigation$,\\n  ]).pipe(\\n    map(\\n      ([pagination, activateRowOnHover, activateRowOnKeyboardNavigation]) => ({\\n        columns: {\\n          id: {\\n            sortable: true,\\n          },\\n          first_name: {\\n            sortable: true,\\n          },\\n          last_name: {\\n            sortable: true,\\n          },\\n          gender: {\\n            sortable: true,\\n          },\\n          email: {\\n            sortable: true,\\n          },\\n        },\\n        ...pagination,\\n        rowClick: true,\\n        activateRowOnHover,\\n        activateRowOnKeyboardNavigation,\\n        rowSelect: true,\\n      })\\n    )\\n  )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":87},{"name":"customClassNames","defaultValue":"{\\n    selectedRow: \'table-active\',\\n  }","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":73},{"name":"data$","defaultValue":"this.http\\n    .get<{ data: TableRow[] }>(\\n      \'https://private-730c61-generictable.apiary-mock.com/data\'\\n    )\\n    .pipe(\\n      pluck(\'data\'),\\n      tap((_) => this.loading$.next(false)),\\n      takeUntil(this.unsubscribe$),\\n      shareReplay(1)\\n    )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":77},{"name":"lengthCtrl","defaultValue":"new FormControl(15)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":76},{"name":"loading$","defaultValue":"new BehaviorSubject<boolean>(true)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":72},{"name":"selection","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":141},{"name":"SNIPPETS","defaultValue":"ROW_SELECT_SNIPPETS","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":177},{"name":"unsubscribe$","defaultValue":"new Subject()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":71,"modifierKind":[121]}],"methodsClass":[{"name":"isSelected","args":[{"name":"row","type":"RowData","deprecated":false,"deprecationMessage":""},{"name":"selection","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":137,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"row","type":"RowData","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"selection","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":173,"deprecated":false,"deprecationMessage":""},{"name":"selectRow","args":[{"name":"event","type":"GtRowClickEvent | GtRowSelectEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":143,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"GtRowClickEvent | GtRowSelectEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setActiveRow","args":[{"name":"event","type":"GtRowActiveEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":125,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"GtRowActiveEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"toggleAll","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":159,"deprecated":false,"deprecationMessage":""},{"name":"toggleRowHover","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":55,"deprecated":false,"deprecationMessage":""},{"name":"toggleRowNavigation","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":66,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, OnDestroy } from \'@angular/core\';\\nimport {\\n  GtRowSelectEvent,\\n  GtRowClickEvent,\\n  TableRow,\\n  GtRowActiveEvent,\\n} from \'@angular-generic-table/core\';\\nimport { BehaviorSubject, combineLatest, Observable, Subject } from \'rxjs\';\\nimport {\\n  map,\\n  pluck,\\n  shareReplay,\\n  startWith,\\n  take,\\n  takeUntil,\\n  tap,\\n} from \'rxjs/operators\';\\nimport { HttpClient } from \'@angular/common/http\';\\nimport { FormControl } from \'@angular/forms\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { CUSTOM_TEMPLATES_DOCS } from \'../custom-templates/custom-templates.snippets\';\\nimport { ROW_SELECT_SNIPPETS } from \'./row-select.snippets\';\\ninterface RowData {\\n  birthday: string;\\n  email: string;\\n  favorite_color: string;\\n  first_name: string;\\n  gender: \'Female\' | \'Male\';\\n  id: number;\\n  last_name: string;\\n}\\n@Component({\\n  templateUrl: \'./row-select.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  styles: [\\n    `\\n      :host ::ng-deep .gt-active {\\n        background-color: var(--bs-highlight-bg);\\n      }\\n      :host ::ng-deep .table > tbody > tr {\\n        cursor: pointer;\\n      }\\n    `,\\n  ],\\n})\\nexport class RowSelectComponent implements OnDestroy {\\n  constructor(private http: HttpClient) {}\\n\\n  get activateOnRowHover$(): Observable<boolean> {\\n    return this._activateOnRowHover$.asObservable();\\n  }\\n  get activateOnRowHover(): boolean {\\n    return this._activateOnRowHover$.getValue();\\n  }\\n  toggleRowHover() {\\n    this._activateOnRowHover$.next(!this.activateOnRowHover);\\n  }\\n  private _activateOnRowHover$ = new BehaviorSubject<boolean>(true);\\n\\n  get activateOnNavigation$(): Observable<boolean> {\\n    return this._activateOnNavigation$.asObservable();\\n  }\\n  get activateOnNavigation(): boolean {\\n    return this._activateOnNavigation$.getValue();\\n  }\\n  toggleRowNavigation() {\\n    this._activateOnNavigation$.next(!this.activateOnNavigation);\\n  }\\n  private _activateOnNavigation$ = new BehaviorSubject<boolean>(true);\\n\\n  private unsubscribe$ = new Subject();\\n  loading$ = new BehaviorSubject<boolean>(true);\\n  customClassNames = {\\n    selectedRow: \'table-active\',\\n  };\\n  lengthCtrl = new FormControl(15);\\n  data$ = this.http\\n    .get<{ data: TableRow[] }>(\\n      \'https://private-730c61-generictable.apiary-mock.com/data\'\\n    )\\n    .pipe(\\n      pluck(\'data\'),\\n      tap((_) => this.loading$.next(false)),\\n      takeUntil(this.unsubscribe$),\\n      shareReplay(1)\\n    );\\n  config$ = combineLatest([\\n    this.lengthCtrl.valueChanges.pipe(\\n      startWith(this.lengthCtrl.value),\\n      map((length) =>\\n        length ? { pagination: { length: length < 0 ? 0 : length } } : {}\\n      )\\n    ),\\n    this.activateOnRowHover$,\\n    this.activateOnNavigation$,\\n  ]).pipe(\\n    map(\\n      ([pagination, activateRowOnHover, activateRowOnKeyboardNavigation]) => ({\\n        columns: {\\n          id: {\\n            sortable: true,\\n          },\\n          first_name: {\\n            sortable: true,\\n          },\\n          last_name: {\\n            sortable: true,\\n          },\\n          gender: {\\n            sortable: true,\\n          },\\n          email: {\\n            sortable: true,\\n          },\\n        },\\n        ...pagination,\\n        rowClick: true,\\n        activateRowOnHover,\\n        activateRowOnKeyboardNavigation,\\n        rowSelect: true,\\n      })\\n    )\\n  );\\n\\n  setActiveRow(event: GtRowActiveEvent) {\\n    console.log(event);\\n    if (event.event && event.event.type === \'keydown\') {\\n      // stop the event from propagating, otherwise the page will scroll\\n      event.event.preventDefault();\\n    }\\n    this._activeRow$.next(<RowData | null>event.row);\\n  }\\n  get activeRow$() {\\n    return this._activeRow$.asObservable();\\n  }\\n  private _activeRow$ = new BehaviorSubject<RowData | null>(null);\\n  isSelected(row: RowData, selection: typeof this.selection) {\\n    return selection[row.id];\\n  }\\n\\n  selection: { [key: string]: boolean } = {};\\n\\n  selectRow(event: GtRowClickEvent | GtRowSelectEvent) {\\n    const selection = { ...this.selection };\\n    const row = event.row;\\n    if (!row) return;\\n    if (!selection[row.id]) {\\n      selection[row.id] = true;\\n    } else {\\n      delete selection[row.id];\\n    }\\n    // update the selection\\n    this.selection = selection;\\n  }\\n\\n  get isAllSelected() {\\n    return Object.keys(this.selection).length > 0;\\n  }\\n  toggleAll() {\\n    if (this.isAllSelected) {\\n      this.selection = {};\\n      return;\\n    }\\n    const selection = { ...this.selection };\\n    this.data$.pipe(take(1), takeUntil(this.unsubscribe$)).subscribe((data) => {\\n      data.forEach((row, index) => {\\n        selection[index] = true;\\n      });\\n    });\\n    this.selection = selection;\\n  }\\n\\n  ngOnDestroy() {\\n    this.unsubscribe$.next();\\n    this.unsubscribe$.complete();\\n  }\\n  SNIPPETS = ROW_SELECT_SNIPPETS;\\n}\\n\\nexport const RowSelect: Story<RowSelectComponent> = (\\n  args: RowSelectComponent\\n) => ({\\n  props: args,\\n  component: RowSelectComponent,\\n});\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"\\n      :host ::ng-deep .gt-active {\\n        background-color: var(--bs-highlight-bg);\\n      }\\n      :host ::ng-deep .table > tbody > tr {\\n        cursor: pointer;\\n      }\\n    \\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"http","type":"HttpClient","deprecated":false,"deprecationMessage":""}],"line":46,"jsdoctags":[{"name":"http","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnDestroy"],"accessors":{"activateOnRowHover$":{"name":"activateOnRowHover$","getSignature":{"name":"activateOnRowHover$","type":"","returnType":"Observable<boolean>","line":49}},"activateOnRowHover":{"name":"activateOnRowHover","getSignature":{"name":"activateOnRowHover","type":"boolean","returnType":"boolean","line":52}},"activateOnNavigation$":{"name":"activateOnNavigation$","getSignature":{"name":"activateOnNavigation$","type":"","returnType":"Observable<boolean>","line":60}},"activateOnNavigation":{"name":"activateOnNavigation","getSignature":{"name":"activateOnNavigation","type":"boolean","returnType":"boolean","line":63}},"activeRow$":{"name":"activeRow$","getSignature":{"name":"activeRow$","type":"","returnType":"","line":133}},"isAllSelected":{"name":"isAllSelected","getSignature":{"name":"isAllSelected","type":"","returnType":"","line":156}}},"templateData":"<div class=\\"row gy-3 gy-sm-0 gx-2 align-items-center\\">\\n  <div class=\\"col-12 col-sm-auto\\">\\n    <button\\n      class=\\"btn w-100\\"\\n      (click)=\\"toggleRowHover()\\"\\n      [class.btn-outline-primary]=\\"!activateOnRowHover\\"\\n      [class.btn-primary]=\\"activateOnRowHover\\"\\n    >\\n      {{ activateOnRowHover ? \\"Disable on hover\\" : \\"Enable on hover\\" }}\\n    </button>\\n  </div>\\n  <div class=\\"col-12 col-sm-auto\\">\\n    <button\\n      class=\\"btn w-100\\"\\n      (click)=\\"toggleRowNavigation()\\"\\n      [class.btn-outline-primary]=\\"!activateOnNavigation\\"\\n      [class.btn-primary]=\\"activateOnNavigation\\"\\n    >\\n      {{\\n        activateOnNavigation\\n          ? \\"Disable on keyboard navigation\\"\\n          : \\"Enable on keyboard navigation\\"\\n      }}\\n    </button>\\n  </div>\\n  <div class=\\"col-12 col-sm-auto\\">\\n    <button\\n      class=\\"btn w-100\\"\\n      [class.btn-outline-primary]=\\"!isAllSelected\\"\\n      [class.btn-primary]=\\"isAllSelected\\"\\n      (click)=\\"toggleAll()\\"\\n    >\\n      {{ isAllSelected ? \\"Deselect all\\" : \\"Select all\\" }}\\n    </button>\\n  </div>\\n</div>\\n<div class=\\"row gy-3 gy-sm-0 gx-2 align-items-center mt-3\\">\\n  <div class=\\"form-group col-12 col-sm-auto d-flex align-items-center\\">\\n    <label for=\\"length_input\\" class=\\"text-nowrap me-2\\">Number of rows:</label>\\n    <input\\n      id=\\"length_input\\"\\n      [formControl]=\\"lengthCtrl\\"\\n      type=\\"number\\"\\n      class=\\"form-control\\"\\n      style=\\"max-width: 60px\\"\\n    />\\n  </div>\\n  <div class=\\"col-12 col-sm-auto\\">\\n    Selected rows: {{ (selection | keyvalue).length }}\\n  </div>\\n  <div class=\\"col-12 col-sm-auto\\">\\n    Active row id: {{ (activeRow$ | async)?.id ?? \\"none\\" }}\\n  </div>\\n</div>\\n<div class=\\"mx-n3 mx-sm-0 my-3 overflow-auto\\">\\n  <angular-generic-table\\n    [data]=\\"data$\\"\\n    [config]=\\"config$\\"\\n    [loading]=\\"loading$\\"\\n    [isRowSelectedFn]=\\"isSelected\\"\\n    [customClasses]=\\"customClassNames\\"\\n    (rowClick)=\\"selectRow($event)\\"\\n    (rowActive)=\\"setActiveRow($event)\\"\\n    (rowSelect)=\\"selectRow($event)\\"\\n    [selection]=\\"selection\\"\\n    #tableRef\\n  >\\n    <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n    <div class=\\"table-no-data alert alert-info mt-3\\">Table is empty</div>\\n  </angular-generic-table>\\n  <angular-generic-table-pagination [table]=\\"tableRef\\">\\n  </angular-generic-table-pagination>\\n</div>\\n<docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n"},{"name":"ServerSidePaginationComponent","id":"component-ServerSidePaginationComponent-84632bae79cd4899d6deb72214bfa38d32b216248b69830bb0ca440dec337ac8231dd42726cf0c8ab2fb2873ad182bf71c3f00fe899de8e6ebebf0d1ca5dd422","file":"projects/docs/src/app/examples/server-side-pagination/server-side-pagination.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"docs-lazy-loading","styleUrls":[],"styles":[],"templateUrl":["./server-side-pagination.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"actions","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any> | undefined","optional":false,"description":"","line":52,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'actions\', {static: true}"}]},{"name":"color","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any> | undefined","optional":false,"description":"","line":53,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'color\', {static: true}"}]},{"name":"data$","defaultValue":"this.request$.pipe(\\n    pluck(\'data\'),\\n    shareReplay(1)\\n  )","deprecated":false,"deprecationMessage":"","type":"Observable<Array<LazyLoadingData>>","optional":false,"description":"","line":81},{"name":"loading$","defaultValue":"new BehaviorSubject(true)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":65},{"name":"paginationForm","defaultValue":"this.fb.group({\\n    search: [\'\'],\\n  })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54},{"name":"paging$","defaultValue":"this.request$.pipe(\\n    pluck(\'paging\'),\\n    shareReplay(1)\\n  )","deprecated":false,"deprecationMessage":"","type":"Observable<GtPaginationInfo>","optional":false,"description":"","line":85},{"name":"request$","defaultValue":"this.requestParams$.pipe(\\n    tap((_) => this.loading$.next(true)), // show loading indicator whenever requests are changed (remove to disable loading indicator)\\n    switchMap((params) =>\\n      this.http.get<LazyLoadingResponse>(\\n        \'https://private-a6da3-generictableapi.apiary-mock.com/data\',\\n        {\\n          params,\\n        }\\n      )\\n    ),\\n    tap((_) => this.loading$.next(false)), // hide loading indicator\\n    shareReplay(1)\\n  )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":67},{"name":"requestParams$","defaultValue":"new BehaviorSubject({\\n    page: 1,\\n    page_size: 10,\\n    sort_by: \'+id\',\\n  })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57},{"name":"search$","defaultValue":"this.paginationForm.controls.search.valueChanges.pipe(\\n    shareReplay(1)\\n  )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":62},{"name":"SNIPPETS","defaultValue":"LAZY_LOADING_DOCS","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":151},{"name":"sorting$","defaultValue":"this.request$.pipe(pluck(\'sorting\'), shareReplay(1))","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":90},{"name":"tableConfig$","defaultValue":"new ReplaySubject(\\n    1\\n  )","deprecated":false,"deprecationMessage":"","type":"ReplaySubject<TableConfig<LazyLoadingData>>","optional":false,"description":"","line":114}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":""},{"name":"onPageChange","args":[{"name":"event","type":"GtPageChangeEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":92,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"GtPageChangeEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onSortOrderChange","args":[{"name":"event","type":"GtSortEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":102,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"GtSortEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  ChangeDetectionStrategy,\\n  Component,\\n  OnInit,\\n  TemplateRef,\\n  ViewChild,\\n} from \'@angular/core\';\\nimport { DatePipe, formatDate } from \'@angular/common\';\\nimport {\\n  GtPageChangeEvent,\\n  GtSortEvent,\\n  GtSortOrder,\\n  TableConfig,\\n  GtPaginationInfo,\\n  sortOrderToParams,\\n} from \'@angular-generic-table/core\';\\nimport { FormBuilder } from \'@angular/forms\';\\nimport { HttpClient } from \'@angular/common/http\';\\nimport { BehaviorSubject, Observable, ReplaySubject } from \'rxjs\';\\nimport { pluck, shareReplay, switchMap, tap } from \'rxjs/operators\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { LAZY_LOADING_DOCS } from \'./server-side-pagination.snippets\';\\ninterface LazyLoadingData {\\n  birthday: string;\\n  email: string;\\n  favorite_color: string;\\n  first_name: string;\\n  gender: string;\\n  id: number;\\n  last_name: string;\\n}\\n\\ninterface LazyLoadingResponse {\\n  data: Array<LazyLoadingData>;\\n  paging: GtPaginationInfo;\\n  sorting: GtSortOrder<LazyLoadingData>;\\n  filters: [\\n    {\\n      [Property in keyof LazyLoadingResponse]: { [key: string]: any };\\n    }\\n  ];\\n  request: any;\\n  error: any;\\n}\\n@Component({\\n  selector: \'docs-lazy-loading\',\\n  templateUrl: \'./server-side-pagination.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class ServerSidePaginationComponent implements OnInit {\\n  constructor(private fb: FormBuilder, private http: HttpClient) {}\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  @ViewChild(\'color\', { static: true }) color: TemplateRef<any> | undefined;\\n  paginationForm = this.fb.group({\\n    search: [\'\'],\\n  });\\n  requestParams$ = new BehaviorSubject({\\n    page: 1,\\n    page_size: 10,\\n    sort_by: \'+id\',\\n  });\\n  search$ = this.paginationForm.controls.search.valueChanges.pipe(\\n    shareReplay(1)\\n  );\\n  loading$ = new BehaviorSubject(true);\\n\\n  request$ = this.requestParams$.pipe(\\n    tap((_) => this.loading$.next(true)), // show loading indicator whenever requests are changed (remove to disable loading indicator)\\n    switchMap((params) =>\\n      this.http.get<LazyLoadingResponse>(\\n        \'https://private-a6da3-generictableapi.apiary-mock.com/data\',\\n        {\\n          params,\\n        }\\n      )\\n    ),\\n    tap((_) => this.loading$.next(false)), // hide loading indicator\\n    shareReplay(1)\\n  );\\n\\n  data$: Observable<Array<LazyLoadingData>> = this.request$.pipe(\\n    pluck(\'data\'),\\n    shareReplay(1)\\n  );\\n  paging$: Observable<GtPaginationInfo> = this.request$.pipe(\\n    pluck(\'paging\'),\\n    shareReplay(1)\\n  );\\n\\n  sorting$ = this.request$.pipe(pluck(\'sorting\'), shareReplay(1));\\n\\n  onPageChange(event: GtPageChangeEvent): void {\\n    const current = { ...this.requestParams$.value };\\n    if (current.page != event.index + 1) {\\n      this.requestParams$.next({\\n        ...current,\\n        page: event.index + 1,\\n      });\\n    }\\n  }\\n\\n  onSortOrderChange(event: GtSortEvent): void {\\n    let sort_by = sortOrderToParams([...event.currentSortOrder]);\\n    const current = { ...this.requestParams$.value };\\n    if (current.sort_by !== sort_by) {\\n      this.requestParams$.next({\\n        ...current,\\n        page: 1, // reset page to 1 when sorting changes\\n        sort_by,\\n      });\\n    }\\n  }\\n\\n  tableConfig$: ReplaySubject<TableConfig<LazyLoadingData>> = new ReplaySubject(\\n    1\\n  );\\n  ngOnInit(): void {\\n    this.tableConfig$.next({\\n      class: \'table text-nowrap\',\\n      columns: {\\n        id: {\\n          sortable: true,\\n        },\\n        first_name: {},\\n        last_name: {\\n          sortable: true,\\n        },\\n        gender: {\\n          sortable: true,\\n        },\\n        birthday: {\\n          class: \'text-end justify-content-end\',\\n          search: (row, column) => formatDate(row[column], \'longDate\', \'en\'),\\n          transform: {\\n            pipe: DatePipe,\\n            args: [\'longDate\'],\\n          },\\n        },\\n        favorite_color: {\\n          hidden: true,\\n        },\\n        email: {\\n          hidden: true,\\n        },\\n      },\\n      pagination: {\\n        length: 10,\\n      },\\n    });\\n  }\\n  SNIPPETS = LAZY_LOADING_DOCS;\\n}\\n\\nexport const ServerSidePagination: Story<ServerSidePaginationComponent> = (\\n  args: ServerSidePaginationComponent\\n) => ({\\n  props: args,\\n  component: ServerSidePaginationComponent,\\n});\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"fb","type":"FormBuilder","deprecated":false,"deprecationMessage":""},{"name":"http","type":"HttpClient","deprecated":false,"deprecationMessage":""}],"line":50,"jsdoctags":[{"name":"fb","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"http","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<form [formGroup]=\\"paginationForm\\">\\n  <div class=\\"row gy-3\\">\\n    <div class=\\"form-group col-12 col-sm-auto\\">\\n      <label for=\\"search_input\\">Search</label>\\n      <input\\n        id=\\"search_input\\"\\n        formControlName=\\"search\\"\\n        type=\\"text\\"\\n        class=\\"form-control\\"\\n      />\\n    </div>\\n  </div>\\n</form>\\n<div class=\\"mx-n3 mx-sm-0 my-3 overflow-auto\\">\\n  <angular-generic-table\\n    [data]=\\"data$\\"\\n    [config]=\\"tableConfig$\\"\\n    [search]=\\"search$\\"\\n    [loading]=\\"loading$\\"\\n    [pagingInfo]=\\"paging$ | async\\"\\n    (pageChange)=\\"onPageChange($event)\\"\\n    (columnSort)=\\"onSortOrderChange($event)\\"\\n    [sortOrder]=\\"sorting$ | async\\"\\n    #table\\n  >\\n    <div\\n      class=\\"table-loading gt-skeleton-loader\\"\\n      [style.--gt-skeleton-height]=\\"\\n        ((table.table$ | async)?.info?.pageSize ?? 0) * 41 - 11 + \'px\'\\n      \\"\\n    ></div>\\n    <div class=\\"table-no-data alert alert-info mt-3\\">Table is empty</div>\\n  </angular-generic-table>\\n</div>\\n<angular-generic-table-pagination [table]=\\"table\\">\\n</angular-generic-table-pagination>\\n<docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n"},{"name":"SimpleComponent","id":"component-SimpleComponent-694868655a17d764ba2ea4b3cec45a1da4821c89b5e10705be2cdafe489383b24c58c393e0f3abb055c4a617c285a2b05722a166766c3f680803a92b574cf339","file":"projects/docs/src/app/examples/simple/simple.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"styleUrls":[],"styles":[],"template":"<div class=\\"overflow-auto\\">\\n  <angular-generic-table\\n    [data]=\\"data\\"\\n    [config]=\\"config\\"\\n  ></angular-generic-table>\\n</div>\\n<docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"config","defaultValue":"{\\n    class: \'table table-striped table-bordered\',\\n    columns: {\\n      firstName: {},\\n      lastName: {},\\n      gender: {},\\n      favoriteFood: {},\\n    },\\n  }","deprecated":false,"deprecationMessage":"","type":"TableConfig<BasicData>","optional":false,"description":"","line":38},{"name":"data","defaultValue":"[\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ]","deprecated":false,"deprecationMessage":"","type":"Array<BasicData>","optional":false,"description":"","line":24},{"name":"SNIPPETS","defaultValue":"SIMPLE_SNIPPETS","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":48}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { SIMPLE_SNIPPETS } from \'./simple.snippets\';\\nimport { TableConfig } from \'@angular-generic-table/core\';\\ninterface BasicData {\\n  firstName: string;\\n  lastName: string;\\n  gender: \'male\' | \'female\';\\n  favoriteFood: string;\\n}\\n@Component({\\n  template: `\\n    <div class=\\"overflow-auto\\">\\n      <angular-generic-table\\n        [data]=\\"data\\"\\n        [config]=\\"config\\"\\n      ></angular-generic-table>\\n    </div>\\n    <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n  `,\\n  styles: [],\\n})\\nexport class SimpleComponent {\\n  data: Array<BasicData> = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ];\\n  config: TableConfig<BasicData> = {\\n    class: \'table table-striped table-bordered\',\\n    columns: {\\n      firstName: {},\\n      lastName: {},\\n      gender: {},\\n      favoriteFood: {},\\n    },\\n  };\\n\\n  SNIPPETS = SIMPLE_SNIPPETS;\\n}\\n\\nexport const Simple: Story<SimpleComponent> = (args: SimpleComponent) => ({\\n  props: args,\\n  component: SimpleComponent,\\n});\\n","assetsDirs":[],"styleUrlsData":"","stylesData":""},{"name":"SortingComponent","id":"component-SortingComponent-4ef62adeec6897b8e534c6091a292d9ae7fd533c6079340b6b9edf96420c885a8d8a92be14944773a784a876cca1d3299a6e8762760799e0958f49349cb5bd9a","file":"projects/docs/src/app/examples/sorting/sorting.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"styleUrls":[],"styles":[],"template":"<div class=\\"overflow-auto\\">\\n  <angular-generic-table\\n    #table\\n    [data]=\\"data\\"\\n    [config]=\\"config\\"\\n    [(sortOrder)]=\\"sortOrder\\"\\n    (columnSort)=\\"logSortChange($event)\\"\\n  ></angular-generic-table>\\n</div>\\n<div class=\\"row mb-3 gy-3\\">\\n  <div class=\\"col-12 col-sm-auto\\">\\n    <button\\n      class=\\"btn btn-primary w-100\\"\\n      (click)=\\"table.sortByKey(\'firstName\', $event)\\"\\n    >\\n      Sort on first name\\n    </button>\\n  </div>\\n  <div class=\\"col-12 col-sm-auto\\">\\n    <button class=\\"btn btn-primary w-100\\" (click)=\\"resetSort()\\">\\n      Reset sorting\\n    </button>\\n  </div>\\n</div>\\n<strong>Current sort order</strong>\\n<p>\\n  <code>\\n    {{ sortOrder | json }}\\n  </code>\\n</p>\\n<docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"config","defaultValue":"{\\n    columns: {\\n      firstName: {\\n        sortable: true,\\n      },\\n      lastName: {\\n        sortable: true,\\n      },\\n      gender: {\\n        sortable: true,\\n      },\\n      favoriteFood: {\\n        sortable: true,\\n      },\\n      birthdate: {\\n        sortable: true,\\n        transform: {\\n          pipe: DatePipe,\\n        },\\n      },\\n    },\\n  }","deprecated":false,"deprecationMessage":"","type":"TableConfig<SortingData>","optional":false,"description":"","line":140},{"name":"data","defaultValue":"[\\n    {\\n      firstName: \'John\',\\n      lastName: \'Doe\',\\n      gender: \'male\',\\n      favoriteFood: \'pizza\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Jane\',\\n      lastName: \'Smith\',\\n      gender: \'female\',\\n      favoriteFood: \'sushi\',\\n      birthdate: 803404800000,\\n    },\\n    {\\n      firstName: \'Bob\',\\n      lastName: \'Johnson\',\\n      gender: \'male\',\\n      favoriteFood: \'burgers\',\\n      birthdate: 649345600000,\\n    },\\n    {\\n      firstName: \'Emily\',\\n      lastName: \'Williams\',\\n      gender: \'female\',\\n      favoriteFood: \'chicken\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Michael\',\\n      lastName: \'Jones\',\\n      gender: \'male\',\\n      favoriteFood: \'steak\',\\n      birthdate: 803404800000,\\n    },\\n    {\\n      firstName: \'Matthew\',\\n      lastName: \'Brown\',\\n      gender: \'male\',\\n      favoriteFood: \'seafood\',\\n      birthdate: 649345600000,\\n    },\\n    {\\n      firstName: \'Jessica\',\\n      lastName: \'Miller\',\\n      gender: \'female\',\\n      favoriteFood: \'salad\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Jacob\',\\n      lastName: \'Moore\',\\n      gender: \'male\',\\n      favoriteFood: \'pasta\',\\n      birthdate: 803404800000,\\n    },\\n    {\\n      firstName: \'Nicholas\',\\n      lastName: \'Taylor\',\\n      gender: \'male\',\\n      favoriteFood: \'soup\',\\n      birthdate: 649345600000,\\n    },\\n    {\\n      firstName: \'Ashley\',\\n      lastName: \'Anderson\',\\n      gender: \'female\',\\n      favoriteFood: \'tacos\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Brandon\',\\n      lastName: \'Thomas\',\\n      gender: \'male\',\\n      favoriteFood: \'nachos\',\\n      birthdate: 803404800000,\\n    },\\n  ]","deprecated":false,"deprecationMessage":"","type":"Array<SortingData>","optional":false,"description":"","line":61},{"name":"initialSortOrder","defaultValue":"[\\n    { key: \'birthdate\', order: \'asc\' },\\n    { key: \'gender\', order: \'asc\' },\\n    { key: \'firstName\', order: \'desc\' },\\n  ]","deprecated":false,"deprecationMessage":"","type":"GtSortOrder<SortingData>","optional":false,"description":"","line":55},{"name":"SNIPPETS","defaultValue":"SIMPLE_SNIPPETS","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":171},{"name":"sortOrder","defaultValue":"this.initialSortOrder","deprecated":false,"deprecationMessage":"","type":"GtSortOrder<SortingData>","optional":false,"description":"","line":60}],"methodsClass":[{"name":"logSortChange","args":[{"name":"sortEvent","type":"GtSortEvent<SortingData>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"sortEvent","type":"GtSortEvent<SortingData>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"resetSort","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":167,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { SIMPLE_SNIPPETS } from \'./sorting.snippets\';\\nimport {\\n  GtSortEvent,\\n  GtSortOrder,\\n  TableConfig,\\n} from \'@angular-generic-table/core\';\\nimport { DatePipe } from \'@angular/common\';\\n\\ninterface SortingData {\\n  firstName: string;\\n  lastName: string;\\n  gender: \'male\' | \'female\';\\n  favoriteFood: string;\\n  birthdate: number;\\n}\\n@Component({\\n  template: `\\n    <div class=\\"overflow-auto\\">\\n      <angular-generic-table\\n        #table\\n        [data]=\\"data\\"\\n        [config]=\\"config\\"\\n        [(sortOrder)]=\\"sortOrder\\"\\n        (columnSort)=\\"logSortChange($event)\\"\\n      ></angular-generic-table>\\n    </div>\\n    <div class=\\"row mb-3 gy-3\\">\\n      <div class=\\"col-12 col-sm-auto\\">\\n        <button\\n          class=\\"btn btn-primary w-100\\"\\n          (click)=\\"table.sortByKey(\'firstName\', $event)\\"\\n        >\\n          Sort on first name\\n        </button>\\n      </div>\\n      <div class=\\"col-12 col-sm-auto\\">\\n        <button class=\\"btn btn-primary w-100\\" (click)=\\"resetSort()\\">\\n          Reset sorting\\n        </button>\\n      </div>\\n    </div>\\n    <strong>Current sort order</strong>\\n    <p>\\n      <code>\\n        {{ sortOrder | json }}\\n      </code>\\n    </p>\\n    <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n  `,\\n  styles: [],\\n})\\nexport class SortingComponent {\\n  initialSortOrder: GtSortOrder<SortingData> = [\\n    { key: \'birthdate\', order: \'asc\' },\\n    { key: \'gender\', order: \'asc\' },\\n    { key: \'firstName\', order: \'desc\' },\\n  ];\\n  sortOrder: GtSortOrder<SortingData> = this.initialSortOrder;\\n  data: Array<SortingData> = [\\n    {\\n      firstName: \'John\',\\n      lastName: \'Doe\',\\n      gender: \'male\',\\n      favoriteFood: \'pizza\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Jane\',\\n      lastName: \'Smith\',\\n      gender: \'female\',\\n      favoriteFood: \'sushi\',\\n      birthdate: 803404800000,\\n    },\\n    {\\n      firstName: \'Bob\',\\n      lastName: \'Johnson\',\\n      gender: \'male\',\\n      favoriteFood: \'burgers\',\\n      birthdate: 649345600000,\\n    },\\n    {\\n      firstName: \'Emily\',\\n      lastName: \'Williams\',\\n      gender: \'female\',\\n      favoriteFood: \'chicken\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Michael\',\\n      lastName: \'Jones\',\\n      gender: \'male\',\\n      favoriteFood: \'steak\',\\n      birthdate: 803404800000,\\n    },\\n    {\\n      firstName: \'Matthew\',\\n      lastName: \'Brown\',\\n      gender: \'male\',\\n      favoriteFood: \'seafood\',\\n      birthdate: 649345600000,\\n    },\\n    {\\n      firstName: \'Jessica\',\\n      lastName: \'Miller\',\\n      gender: \'female\',\\n      favoriteFood: \'salad\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Jacob\',\\n      lastName: \'Moore\',\\n      gender: \'male\',\\n      favoriteFood: \'pasta\',\\n      birthdate: 803404800000,\\n    },\\n    {\\n      firstName: \'Nicholas\',\\n      lastName: \'Taylor\',\\n      gender: \'male\',\\n      favoriteFood: \'soup\',\\n      birthdate: 649345600000,\\n    },\\n    {\\n      firstName: \'Ashley\',\\n      lastName: \'Anderson\',\\n      gender: \'female\',\\n      favoriteFood: \'tacos\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Brandon\',\\n      lastName: \'Thomas\',\\n      gender: \'male\',\\n      favoriteFood: \'nachos\',\\n      birthdate: 803404800000,\\n    },\\n  ];\\n  config: TableConfig<SortingData> = {\\n    columns: {\\n      firstName: {\\n        sortable: true,\\n      },\\n      lastName: {\\n        sortable: true,\\n      },\\n      gender: {\\n        sortable: true,\\n      },\\n      favoriteFood: {\\n        sortable: true,\\n      },\\n      birthdate: {\\n        sortable: true,\\n        transform: {\\n          pipe: DatePipe,\\n        },\\n      },\\n    },\\n  };\\n\\n  logSortChange(sortEvent: GtSortEvent<SortingData>) {\\n    console.log(sortEvent);\\n  }\\n\\n  resetSort() {\\n    this.sortOrder = this.initialSortOrder;\\n  }\\n\\n  SNIPPETS = SIMPLE_SNIPPETS;\\n}\\n\\nexport const Sorting: Story<SortingComponent> = (args: SortingComponent) => ({\\n  props: args,\\n  component: SortingComponent,\\n});\\n","assetsDirs":[],"styleUrlsData":"","stylesData":""},{"name":"TabsComponent","id":"component-TabsComponent-f6bd67f3efe786dedf8f39eb7495d332aa5eaefc16371ad8b578183423f6c6d6a24d7b992db44340ec002b0793a82c88ec1012d01f427926860296f820d8ac5e","file":"projects/docs/src/app/components/tabs/tabs.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"docs-tabs","styleUrls":["./tabs.component.scss"],"styles":[],"template":"<ul class=\\"nav nav-tabs mt-4 flex-nowrap text-nowrap overflow-auto\\">\\n  <li class=\\"nav-item\\" *ngFor=\\"let item of content; let i = index\\">\\n    <button\\n      class=\\"nav-link btn-link\\"\\n      [class.active]=\\"activeIndex === i\\"\\n      (click)=\\"view(i)\\"\\n    >\\n      {{ item.name }}\\n    </button>\\n  </li>\\n</ul>\\n<ng-container *ngIf=\\"activeContent\\">\\n  <pre><code [innerHTML]=\\"activeContent.value\\" class=\\"{{\'language-\' + activeContent.language}}\\"></code></pre>\\n</ng-container>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"content","deprecated":false,"deprecationMessage":"","line":39,"type":"any","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"_content","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<literal type>","optional":false,"description":"","line":46,"modifierKind":[121]},{"name":"activeContent","deprecated":false,"deprecationMessage":"","type":"HighlightResult | undefined","optional":false,"description":"","line":44},{"name":"activeIndex","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":43}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":""},{"name":"view","args":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":53,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport hljs from \'highlight.js/lib/core\';\\nimport { HighlightResult } from \'highlight.js\';\\n\\nimport typescript from \'highlight.js/lib/languages/typescript\';\\nimport xml from \'highlight.js/lib/languages/xml\';\\nimport scss from \'highlight.js/lib/languages/scss\';\\n\\nhljs.registerLanguage(\'typescript\', typescript);\\nhljs.registerLanguage(\'scss\', scss);\\nhljs.registerLanguage(\'xml\', xml);\\n\\n@Component({\\n  selector: \'docs-tabs\',\\n  template: `\\n    <ul class=\\"nav nav-tabs mt-4 flex-nowrap text-nowrap overflow-auto\\">\\n      <li class=\\"nav-item\\" *ngFor=\\"let item of content; let i = index\\">\\n        <button\\n          class=\\"nav-link btn-link\\"\\n          [class.active]=\\"activeIndex === i\\"\\n          (click)=\\"view(i)\\"\\n        >\\n          {{ item.name }}\\n        </button>\\n      </li>\\n    </ul>\\n    <ng-container *ngIf=\\"activeContent\\">\\n      <pre><code [innerHTML]=\\"activeContent.value\\" class=\\"{{\'language-\' + activeContent.language}}\\"></code></pre>\\n    </ng-container>\\n  `,\\n  styleUrls: [\'./tabs.component.scss\'],\\n})\\nexport class TabsComponent implements OnInit {\\n  get content(): any {\\n    return this._content;\\n  }\\n\\n  @Input() set content(value: any) {\\n    this._content = value;\\n  }\\n  constructor() {}\\n  activeIndex = 0;\\n  activeContent: HighlightResult | undefined;\\n\\n  private _content: Array<{}> = [];\\n  ngOnInit(): void {\\n    this.activeContent = hljs.highlight(this.content[this.activeIndex].code, {\\n      language: this.content[this.activeIndex].language,\\n    });\\n  }\\n\\n  view(index: number): void {\\n    this.activeIndex = index;\\n    this.activeContent = hljs.highlight(this.content[index].code, {\\n      language: this.content[index].language,\\n    });\\n  }\\n}\\n\\nexport const Tabs: Story<TabsComponent> = (args: TabsComponent) => ({\\n  props: args,\\n  component: TabsComponent,\\n});\\n","assetsDirs":[],"styleUrlsData":[{"data":"pre {\\n  background-image: linear-gradient(0deg, #f8f8f8 25%, #ffffff 25%, #ffffff 50%, #f8f8f8 50%, #f8f8f8 75%, #ffffff 75%, #ffffff 100%);\\n  background-size: 84.00px 84.00px;\\n  padding: 21px 1rem;\\n}\\nul {\\n  &::-webkit-scrollbar {\\n    display: none;\\n  }\\n  -ms-overflow-style: none; /* IE and Edge */\\n  scrollbar-width: none; /* Firefox */\\n}\\n","styleUrl":"./tabs.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":41},"implements":["OnInit"],"accessors":{"content":{"name":"content","setSignature":{"name":"content","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":39,"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"content","type":"any","returnType":"any","line":35}}}},{"name":"TransposeComponent","id":"component-TransposeComponent-0a5c0cb27d235dfe9659a36988e8f66a453ff89ad5e286c1c983f66beb2ec0e2a4b9694bf4c3ff2f652e68001624f00f6630abc1e58f843290dac6f691044c0c","file":"projects/docs/src/app/examples/transpose/transpose.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"docs-transpose","styleUrls":[],"styles":[],"template":"<form [formGroup]=\\"reactiveForm\\">\\n  <div class=\\"row gy-3 gx-3 align-items-end mb-3\\">\\n    <div class=\\"form-group col-6 col-sm-auto\\">\\n      <label for=\\"length_input\\">Number of rows</label>\\n      <input\\n        id=\\"length_input\\"\\n        formControlName=\\"length\\"\\n        type=\\"number\\"\\n        class=\\"form-control\\"\\n      />\\n    </div>\\n    <div class=\\"form-group col-6 col-sm-auto\\">\\n      <label for=\\"search_input\\">Search</label>\\n      <input\\n        id=\\"search_input\\"\\n        formControlName=\\"search\\"\\n        type=\\"text\\"\\n        class=\\"form-control\\"\\n      />\\n    </div>\\n    <div class=\\"col-auto\\">\\n      <button\\n        class=\\"btn btn-outline-primary w-100\\"\\n        (click)=\\"simulateLoad()\\"\\n      >\\n        Simulate load\\n      </button>\\n    </div>\\n    <div class=\\"col col-sm-auto\\">\\n      <button class=\\"btn btn-outline-danger w-100\\" (click)=\\"empty()\\">\\n        Empty\\n      </button>\\n    </div>\\n    <div class=\\"col col-sm-auto\\">\\n      <button class=\\"btn btn-outline-primary w-100\\" (click)=\\"load()\\">\\n        Reset\\n      </button>\\n    </div>\\n    <div class=\\"col col-sm-auto\\">\\n      <button class=\\"btn btn-outline-primary w-100\\" (click)=\\"transpose()\\">\\n        Transpose\\n      </button>\\n    </div>\\n  </div>\\n  <div class=\\"overflow-auto\\">\\n    <angular-generic-table\\n      #table\\n      [data]=\\"data\\"\\n      [config]=\\"tableConfig$\\"\\n      [loading]=\\"loading$\\"\\n      [search]=\\"search$\\"\\n    >\\n      <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n      <div class=\\"table-no-data alert alert-info mt-3\\">Table is empty</div>\\n    </angular-generic-table>\\n  </div>\\n  <angular-generic-table-pagination [table]=\\"table\\">\\n  </angular-generic-table-pagination>\\n  <ng-template #delta let-index=\\"index\\" let-data=\\"data\\">\\n    <gt-delta [index]=\\"index\\" [data]=\\"data\\"></gt-delta>\\n  </ng-template>\\n  <ng-template #deltaAbsolute let-index=\\"index\\" let-data=\\"data\\">\\n    <gt-delta\\n      [index]=\\"index\\"\\n      [data]=\\"data\\"\\n      [deltaTemplate]=\\"deltaTemplate\\"\\n    ></gt-delta>\\n  </ng-template>\\n  <ng-template #deltaIndex let-index=\\"index\\" let-data=\\"data\\">\\n    <gt-delta [index]=\\"index\\" [data]=\\"data\\" [baseIndex]=\\"0\\"></gt-delta>\\n  </ng-template>\\n  <ng-template\\n    #combined\\n    let-index=\\"index\\"\\n    let-data=\\"data\\"\\n    let-row=\\"row\\"\\n    let-col=\\"col\\"\\n  >\\n    {{ row.value }}\\n    <ng-container *ngIf=\\"index > 0\\">\\n      <gt-delta [index]=\\"index\\" [data]=\\"data\\"></gt-delta>\\n    </ng-container>\\n  </ng-template>\\n  <ng-template #deltaTemplate let-delta=\\"delta\\">\\n    <span>{{ delta.absolute }}</span></ng-template\\n  >\\n  <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n</form>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"combined","deprecated":false,"deprecationMessage":"","type":"TemplateRef<GtDeltaComponent> | undefined","optional":false,"description":"","line":122,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'combined\', {static: true}"}]},{"name":"data","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<RawData>","optional":false,"description":"","line":134},{"name":"delta","deprecated":false,"deprecationMessage":"","type":"TemplateRef<GtDeltaComponent> | undefined","optional":false,"description":"","line":113,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'delta\', {static: true}"}]},{"name":"deltaAbsolute","deprecated":false,"deprecationMessage":"","type":"TemplateRef<GtDeltaComponent> | undefined","optional":false,"description":"","line":116,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'deltaAbsolute\', {static: true}"}]},{"name":"deltaIndex","deprecated":false,"deprecationMessage":"","type":"TemplateRef<GtDeltaComponent> | undefined","optional":false,"description":"","line":119,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'deltaIndex\', {static: true}"}]},{"name":"loading$","defaultValue":"new BehaviorSubject(false)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":125},{"name":"reactiveForm","defaultValue":"this.fb.group({\\n    length: [10],\\n    search: [\'\'],\\n  })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":126},{"name":"search$","defaultValue":"this.reactiveForm.get(\'search\')?.valueChanges as Observable<string>","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":130},{"name":"SNIPPETS","defaultValue":"TRANSPOSE_SNIPPETS","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":289},{"name":"tableConfig$","defaultValue":"new BehaviorSubject<\\n    TableConfig<YearData>\\n  >({})","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<TableConfig<YearData>>","optional":false,"description":"","line":131}],"methodsClass":[{"name":"empty","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":158,"deprecated":false,"deprecationMessage":""},{"name":"load","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":161,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":138,"deprecated":false,"deprecationMessage":""},{"name":"simulateLoad","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":153,"deprecated":false,"deprecationMessage":""},{"name":"transpose","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":213,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { BehaviorSubject, Observable } from \'rxjs\';\\nimport { TableConfig, GtDeltaComponent } from \'@angular-generic-table/core\';\\nimport { UntypedFormBuilder } from \'@angular/forms\';\\nimport { withLatestFrom } from \'rxjs/operators\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { TRANSPOSE_SNIPPETS } from \'./transpose.snippets\';\\ninterface RawData {\\n  year: string;\\n  value: number;\\n}\\ninterface YearData extends RawData {\\n  delta: number;\\n  deltaIndex: number;\\n  combined: number;\\n  deltaAbsolute: number;\\n}\\n@Component({\\n  selector: \'docs-transpose\',\\n  template: `\\n    <form [formGroup]=\\"reactiveForm\\">\\n      <div class=\\"row gy-3 gx-3 align-items-end mb-3\\">\\n        <div class=\\"form-group col-6 col-sm-auto\\">\\n          <label for=\\"length_input\\">Number of rows</label>\\n          <input\\n            id=\\"length_input\\"\\n            formControlName=\\"length\\"\\n            type=\\"number\\"\\n            class=\\"form-control\\"\\n          />\\n        </div>\\n        <div class=\\"form-group col-6 col-sm-auto\\">\\n          <label for=\\"search_input\\">Search</label>\\n          <input\\n            id=\\"search_input\\"\\n            formControlName=\\"search\\"\\n            type=\\"text\\"\\n            class=\\"form-control\\"\\n          />\\n        </div>\\n        <div class=\\"col-auto\\">\\n          <button\\n            class=\\"btn btn-outline-primary w-100\\"\\n            (click)=\\"simulateLoad()\\"\\n          >\\n            Simulate load\\n          </button>\\n        </div>\\n        <div class=\\"col col-sm-auto\\">\\n          <button class=\\"btn btn-outline-danger w-100\\" (click)=\\"empty()\\">\\n            Empty\\n          </button>\\n        </div>\\n        <div class=\\"col col-sm-auto\\">\\n          <button class=\\"btn btn-outline-primary w-100\\" (click)=\\"load()\\">\\n            Reset\\n          </button>\\n        </div>\\n        <div class=\\"col col-sm-auto\\">\\n          <button class=\\"btn btn-outline-primary w-100\\" (click)=\\"transpose()\\">\\n            Transpose\\n          </button>\\n        </div>\\n      </div>\\n      <div class=\\"overflow-auto\\">\\n        <angular-generic-table\\n          #table\\n          [data]=\\"data\\"\\n          [config]=\\"tableConfig$\\"\\n          [loading]=\\"loading$\\"\\n          [search]=\\"search$\\"\\n        >\\n          <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n          <div class=\\"table-no-data alert alert-info mt-3\\">Table is empty</div>\\n        </angular-generic-table>\\n      </div>\\n      <angular-generic-table-pagination [table]=\\"table\\">\\n      </angular-generic-table-pagination>\\n      <ng-template #delta let-index=\\"index\\" let-data=\\"data\\">\\n        <gt-delta [index]=\\"index\\" [data]=\\"data\\"></gt-delta>\\n      </ng-template>\\n      <ng-template #deltaAbsolute let-index=\\"index\\" let-data=\\"data\\">\\n        <gt-delta\\n          [index]=\\"index\\"\\n          [data]=\\"data\\"\\n          [deltaTemplate]=\\"deltaTemplate\\"\\n        ></gt-delta>\\n      </ng-template>\\n      <ng-template #deltaIndex let-index=\\"index\\" let-data=\\"data\\">\\n        <gt-delta [index]=\\"index\\" [data]=\\"data\\" [baseIndex]=\\"0\\"></gt-delta>\\n      </ng-template>\\n      <ng-template\\n        #combined\\n        let-index=\\"index\\"\\n        let-data=\\"data\\"\\n        let-row=\\"row\\"\\n        let-col=\\"col\\"\\n      >\\n        {{ row.value }}\\n        <ng-container *ngIf=\\"index > 0\\">\\n          <gt-delta [index]=\\"index\\" [data]=\\"data\\"></gt-delta>\\n        </ng-container>\\n      </ng-template>\\n      <ng-template #deltaTemplate let-delta=\\"delta\\">\\n        <span>{{ delta.absolute }}</span></ng-template\\n      >\\n      <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n    </form>\\n  `,\\n  styles: [],\\n})\\nexport class TransposeComponent implements OnInit {\\n  @ViewChild(\'delta\', { static: true }) delta:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  @ViewChild(\'deltaAbsolute\', { static: true }) deltaAbsolute:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  @ViewChild(\'deltaIndex\', { static: true }) deltaIndex:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  @ViewChild(\'combined\', { static: true }) combined:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  loading$ = new BehaviorSubject(false);\\n  reactiveForm = this.fb.group({\\n    length: [10],\\n    search: [\'\'],\\n  });\\n  search$ = this.reactiveForm.get(\'search\')?.valueChanges as Observable<string>;\\n  tableConfig$: BehaviorSubject<TableConfig<YearData>> = new BehaviorSubject<\\n    TableConfig<YearData>\\n  >({});\\n  data: Array<RawData> = [];\\n\\n  constructor(private fb: UntypedFormBuilder) {}\\n\\n  ngOnInit(): void {\\n    this.transpose();\\n    this.load();\\n    this.reactiveForm\\n      .get(\'length\')\\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\\n      .subscribe(([length, config]) => {\\n        length = +length;\\n        this.tableConfig$.next({\\n          ...config,\\n          pagination: { ...config.pagination, length },\\n        });\\n      });\\n  }\\n\\n  simulateLoad(): void {\\n    this.loading$.next(true);\\n    // set loading state to false after 2 seconds\\n    setTimeout(() => this.loading$.next(false), 2000);\\n  }\\n  empty(): void {\\n    this.data = [];\\n  }\\n  load(): void {\\n    this.data = [\\n      {\\n        year: \'2010\',\\n        value: 15,\\n      },\\n      {\\n        year: \'2011\',\\n        value: 30,\\n      },\\n      {\\n        year: \'2012\',\\n        value: 25,\\n      },\\n      {\\n        year: \'2013\',\\n        value: 0,\\n      },\\n      {\\n        year: \'2014\',\\n        value: 40,\\n      },\\n      {\\n        year: \'2015\',\\n        value: 0,\\n      },\\n      {\\n        year: \'2016\',\\n        value: -5,\\n      },\\n      {\\n        year: \'2018\',\\n        value: 75,\\n      },\\n      {\\n        year: \'2019\',\\n        value: 100,\\n      },\\n      {\\n        year: \'2020\',\\n        value: 250,\\n      },\\n      {\\n        year: \'2021\',\\n        value: 50,\\n      },\\n      {\\n        year: \'2022\',\\n        value: 60,\\n      },\\n    ];\\n  }\\n  transpose(): void {\\n    if (this.tableConfig$.value.columns) {\\n      this.tableConfig$.next({\\n        stickyHeaders: {\\n          row: true,\\n          column: true,\\n        },\\n        rows: {\\n          year: {\\n            sortable: true,\\n            header: false,\\n            class: \'text-end\',\\n          },\\n          value: {\\n            class: \'text-end\',\\n          },\\n          delta: {\\n            header: \'Delta %\',\\n            templateRef: this.delta,\\n            class: \'text-end\',\\n          },\\n          deltaIndex: {\\n            header: \'Since inception %\',\\n            templateRef: this.deltaIndex,\\n            class: \'text-end\',\\n          },\\n          deltaAbsolute: {\\n            header: \'Delta\',\\n            templateRef: this.deltaAbsolute,\\n            class: \'text-end\',\\n          },\\n          combined: {\\n            header: \'Value with change\',\\n            templateRef: this.combined,\\n            class: \'text-end text-nowrap\',\\n          },\\n        },\\n      });\\n    } else {\\n      this.tableConfig$.next({\\n        stickyHeaders: {\\n          row: true,\\n          column: true,\\n        },\\n        columns: {\\n          year: {\\n            sortable: true,\\n          },\\n          value: {\\n            class: \'text-end\',\\n          },\\n          delta: {\\n            header: \'Delta %\',\\n            templateRef: this.delta,\\n            class: \'text-end\',\\n          },\\n          deltaIndex: {\\n            header: \'Since inception %\',\\n            templateRef: this.deltaIndex,\\n            class: \'text-end\',\\n          },\\n          deltaAbsolute: {\\n            header: \'Delta\',\\n            templateRef: this.deltaAbsolute,\\n            class: \'text-end\',\\n          },\\n          combined: {\\n            header: \'Value with change\',\\n            templateRef: this.combined,\\n            class: \'text-end text-nowrap\',\\n          },\\n        },\\n        pagination: { length: this.reactiveForm.get(\'length\')?.value },\\n      });\\n    }\\n  }\\n  SNIPPETS = TRANSPOSE_SNIPPETS;\\n}\\n\\nexport const Transpose: Story<TransposeComponent> = (\\n  args: TransposeComponent\\n) => ({\\n  props: args,\\n  component: TransposeComponent,\\n});\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"fb","type":"UntypedFormBuilder","deprecated":false,"deprecationMessage":""}],"line":134,"jsdoctags":[{"name":"fb","type":"UntypedFormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"]}],"modules":[{"name":"AppModule","id":"module-AppModule-05692c0296806f846ffa8a66e3675b6488ec6d03b4a87aac5053ac5f4885ea1c7a0941029a901631e9ff0cc809c5d617716c6f9001a4bd7bd448e4e2b9fd8384","description":"","deprecationMessage":"","deprecated":false,"file":"projects/docs/src/app/app.module.ts","methods":[],"sourceCode":"import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { AppRoutingModule } from \'./app-routing.module\';\\nimport { AppComponent } from \'./app.component\';\\nimport {\\n  GenericTableCoreModule,\\n  GenericTablePaginationModule,\\n} from \'@angular-generic-table/core\';\\nimport { ReactiveFormsModule } from \'@angular/forms\';\\nimport { AdvancedComponent } from \'./examples/advanced/advanced.component\';\\nimport { SimpleComponent } from \'./examples/simple/simple.component\';\\nimport { TabsComponent } from \'./components/tabs/tabs.component\';\\nimport { CustomTemplatesComponent } from \'./examples/custom-templates/custom-templates.component\';\\nimport { PaginationComponent } from \'./examples/pagination/pagination.component\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { HttpClientModule } from \'@angular/common/http\';\\nimport { HorizontalTableComponent } from \'./examples/horizontal-table/horizontal-table.component\';\\nimport { MobileLayoutComponent } from \'./examples/mobile-layout/mobile-layout.component\';\\nimport { NestedDataComponent } from \'./examples/nested-data/nested-data.component\';\\nimport { TransposeComponent } from \'./examples/transpose/transpose.component\';\\nimport { RowHoverClickComponent } from \'./examples/row-hover-click/row-hover-click.component\';\\nimport { FooterComponent } from \'./examples/footer/footer.component\';\\nimport { SortingComponent } from \'./examples/sorting/sorting.component\';\\nimport { ServerSidePaginationComponent } from \'./examples/server-side-pagination/server-side-pagination.component\';\\nimport { RowSelectComponent } from \'./examples/row-select/row-select.component\';\\n\\n@NgModule({\\n  declarations: [\\n    AppComponent,\\n    AdvancedComponent,\\n    SimpleComponent,\\n    HorizontalTableComponent,\\n    PaginationComponent,\\n    TabsComponent,\\n    CustomTemplatesComponent,\\n    MobileLayoutComponent,\\n    NestedDataComponent,\\n    TransposeComponent,\\n    RowHoverClickComponent,\\n    FooterComponent,\\n    SortingComponent,\\n    ServerSidePaginationComponent,\\n    RowSelectComponent,\\n  ],\\n  imports: [\\n    BrowserModule,\\n    CommonModule,\\n    AppRoutingModule,\\n    GenericTableCoreModule,\\n    GenericTablePaginationModule,\\n    ReactiveFormsModule,\\n    HttpClientModule,\\n  ],\\n  providers: [],\\n  bootstrap: [AppComponent],\\n})\\nexport class AppModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"AdvancedComponent"},{"name":"AppComponent"},{"name":"CustomTemplatesComponent"},{"name":"FooterComponent"},{"name":"HorizontalTableComponent"},{"name":"MobileLayoutComponent"},{"name":"NestedDataComponent"},{"name":"RowHoverClickComponent"},{"name":"RowSelectComponent"},{"name":"ServerSidePaginationComponent"},{"name":"SimpleComponent"},{"name":"SortingComponent"},{"name":"TabsComponent"},{"name":"TransposeComponent"}]},{"type":"imports","elements":[{"name":"AppRoutingModule"},{"name":"GenericTableCoreModule"},{"name":"GenericTablePaginationModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[{"name":"AppComponent"}]},{"type":"classes","elements":[]}]},{"name":"AppRoutingModule","id":"module-AppRoutingModule-6b7030a561f0fa8129816edc1dc22bd910bb531ee345106dca4ebb6a32d04ebff6a7c412c1b227408a0ae294507cb5a3e410c94f24c7fca823b81b474d8e7483","description":"","deprecationMessage":"","deprecated":false,"file":"projects/docs/src/app/app-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { Routes, RouterModule } from \'@angular/router\';\\nimport { AdvancedComponent } from \'./examples/advanced/advanced.component\';\\nimport { SimpleComponent } from \'./examples/simple/simple.component\';\\nimport { CustomTemplatesComponent } from \'./examples/custom-templates/custom-templates.component\';\\nimport { PaginationComponent } from \'./examples/pagination/pagination.component\';\\nimport { HorizontalTableComponent } from \'./examples/horizontal-table/horizontal-table.component\';\\nimport { MobileLayoutComponent } from \'./examples/mobile-layout/mobile-layout.component\';\\nimport { NestedDataComponent } from \'./examples/nested-data/nested-data.component\';\\nimport { TransposeComponent } from \'./examples/transpose/transpose.component\';\\nimport { RowHoverClickComponent } from \'./examples/row-hover-click/row-hover-click.component\';\\nimport { FooterComponent } from \'./examples/footer/footer.component\';\\nimport { SortingComponent } from \'./examples/sorting/sorting.component\';\\nimport { ServerSidePaginationComponent } from \'./examples/server-side-pagination/server-side-pagination.component\';\\nimport { RowSelectComponent } from \'./examples/row-select/row-select.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'advanced\',\\n    component: AdvancedComponent,\\n  },\\n  {\\n    path: \'pagination\',\\n    component: PaginationComponent,\\n  },\\n  {\\n    path: \'lazy-loading\',\\n    component: ServerSidePaginationComponent,\\n  },\\n  {\\n    path: \'simple\',\\n    component: SimpleComponent,\\n  },\\n  {\\n    path: \'sorting\',\\n    component: SortingComponent,\\n  },\\n  {\\n    path: \'row-hover-click\',\\n    component: RowHoverClickComponent,\\n  },\\n  {\\n    path: \'row-select\',\\n    component: RowSelectComponent,\\n  },\\n  {\\n    path: \'horizontal-table\',\\n    component: HorizontalTableComponent,\\n  },\\n  {\\n    path: \'custom-templates\',\\n    component: CustomTemplatesComponent,\\n  },\\n  {\\n    path: \'mobile-layout\',\\n    component: MobileLayoutComponent,\\n  },\\n  {\\n    path: \'nested\',\\n    component: NestedDataComponent,\\n  },\\n  {\\n    path: \'transpose\',\\n    component: TransposeComponent,\\n  },\\n  {\\n    path: \'footer\',\\n    component: FooterComponent,\\n  },\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forRoot(routes)],\\n  exports: [RouterModule],\\n})\\nexport class AppRoutingModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"GenericTableCoreModule","id":"module-GenericTableCoreModule-d87313b0130c5f25c4e803a90e6d5e8b4516792f002d431d94ef3abbcccc10cfb128b7ff354582cb0673d7e600b8347d0bcd63db2a4b93a0a0a3d49e34009486","description":"","deprecationMessage":"","deprecated":false,"file":"projects/core/src/lib/core.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CoreComponent } from \'./core.component\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { SortClassPipe } from \'./pipes/sort-class.pipe\';\\nimport { DashCasePipe } from \'./pipes/dash-case.pipe\';\\nimport { HighlightPipe } from \'./pipes/highlight.pipe\';\\nimport { CapitalCasePipe } from \'./pipes/capital-case.pipe\';\\nimport { DynamicPipe } from \'./pipes/dynamic.pipe\';\\nimport { GtDeltaComponent } from \'./gt-delta/gt-delta.component\';\\nimport { RowSelectionPipe } from \'./pipes/row-selection.pipe\';\\n\\n@NgModule({\\n  imports: [\\n    CommonModule,\\n    CoreComponent,\\n    SortClassPipe,\\n    DashCasePipe,\\n    HighlightPipe,\\n    RowSelectionPipe,\\n    CapitalCasePipe,\\n    CapitalCasePipe,\\n    DynamicPipe,\\n    GtDeltaComponent,\\n  ],\\n  exports: [CoreComponent, GtDeltaComponent],\\n  declarations: [],\\n})\\nexport class GenericTableCoreModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[{"name":"CapitalCasePipe"},{"name":"CapitalCasePipe"},{"name":"CoreComponent"},{"name":"DashCasePipe"},{"name":"DynamicPipe"},{"name":"GtDeltaComponent"},{"name":"HighlightPipe"},{"name":"RowSelectionPipe"},{"name":"SortClassPipe"}]},{"type":"exports","elements":[{"name":"CoreComponent"},{"name":"GtDeltaComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"GenericTablePaginationModule","id":"module-GenericTablePaginationModule-a4227080671cbaa73f2851b45140457f52248b2362cd6ee8d180e3ebf8f950307912b89e04fbcbcdf5cd82a6e0720cf164c1d5ddfb6c9f94ee347b7a54b53fa3","description":"","deprecationMessage":"","deprecated":false,"file":"projects/core/src/lib/pagination/pagination.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { PaginationComponent } from \'./pagination.component\';\\n\\n@NgModule({\\n  imports: [CommonModule, PaginationComponent],\\n  exports: [PaginationComponent],\\n})\\nexport class GenericTablePaginationModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[{"name":"PaginationComponent"}]},{"type":"exports","elements":[{"name":"PaginationComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]}],"miscellaneous":{"variables":[{"name":"Advanced","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/app.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<AppComponent>","defaultValue":"(args: AppComponent) => ({\\n  props: args,\\n  component: AppComponent,\\n})"},{"name":"Advanced","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/advanced/advanced.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<AdvancedComponent>","defaultValue":"(\\n  args: AdvancedComponent\\n) => ({\\n  props: args,\\n  component: AdvancedComponent,\\n})"},{"name":"ADVANCED_DOCS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/advanced/advanced.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'advanced.component.html\',\\n    code: `<div class=\\"row gx-2 gy-3 mb-3\\">\\n  <div class=\\"col-12 col-sm-auto\\">\\n    <button class=\\"btn btn-primary w-100\\" (click)=\\"addData()\\">Add random data</button>\\n  </div>\\n  <div class=\\"col-12 col-sm-auto\\">\\n    <button class=\\"btn btn-danger w-100\\" (click)=\\"removeData()\\">Remove data</button>\\n  </div>\\n  <div class=\\"col-12 col-sm-auto\\">\\n    <button class=\\"btn btn-secondary w-100\\" (click)=\\"simulateLoad()\\">Load</button>\\n  </div>\\n</div>\\n<form [formGroup]=\\"paginationForm\\">\\n  <div class=\\"row\\">\\n    <div class=\\"form-group col-12 col-sm-auto\\">\\n      <label for=\\"length_input\\">Length</label>\\n      <input id=\\"length_input\\" formControlName=\\"length\\" type=\\"number\\" class=\\"form-control\\">\\n    </div>\\n    <div class=\\"form-group col-12 col-sm-auto\\">\\n      <label for=\\"search_input\\">Search</label>\\n      <input id=\\"search_input\\" formControlName=\\"search\\" type=\\"text\\" class=\\"form-control\\">\\n    </div>\\n  </div>\\n</form>\\n<div class=\\"mx-n3 mx-sm-0\\">\\n  <angular-generic-table [data]=\\"data$\\" [config]=\\"tableConfig$\\" [page]=\\"(currentPage$ | async)!\\" [search]=\\"search$\\" [loading]=\\"loading$\\" #table>\\n    <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n    <div class=\\"table-no-data alert alert-info mt-3\\">\\n      Table is empty\\n    </div>\\n  </angular-generic-table>\\n</div>\\n<div class=\\"row justify-content-between justify-content-sm-center align-items-center mt-3\\" *ngIf=\\"{current: (currentPage$ | async) || 0,total: (table.table$ | async)?.info?.pageTotal || 1\\n} as pagination\\">\\n  <div class=\\"col-auto\\">\\n    <button class=\\"btn btn-primary\\" (click)=\\"prev()\\" [disabled]=\\"pagination.current === 0\\">Prev</button>\\n  </div>\\n  <div class=\\"col-auto\\">\\n    <button class=\\"btn btn-primary\\" (click)=\\"next()\\" [disabled]=\\"pagination.total -1 === pagination.current\\">Next</button>\\n  </div>\\n  <div class=\\"col-auto\\">Current page: {{pagination.current +1}}</div>\\n  <div class=\\"col-auto\\">Total pages: {{pagination.total}}</div>\\n  <div class=\\"col-auto\\">\\n    Records: {{(data$ | async).length}}\\n  </div>\\n  <div class=\\"col-auto\\">\\n    {{clicked}}\\n  </div>\\n</div>\\n<ng-template #actions let-row=\\"row\\" let-col=\\"col\\" let-index=\\"index\\">\\n  <button\\n    *ngIf=\\"index !== undefined\\"\\n    class=\\"btn btn-outline-primary btn-sm\\"\\n    (click)=\\"clickAction(row, col, index)\\"\\n  >\\n    Click me!\\n  </button>\\n</ng-template>\\n<ng-template #color let-row=\\"row\\" let-col=\\"col\\">\\n  <div\\n    [style.background]=\\"row[col.key]\\"\\n    style=\\"width: 1.5rem; height: 1.5rem; border-radius: 50%\\"\\n  ></div>\\n</ng-template>`,\\n    language: \'xml\',\\n  },\\n  {\\n    name: \'advanced.component.ts\',\\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { BehaviorSubject, Observable, ReplaySubject } from \'rxjs\';\\nimport { FormBuilder } from \'@angular/forms\';\\nimport { TableColumn, TableConfig, TableRow } from \'@angular-generic-table/core\';\\nimport { withLatestFrom } from \'rxjs/operators\';\\n\\n@Component({\\n  templateUrl: \'./advanced.component.html\',\\n})\\nexport class AdvancedComponent implements OnInit {\\n  get currentPage$(): Observable<number> {\\n    return this._currentPage$.asObservable();\\n  }\\n\\n  set currentPage(value: number) {\\n    this._currentPage$.next(value);\\n  }\\n  constructor(private fb: FormBuilder) {}\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  @ViewChild(\'color\', { static: true }) color: TemplateRef<any> | undefined;\\n  paginationForm = this.fb.group({\\n    length: [10],\\n    search: [\'\'],\\n  });\\n  search$ = this.paginationForm.get(\'search\')?.valueChanges as Observable<string>;\\n  loading$ = new BehaviorSubject(true);\\n  data$: BehaviorSubject<any> = new BehaviorSubject([\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteColor: \'#26BFAF\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteColor: \'#0f0\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ]);\\n\\n  private _currentPage$ = new BehaviorSubject(0);\\n\\n  clicked: string = \'\';\\n  maleFirstNames = [\'Peter\', \'Clark\', \'Ruben\', \'John\', \'Jack\', \'Roscoe\'];\\n  femaleFirstNames = [\'Mary Jane\', \'Kim\', \'Sarah\', \'Michelle\', \'Ann\'];\\n  lastNames = [\'Andersson\', \'Smith\', \'Parker\', \'Kent\', \'Rogers\', \'Lane\', \'Jackson\'];\\n  foods = [\'Pizza\', \'Pasta\', \'Hamburger\', \'Pancakes\', \'Tacos\', \'Lasagna\', \'Meatloaf\'];\\n  colors = [\'#33d60b\', \'#dcafff\', \'#3fc9ff\', \'#ff1600\', \'#5238b1\', \'#fff\'];\\n\\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\\n\\n  addData(): void {\\n    this.data$.next([...this.data$.getValue(), this.randomRecord()]);\\n  }\\n\\n  removeData(): void {\\n    this.data$.next([]);\\n  }\\n\\n  simulateLoad(): void {\\n    this.loading$.next(true);\\n    // set loading state to false after 2 seconds\\n    setTimeout(() => this.loading$.next(false), 2000);\\n  }\\n\\n  clickAction(row: TableRow, column: { key: string; value: TableColumn }, index: number): void {\\n    console.log(\'clicked row:\', row, \'col:\', column);\\n    this.clicked = \\\\`clicked row number: \\\\${index}\\\\`;\\n  }\\n\\n  randomRecord(): TableRow {\\n    const random = Math.floor(Math.random() * 2);\\n    const newRecord = {\\n      firstName: random\\n        ? this.maleFirstNames[Math.floor(Math.random() * this.maleFirstNames.length)]\\n        : this.femaleFirstNames[Math.floor(Math.random() * this.femaleFirstNames.length)],\\n      lastName: this.lastNames[Math.floor(Math.random() * this.lastNames.length)],\\n      gender: random ? \'male\' : \'female\',\\n      favoriteColor: this.colors[Math.floor(Math.random() * this.colors.length)],\\n      favoriteFood: this.foods[Math.floor(Math.random() * this.foods.length)],\\n    };\\n    console.log(\'added new random record:\', newRecord);\\n\\n    return newRecord;\\n  }\\n\\n  next = () => {\\n    this.currentPage = this._currentPage$.value + 1;\\n  };\\n  prev = () => {\\n    this.currentPage = this._currentPage$.value - 1;\\n  };\\n\\n  ngOnInit(): void {\\n    this.simulateLoad();\\n    this.paginationForm\\n      .get(\'length\')\\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\\n      .subscribe(([length, config]) => {\\n        length = +length;\\n        this.tableConfig$.next({\\n          ...config,\\n          pagination: { ...config.pagination, length },\\n        });\\n      });\\n    this.tableConfig$.next({\\n      class: \'table table-mobile text-nowrap mb-0\',\\n      columns: {\\n        firstName: {\\n          header: \'First name\',\\n          mobileHeader: true,\\n          sortable: true,\\n          order: 0,\\n        },\\n        lastName: {\\n          header: \'Last name\',\\n          mobileHeader: true,\\n          hidden: false,\\n          sortable: true,\\n        },\\n        gender: {\\n          mobileHeader: \'Sex\',\\n          sortable: true,\\n          order: 1,\\n        },\\n        favoriteColor: {\\n          header: \'Favorite color\',\\n          mobileHeader: true,\\n          templateRef: this.color,\\n          sortable: false,\\n          order: 2,\\n          search: false,\\n          class: \'custom-class\',\\n        },\\n        favoriteFood: {\\n          mobileHeader: true,\\n          header: \'Favorite food\',\\n          hidden: false,\\n          sortable: true,\\n          order: 0,\\n        },\\n        action: {\\n          mobileHeader: false,\\n          header: false,\\n          templateRef: this.actions,\\n          order: 6,\\n        },\\n      },\\n      pagination: {\\n        length: this.paginationForm.get(\'length\')?.value || 0,\\n      },\\n      footer: {\\n        columns: {\\n          gender: {\\n            count: (data, key) => {\\n              let men = 0;\\n              let women = 0;\\n              for (let i = 0; i < data.length; i++) {\\n                if (data[i][key] === \'female\') {\\n                  women++;\\n                } else if (data[i][key] === \'male\') {\\n                  men++;\\n                }\\n              }\\n              return \\\\`♂ \\\\${men} ♀ \\\\${women}\\\\`;\\n            },\\n          },\\n          favoriteColor: {},\\n          action: { count: (data, key) => \\\\`Total: \\\\${data.length}\\\\` },\\n        },\\n      },\\n    });\\n  }\\n}`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\nimport { ReactiveFormsModule } from \'@angular/forms\';\\n\\nimport { AdvancedComponent } from \'./advanced.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [AdvancedComponent],\\n  imports: [BrowserModule, ReactiveFormsModule, GenericTableCoreModule],\\n  bootstrap: [AdvancedComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"},{"name":"ADVANCED_DOCS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/pagination/pagination.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'pagination.component.html\',\\n    code: `<form [formGroup]=\\"paginationForm\\">\\n  <div class=\\"row gy-3\\">\\n    <div class=\\"form-group col-12 col-sm-auto\\">\\n      <label for=\\"length_input\\">Length</label>\\n      <input id=\\"length_input\\" formControlName=\\"length\\" type=\\"number\\" class=\\"form-control\\">\\n    </div>\\n    <div class=\\"form-group col-12 col-sm-auto\\">\\n      <label for=\\"search_input\\">Search</label>\\n      <input id=\\"search_input\\" formControlName=\\"search\\" type=\\"text\\" class=\\"form-control\\">\\n    </div>\\n  </div>\\n</form>\\n<div class=\\"mx-n3 mx-sm-0 my-3 overflow-auto\\">\\n  <angular-generic-table [data]=\\"data$\\" [config]=\\"tableConfig$\\" [search]=\\"search$\\" [loading]=\\"loading$\\" #table>\\n    <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n    <div class=\\"table-no-data alert alert-info mt-3\\">\\n      Table is empty\\n    </div>\\n  </angular-generic-table>\\n</div>\\n<angular-generic-table-pagination [table]=\\"table\\">\\n</angular-generic-table-pagination>`,\\n    language: \'xml\',\\n  },\\n  {\\n    name: \'pagination.component.ts\',\\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { BehaviorSubject, Observable, ReplaySubject } from \'rxjs\';\\nimport { FormBuilder } from \'@angular/forms\';\\nimport { TableConfig } from \'@angular-generic-table/core\';\\nimport { pluck, tap, withLatestFrom } from \'rxjs/operators\';\\nimport { HttpClient } from \'@angular/common/http\';\\nimport { DatePipe } from \'@angular/common\';\\n\\n@Component({\\n  selector: \'docs-pagination\',\\n  templateUrl: \'./pagination.component.html\',\\n  styles: [],\\n})\\nexport class PaginationComponent implements OnInit {\\n  constructor(private fb: FormBuilder, private http: HttpClient) {}\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  @ViewChild(\'color\', { static: true }) color: TemplateRef<any> | undefined;\\n  paginationForm = this.fb.group({\\n    length: [10],\\n    search: [\'\'],\\n  });\\n  search$ = this.paginationForm.get(\'search\')?.valueChanges as Observable<string>;\\n  loading$ = new BehaviorSubject(true);\\n  data$: Observable<any> = this.http.get(\'https://private-730c61-generictable.apiary-mock.com/data\').pipe(\\n    pluck(\'data\'),\\n    tap((_) => this.loading$.next(false))\\n  );\\n\\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\\n\\n  ngOnInit(): void {\\n    this.paginationForm\\n      .get(\'length\')\\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\\n      .subscribe(([length, config]) => {\\n        length = +length;\\n        this.tableConfig$.next({\\n          ...config,\\n          pagination: { ...config.pagination, length },\\n        });\\n      });\\n    this.tableConfig$.next({\\n      class: \'table text-nowrap\',\\n      columns: {\\n        first_name: {\\n          sortable: true,\\n        },\\n        last_name: {\\n          sortable: true,\\n        },\\n        gender: {\\n          sortable: true,\\n        },\\n        birthday: {\\n          sortable: true,\\n          class: \'text-end\',\\n          transform: {\\n            pipe: DatePipe,\\n            args: [\'longDate\'],\\n          },\\n        },\\n      },\\n      pagination: {\\n        length: this.paginationForm.get(\'length\')?.value || 0,\\n      },\\n    });\\n  }\\n}`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\nimport { HttpClientModule } from \'@angular/common/http\';\\nimport { ReactiveFormsModule } from \'@angular/forms\';\\n\\nimport { PaginationComponent } from \'./pagination.component\';\\nimport { GenericTableCoreModule, GenericTablePaginationModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [PaginationComponent],\\n  imports: [\\n    BrowserModule,\\n    GenericTableCoreModule,\\n    GenericTablePaginationModule,\\n    ReactiveFormsModule,\\n    HttpClientModule\\n  ],\\n  bootstrap: [PaginationComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"},{"name":"calculate","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/lib/utilities/utilities.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(data: Array<TableRow>, config: TableConfig) => {\\n  const CALCULATIONS: { [key: string]: boolean } = {};\\n  const COLUMN_CALCULATIONS: { [key: string]: Array<string> } = {};\\n  let CALCULATED = Object.entries(config.footer?.columns || {})\\n    .filter(\\n      ([columnName, calculations]) =>\\n        Object.values(calculations || {}).filter((value) => value !== false)\\n          .length >= 0\\n    )\\n    .reduce((acc: any, [columnName, calculations], index) => {\\n      acc[columnName] = Object.entries(calculations || {})\\n        .filter(([calculation, value]) => value !== false)\\n        .reduce((acc: any, [calculation, value]) => {\\n          if (COLUMN_CALCULATIONS[columnName]) {\\n            COLUMN_CALCULATIONS[columnName].push(calculation);\\n          } else if (value === true) {\\n            COLUMN_CALCULATIONS[columnName] = [calculation];\\n          }\\n          CALCULATIONS[calculation] = true;\\n          if (typeof value === \'function\') {\\n            value = value(data, columnName);\\n          }\\n          acc[calculation] = value === true ? 0 : value;\\n          return acc;\\n        }, {});\\n      return acc;\\n    }, {});\\n  if (Object.keys(CALCULATED).length > 0) {\\n    for (let i = 0; i < data.length; i++) {\\n      Object.entries(COLUMN_CALCULATIONS).forEach(([column, calculations]) => {\\n        if (calculations.indexOf(\'sum\') > -1) {\\n          CALCULATED[column].sum += data[i][column];\\n        }\\n        if (\\n          calculations.indexOf(\'avg\') > -1 &&\\n          calculations.indexOf(\'sum\') === -1\\n        ) {\\n          if (CALCULATED[column].sum === undefined) {\\n            CALCULATED[column].sum = 0;\\n          }\\n          CALCULATED[column].sum += data[i][column];\\n        }\\n        if (\\n          calculations.indexOf(\'max\') > -1 &&\\n          (!CALCULATED[column].max || +data[i][column] > CALCULATED[column].max)\\n        ) {\\n          CALCULATED[column].max = +data[i][column];\\n        }\\n        if (\\n          calculations.indexOf(\'min\') > -1 &&\\n          (!CALCULATED[column].min || +data[i][column] < CALCULATED[column].min)\\n        ) {\\n          CALCULATED[column].min = +data[i][column];\\n        }\\n      });\\n    }\\n    Object.entries(COLUMN_CALCULATIONS).forEach(([column, calculations]) => {\\n      if (calculations.indexOf(\'avg\') !== -1) {\\n        CALCULATED[column].avg = CALCULATED[column]?.sum / data.length;\\n        // if sum is not part of calculations config...\\n        if (calculations.indexOf(\'sum\') === -1 && CALCULATED[column].sum) {\\n          // ...remove it\\n          delete CALCULATED[column].sum;\\n        }\\n      }\\n      if (calculations.indexOf(\'count\') !== -1) {\\n        CALCULATED[column].count = data.length;\\n      }\\n    });\\n  }\\n  return {\\n    calculated: CALCULATED,\\n    calculations: Object.keys(CALCULATIONS).sort(\\n      (a, b) =>\\n        (config.footer?.rowOrder?.indexOf(a) || 0) -\\n        (config.footer?.rowOrder?.indexOf(b) || 0)\\n    ),\\n    calculatedColumnsCount: Object.keys(CALCULATED).length || 0,\\n  };\\n}"},{"name":"capitalize","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/lib/utilities/utilities.ts","deprecated":false,"deprecationMessage":"","type":"string"},{"name":"chunk","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/lib/utilities/utilities.ts","deprecated":false,"deprecationMessage":"","type":"Array<Array<TableRow>>"},{"name":"context","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/test.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"require.context(\'./\', true, /\\\\.spec\\\\.ts$/)"},{"name":"context","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/test.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"require.context(\'./\', true, /\\\\.spec\\\\.ts$/)"},{"name":"CUSTOM_TEMPLATES_DOCS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/custom-templates/custom-templates.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'custom-templates.component.ts\',\\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { TableColumn, TableConfig, TableRow } from \'@angular-generic-table/core\';\\nimport { ReplaySubject } from \'rxjs\';\\n\\n@Component({\\n  selector: \'custom-templates\',\\n  templateUrl: \\\\`./custom-templates.component.html\\\\`\\n})\\nexport class CustomTemplatesComponent implements OnInit {\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  @ViewChild(\'color\', { static: true }) color: TemplateRef<any> | undefined;\\n  clicked = \'\';\\n\\n  data = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteColor: \'#26BFAF\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteColor: \'#0f0\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ];\\n  config$: ReplaySubject<TableConfig> = new ReplaySubject(1);\\n  ngOnInit(): void {\\n    this.config$.next({\\n      columns: {\\n        firstName: {},\\n        lastName: {},\\n        gender: {},\\n        favoriteColor: {\\n          templateRef: this.color,\\n        },\\n        favoriteFood: {},\\n        action: {\\n          templateRef: this.actions,\\n        },\\n      },\\n    });\\n  }\\n  clickAction(row: TableRow, column: { key: string; value: TableColumn }, index: number): void {\\n    console.log(\'clicked row:\', row, \'col:\', column);\\n    this.clicked = \\\\`clicked row number: \\\\${index}\\\\`;\\n  }\\n}`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { CustomTemplatesComponent } from \'./custom-templates-table.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [CustomTemplatesComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [CustomTemplatesComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'custom-templates.component.html\',\\n    code: `<angular-generic-table [data]=\\"data\\" [config]=\\"config$\\"></angular-generic-table>\\n<ng-template #actions let-row=\\"row\\" let-col=\\"col\\" let-index=\\"index\\">\\n <button class=\\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\\" (click)=\\"clickAction(row, col, index)\\">Click me!</button>\\n</ng-template>\\n<ng-template #color let-row=\\"row\\" let-col=\\"col\\">\\n <div [style.background]=\\"row[col.key]\\" style=\\"width: 1.5rem; height: 1.5rem; border-radius: 50%\\"></div>\\n</ng-template>\\n{{ clicked }}`,\\n    language: \'xml\',\\n  },\\n]"},{"name":"CustomTemplates","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/custom-templates/custom-templates.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<CustomTemplatesComponent>","defaultValue":"(\\n  args: CustomTemplatesComponent\\n) => ({\\n  props: args,\\n  component: CustomTemplatesComponent,\\n})"},{"name":"dashed","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/lib/utilities/utilities.ts","deprecated":false,"deprecationMessage":"","type":"string"},{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/environments/environment.prod.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  production: true\\n}"},{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/environments/environment.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  production: false\\n}"},{"name":"Footer","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/footer/footer.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<FooterComponent>","defaultValue":"(args: FooterComponent) => ({\\n  props: args,\\n  component: FooterComponent,\\n})"},{"name":"Horizontal","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/horizontal-table/horizontal-table.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<HorizontalTableComponent>","defaultValue":"(\\n  args: HorizontalTableComponent\\n) => ({\\n  props: args,\\n  component: HorizontalTableComponent,\\n})"},{"name":"HORIZONTAL_TABLE_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/horizontal-table/horizontal-table.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'horizontal-table.component.ts\',\\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { GtDeltaComponent, TableConfig } from \'@angular-generic-table/core\';\\nimport { BehaviorSubject } from \'rxjs\';\\n\\n@Component({\\n  selector: \'docs-horizontal\',\\n  templateUrl: \'./horizontal-table.component.html\',\\n  styles: [],\\n})\\nexport class TransposeComponent implements OnInit {\\n  @ViewChild(\'feelings\', { static: true }) feelings:\\n    | TemplateRef<any>\\n    | undefined;\\n  @ViewChild(\'delta\', { static: true }) delta: TemplateRef<GtDeltaComponent> | undefined;\\n  @ViewChild(\'deltaIndex\', { static: true }) deltaIndex:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  loading$ = new BehaviorSubject(false);\\n  config: TableConfig = {};\\n  data: any = [];\\n\\n  ngOnInit(): void {\\n    this.config = {\\n      stickyHeaders: {\\n        row: true,\\n      },\\n      mobileLayout: true,\\n      rows: {\\n        year: {\\n          class: \'text-end\',\\n          header: false\\n        },\\n        value: {\\n          class: \'text-end\'\\n        },\\n        delta: {\\n          header: \'Delta %\',\\n          templateRef: this.delta,\\n          class: \'text-end\'\\n        },\\n        deltaIndex: {\\n          header: \'Since inception %\',\\n          templateRef: this.deltaIndex,\\n          class: \'text-end\'\\n        },\\n        feeling: {\\n          templateRef: this.feelings,\\n          class: \'text-end\'\\n        },\\n      },\\n    };\\n    this.load();\\n  }\\n  simulateLoad(): void {\\n    this.loading$.next(true);\\n    // set loading state to false after 2 seconds\\n    setTimeout(() => this.loading$.next(false), 2000);\\n  }\\n  empty(): void {\\n    this.data = [];\\n  }\\n  load(): void {\\n    this.data = [\\n      {\\n        year: \'2017\',\\n        value: 50,\\n        feeling: \'neutral\'\\n      },\\n      {\\n        year: \'2018\',\\n        value: 75,\\n        feeling: \'positive\'\\n      },\\n      {\\n        year: \'2019\',\\n        value: 100,\\n        feeling: \'thrilled\'\\n      },\\n      {\\n        year: \'2020\',\\n        value: 250,\\n        feeling: \'thrilled\'\\n      },\\n      {\\n        year: \'2021\',\\n        value: 50,\\n        feeling: \'negative\'\\n      }\\n    ];\\n  }\\n}\\n`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'horizontal-table.component.html\',\\n    code: `<button class=\\"btn btn-outline-primary\\" (click)=\\"simulateLoad()\\">Simulate load</button>\\n<button class=\\"btn btn-outline-danger mx-3\\" (click)=\\"empty()\\">Empty</button>\\n<button class=\\"btn btn-outline-primary\\" (click)=\\"load()\\">Reset</button>\\n<div class=\\"overflow-auto\\">\\n  <angular-generic-table\\n    [data]=\\"data\\"\\n    [config]=\\"config\\"\\n    [loading]=\\"loading$\\"\\n  >\\n    <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n    <div class=\\"table-no-data alert alert-info mt-3\\">Table is empty</div>\\n  </angular-generic-table>\\n</div>\\n<ng-template #feelings let-row=\\"row\\" let-col=\\"col\\">\\n  <div [ngSwitch]=\\"row[col.key]\\">\\n    <ng-container *ngSwitchCase=\\"\'thrilled\'\\">😀</ng-container>\\n    <ng-container *ngSwitchCase=\\"\'positive\'\\">🙂</ng-container>\\n    <ng-container *ngSwitchCase=\\"\'neutral\'\\">😐</ng-container>\\n    <ng-container *ngSwitchCase=\\"\'negative\'\\">😭</ng-container>\\n  </div>\\n</ng-template>\\n<ng-template #delta let-data=\\"data\\" let-index=\\"index\\">\\n  <gt-delta [index]=\\"index\\" [data]=\\"data\\"></gt-delta>\\n</ng-template>\\n<ng-template #deltaIndex let-data=\\"data\\" let-index=\\"index\\">\\n  <gt-delta [index]=\\"index\\" [baseIndex]=\\"0\\" [data]=\\"data\\"></gt-delta>\\n</ng-template>`,\\n    language: \'xml\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { HorizontalTableComponent } from \'./horizontal-table.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [HorizontalTableComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [HorizontalTableComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"},{"name":"LAZY_LOADING_DOCS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/server-side-pagination/server-side-pagination.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'server-side-pagination.component.html\',\\n    code: `<form [formGroup]=\\"paginationForm\\">\\n  <div class=\\"row gy-3\\">\\n    <div class=\\"form-group col-12 col-sm-auto\\">\\n      <label for=\\"search_input\\">Search</label>\\n      <input\\n        id=\\"search_input\\"\\n        formControlName=\\"search\\"\\n        type=\\"text\\"\\n        class=\\"form-control\\"\\n      />\\n    </div>\\n  </div>\\n</form>\\n<div class=\\"mx-n3 mx-sm-0 my-3 overflow-auto\\">\\n  <angular-generic-table\\n    [data]=\\"data$\\"\\n    [config]=\\"tableConfig$\\"\\n    [search]=\\"search$\\"\\n    [loading]=\\"loading$\\"\\n    [pagingInfo]=\\"paging$ | async\\"\\n    (pageChange)=\\"onPageChange($event)\\"\\n    (columnSort)=\\"onSortOrderChange($event)\\"\\n    [sortOrder]=\\"sorting$ | async\\"\\n    #table\\n  >\\n    <div\\n      class=\\"table-loading gt-skeleton-loader\\"\\n      [style.--gt-skeleton-height]=\\"\\n        ((table.table$ | async)?.info?.pageSize ?? 0) * 41 - 11 + \'px\'\\n      \\"\\n    ></div>\\n    <div class=\\"table-no-data alert alert-info mt-3\\">Table is empty</div>\\n  </angular-generic-table>\\n</div>\\n<angular-generic-table-pagination [table]=\\"table\\">\\n</angular-generic-table-pagination>`,\\n    language: \'xml\',\\n  },\\n  {\\n    name: \'server-side-pagination.component.ts\',\\n    code: `import {\\n  ChangeDetectionStrategy,\\n  Component,\\n  OnInit,\\n  TemplateRef,\\n  ViewChild,\\n} from \'@angular/core\';\\nimport { DatePipe, formatDate } from \'@angular/common\';\\nimport {\\n  GtPageChangeEvent,\\n  GtSortEvent,\\n  GtSortOrder,\\n  TableConfig,\\n  GtPaginationInfo,\\n  sortOrderToParams\\n} from \'@angular-generic-table/core\';\\nimport { FormBuilder } from \'@angular/forms\';\\nimport { HttpClient } from \'@angular/common/http\';\\nimport { BehaviorSubject, Observable, ReplaySubject } from \'rxjs\';\\nimport { pluck, shareReplay, switchMap, tap } from \'rxjs/operators\';\\n\\ninterface LazyLoadingData {\\n  birthday: string;\\n  email: string;\\n  favorite_color: string;\\n  first_name: string;\\n  gender: string;\\n  id: number;\\n  last_name: string;\\n}\\n\\ninterface LazyLoadingResponse {\\n  data: Array<LazyLoadingData>;\\n  paging: GtPaginationInfo;\\n  sorting: GtSortOrder<LazyLoadingData>;\\n  filters: [\\n    {\\n      [Property in keyof LazyLoadingResponse]: { [key: string]: any };\\n    }\\n  ];\\n  request: any;\\n  error: any;\\n}\\n\\n@Component({\\n  templateUrl: \'./server-side-pagination.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class ServerSidePaginationComponent implements OnInit {\\n  constructor(private fb: FormBuilder, private http: HttpClient) {}\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  @ViewChild(\'color\', { static: true }) color: TemplateRef<any> | undefined;\\n\\n paginationForm = this.fb.group({\\n    search: [\'\']\\n  });\\n requestParams$ = new BehaviorSubject({\\n    page: 1,\\n    page_size: 10,\\n    sort_by: \'+id\',\\n });\\n search$ = this.paginationForm.controls.search.valueChanges.pipe(\\n    shareReplay(1)\\n );\\n loading$ = new BehaviorSubject(true);\\n\\n request$ = this.requestParams$.pipe(\\n    tap((_) => this.loading$.next(true)), // show loading indicator whenever requests are changed (remove to disable loading indicator)\\n    switchMap((params) =>\\n      this.http.get<LazyLoadingResponse>(\\n        \'https://private-a6da3-generictableapi.apiary-mock.com/data\',\\n        {\\n          params,\\n        }\\n      )\\n    ),\\n    tap((_) => this.loading$.next(false)), // hide loading indicator\\n    shareReplay(1)\\n );\\n\\n data$: Observable<Array<LazyLoadingData>> = this.request$.pipe(\\n    pluck(\'data\'),\\n    shareReplay(1)\\n );\\n\\n paging$: Observable<GtPaginationInfo> = this.request$.pipe(\\n    pluck(\'paging\'),\\n    shareReplay(1)\\n );\\n\\n sorting$ = this.request$.pipe(\\n    pluck(\'sorting\'),\\n    shareReplay(1)\\n );\\n\\n onPageChange(event: GtPageChangeEvent): void {\\n    const current = { ...this.requestParams$.value };\\n    if (current.page != event.index + 1) {\\n      this.requestParams$.next({\\n        ...current,\\n        page: event.index + 1,\\n      });\\n    }\\n  }\\n\\n onSortOrderChange(event: GtSortEvent): void {\\n   let sort_by = sortOrderToParams([...event.currentSortOrder]);\\n   const current = { ...this.requestParams$.value };\\n   if (current.sort_by !== sort_by) {\\n     this.requestParams$.next({\\n       ...current,\\n       page: 1, // reset page to 1 when sorting changes\\n       sort_by,\\n     });\\n   }\\n }\\n\\n tableConfig$: ReplaySubject<TableConfig<LazyLoadingData>> = new ReplaySubject(\\n   1\\n );\\n\\n ngOnInit(): void {\\n   this.tableConfig$.next({\\n      class: \'table text-nowrap\',\\n      columns: {\\n        id: {\\n          sortable: true,\\n        },\\n        first_name: {},\\n        last_name: {\\n          sortable: true,\\n        },\\n        gender: {\\n          sortable: true,\\n        },\\n        birthday: {\\n          class: \'text-end justify-content-end\',\\n          search: (row, column) => formatDate(row[column], \'longDate\', \'en\'),\\n          transform: {\\n            pipe: DatePipe,\\n            args: [\'longDate\'],\\n          },\\n        },\\n        favorite_color: {\\n          hidden: true,\\n        },\\n        email: {\\n          hidden: true,\\n        },\\n      },\\n      pagination: {\\n        length: 10,\\n      },\\n    });\\n  }\\n}\\n`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\nimport { HttpClientModule } from \'@angular/common/http\';\\nimport { ReactiveFormsModule } from \'@angular/forms\';\\n\\nimport { ServerSidePaginationComponent } from \'./server-side-pagination.component\';\\nimport { GenericTableCoreModule, GenericTablePaginationModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [ServerSidePaginationComponent],\\n  imports: [\\n    BrowserModule,\\n    GenericTableCoreModule,\\n    GenericTablePaginationModule,\\n    ReactiveFormsModule,\\n    HttpClientModule\\n  ],\\n  bootstrap: [ServerSidePaginationComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"},{"name":"Mobile","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/mobile-layout/mobile-layout.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<MobileLayoutComponent>","defaultValue":"(\\n  args: MobileLayoutComponent\\n) => ({\\n  props: args,\\n  component: MobileLayoutComponent,\\n})"},{"name":"MOBILE_LAYOUT_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/mobile-layout/mobileLayout.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'mobile-layout.component.ts\',\\n    code: `import {Component, Pipe, PipeTransform, TemplateRef, ViewChild, ViewEncapsulation} from \'@angular/core\';\\nimport {TableColumn, TableConfig, TableRow} from \\"@angular-generic-table/core\\";\\nimport {BehaviorSubject, Observable} from \\"rxjs\\";\\nimport {map} from \\"rxjs/operators\\";\\n\\n@Pipe({\\n  name: \'genderPipe\',\\n})\\nexport class GenderPipe implements PipeTransform {\\n  transform(gender: \'male\' | \'female\'): string {\\n  return gender === \'male\' ? \'👨\' : \'👩\';\\n  }\\n}\\n\\n@Component({\\n  selector: \'docs-mobile-layout\',\\n  template: \\\\`\\n    <div class=\\"d-flex justify-content-end mb-1 align-items-center\\">\\n      {{clicked}} <button class=\\"btn btn-link d-sm-none \\" (click)=\\"toggleLayout()\\">{{(mobileLayout$ | async)? \'Desktop \' : \'Mobile \'}} layout</button>\\n    </div>\\n    <div [class.overflow-auto]=\\"(mobileLayout$ | async) === false\\">\\n      <angular-generic-table [data]=\\"data\\" [config]=\\"config$\\"></angular-generic-table>\\n    </div>\\n    <ng-template #actions let-row=\\"row\\" let-col=\\"col\\" let-index=\\"index\\">\\n      <button class=\\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\\" (click)=\\"clickAction(row, col, index)\\">Click me!</button>\\n    </ng-template>\\n  \\\\`,\\n  styles: [\\\\`\\n    .table th {\\n      white-space: nowrap;\\n    }\\n  \\\\`],\\n  encapsulation: ViewEncapsulation.None\\n})\\nexport class MobileLayoutComponent {\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  clicked = \'\';\\n\\n  mobileLayout$ = new BehaviorSubject(true);\\n  data = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ];\\n  config$: Observable<TableConfig> = this.mobileLayout$.pipe(\\n    map(mobileLayout => ({\\n      mobileLayout,\\n      columns: {\\n        firstName: {\\n          mobileHeader: true,\\n          sortable: true\\n        },\\n        lastName: {\\n          mobileHeader: true,\\n          sortable: true\\n        },\\n        gender: {\\n          mobileHeader: true,\\n          transform: {\\n            pipe: GenderPipe\\n          }\\n        },\\n        favoriteFood: {\\n          mobileHeader: true\\n        },\\n        action: {\\n          mobileHeader: false,\\n          header: false,\\n          templateRef: this.actions,\\n        },\\n      },\\n    }))\\n  );\\n\\n  toggleLayout = (): void => {\\n    this.mobileLayout$.next(!this.mobileLayout$.getValue());\\n  }\\n  clickAction(row: TableRow, column: { key: string; value: TableColumn }, index: number): void {\\n    console.log(\'clicked row:\', row, \'col:\', column);\\n    this.clicked = \\\\`Clicked row number: \\\\${index}\\\\`;\\n  }\\n}`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { MobileLayoutComponent } from \'./mobile-layout.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [MobileLayoutComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [MobileLayoutComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"},{"name":"Nested","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/nested-data/nested-data.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<NestedDataComponent>","defaultValue":"(\\n  args: NestedDataComponent\\n) => ({\\n  props: args,\\n  component: NestedDataComponent,\\n})"},{"name":"NESTED_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/nested-data/nested.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'nested-data.component.ts\',\\n    code: `import {Component, OnInit, TemplateRef, ViewChild} from \'@angular/core\';\\nimport {TableConfig, TableRows} from \\"@angular-generic-table/core\\";\\n\\ninterface NestedData {\\n  name: {\\n    first: string;\\n    last: string;\\n  };\\n  data: {\\n    details?: {\\n      gender: \'male\' | \'female\';\\n      favoriteFood: \'Pasta\' | \'Pizza\';\\n    };\\n  };\\n}\\n\\ninterface Data {\\n  firstName: string;\\n  lastName: string;\\n  gender: \'male\' | \'female\';\\n  favoriteFood: \'Pasta\' | \'Pizza\';\\n  missing: string;\\n}\\n@Component({\\n  selector: \'nested-data\',\\n  template: \\\\`\\n    <div class=\\"row gy-3\\">\\n      <div class=\\"col col-sm-auto\\">\\n        <button class=\\"btn btn-outline-primary mb-3\\" (click)=\\"loadData()\\">\\n          Load other data\\n        </button>\\n      </div>\\n      <div class=\\"col col-sm-auto\\">\\n        <button class=\\"btn btn-outline-primary mb-3\\" (click)=\\"resetData()\\">\\n          Reset\\n        </button>\\n      </div>\\n    </div>\\n    <angular-generic-table [data]=\\"data\\" [config]=\\"config\\"></angular-generic-table>\\n    <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n    <ng-template #gender let-row=\\"row\\" let-col=\\"col\\">\\n      <div [ngSwitch]=\\"row[col.key]\\">\\n        <ng-container *ngSwitchCase=\\"\'male\'\\">♂️</ng-container>\\n        <ng-container *ngSwitchCase=\\"\'female\'\\">♀️</ng-container>\\n      </div>\\n    </ng-template>\\n  \\\\`,\\n  styles: [],\\n})\\nexport class NestedDataComponent implements OnInit {\\n  @ViewChild(\'gender\', { static: true }) gender: TemplateRef<any> | undefined;\\n\\n  config: TableConfig<Data> = {};\\n  data: Array<NestedData> = [];\\n  ngOnInit(): void {\\n    this.resetData();\\n    this.config = {\\n      columns: {\\n        firstName: {\\n          sortable: true,\\n          mapTo: { path: \'name.first\' },\\n        },\\n        lastName: {\\n          sortable: true,\\n          mapTo: { path: \'name.last\' },\\n        },\\n        gender: {\\n          mapTo: { path: \'data.details.gender\' },\\n          templateRef: this.gender,\\n        },\\n        favoriteFood: {\\n          sortable: true,\\n          mapTo: { path: \'data.details.favoriteFood\', missingValue: \'n/a\' },\\n        },\\n        missing: {\\n          mapTo: { path: \'data.missingKey.noMatch\', missingValue: \'n/a\' },\\n        },\\n      },\\n    };\\n  }\\n\\n  resetData() {\\n    this.data = [\\n      {\\n        name: {\\n          first: \'Peter\',\\n          last: \'Parker\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'male\',\\n            favoriteFood: \'Pasta\',\\n          },\\n        },\\n      },\\n      {\\n        name: {\\n          first: \'Mary Jane\',\\n          last: \'Watson\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'female\',\\n            favoriteFood: \'Pizza\',\\n          },\\n        },\\n      },\\n    ];\\n  }\\n\\n  loadData(): void {\\n    this.data = [\\n      {\\n        name: {\\n          first: \'John\',\\n          last: \'Doe\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'male\',\\n            favoriteFood: \'Pasta\',\\n          },\\n        },\\n      },\\n      {\\n        name: {\\n          first: \'Jane\',\\n          last: \'Doe\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'female\',\\n            favoriteFood: \'Pizza\',\\n          },\\n        },\\n      },\\n      {\\n        name: {\\n          first: \'Foo\',\\n          last: \'Bar\',\\n        },\\n        data: {},\\n      },\\n    ];\\n  }\\n}`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { NestedDataComponent } from \'./nested-data.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [NestedDataComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [NestedDataComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"},{"name":"Pagination","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/pagination/pagination.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<PaginationComponent>","defaultValue":"(\\n  args: PaginationComponent\\n) => ({\\n  props: args,\\n  component: PaginationComponent,\\n})"},{"name":"parseSortOrderParams","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/lib/utilities/utilities.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(sortParams: string): GtSortOrder => {\\n  const sortParamsArray = sortParams.split(\',\');\\n  return sortParamsArray.map((sortParam) => {\\n    const [key, order] = sortParam.split(\':\');\\n    return {\\n      key: key.replace(/^[+-]/, \'\'),\\n      order: order === \'desc\' ? \'desc\' : \'asc\',\\n    };\\n  });\\n}","rawdescription":"parseSortOrderParams","description":"<p>parseSortOrderParams</p>\\n"},{"name":"require","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/test.ts","deprecated":false,"deprecationMessage":"","type":"literal type"},{"name":"require","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/test.ts","deprecated":false,"deprecationMessage":"","type":"literal type"},{"name":"ROW_HOVER_CLICK_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/row-hover-click/row-hower-click.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'row-hover-click.component.ts\',\\n    code: `import { Component } from \'@angular/core\';\\nimport { GtRowClickEvent, GtRowHoverEvent } from \'@angular-generic-table/core\';\\n\\n\\n@Component({\\n  selector: \'row-hover-click-table\',\\n  template: \'<div class=\\"overflow-auto\\">\\n      <button class=\\"btn btn-outline-primary me-3\\" (click)=\\"tableRef.hoverRow(1)\\">\\n        Mark second row as active\\n      </button>\\n      <button class=\\"btn btn-outline-primary\\" (click)=\\"tableRef.hoverRow(null)\\">\\n        Remove active state\\n      </button>\\n      <angular-generic-table\\n        [data]=\\"data\\"\\n        [config]=\\"config\\"\\n        (rowClick)=\\"onRowClick($event)\\"\\n        (rowActive)=\\"onRowHover($event)\\"\\n        #tableRef\\n      ></angular-generic-table>\\n      {{ clicked }}\\n    </div>\',\\n  styles: [\\n    \\\\`\\n      :host ::ng-deep .gt-active {\\n        background-color: var(--bs-highlight-bg);\\n      }\\n    \\\\`,\\n  ],\\n})\\nexport class RowHoverClickComponent {\\n  clicked = \'\';\\n  data = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ];\\n  config = {\\n    columns: {\\n      firstName: {},\\n      lastName: {},\\n      gender: {},\\n      favoriteFood: {},\\n    },\\n    rowClick: true,\\n    activateRowOnHover: true,\\n  };\\n\\n  onRowClick(event: GtRowClickEvent) {\\n    console.log(\'row clicked\', event);\\n    this.clicked = \\\\`clicked row number: \\\\${event.index}\\\\`;\\n  }\\n  onRowHover(event: GtRowHoverEvent) {\\n    console.log(\'row hovered\', event);\\n  }\\n`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { RowHoverClickTableComponent } from \'./events-table.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [RowHoverClickTableComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [RowHoverClickTableComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"},{"name":"ROW_SELECT_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/row-select/row-select.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'row-select.component.ts\',\\n    code: `import { ChangeDetectionStrategy, Component, OnDestroy } from \'@angular/core\';\\nimport {\\n  GtRowSelectEvent,\\n  GtRowClickEvent,\\n  TableRow,\\n  GtRowActiveEvent,\\n} from \'@angular-generic-table/core\';\\nimport { BehaviorSubject, combineLatest, Observable, Subject } from \'rxjs\';\\nimport {\\n  map,\\n  pluck,\\n  shareReplay,\\n  startWith,\\n  take,\\n  takeUntil,\\n  tap,\\n} from \'rxjs/operators\';\\nimport { HttpClient } from \'@angular/common/http\';\\nimport { FormControl } from \'@angular/forms\';\\ninterface RowData {\\n  birthday: string;\\n  email: string;\\n  favorite_color: string;\\n  first_name: string;\\n  gender: \'Female\' | \'Male\';\\n  id: number;\\n  last_name: string;\\n}\\n@Component({\\n  templateUrl: \'./row-select.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  styles: [\\n    \\\\`\\n      :host ::ng-deep .gt-active {\\n        background-color: var(--bs-highlight-bg);\\n      }\\n      :host ::ng-deep .table > tbody > tr {\\n        cursor: pointer;\\n      }\\n    \\\\`,\\n  ],\\n})\\nexport class RowSelectComponent implements OnDestroy {\\n  constructor(private http: HttpClient) {}\\n\\n  get activateOnRowHover$(): Observable<boolean> {\\n    return this._activateOnRowHover$.asObservable();\\n  }\\n  get activateOnRowHover(): boolean {\\n    return this._activateOnRowHover$.getValue();\\n  }\\n  toggleRowHover() {\\n    this._activateOnRowHover$.next(!this.activateOnRowHover);\\n  }\\n  private _activateOnRowHover$ = new BehaviorSubject<boolean>(true);\\n\\n  get activateOnNavigation$(): Observable<boolean> {\\n    return this._activateOnNavigation$.asObservable();\\n  }\\n  get activateOnNavigation(): boolean {\\n    return this._activateOnNavigation$.getValue();\\n  }\\n  toggleRowNavigation() {\\n    this._activateOnNavigation$.next(!this.activateOnNavigation);\\n  }\\n  private _activateOnNavigation$ = new BehaviorSubject<boolean>(true);\\n\\n  private unsubscribe$ = new Subject();\\n  loading$ = new BehaviorSubject<boolean>(true);\\n  customClassNames = {\\n    selectedRow: \'table-active\',\\n  };\\n  lengthCtrl = new FormControl(15);\\n  data$ = this.http\\n    .get<{ data: TableRow[] }>(\\n      \'https://private-730c61-generictable.apiary-mock.com/data\'\\n    )\\n    .pipe(\\n      pluck(\'data\'),\\n      tap((_) => this.loading$.next(false)),\\n      takeUntil(this.unsubscribe$),\\n      shareReplay(1)\\n    );\\n  config$ = combineLatest([\\n    this.lengthCtrl.valueChanges.pipe(\\n      startWith(this.lengthCtrl.value),\\n      map((length) =>\\n        length ? { pagination: { length: length < 0 ? 0 : length } } : {}\\n      )\\n    ),\\n    this.activateOnRowHover$,\\n    this.activateOnNavigation$,\\n  ]).pipe(\\n    map(\\n      ([pagination, activateRowOnHover, activateRowOnKeyboardNavigation]) => ({\\n        columns: {\\n          id: {\\n            sortable: true,\\n          },\\n          first_name: {\\n            sortable: true,\\n          },\\n          last_name: {\\n            sortable: true,\\n          },\\n          gender: {\\n            sortable: true,\\n          },\\n          email: {\\n            sortable: true,\\n          },\\n        },\\n        ...pagination,\\n        rowClick: true,\\n        activateRowOnHover,\\n        activateRowOnKeyboardNavigation,\\n        rowSelect: true,\\n      })\\n    )\\n  );\\n\\n  setActiveRow(event: GtRowActiveEvent) {\\n    console.log(event);\\n    if (event.event && event.event.type === \'keydown\') {\\n      // stop the event from propagating, otherwise the page will scroll\\n      event.event.preventDefault();\\n    }\\n    this._activeRow$.next(<RowData | null>event.row);\\n  }\\n  get activeRow$() {\\n    return this._activeRow$.asObservable();\\n  }\\n  private _activeRow$ = new BehaviorSubject<RowData | null>(null);\\n  isSelected(row: RowData, selection: typeof this.selection) {\\n    return selection[row.id];\\n  }\\n\\n  selection: { [key: string]: boolean } = {};\\n\\n  selectRow(event: GtRowClickEvent | GtRowSelectEvent) {\\n    const selection = { ...this.selection };\\n    const row = event.row;\\n    if (!row) return;\\n    if (!selection[row.id]) {\\n      selection[row.id] = true;\\n    } else {\\n      delete selection[row.id];\\n    }\\n    // update the selection\\n    this.selection = selection;\\n  }\\n\\n  get isAllSelected() {\\n    return Object.keys(this.selection).length > 0;\\n  }\\n  toggleAll() {\\n    if (this.isAllSelected) {\\n      this.selection = {};\\n      return;\\n    }\\n    const selection = { ...this.selection };\\n    this.data$.pipe(take(1), takeUntil(this.unsubscribe$)).subscribe((data) => {\\n      data.forEach((row, index) => {\\n        selection[index] = true;\\n      });\\n    });\\n    this.selection = selection;\\n  }\\n\\n  ngOnDestroy() {\\n    this.unsubscribe$.next();\\n    this.unsubscribe$.complete();\\n  }\\n};\\n`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'row-select.component.html\',\\n    code: `<div class=\\"row gy-3 gy-sm-0 gx-2 align-items-center\\">\\n  <div class=\\"col-12 col-sm-auto\\">\\n    <button\\n      class=\\"btn w-100\\"\\n      (click)=\\"toggleRowHover()\\"\\n      [class.btn-outline-primary]=\\"!activateOnRowHover\\"\\n      [class.btn-primary]=\\"activateOnRowHover\\"\\n    >\\n      {{ activateOnRowHover ? \\"Disable on hover\\" : \\"Enable on hover\\" }}\\n    </button>\\n  </div>\\n  <div class=\\"col-12 col-sm-auto\\">\\n    <button\\n      class=\\"btn w-100\\"\\n      (click)=\\"toggleRowNavigation()\\"\\n      [class.btn-outline-primary]=\\"!activateOnNavigation\\"\\n      [class.btn-primary]=\\"activateOnNavigation\\"\\n    >\\n      {{\\n        activateOnNavigation\\n          ? \\"Disable on keyboard navigation\\"\\n          : \\"Enable on keyboard navigation\\"\\n      }}\\n    </button>\\n  </div>\\n  <div class=\\"col-12 col-sm-auto\\">\\n    <button\\n      class=\\"btn w-100\\"\\n      [class.btn-outline-primary]=\\"!isAllSelected\\"\\n      [class.btn-primary]=\\"isAllSelected\\"\\n      (click)=\\"toggleAll()\\"\\n    >\\n      {{ isAllSelected ? \\"Deselect all\\" : \\"Select all\\" }}\\n    </button>\\n  </div>\\n</div>\\n<div class=\\"row gy-3 gy-sm-0 gx-2 align-items-center mt-3\\">\\n  <div class=\\"form-group col-12 col-sm-auto d-flex align-items-center\\">\\n    <label for=\\"length_input\\" class=\\"text-nowrap me-2\\">Number of rows:</label>\\n    <input\\n      id=\\"length_input\\"\\n      [formControl]=\\"lengthCtrl\\"\\n      type=\\"number\\"\\n      class=\\"form-control\\"\\n      style=\\"max-width: 60px\\"\\n    />\\n  </div>\\n  <div class=\\"col-12 col-sm-auto\\">\\n    Selected rows: {{ (selection | keyvalue).length }}\\n  </div>\\n  <div class=\\"col-12 col-sm-auto\\">\\n    Active row id: {{ (activeRow$ | async)?.id ?? \\"none\\" }}\\n  </div>\\n</div>\\n<div class=\\"mx-n3 mx-sm-0 my-3 overflow-auto\\">\\n  <angular-generic-table\\n    [data]=\\"data$\\"\\n    [config]=\\"config$\\"\\n    [loading]=\\"loading$\\"\\n    [isRowSelectedFn]=\\"isSelected\\"\\n    [customClasses]=\\"customClassNames\\"\\n    (rowClick)=\\"selectRow($event)\\"\\n    (rowActive)=\\"setActiveRow($event)\\"\\n    (rowSelect)=\\"selectRow($event)\\"\\n    [selection]=\\"selection\\"\\n    #tableRef\\n  >\\n    <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n    <div class=\\"table-no-data alert alert-info mt-3\\">Table is empty</div>\\n  </angular-generic-table>\\n  <angular-generic-table-pagination [table]=\\"tableRef\\">\\n  </angular-generic-table-pagination>\\n</div>`,\\n    language: \'xml\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { RowSelectComponent } from \'./row-select.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [RowSelectComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [RowSelectComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"},{"name":"RowHoverClick","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/row-hover-click/row-hover-click.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<RowHoverClickComponent>","defaultValue":"(\\n  args: RowHoverClickComponent\\n) => ({\\n  props: args,\\n  component: RowHoverClickComponent,\\n})"},{"name":"RowSelect","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/row-select/row-select.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<RowSelectComponent>","defaultValue":"(\\n  args: RowSelectComponent\\n) => ({\\n  props: args,\\n  component: RowSelectComponent,\\n})"},{"name":"search","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/lib/utilities/utilities.ts","deprecated":false,"deprecationMessage":"","type":"TableRow[]"},{"name":"ServerSidePagination","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/server-side-pagination/server-side-pagination.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<ServerSidePaginationComponent>","defaultValue":"(\\n  args: ServerSidePaginationComponent\\n) => ({\\n  props: args,\\n  component: ServerSidePaginationComponent,\\n})"},{"name":"Simple","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/simple/simple.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<SimpleComponent>","defaultValue":"(args: SimpleComponent) => ({\\n  props: args,\\n  component: SimpleComponent,\\n})"},{"name":"SIMPLE_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/footer/simple.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'footer-table.component.ts\',\\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { TableConfig, TableRow } from \'@angular-generic-table/core\';\\nimport { DecimalPipe } from \'@angular/common\';\\n\\n@Component({\\n  template: \\\\`\\n    <div class=\\"overflow-auto\\">\\n      <angular-generic-table [data]=\\"data\\" [config]=\\"config\\">\\n      </angular-generic-table>\\n    </div>\\n    <ng-template #heightTmplRef let-row=\\"row\\" let-col=\\"col\\">\\n      <ng-container *ngIf=\\"row[col.key || col] as height\\"\\n        >{{ height }} m\\n      </ng-container>\\n    </ng-template>\\n  \\\\`,\\n})\\nexport class FooterComponent implements OnInit {\\n  @ViewChild(\'heightTmplRef\', { static: true }) heightTmplRef:\\n    | TemplateRef<any>\\n    | undefined;\\n  data = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n      age: 27,\\n      weight: 85.457,\\n      height: 1.85,\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n      age: 25,\\n      weight: 60.123,\\n      height: 1.65,\\n    },\\n  ];\\n  config: TableConfig = {};\\n  ngOnInit() {\\n    this.config = {\\n      columns: {\\n        firstName: {},\\n        lastName: {},\\n        gender: {},\\n        favoriteFood: {\\n          class: \'text-end flex-end\',\\n        },\\n        age: {\\n          class: \'text-end\',\\n        },\\n        weight: {\\n          class: \'text-end\',\\n          transform: {\\n            pipe: DecimalPipe,\\n            args: [\'1.0-2\'],\\n          },\\n        },\\n        height: {\\n          class: \'text-end\',\\n          templateRef: this.heightTmplRef,\\n        },\\n      },\\n      footer: {\\n        headers: {\\n          sum: \'Total\',\\n          numberOfWomen: \'Number of women\',\\n          numberOfMen: \'Number of men\',\\n          min: true,\\n          max: true,\\n          avg: true,\\n          count: true,\\n          static: true,\\n          first: true,\\n        },\\n        rowOrder: [\\n          \'first\',\\n          \'numberOfWomen\',\\n          \'numberOfMen\',\\n          \'min\',\\n          \'max\',\\n          \'sum\',\\n          \'avg\',\\n          \'count\',\\n        ],\\n        columns: {\\n          firstName: {},\\n          lastName: {\\n            static: \'n/a\',\\n          },\\n          gender: {\\n            numberOfWomen: (data: Array<TableRow>, key) => {\\n              let count = 0;\\n              for (let i = 0; i < data.length; i++) {\\n                if (data[i][key] === \'female\') {\\n                  count++;\\n                }\\n              }\\n              return count;\\n            },\\n            numberOfMen: (data: Array<TableRow>, key) => {\\n              let count = 0;\\n              for (let i = 0; i < data.length; i++) {\\n                if (data[i][key] === \'male\') {\\n                  count++;\\n                }\\n              }\\n              return count;\\n            },\\n          },\\n          favoriteFood: {\\n            first: (data: Array<TableRow>, key) => data[0][key],\\n          },\\n          age: {\\n            sum: true,\\n            avg: true,\\n            count: true,\\n            max: true,\\n            min: true,\\n          },\\n          weight: {\\n            sum: true,\\n            avg: true,\\n            min: true,\\n          },\\n          height: {\\n            avg: true,\\n            min: true,\\n            max: true,\\n          },\\n        },\\n      },\\n    };\\n  }\\n\\n}`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { BasicTableComponent } from \'./basic-table.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [BasicTableComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [BasicTableComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"},{"name":"SIMPLE_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/simple/simple.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'basic-table.component.ts\',\\n    code: `import { Component } from \'@angular/core\';\\nimport { TableConfig } from \'@angular-generic-table/core\';\\n\\ninterface BasicData {\\n  firstName: string;\\n  lastName: string;\\n  gender: \'male\' | \'female\';\\n  favoriteFood: string;\\n}\\n\\n@Component({\\n  template: \'<angular-generic-table [data]=\\"data\\" [config]=\\"config\\"></angular-generic-table>\'\\n})\\nexport class SimpleComponent {\\n  data: Array<BasicData> = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ];\\n  config: TableConfig<BasicData> = {\\n    columns: {\\n      firstName: {},\\n      lastName: {},\\n      gender: {},\\n      favoriteFood: {},\\n    },\\n  };\\n`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { BasicTableComponent } from \'./basic-table.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [BasicTableComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [BasicTableComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"},{"name":"SIMPLE_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/sorting/sorting.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'sorting-table.component.ts\',\\n    code: `import { Component } from \'@angular/core\';\\nimport { TableConfig } from \'@angular-generic-table/core\';\\n\\ninterface SortingData {\\n  firstName: string;\\n  lastName: string;\\n  gender: \'male\' | \'female\';\\n  favoriteFood: string;\\n  birthdate: number;\\n}\\n\\n@Component({\\n  template: \'<div class=\\"overflow-auto\\">\\n      <angular-generic-table\\n        #table\\n        [data]=\\"data\\"\\n        [config]=\\"config\\"\\n        [(sortOrder)]=\\"sortOrder\\"\\n        (columnSort)=\\"logSortChange($event)\\"\\n      ></angular-generic-table>\\n    </div>\\n    <div class=\\"row mb-3 gy-3\\">\\n      <div class=\\"col-12 col-sm-auto\\">\\n        <button\\n          class=\\"btn btn-primary w-100\\"\\n          (click)=\\"table.sortByKey(\'firstName\', $event)\\"\\n        >\\n          Sort on first name\\n        </button>\\n      </div>\\n      <div class=\\"col-12 col-sm-auto\\">\\n        <button class=\\"btn btn-primary w-100\\" (click)=\\"resetSort()\\">\\n          Reset sorting\\n        </button>\\n      </div>\\n    </div>\\n    <strong>Current sort order</strong>\\n    <p>\\n      <code>\\n        {{ sortOrder | json }}\\n      </code>\\n    </p>\'\\n})\\nexport class SimpleComponent {\\n  initialSortOrder: GtSortOrder<SortingData> = [\\n    { key: \'birthdate\', order: \'asc\' },\\n    { key: \'gender\', order: \'asc\' },\\n    { key: \'firstName\', order: \'desc\' },\\n  ];\\n  sortOrder: GtSortOrder<SortingData> = this.initialSortOrder;\\n  data: Array<SortingData> = [\\n    {\\n      firstName: \'John\',\\n      lastName: \'Doe\',\\n      gender: \'male\',\\n      favoriteFood: \'pizza\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Jane\',\\n      lastName: \'Smith\',\\n      gender: \'female\',\\n      favoriteFood: \'sushi\',\\n      birthdate: 803404800000,\\n    },\\n    {\\n      firstName: \'Bob\',\\n      lastName: \'Johnson\',\\n      gender: \'male\',\\n      favoriteFood: \'burgers\',\\n      birthdate: 649345600000,\\n    },\\n    {\\n      firstName: \'Emily\',\\n      lastName: \'Williams\',\\n      gender: \'female\',\\n      favoriteFood: \'chicken\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Michael\',\\n      lastName: \'Jones\',\\n      gender: \'male\',\\n      favoriteFood: \'steak\',\\n      birthdate: 803404800000,\\n    },\\n    {\\n      firstName: \'Matthew\',\\n      lastName: \'Brown\',\\n      gender: \'male\',\\n      favoriteFood: \'seafood\',\\n      birthdate: 649345600000,\\n    },\\n    {\\n      firstName: \'Jessica\',\\n      lastName: \'Miller\',\\n      gender: \'female\',\\n      favoriteFood: \'salad\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Jacob\',\\n      lastName: \'Moore\',\\n      gender: \'male\',\\n      favoriteFood: \'pasta\',\\n      birthdate: 803404800000,\\n    },\\n    {\\n      firstName: \'Nicholas\',\\n      lastName: \'Taylor\',\\n      gender: \'male\',\\n      favoriteFood: \'soup\',\\n      birthdate: 649345600000,\\n    },\\n    {\\n      firstName: \'Ashley\',\\n      lastName: \'Anderson\',\\n      gender: \'female\',\\n      favoriteFood: \'tacos\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Brandon\',\\n      lastName: \'Thomas\',\\n      gender: \'male\',\\n      favoriteFood: \'nachos\',\\n      birthdate: 803404800000,\\n    },\\n  ];\\n  config: TableConfig<SortingData> = {\\n    columns: {\\n      firstName: {\\n        sortable: true,\\n      },\\n      lastName: {\\n        sortable: true,\\n      },\\n      gender: {\\n        sortable: true,\\n      },\\n      favoriteFood: {\\n        sortable: true,\\n      },\\n      birthdate: {\\n        sortable: true,\\n        transform: {\\n          pipe: DatePipe,\\n        },\\n      },\\n    },\\n  };\\n\\n  logSortChange(sortEvent: GtSortEvent<SortingData>) {\\n    console.log(sortEvent);\\n  }\\n\\n  resetSort() {\\n    this.sortOrder = this.initialSortOrder;\\n  }\\n}\\n`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { SortingTableComponent } from \'./sorting-table.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [SortingTableComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [SortingTableComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"},{"name":"Sorting","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/sorting/sorting.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<SortingComponent>","defaultValue":"(args: SortingComponent) => ({\\n  props: args,\\n  component: SortingComponent,\\n})"},{"name":"sortOnMultipleKeys","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/lib/utilities/utilities.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(\\n  keys: GtSortOrder\\n): ((a: TableRow, b: TableRow) => number) => {\\n  const order = keys.map((key) => (key.order === \'desc\' ? -1 : 1));\\n  return (a, b) => {\\n    for (let i = 0; i < keys.length; i++) {\\n      const o = keys[i].key;\\n      if (a[o] > b[o]) return order[i];\\n      if (a[o] < b[o]) return -order[i];\\n    }\\n    return 0;\\n  };\\n}","rawdescription":"sortOnMultipleKeys","description":"<p>sortOnMultipleKeys</p>\\n"},{"name":"sortOrderConfigToParam","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/lib/utilities/utilities.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(\\n  sortConfig: GtSortEvent | GtSortConfig\\n): string => {\\n  const order = sortConfig.order === \'desc\' ? \'-\' : \'+\';\\n  return `${order}${sortConfig.key}`;\\n}","rawdescription":"sortOrderConfigToParam","description":"<p>sortOrderConfigToParam</p>\\n"},{"name":"sortOrderToParams","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/lib/utilities/utilities.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(sortOrder: GtSortOrder): string => {\\n  return sortOrder\\n    .map((sortConfig) => sortOrderConfigToParam(sortConfig))\\n    .join(\',\');\\n}","rawdescription":"sortOrderToParams","description":"<p>sortOrderToParams</p>\\n"},{"name":"Tabs","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/components/tabs/tabs.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<TabsComponent>","defaultValue":"(args: TabsComponent) => ({\\n  props: args,\\n  component: TabsComponent,\\n})"},{"name":"Transpose","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/transpose/transpose.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<TransposeComponent>","defaultValue":"(\\n  args: TransposeComponent\\n) => ({\\n  props: args,\\n  component: TransposeComponent,\\n})"},{"name":"TRANSPOSE_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/transpose/transpose.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'transpose.component.ts\',\\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { BehaviorSubject, Observable } from \'rxjs\';\\nimport { TableConfig, GtDeltaComponent } from \'@angular-generic-table/core\';\\nimport { FormBuilder } from \'@angular/forms\';\\nimport { withLatestFrom } from \'rxjs/operators\';\\n\\ninterface RawData {\\n  year: string;\\n  value: number;\\n}\\ninterface YearData extends RawData {\\n  delta: number;\\n  deltaIndex: number;\\n  combined: number;\\n  deltaAbsolute: number;\\n}\\n@Component({\\n  templateUrl: \'./transpose.component.html\',\\n  styles: []\\n})\\nexport class TransposeComponent implements OnInit {\\n  @ViewChild(\'delta\', { static: true }) delta:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  @ViewChild(\'deltaAbsolute\', { static: true }) deltaAbsolute:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  @ViewChild(\'deltaIndex\', { static: true }) deltaIndex:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  @ViewChild(\'combined\', { static: true }) combined:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  loading$ = new BehaviorSubject(false);\\n  reactiveForm = this.fb.group({\\n    length: [10],\\n    search: [\'\'],\\n  });\\n  search$ = this.reactiveForm.get(\'search\')?.valueChanges as Observable<string>;\\n  tableConfig$: BehaviorSubject<TableConfig<YearData>> = new BehaviorSubject<\\n    TableConfig<YearData>\\n  >({});\\n  data: Array<RawData> = [];\\n\\n  constructor(private fb: UntypedFormBuilder) {}\\n\\n  ngOnInit(): void {\\n    this.transpose();\\n    this.load();\\n    this.reactiveForm\\n      .get(\'length\')\\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\\n      .subscribe(([length, config]) => {\\n        length = +length;\\n        this.tableConfig$.next({\\n          ...config,\\n          pagination: { ...config.pagination, length },\\n        });\\n      });\\n  }\\n\\n  simulateLoad(): void {\\n    this.loading$.next(true);\\n    // set loading state to false after 2 seconds\\n    setTimeout(() => this.loading$.next(false), 2000);\\n  }\\n  empty(): void {\\n    this.data = [];\\n  }\\n  load(): void {\\n    this.data = [\\n      {\\n        year: \'2010\',\\n        value: 15,\\n      },\\n      {\\n        year: \'2011\',\\n        value: 30,\\n      },\\n      {\\n        year: \'2012\',\\n        value: 25,\\n      },\\n      {\\n        year: \'2013\',\\n        value: 0,\\n      },\\n      {\\n        year: \'2014\',\\n        value: 40,\\n      },\\n      {\\n        year: \'2015\',\\n        value: 0,\\n      },\\n      {\\n        year: \'2016\',\\n        value: -5,\\n      },\\n      {\\n        year: \'2018\',\\n        value: 75,\\n      },\\n      {\\n        year: \'2019\',\\n        value: 100,\\n      },\\n      {\\n        year: \'2020\',\\n        value: 250,\\n      },\\n      {\\n        year: \'2021\',\\n        value: 50,\\n      },\\n      {\\n        year: \'2022\',\\n        value: 60,\\n      },\\n    ];\\n  }\\n  transpose(): void {\\n    if (this.tableConfig$.value.columns) {\\n      this.tableConfig$.next({\\n        stickyHeaders: {\\n          row: true,\\n          column: true,\\n        },\\n        rows: {\\n          year: {\\n            sortable: true,\\n            header: false,\\n            class: \'text-end\',\\n          },\\n          value: {\\n            class: \'text-end\',\\n          },\\n          delta: {\\n            header: \'Delta %\',\\n            templateRef: this.delta,\\n            class: \'text-end\',\\n          },\\n          deltaIndex: {\\n            header: \'Since inception %\',\\n            templateRef: this.deltaIndex,\\n            class: \'text-end\',\\n          },\\n          deltaAbsolute: {\\n            header: \'Delta\',\\n            templateRef: this.deltaAbsolute,\\n            class: \'text-end\',\\n          },\\n          combined: {\\n            header: \'Value with change\',\\n            templateRef: this.combined,\\n            class: \'text-end text-nowrap\',\\n          },\\n        },\\n      });\\n    } else {\\n      this.tableConfig$.next({\\n        stickyHeaders: {\\n          row: true,\\n          column: true,\\n        },\\n        columns: {\\n          year: {\\n            sortable: true,\\n          },\\n          value: {\\n            class: \'text-end\',\\n          },\\n          delta: {\\n            header: \'Delta %\',\\n            templateRef: this.delta,\\n            class: \'text-end\',\\n          },\\n          deltaIndex: {\\n            header: \'Since inception %\',\\n            templateRef: this.deltaIndex,\\n            class: \'text-end\',\\n          },\\n          deltaAbsolute: {\\n            header: \'Delta\',\\n            templateRef: this.deltaAbsolute,\\n            class: \'text-end\',\\n          },\\n          combined: {\\n            header: \'Value with change\',\\n            templateRef: this.combined,\\n            class: \'text-end text-nowrap\',\\n          },\\n        },\\n        pagination: { length: this.reactiveForm.get(\'length\')?.value },\\n      });\\n    }\\n  }\\n}\\n`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'transpose.component.html\',\\n    code: `<form [formGroup]=\\"reactiveForm\\">\\n  <div class=\\"row gy-3 gx-3 align-items-end mb-3\\">\\n    <div class=\\"form-group col-6 col-sm-auto\\">\\n      <label for=\\"length_input\\">Number of rows</label>\\n      <input\\n        id=\\"length_input\\"\\n        formControlName=\\"length\\"\\n        type=\\"number\\"\\n        class=\\"form-control\\"\\n      />\\n    </div>\\n    <div class=\\"form-group col-6 col-sm-auto\\">\\n      <label for=\\"search_input\\">Search</label>\\n      <input\\n        id=\\"search_input\\"\\n        formControlName=\\"search\\"\\n        type=\\"text\\"\\n        class=\\"form-control\\"\\n      />\\n    </div>\\n    <div class=\\"col-auto\\">\\n      <button\\n        class=\\"btn btn-outline-primary w-100\\"\\n        (click)=\\"simulateLoad()\\"\\n      >\\n        Simulate load\\n      </button>\\n    </div>\\n    <div class=\\"col col-sm-auto\\">\\n      <button class=\\"btn btn-outline-danger w-100\\" (click)=\\"empty()\\">\\n        Empty\\n      </button>\\n    </div>\\n    <div class=\\"col col-sm-auto\\">\\n      <button class=\\"btn btn-outline-primary w-100\\" (click)=\\"load()\\">\\n        Reset\\n      </button>\\n    </div>\\n    <div class=\\"col col-sm-auto\\">\\n      <button class=\\"btn btn-outline-primary w-100\\" (click)=\\"transpose()\\">\\n        Transpose\\n      </button>\\n    </div>\\n  </div>\\n  <div class=\\"overflow-auto\\">\\n    <angular-generic-table\\n      #table\\n      [data]=\\"data\\"\\n      [config]=\\"tableConfig$\\"\\n      [loading]=\\"loading$\\"\\n      [search]=\\"search$\\"\\n    >\\n      <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n      <div class=\\"table-no-data alert alert-info mt-3\\">Table is empty</div>\\n    </angular-generic-table>\\n  </div>\\n  <angular-generic-table-pagination [table]=\\"table\\">\\n  </angular-generic-table-pagination>\\n  <ng-template #delta let-index=\\"index\\" let-data=\\"data\\">\\n    <gt-delta [index]=\\"index\\" [data]=\\"data\\"></gt-delta>\\n  </ng-template>\\n  <ng-template #deltaAbsolute let-index=\\"index\\" let-data=\\"data\\">\\n    <gt-delta\\n      [index]=\\"index\\"\\n      [data]=\\"data\\"\\n      [deltaTemplate]=\\"deltaTemplate\\"\\n    ></gt-delta>\\n  </ng-template>\\n  <ng-template #deltaIndex let-index=\\"index\\" let-data=\\"data\\">\\n    <gt-delta [index]=\\"index\\" [data]=\\"data\\" [baseIndex]=\\"0\\"></gt-delta>\\n  </ng-template>\\n  <ng-template\\n    #combined\\n    let-index=\\"index\\"\\n    let-data=\\"data\\"\\n    let-row=\\"row\\"\\n    let-col=\\"col\\"\\n  >\\n    {{ row.value }}\\n    <ng-container *ngIf=\\"index > 0\\">\\n      <gt-delta [index]=\\"index\\" [data]=\\"data\\"></gt-delta>\\n    </ng-container>\\n  </ng-template>\\n  <ng-template #deltaTemplate let-delta=\\"delta\\">\\n    <span>{{ delta.absolute }}</span></ng-template\\n  >\\n  <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n</form>`,\\n    language: \'xml\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { HorizontalTableComponent } from \'./horizontal-table.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [HorizontalTableComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [HorizontalTableComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"}],"functions":[],"typealiases":[{"name":"FooterCalculation","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"sum\\" | \\"avg\\" | \\"count\\" | \\"max\\" | \\"min\\"","file":"projects/core/src/lib/models/table-config.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"GtOrder","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"asc\\" | \\"desc\\"","file":"projects/core/src/lib/models/table-sort.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"GtSortOrder","ctype":"miscellaneous","subtype":"typealias","rawtype":"Array<GtSortConfig<R>>","file":"projects/core/src/lib/models/table-sort.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":177},{"name":"SearchFunction","ctype":"miscellaneous","subtype":"typealias","rawtype":"function","file":"projects/core/src/lib/models/table-column.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":178}],"enumerations":[],"groupedVariables":{"projects/docs/src/app/app.component.ts":[{"name":"Advanced","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/app.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<AppComponent>","defaultValue":"(args: AppComponent) => ({\\n  props: args,\\n  component: AppComponent,\\n})"}],"projects/docs/src/app/examples/advanced/advanced.component.ts":[{"name":"Advanced","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/advanced/advanced.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<AdvancedComponent>","defaultValue":"(\\n  args: AdvancedComponent\\n) => ({\\n  props: args,\\n  component: AdvancedComponent,\\n})"}],"projects/docs/src/app/examples/advanced/advanced.snippets.ts":[{"name":"ADVANCED_DOCS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/advanced/advanced.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'advanced.component.html\',\\n    code: `<div class=\\"row gx-2 gy-3 mb-3\\">\\n  <div class=\\"col-12 col-sm-auto\\">\\n    <button class=\\"btn btn-primary w-100\\" (click)=\\"addData()\\">Add random data</button>\\n  </div>\\n  <div class=\\"col-12 col-sm-auto\\">\\n    <button class=\\"btn btn-danger w-100\\" (click)=\\"removeData()\\">Remove data</button>\\n  </div>\\n  <div class=\\"col-12 col-sm-auto\\">\\n    <button class=\\"btn btn-secondary w-100\\" (click)=\\"simulateLoad()\\">Load</button>\\n  </div>\\n</div>\\n<form [formGroup]=\\"paginationForm\\">\\n  <div class=\\"row\\">\\n    <div class=\\"form-group col-12 col-sm-auto\\">\\n      <label for=\\"length_input\\">Length</label>\\n      <input id=\\"length_input\\" formControlName=\\"length\\" type=\\"number\\" class=\\"form-control\\">\\n    </div>\\n    <div class=\\"form-group col-12 col-sm-auto\\">\\n      <label for=\\"search_input\\">Search</label>\\n      <input id=\\"search_input\\" formControlName=\\"search\\" type=\\"text\\" class=\\"form-control\\">\\n    </div>\\n  </div>\\n</form>\\n<div class=\\"mx-n3 mx-sm-0\\">\\n  <angular-generic-table [data]=\\"data$\\" [config]=\\"tableConfig$\\" [page]=\\"(currentPage$ | async)!\\" [search]=\\"search$\\" [loading]=\\"loading$\\" #table>\\n    <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n    <div class=\\"table-no-data alert alert-info mt-3\\">\\n      Table is empty\\n    </div>\\n  </angular-generic-table>\\n</div>\\n<div class=\\"row justify-content-between justify-content-sm-center align-items-center mt-3\\" *ngIf=\\"{current: (currentPage$ | async) || 0,total: (table.table$ | async)?.info?.pageTotal || 1\\n} as pagination\\">\\n  <div class=\\"col-auto\\">\\n    <button class=\\"btn btn-primary\\" (click)=\\"prev()\\" [disabled]=\\"pagination.current === 0\\">Prev</button>\\n  </div>\\n  <div class=\\"col-auto\\">\\n    <button class=\\"btn btn-primary\\" (click)=\\"next()\\" [disabled]=\\"pagination.total -1 === pagination.current\\">Next</button>\\n  </div>\\n  <div class=\\"col-auto\\">Current page: {{pagination.current +1}}</div>\\n  <div class=\\"col-auto\\">Total pages: {{pagination.total}}</div>\\n  <div class=\\"col-auto\\">\\n    Records: {{(data$ | async).length}}\\n  </div>\\n  <div class=\\"col-auto\\">\\n    {{clicked}}\\n  </div>\\n</div>\\n<ng-template #actions let-row=\\"row\\" let-col=\\"col\\" let-index=\\"index\\">\\n  <button\\n    *ngIf=\\"index !== undefined\\"\\n    class=\\"btn btn-outline-primary btn-sm\\"\\n    (click)=\\"clickAction(row, col, index)\\"\\n  >\\n    Click me!\\n  </button>\\n</ng-template>\\n<ng-template #color let-row=\\"row\\" let-col=\\"col\\">\\n  <div\\n    [style.background]=\\"row[col.key]\\"\\n    style=\\"width: 1.5rem; height: 1.5rem; border-radius: 50%\\"\\n  ></div>\\n</ng-template>`,\\n    language: \'xml\',\\n  },\\n  {\\n    name: \'advanced.component.ts\',\\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { BehaviorSubject, Observable, ReplaySubject } from \'rxjs\';\\nimport { FormBuilder } from \'@angular/forms\';\\nimport { TableColumn, TableConfig, TableRow } from \'@angular-generic-table/core\';\\nimport { withLatestFrom } from \'rxjs/operators\';\\n\\n@Component({\\n  templateUrl: \'./advanced.component.html\',\\n})\\nexport class AdvancedComponent implements OnInit {\\n  get currentPage$(): Observable<number> {\\n    return this._currentPage$.asObservable();\\n  }\\n\\n  set currentPage(value: number) {\\n    this._currentPage$.next(value);\\n  }\\n  constructor(private fb: FormBuilder) {}\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  @ViewChild(\'color\', { static: true }) color: TemplateRef<any> | undefined;\\n  paginationForm = this.fb.group({\\n    length: [10],\\n    search: [\'\'],\\n  });\\n  search$ = this.paginationForm.get(\'search\')?.valueChanges as Observable<string>;\\n  loading$ = new BehaviorSubject(true);\\n  data$: BehaviorSubject<any> = new BehaviorSubject([\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteColor: \'#26BFAF\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteColor: \'#0f0\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ]);\\n\\n  private _currentPage$ = new BehaviorSubject(0);\\n\\n  clicked: string = \'\';\\n  maleFirstNames = [\'Peter\', \'Clark\', \'Ruben\', \'John\', \'Jack\', \'Roscoe\'];\\n  femaleFirstNames = [\'Mary Jane\', \'Kim\', \'Sarah\', \'Michelle\', \'Ann\'];\\n  lastNames = [\'Andersson\', \'Smith\', \'Parker\', \'Kent\', \'Rogers\', \'Lane\', \'Jackson\'];\\n  foods = [\'Pizza\', \'Pasta\', \'Hamburger\', \'Pancakes\', \'Tacos\', \'Lasagna\', \'Meatloaf\'];\\n  colors = [\'#33d60b\', \'#dcafff\', \'#3fc9ff\', \'#ff1600\', \'#5238b1\', \'#fff\'];\\n\\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\\n\\n  addData(): void {\\n    this.data$.next([...this.data$.getValue(), this.randomRecord()]);\\n  }\\n\\n  removeData(): void {\\n    this.data$.next([]);\\n  }\\n\\n  simulateLoad(): void {\\n    this.loading$.next(true);\\n    // set loading state to false after 2 seconds\\n    setTimeout(() => this.loading$.next(false), 2000);\\n  }\\n\\n  clickAction(row: TableRow, column: { key: string; value: TableColumn }, index: number): void {\\n    console.log(\'clicked row:\', row, \'col:\', column);\\n    this.clicked = \\\\`clicked row number: \\\\${index}\\\\`;\\n  }\\n\\n  randomRecord(): TableRow {\\n    const random = Math.floor(Math.random() * 2);\\n    const newRecord = {\\n      firstName: random\\n        ? this.maleFirstNames[Math.floor(Math.random() * this.maleFirstNames.length)]\\n        : this.femaleFirstNames[Math.floor(Math.random() * this.femaleFirstNames.length)],\\n      lastName: this.lastNames[Math.floor(Math.random() * this.lastNames.length)],\\n      gender: random ? \'male\' : \'female\',\\n      favoriteColor: this.colors[Math.floor(Math.random() * this.colors.length)],\\n      favoriteFood: this.foods[Math.floor(Math.random() * this.foods.length)],\\n    };\\n    console.log(\'added new random record:\', newRecord);\\n\\n    return newRecord;\\n  }\\n\\n  next = () => {\\n    this.currentPage = this._currentPage$.value + 1;\\n  };\\n  prev = () => {\\n    this.currentPage = this._currentPage$.value - 1;\\n  };\\n\\n  ngOnInit(): void {\\n    this.simulateLoad();\\n    this.paginationForm\\n      .get(\'length\')\\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\\n      .subscribe(([length, config]) => {\\n        length = +length;\\n        this.tableConfig$.next({\\n          ...config,\\n          pagination: { ...config.pagination, length },\\n        });\\n      });\\n    this.tableConfig$.next({\\n      class: \'table table-mobile text-nowrap mb-0\',\\n      columns: {\\n        firstName: {\\n          header: \'First name\',\\n          mobileHeader: true,\\n          sortable: true,\\n          order: 0,\\n        },\\n        lastName: {\\n          header: \'Last name\',\\n          mobileHeader: true,\\n          hidden: false,\\n          sortable: true,\\n        },\\n        gender: {\\n          mobileHeader: \'Sex\',\\n          sortable: true,\\n          order: 1,\\n        },\\n        favoriteColor: {\\n          header: \'Favorite color\',\\n          mobileHeader: true,\\n          templateRef: this.color,\\n          sortable: false,\\n          order: 2,\\n          search: false,\\n          class: \'custom-class\',\\n        },\\n        favoriteFood: {\\n          mobileHeader: true,\\n          header: \'Favorite food\',\\n          hidden: false,\\n          sortable: true,\\n          order: 0,\\n        },\\n        action: {\\n          mobileHeader: false,\\n          header: false,\\n          templateRef: this.actions,\\n          order: 6,\\n        },\\n      },\\n      pagination: {\\n        length: this.paginationForm.get(\'length\')?.value || 0,\\n      },\\n      footer: {\\n        columns: {\\n          gender: {\\n            count: (data, key) => {\\n              let men = 0;\\n              let women = 0;\\n              for (let i = 0; i < data.length; i++) {\\n                if (data[i][key] === \'female\') {\\n                  women++;\\n                } else if (data[i][key] === \'male\') {\\n                  men++;\\n                }\\n              }\\n              return \\\\`♂ \\\\${men} ♀ \\\\${women}\\\\`;\\n            },\\n          },\\n          favoriteColor: {},\\n          action: { count: (data, key) => \\\\`Total: \\\\${data.length}\\\\` },\\n        },\\n      },\\n    });\\n  }\\n}`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\nimport { ReactiveFormsModule } from \'@angular/forms\';\\n\\nimport { AdvancedComponent } from \'./advanced.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [AdvancedComponent],\\n  imports: [BrowserModule, ReactiveFormsModule, GenericTableCoreModule],\\n  bootstrap: [AdvancedComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"}],"projects/docs/src/app/examples/pagination/pagination.snippets.ts":[{"name":"ADVANCED_DOCS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/pagination/pagination.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'pagination.component.html\',\\n    code: `<form [formGroup]=\\"paginationForm\\">\\n  <div class=\\"row gy-3\\">\\n    <div class=\\"form-group col-12 col-sm-auto\\">\\n      <label for=\\"length_input\\">Length</label>\\n      <input id=\\"length_input\\" formControlName=\\"length\\" type=\\"number\\" class=\\"form-control\\">\\n    </div>\\n    <div class=\\"form-group col-12 col-sm-auto\\">\\n      <label for=\\"search_input\\">Search</label>\\n      <input id=\\"search_input\\" formControlName=\\"search\\" type=\\"text\\" class=\\"form-control\\">\\n    </div>\\n  </div>\\n</form>\\n<div class=\\"mx-n3 mx-sm-0 my-3 overflow-auto\\">\\n  <angular-generic-table [data]=\\"data$\\" [config]=\\"tableConfig$\\" [search]=\\"search$\\" [loading]=\\"loading$\\" #table>\\n    <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n    <div class=\\"table-no-data alert alert-info mt-3\\">\\n      Table is empty\\n    </div>\\n  </angular-generic-table>\\n</div>\\n<angular-generic-table-pagination [table]=\\"table\\">\\n</angular-generic-table-pagination>`,\\n    language: \'xml\',\\n  },\\n  {\\n    name: \'pagination.component.ts\',\\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { BehaviorSubject, Observable, ReplaySubject } from \'rxjs\';\\nimport { FormBuilder } from \'@angular/forms\';\\nimport { TableConfig } from \'@angular-generic-table/core\';\\nimport { pluck, tap, withLatestFrom } from \'rxjs/operators\';\\nimport { HttpClient } from \'@angular/common/http\';\\nimport { DatePipe } from \'@angular/common\';\\n\\n@Component({\\n  selector: \'docs-pagination\',\\n  templateUrl: \'./pagination.component.html\',\\n  styles: [],\\n})\\nexport class PaginationComponent implements OnInit {\\n  constructor(private fb: FormBuilder, private http: HttpClient) {}\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  @ViewChild(\'color\', { static: true }) color: TemplateRef<any> | undefined;\\n  paginationForm = this.fb.group({\\n    length: [10],\\n    search: [\'\'],\\n  });\\n  search$ = this.paginationForm.get(\'search\')?.valueChanges as Observable<string>;\\n  loading$ = new BehaviorSubject(true);\\n  data$: Observable<any> = this.http.get(\'https://private-730c61-generictable.apiary-mock.com/data\').pipe(\\n    pluck(\'data\'),\\n    tap((_) => this.loading$.next(false))\\n  );\\n\\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\\n\\n  ngOnInit(): void {\\n    this.paginationForm\\n      .get(\'length\')\\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\\n      .subscribe(([length, config]) => {\\n        length = +length;\\n        this.tableConfig$.next({\\n          ...config,\\n          pagination: { ...config.pagination, length },\\n        });\\n      });\\n    this.tableConfig$.next({\\n      class: \'table text-nowrap\',\\n      columns: {\\n        first_name: {\\n          sortable: true,\\n        },\\n        last_name: {\\n          sortable: true,\\n        },\\n        gender: {\\n          sortable: true,\\n        },\\n        birthday: {\\n          sortable: true,\\n          class: \'text-end\',\\n          transform: {\\n            pipe: DatePipe,\\n            args: [\'longDate\'],\\n          },\\n        },\\n      },\\n      pagination: {\\n        length: this.paginationForm.get(\'length\')?.value || 0,\\n      },\\n    });\\n  }\\n}`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\nimport { HttpClientModule } from \'@angular/common/http\';\\nimport { ReactiveFormsModule } from \'@angular/forms\';\\n\\nimport { PaginationComponent } from \'./pagination.component\';\\nimport { GenericTableCoreModule, GenericTablePaginationModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [PaginationComponent],\\n  imports: [\\n    BrowserModule,\\n    GenericTableCoreModule,\\n    GenericTablePaginationModule,\\n    ReactiveFormsModule,\\n    HttpClientModule\\n  ],\\n  bootstrap: [PaginationComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"}],"projects/core/src/lib/utilities/utilities.ts":[{"name":"calculate","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/lib/utilities/utilities.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(data: Array<TableRow>, config: TableConfig) => {\\n  const CALCULATIONS: { [key: string]: boolean } = {};\\n  const COLUMN_CALCULATIONS: { [key: string]: Array<string> } = {};\\n  let CALCULATED = Object.entries(config.footer?.columns || {})\\n    .filter(\\n      ([columnName, calculations]) =>\\n        Object.values(calculations || {}).filter((value) => value !== false)\\n          .length >= 0\\n    )\\n    .reduce((acc: any, [columnName, calculations], index) => {\\n      acc[columnName] = Object.entries(calculations || {})\\n        .filter(([calculation, value]) => value !== false)\\n        .reduce((acc: any, [calculation, value]) => {\\n          if (COLUMN_CALCULATIONS[columnName]) {\\n            COLUMN_CALCULATIONS[columnName].push(calculation);\\n          } else if (value === true) {\\n            COLUMN_CALCULATIONS[columnName] = [calculation];\\n          }\\n          CALCULATIONS[calculation] = true;\\n          if (typeof value === \'function\') {\\n            value = value(data, columnName);\\n          }\\n          acc[calculation] = value === true ? 0 : value;\\n          return acc;\\n        }, {});\\n      return acc;\\n    }, {});\\n  if (Object.keys(CALCULATED).length > 0) {\\n    for (let i = 0; i < data.length; i++) {\\n      Object.entries(COLUMN_CALCULATIONS).forEach(([column, calculations]) => {\\n        if (calculations.indexOf(\'sum\') > -1) {\\n          CALCULATED[column].sum += data[i][column];\\n        }\\n        if (\\n          calculations.indexOf(\'avg\') > -1 &&\\n          calculations.indexOf(\'sum\') === -1\\n        ) {\\n          if (CALCULATED[column].sum === undefined) {\\n            CALCULATED[column].sum = 0;\\n          }\\n          CALCULATED[column].sum += data[i][column];\\n        }\\n        if (\\n          calculations.indexOf(\'max\') > -1 &&\\n          (!CALCULATED[column].max || +data[i][column] > CALCULATED[column].max)\\n        ) {\\n          CALCULATED[column].max = +data[i][column];\\n        }\\n        if (\\n          calculations.indexOf(\'min\') > -1 &&\\n          (!CALCULATED[column].min || +data[i][column] < CALCULATED[column].min)\\n        ) {\\n          CALCULATED[column].min = +data[i][column];\\n        }\\n      });\\n    }\\n    Object.entries(COLUMN_CALCULATIONS).forEach(([column, calculations]) => {\\n      if (calculations.indexOf(\'avg\') !== -1) {\\n        CALCULATED[column].avg = CALCULATED[column]?.sum / data.length;\\n        // if sum is not part of calculations config...\\n        if (calculations.indexOf(\'sum\') === -1 && CALCULATED[column].sum) {\\n          // ...remove it\\n          delete CALCULATED[column].sum;\\n        }\\n      }\\n      if (calculations.indexOf(\'count\') !== -1) {\\n        CALCULATED[column].count = data.length;\\n      }\\n    });\\n  }\\n  return {\\n    calculated: CALCULATED,\\n    calculations: Object.keys(CALCULATIONS).sort(\\n      (a, b) =>\\n        (config.footer?.rowOrder?.indexOf(a) || 0) -\\n        (config.footer?.rowOrder?.indexOf(b) || 0)\\n    ),\\n    calculatedColumnsCount: Object.keys(CALCULATED).length || 0,\\n  };\\n}"},{"name":"capitalize","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/lib/utilities/utilities.ts","deprecated":false,"deprecationMessage":"","type":"string"},{"name":"chunk","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/lib/utilities/utilities.ts","deprecated":false,"deprecationMessage":"","type":"Array<Array<TableRow>>"},{"name":"dashed","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/lib/utilities/utilities.ts","deprecated":false,"deprecationMessage":"","type":"string"},{"name":"parseSortOrderParams","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/lib/utilities/utilities.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(sortParams: string): GtSortOrder => {\\n  const sortParamsArray = sortParams.split(\',\');\\n  return sortParamsArray.map((sortParam) => {\\n    const [key, order] = sortParam.split(\':\');\\n    return {\\n      key: key.replace(/^[+-]/, \'\'),\\n      order: order === \'desc\' ? \'desc\' : \'asc\',\\n    };\\n  });\\n}","rawdescription":"parseSortOrderParams","description":"<p>parseSortOrderParams</p>\\n"},{"name":"search","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/lib/utilities/utilities.ts","deprecated":false,"deprecationMessage":"","type":"TableRow[]"},{"name":"sortOnMultipleKeys","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/lib/utilities/utilities.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(\\n  keys: GtSortOrder\\n): ((a: TableRow, b: TableRow) => number) => {\\n  const order = keys.map((key) => (key.order === \'desc\' ? -1 : 1));\\n  return (a, b) => {\\n    for (let i = 0; i < keys.length; i++) {\\n      const o = keys[i].key;\\n      if (a[o] > b[o]) return order[i];\\n      if (a[o] < b[o]) return -order[i];\\n    }\\n    return 0;\\n  };\\n}","rawdescription":"sortOnMultipleKeys","description":"<p>sortOnMultipleKeys</p>\\n"},{"name":"sortOrderConfigToParam","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/lib/utilities/utilities.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(\\n  sortConfig: GtSortEvent | GtSortConfig\\n): string => {\\n  const order = sortConfig.order === \'desc\' ? \'-\' : \'+\';\\n  return `${order}${sortConfig.key}`;\\n}","rawdescription":"sortOrderConfigToParam","description":"<p>sortOrderConfigToParam</p>\\n"},{"name":"sortOrderToParams","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/lib/utilities/utilities.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(sortOrder: GtSortOrder): string => {\\n  return sortOrder\\n    .map((sortConfig) => sortOrderConfigToParam(sortConfig))\\n    .join(\',\');\\n}","rawdescription":"sortOrderToParams","description":"<p>sortOrderToParams</p>\\n"}],"projects/core/src/test.ts":[{"name":"context","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/test.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"require.context(\'./\', true, /\\\\.spec\\\\.ts$/)"},{"name":"require","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/test.ts","deprecated":false,"deprecationMessage":"","type":"literal type"}],"projects/docs/src/test.ts":[{"name":"context","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/test.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"require.context(\'./\', true, /\\\\.spec\\\\.ts$/)"},{"name":"require","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/test.ts","deprecated":false,"deprecationMessage":"","type":"literal type"}],"projects/docs/src/app/examples/custom-templates/custom-templates.snippets.ts":[{"name":"CUSTOM_TEMPLATES_DOCS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/custom-templates/custom-templates.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'custom-templates.component.ts\',\\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { TableColumn, TableConfig, TableRow } from \'@angular-generic-table/core\';\\nimport { ReplaySubject } from \'rxjs\';\\n\\n@Component({\\n  selector: \'custom-templates\',\\n  templateUrl: \\\\`./custom-templates.component.html\\\\`\\n})\\nexport class CustomTemplatesComponent implements OnInit {\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  @ViewChild(\'color\', { static: true }) color: TemplateRef<any> | undefined;\\n  clicked = \'\';\\n\\n  data = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteColor: \'#26BFAF\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteColor: \'#0f0\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ];\\n  config$: ReplaySubject<TableConfig> = new ReplaySubject(1);\\n  ngOnInit(): void {\\n    this.config$.next({\\n      columns: {\\n        firstName: {},\\n        lastName: {},\\n        gender: {},\\n        favoriteColor: {\\n          templateRef: this.color,\\n        },\\n        favoriteFood: {},\\n        action: {\\n          templateRef: this.actions,\\n        },\\n      },\\n    });\\n  }\\n  clickAction(row: TableRow, column: { key: string; value: TableColumn }, index: number): void {\\n    console.log(\'clicked row:\', row, \'col:\', column);\\n    this.clicked = \\\\`clicked row number: \\\\${index}\\\\`;\\n  }\\n}`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { CustomTemplatesComponent } from \'./custom-templates-table.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [CustomTemplatesComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [CustomTemplatesComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'custom-templates.component.html\',\\n    code: `<angular-generic-table [data]=\\"data\\" [config]=\\"config$\\"></angular-generic-table>\\n<ng-template #actions let-row=\\"row\\" let-col=\\"col\\" let-index=\\"index\\">\\n <button class=\\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\\" (click)=\\"clickAction(row, col, index)\\">Click me!</button>\\n</ng-template>\\n<ng-template #color let-row=\\"row\\" let-col=\\"col\\">\\n <div [style.background]=\\"row[col.key]\\" style=\\"width: 1.5rem; height: 1.5rem; border-radius: 50%\\"></div>\\n</ng-template>\\n{{ clicked }}`,\\n    language: \'xml\',\\n  },\\n]"}],"projects/docs/src/app/examples/custom-templates/custom-templates.component.ts":[{"name":"CustomTemplates","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/custom-templates/custom-templates.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<CustomTemplatesComponent>","defaultValue":"(\\n  args: CustomTemplatesComponent\\n) => ({\\n  props: args,\\n  component: CustomTemplatesComponent,\\n})"}],"projects/docs/src/environments/environment.prod.ts":[{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/environments/environment.prod.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  production: true\\n}"}],"projects/docs/src/environments/environment.ts":[{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/environments/environment.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  production: false\\n}"}],"projects/docs/src/app/examples/footer/footer.component.ts":[{"name":"Footer","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/footer/footer.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<FooterComponent>","defaultValue":"(args: FooterComponent) => ({\\n  props: args,\\n  component: FooterComponent,\\n})"}],"projects/docs/src/app/examples/horizontal-table/horizontal-table.component.ts":[{"name":"Horizontal","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/horizontal-table/horizontal-table.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<HorizontalTableComponent>","defaultValue":"(\\n  args: HorizontalTableComponent\\n) => ({\\n  props: args,\\n  component: HorizontalTableComponent,\\n})"}],"projects/docs/src/app/examples/horizontal-table/horizontal-table.snippets.ts":[{"name":"HORIZONTAL_TABLE_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/horizontal-table/horizontal-table.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'horizontal-table.component.ts\',\\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { GtDeltaComponent, TableConfig } from \'@angular-generic-table/core\';\\nimport { BehaviorSubject } from \'rxjs\';\\n\\n@Component({\\n  selector: \'docs-horizontal\',\\n  templateUrl: \'./horizontal-table.component.html\',\\n  styles: [],\\n})\\nexport class TransposeComponent implements OnInit {\\n  @ViewChild(\'feelings\', { static: true }) feelings:\\n    | TemplateRef<any>\\n    | undefined;\\n  @ViewChild(\'delta\', { static: true }) delta: TemplateRef<GtDeltaComponent> | undefined;\\n  @ViewChild(\'deltaIndex\', { static: true }) deltaIndex:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  loading$ = new BehaviorSubject(false);\\n  config: TableConfig = {};\\n  data: any = [];\\n\\n  ngOnInit(): void {\\n    this.config = {\\n      stickyHeaders: {\\n        row: true,\\n      },\\n      mobileLayout: true,\\n      rows: {\\n        year: {\\n          class: \'text-end\',\\n          header: false\\n        },\\n        value: {\\n          class: \'text-end\'\\n        },\\n        delta: {\\n          header: \'Delta %\',\\n          templateRef: this.delta,\\n          class: \'text-end\'\\n        },\\n        deltaIndex: {\\n          header: \'Since inception %\',\\n          templateRef: this.deltaIndex,\\n          class: \'text-end\'\\n        },\\n        feeling: {\\n          templateRef: this.feelings,\\n          class: \'text-end\'\\n        },\\n      },\\n    };\\n    this.load();\\n  }\\n  simulateLoad(): void {\\n    this.loading$.next(true);\\n    // set loading state to false after 2 seconds\\n    setTimeout(() => this.loading$.next(false), 2000);\\n  }\\n  empty(): void {\\n    this.data = [];\\n  }\\n  load(): void {\\n    this.data = [\\n      {\\n        year: \'2017\',\\n        value: 50,\\n        feeling: \'neutral\'\\n      },\\n      {\\n        year: \'2018\',\\n        value: 75,\\n        feeling: \'positive\'\\n      },\\n      {\\n        year: \'2019\',\\n        value: 100,\\n        feeling: \'thrilled\'\\n      },\\n      {\\n        year: \'2020\',\\n        value: 250,\\n        feeling: \'thrilled\'\\n      },\\n      {\\n        year: \'2021\',\\n        value: 50,\\n        feeling: \'negative\'\\n      }\\n    ];\\n  }\\n}\\n`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'horizontal-table.component.html\',\\n    code: `<button class=\\"btn btn-outline-primary\\" (click)=\\"simulateLoad()\\">Simulate load</button>\\n<button class=\\"btn btn-outline-danger mx-3\\" (click)=\\"empty()\\">Empty</button>\\n<button class=\\"btn btn-outline-primary\\" (click)=\\"load()\\">Reset</button>\\n<div class=\\"overflow-auto\\">\\n  <angular-generic-table\\n    [data]=\\"data\\"\\n    [config]=\\"config\\"\\n    [loading]=\\"loading$\\"\\n  >\\n    <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n    <div class=\\"table-no-data alert alert-info mt-3\\">Table is empty</div>\\n  </angular-generic-table>\\n</div>\\n<ng-template #feelings let-row=\\"row\\" let-col=\\"col\\">\\n  <div [ngSwitch]=\\"row[col.key]\\">\\n    <ng-container *ngSwitchCase=\\"\'thrilled\'\\">😀</ng-container>\\n    <ng-container *ngSwitchCase=\\"\'positive\'\\">🙂</ng-container>\\n    <ng-container *ngSwitchCase=\\"\'neutral\'\\">😐</ng-container>\\n    <ng-container *ngSwitchCase=\\"\'negative\'\\">😭</ng-container>\\n  </div>\\n</ng-template>\\n<ng-template #delta let-data=\\"data\\" let-index=\\"index\\">\\n  <gt-delta [index]=\\"index\\" [data]=\\"data\\"></gt-delta>\\n</ng-template>\\n<ng-template #deltaIndex let-data=\\"data\\" let-index=\\"index\\">\\n  <gt-delta [index]=\\"index\\" [baseIndex]=\\"0\\" [data]=\\"data\\"></gt-delta>\\n</ng-template>`,\\n    language: \'xml\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { HorizontalTableComponent } from \'./horizontal-table.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [HorizontalTableComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [HorizontalTableComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"}],"projects/docs/src/app/examples/server-side-pagination/server-side-pagination.snippets.ts":[{"name":"LAZY_LOADING_DOCS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/server-side-pagination/server-side-pagination.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'server-side-pagination.component.html\',\\n    code: `<form [formGroup]=\\"paginationForm\\">\\n  <div class=\\"row gy-3\\">\\n    <div class=\\"form-group col-12 col-sm-auto\\">\\n      <label for=\\"search_input\\">Search</label>\\n      <input\\n        id=\\"search_input\\"\\n        formControlName=\\"search\\"\\n        type=\\"text\\"\\n        class=\\"form-control\\"\\n      />\\n    </div>\\n  </div>\\n</form>\\n<div class=\\"mx-n3 mx-sm-0 my-3 overflow-auto\\">\\n  <angular-generic-table\\n    [data]=\\"data$\\"\\n    [config]=\\"tableConfig$\\"\\n    [search]=\\"search$\\"\\n    [loading]=\\"loading$\\"\\n    [pagingInfo]=\\"paging$ | async\\"\\n    (pageChange)=\\"onPageChange($event)\\"\\n    (columnSort)=\\"onSortOrderChange($event)\\"\\n    [sortOrder]=\\"sorting$ | async\\"\\n    #table\\n  >\\n    <div\\n      class=\\"table-loading gt-skeleton-loader\\"\\n      [style.--gt-skeleton-height]=\\"\\n        ((table.table$ | async)?.info?.pageSize ?? 0) * 41 - 11 + \'px\'\\n      \\"\\n    ></div>\\n    <div class=\\"table-no-data alert alert-info mt-3\\">Table is empty</div>\\n  </angular-generic-table>\\n</div>\\n<angular-generic-table-pagination [table]=\\"table\\">\\n</angular-generic-table-pagination>`,\\n    language: \'xml\',\\n  },\\n  {\\n    name: \'server-side-pagination.component.ts\',\\n    code: `import {\\n  ChangeDetectionStrategy,\\n  Component,\\n  OnInit,\\n  TemplateRef,\\n  ViewChild,\\n} from \'@angular/core\';\\nimport { DatePipe, formatDate } from \'@angular/common\';\\nimport {\\n  GtPageChangeEvent,\\n  GtSortEvent,\\n  GtSortOrder,\\n  TableConfig,\\n  GtPaginationInfo,\\n  sortOrderToParams\\n} from \'@angular-generic-table/core\';\\nimport { FormBuilder } from \'@angular/forms\';\\nimport { HttpClient } from \'@angular/common/http\';\\nimport { BehaviorSubject, Observable, ReplaySubject } from \'rxjs\';\\nimport { pluck, shareReplay, switchMap, tap } from \'rxjs/operators\';\\n\\ninterface LazyLoadingData {\\n  birthday: string;\\n  email: string;\\n  favorite_color: string;\\n  first_name: string;\\n  gender: string;\\n  id: number;\\n  last_name: string;\\n}\\n\\ninterface LazyLoadingResponse {\\n  data: Array<LazyLoadingData>;\\n  paging: GtPaginationInfo;\\n  sorting: GtSortOrder<LazyLoadingData>;\\n  filters: [\\n    {\\n      [Property in keyof LazyLoadingResponse]: { [key: string]: any };\\n    }\\n  ];\\n  request: any;\\n  error: any;\\n}\\n\\n@Component({\\n  templateUrl: \'./server-side-pagination.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class ServerSidePaginationComponent implements OnInit {\\n  constructor(private fb: FormBuilder, private http: HttpClient) {}\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  @ViewChild(\'color\', { static: true }) color: TemplateRef<any> | undefined;\\n\\n paginationForm = this.fb.group({\\n    search: [\'\']\\n  });\\n requestParams$ = new BehaviorSubject({\\n    page: 1,\\n    page_size: 10,\\n    sort_by: \'+id\',\\n });\\n search$ = this.paginationForm.controls.search.valueChanges.pipe(\\n    shareReplay(1)\\n );\\n loading$ = new BehaviorSubject(true);\\n\\n request$ = this.requestParams$.pipe(\\n    tap((_) => this.loading$.next(true)), // show loading indicator whenever requests are changed (remove to disable loading indicator)\\n    switchMap((params) =>\\n      this.http.get<LazyLoadingResponse>(\\n        \'https://private-a6da3-generictableapi.apiary-mock.com/data\',\\n        {\\n          params,\\n        }\\n      )\\n    ),\\n    tap((_) => this.loading$.next(false)), // hide loading indicator\\n    shareReplay(1)\\n );\\n\\n data$: Observable<Array<LazyLoadingData>> = this.request$.pipe(\\n    pluck(\'data\'),\\n    shareReplay(1)\\n );\\n\\n paging$: Observable<GtPaginationInfo> = this.request$.pipe(\\n    pluck(\'paging\'),\\n    shareReplay(1)\\n );\\n\\n sorting$ = this.request$.pipe(\\n    pluck(\'sorting\'),\\n    shareReplay(1)\\n );\\n\\n onPageChange(event: GtPageChangeEvent): void {\\n    const current = { ...this.requestParams$.value };\\n    if (current.page != event.index + 1) {\\n      this.requestParams$.next({\\n        ...current,\\n        page: event.index + 1,\\n      });\\n    }\\n  }\\n\\n onSortOrderChange(event: GtSortEvent): void {\\n   let sort_by = sortOrderToParams([...event.currentSortOrder]);\\n   const current = { ...this.requestParams$.value };\\n   if (current.sort_by !== sort_by) {\\n     this.requestParams$.next({\\n       ...current,\\n       page: 1, // reset page to 1 when sorting changes\\n       sort_by,\\n     });\\n   }\\n }\\n\\n tableConfig$: ReplaySubject<TableConfig<LazyLoadingData>> = new ReplaySubject(\\n   1\\n );\\n\\n ngOnInit(): void {\\n   this.tableConfig$.next({\\n      class: \'table text-nowrap\',\\n      columns: {\\n        id: {\\n          sortable: true,\\n        },\\n        first_name: {},\\n        last_name: {\\n          sortable: true,\\n        },\\n        gender: {\\n          sortable: true,\\n        },\\n        birthday: {\\n          class: \'text-end justify-content-end\',\\n          search: (row, column) => formatDate(row[column], \'longDate\', \'en\'),\\n          transform: {\\n            pipe: DatePipe,\\n            args: [\'longDate\'],\\n          },\\n        },\\n        favorite_color: {\\n          hidden: true,\\n        },\\n        email: {\\n          hidden: true,\\n        },\\n      },\\n      pagination: {\\n        length: 10,\\n      },\\n    });\\n  }\\n}\\n`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\nimport { HttpClientModule } from \'@angular/common/http\';\\nimport { ReactiveFormsModule } from \'@angular/forms\';\\n\\nimport { ServerSidePaginationComponent } from \'./server-side-pagination.component\';\\nimport { GenericTableCoreModule, GenericTablePaginationModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [ServerSidePaginationComponent],\\n  imports: [\\n    BrowserModule,\\n    GenericTableCoreModule,\\n    GenericTablePaginationModule,\\n    ReactiveFormsModule,\\n    HttpClientModule\\n  ],\\n  bootstrap: [ServerSidePaginationComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"}],"projects/docs/src/app/examples/mobile-layout/mobile-layout.component.ts":[{"name":"Mobile","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/mobile-layout/mobile-layout.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<MobileLayoutComponent>","defaultValue":"(\\n  args: MobileLayoutComponent\\n) => ({\\n  props: args,\\n  component: MobileLayoutComponent,\\n})"}],"projects/docs/src/app/examples/mobile-layout/mobileLayout.snippets.ts":[{"name":"MOBILE_LAYOUT_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/mobile-layout/mobileLayout.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'mobile-layout.component.ts\',\\n    code: `import {Component, Pipe, PipeTransform, TemplateRef, ViewChild, ViewEncapsulation} from \'@angular/core\';\\nimport {TableColumn, TableConfig, TableRow} from \\"@angular-generic-table/core\\";\\nimport {BehaviorSubject, Observable} from \\"rxjs\\";\\nimport {map} from \\"rxjs/operators\\";\\n\\n@Pipe({\\n  name: \'genderPipe\',\\n})\\nexport class GenderPipe implements PipeTransform {\\n  transform(gender: \'male\' | \'female\'): string {\\n  return gender === \'male\' ? \'👨\' : \'👩\';\\n  }\\n}\\n\\n@Component({\\n  selector: \'docs-mobile-layout\',\\n  template: \\\\`\\n    <div class=\\"d-flex justify-content-end mb-1 align-items-center\\">\\n      {{clicked}} <button class=\\"btn btn-link d-sm-none \\" (click)=\\"toggleLayout()\\">{{(mobileLayout$ | async)? \'Desktop \' : \'Mobile \'}} layout</button>\\n    </div>\\n    <div [class.overflow-auto]=\\"(mobileLayout$ | async) === false\\">\\n      <angular-generic-table [data]=\\"data\\" [config]=\\"config$\\"></angular-generic-table>\\n    </div>\\n    <ng-template #actions let-row=\\"row\\" let-col=\\"col\\" let-index=\\"index\\">\\n      <button class=\\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\\" (click)=\\"clickAction(row, col, index)\\">Click me!</button>\\n    </ng-template>\\n  \\\\`,\\n  styles: [\\\\`\\n    .table th {\\n      white-space: nowrap;\\n    }\\n  \\\\`],\\n  encapsulation: ViewEncapsulation.None\\n})\\nexport class MobileLayoutComponent {\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  clicked = \'\';\\n\\n  mobileLayout$ = new BehaviorSubject(true);\\n  data = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ];\\n  config$: Observable<TableConfig> = this.mobileLayout$.pipe(\\n    map(mobileLayout => ({\\n      mobileLayout,\\n      columns: {\\n        firstName: {\\n          mobileHeader: true,\\n          sortable: true\\n        },\\n        lastName: {\\n          mobileHeader: true,\\n          sortable: true\\n        },\\n        gender: {\\n          mobileHeader: true,\\n          transform: {\\n            pipe: GenderPipe\\n          }\\n        },\\n        favoriteFood: {\\n          mobileHeader: true\\n        },\\n        action: {\\n          mobileHeader: false,\\n          header: false,\\n          templateRef: this.actions,\\n        },\\n      },\\n    }))\\n  );\\n\\n  toggleLayout = (): void => {\\n    this.mobileLayout$.next(!this.mobileLayout$.getValue());\\n  }\\n  clickAction(row: TableRow, column: { key: string; value: TableColumn }, index: number): void {\\n    console.log(\'clicked row:\', row, \'col:\', column);\\n    this.clicked = \\\\`Clicked row number: \\\\${index}\\\\`;\\n  }\\n}`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { MobileLayoutComponent } from \'./mobile-layout.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [MobileLayoutComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [MobileLayoutComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"}],"projects/docs/src/app/examples/nested-data/nested-data.component.ts":[{"name":"Nested","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/nested-data/nested-data.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<NestedDataComponent>","defaultValue":"(\\n  args: NestedDataComponent\\n) => ({\\n  props: args,\\n  component: NestedDataComponent,\\n})"}],"projects/docs/src/app/examples/nested-data/nested.snippets.ts":[{"name":"NESTED_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/nested-data/nested.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'nested-data.component.ts\',\\n    code: `import {Component, OnInit, TemplateRef, ViewChild} from \'@angular/core\';\\nimport {TableConfig, TableRows} from \\"@angular-generic-table/core\\";\\n\\ninterface NestedData {\\n  name: {\\n    first: string;\\n    last: string;\\n  };\\n  data: {\\n    details?: {\\n      gender: \'male\' | \'female\';\\n      favoriteFood: \'Pasta\' | \'Pizza\';\\n    };\\n  };\\n}\\n\\ninterface Data {\\n  firstName: string;\\n  lastName: string;\\n  gender: \'male\' | \'female\';\\n  favoriteFood: \'Pasta\' | \'Pizza\';\\n  missing: string;\\n}\\n@Component({\\n  selector: \'nested-data\',\\n  template: \\\\`\\n    <div class=\\"row gy-3\\">\\n      <div class=\\"col col-sm-auto\\">\\n        <button class=\\"btn btn-outline-primary mb-3\\" (click)=\\"loadData()\\">\\n          Load other data\\n        </button>\\n      </div>\\n      <div class=\\"col col-sm-auto\\">\\n        <button class=\\"btn btn-outline-primary mb-3\\" (click)=\\"resetData()\\">\\n          Reset\\n        </button>\\n      </div>\\n    </div>\\n    <angular-generic-table [data]=\\"data\\" [config]=\\"config\\"></angular-generic-table>\\n    <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n    <ng-template #gender let-row=\\"row\\" let-col=\\"col\\">\\n      <div [ngSwitch]=\\"row[col.key]\\">\\n        <ng-container *ngSwitchCase=\\"\'male\'\\">♂️</ng-container>\\n        <ng-container *ngSwitchCase=\\"\'female\'\\">♀️</ng-container>\\n      </div>\\n    </ng-template>\\n  \\\\`,\\n  styles: [],\\n})\\nexport class NestedDataComponent implements OnInit {\\n  @ViewChild(\'gender\', { static: true }) gender: TemplateRef<any> | undefined;\\n\\n  config: TableConfig<Data> = {};\\n  data: Array<NestedData> = [];\\n  ngOnInit(): void {\\n    this.resetData();\\n    this.config = {\\n      columns: {\\n        firstName: {\\n          sortable: true,\\n          mapTo: { path: \'name.first\' },\\n        },\\n        lastName: {\\n          sortable: true,\\n          mapTo: { path: \'name.last\' },\\n        },\\n        gender: {\\n          mapTo: { path: \'data.details.gender\' },\\n          templateRef: this.gender,\\n        },\\n        favoriteFood: {\\n          sortable: true,\\n          mapTo: { path: \'data.details.favoriteFood\', missingValue: \'n/a\' },\\n        },\\n        missing: {\\n          mapTo: { path: \'data.missingKey.noMatch\', missingValue: \'n/a\' },\\n        },\\n      },\\n    };\\n  }\\n\\n  resetData() {\\n    this.data = [\\n      {\\n        name: {\\n          first: \'Peter\',\\n          last: \'Parker\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'male\',\\n            favoriteFood: \'Pasta\',\\n          },\\n        },\\n      },\\n      {\\n        name: {\\n          first: \'Mary Jane\',\\n          last: \'Watson\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'female\',\\n            favoriteFood: \'Pizza\',\\n          },\\n        },\\n      },\\n    ];\\n  }\\n\\n  loadData(): void {\\n    this.data = [\\n      {\\n        name: {\\n          first: \'John\',\\n          last: \'Doe\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'male\',\\n            favoriteFood: \'Pasta\',\\n          },\\n        },\\n      },\\n      {\\n        name: {\\n          first: \'Jane\',\\n          last: \'Doe\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'female\',\\n            favoriteFood: \'Pizza\',\\n          },\\n        },\\n      },\\n      {\\n        name: {\\n          first: \'Foo\',\\n          last: \'Bar\',\\n        },\\n        data: {},\\n      },\\n    ];\\n  }\\n}`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { NestedDataComponent } from \'./nested-data.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [NestedDataComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [NestedDataComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"}],"projects/docs/src/app/examples/pagination/pagination.component.ts":[{"name":"Pagination","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/pagination/pagination.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<PaginationComponent>","defaultValue":"(\\n  args: PaginationComponent\\n) => ({\\n  props: args,\\n  component: PaginationComponent,\\n})"}],"projects/docs/src/app/examples/row-hover-click/row-hower-click.snippets.ts":[{"name":"ROW_HOVER_CLICK_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/row-hover-click/row-hower-click.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'row-hover-click.component.ts\',\\n    code: `import { Component } from \'@angular/core\';\\nimport { GtRowClickEvent, GtRowHoverEvent } from \'@angular-generic-table/core\';\\n\\n\\n@Component({\\n  selector: \'row-hover-click-table\',\\n  template: \'<div class=\\"overflow-auto\\">\\n      <button class=\\"btn btn-outline-primary me-3\\" (click)=\\"tableRef.hoverRow(1)\\">\\n        Mark second row as active\\n      </button>\\n      <button class=\\"btn btn-outline-primary\\" (click)=\\"tableRef.hoverRow(null)\\">\\n        Remove active state\\n      </button>\\n      <angular-generic-table\\n        [data]=\\"data\\"\\n        [config]=\\"config\\"\\n        (rowClick)=\\"onRowClick($event)\\"\\n        (rowActive)=\\"onRowHover($event)\\"\\n        #tableRef\\n      ></angular-generic-table>\\n      {{ clicked }}\\n    </div>\',\\n  styles: [\\n    \\\\`\\n      :host ::ng-deep .gt-active {\\n        background-color: var(--bs-highlight-bg);\\n      }\\n    \\\\`,\\n  ],\\n})\\nexport class RowHoverClickComponent {\\n  clicked = \'\';\\n  data = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ];\\n  config = {\\n    columns: {\\n      firstName: {},\\n      lastName: {},\\n      gender: {},\\n      favoriteFood: {},\\n    },\\n    rowClick: true,\\n    activateRowOnHover: true,\\n  };\\n\\n  onRowClick(event: GtRowClickEvent) {\\n    console.log(\'row clicked\', event);\\n    this.clicked = \\\\`clicked row number: \\\\${event.index}\\\\`;\\n  }\\n  onRowHover(event: GtRowHoverEvent) {\\n    console.log(\'row hovered\', event);\\n  }\\n`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { RowHoverClickTableComponent } from \'./events-table.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [RowHoverClickTableComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [RowHoverClickTableComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"}],"projects/docs/src/app/examples/row-select/row-select.snippets.ts":[{"name":"ROW_SELECT_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/row-select/row-select.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'row-select.component.ts\',\\n    code: `import { ChangeDetectionStrategy, Component, OnDestroy } from \'@angular/core\';\\nimport {\\n  GtRowSelectEvent,\\n  GtRowClickEvent,\\n  TableRow,\\n  GtRowActiveEvent,\\n} from \'@angular-generic-table/core\';\\nimport { BehaviorSubject, combineLatest, Observable, Subject } from \'rxjs\';\\nimport {\\n  map,\\n  pluck,\\n  shareReplay,\\n  startWith,\\n  take,\\n  takeUntil,\\n  tap,\\n} from \'rxjs/operators\';\\nimport { HttpClient } from \'@angular/common/http\';\\nimport { FormControl } from \'@angular/forms\';\\ninterface RowData {\\n  birthday: string;\\n  email: string;\\n  favorite_color: string;\\n  first_name: string;\\n  gender: \'Female\' | \'Male\';\\n  id: number;\\n  last_name: string;\\n}\\n@Component({\\n  templateUrl: \'./row-select.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  styles: [\\n    \\\\`\\n      :host ::ng-deep .gt-active {\\n        background-color: var(--bs-highlight-bg);\\n      }\\n      :host ::ng-deep .table > tbody > tr {\\n        cursor: pointer;\\n      }\\n    \\\\`,\\n  ],\\n})\\nexport class RowSelectComponent implements OnDestroy {\\n  constructor(private http: HttpClient) {}\\n\\n  get activateOnRowHover$(): Observable<boolean> {\\n    return this._activateOnRowHover$.asObservable();\\n  }\\n  get activateOnRowHover(): boolean {\\n    return this._activateOnRowHover$.getValue();\\n  }\\n  toggleRowHover() {\\n    this._activateOnRowHover$.next(!this.activateOnRowHover);\\n  }\\n  private _activateOnRowHover$ = new BehaviorSubject<boolean>(true);\\n\\n  get activateOnNavigation$(): Observable<boolean> {\\n    return this._activateOnNavigation$.asObservable();\\n  }\\n  get activateOnNavigation(): boolean {\\n    return this._activateOnNavigation$.getValue();\\n  }\\n  toggleRowNavigation() {\\n    this._activateOnNavigation$.next(!this.activateOnNavigation);\\n  }\\n  private _activateOnNavigation$ = new BehaviorSubject<boolean>(true);\\n\\n  private unsubscribe$ = new Subject();\\n  loading$ = new BehaviorSubject<boolean>(true);\\n  customClassNames = {\\n    selectedRow: \'table-active\',\\n  };\\n  lengthCtrl = new FormControl(15);\\n  data$ = this.http\\n    .get<{ data: TableRow[] }>(\\n      \'https://private-730c61-generictable.apiary-mock.com/data\'\\n    )\\n    .pipe(\\n      pluck(\'data\'),\\n      tap((_) => this.loading$.next(false)),\\n      takeUntil(this.unsubscribe$),\\n      shareReplay(1)\\n    );\\n  config$ = combineLatest([\\n    this.lengthCtrl.valueChanges.pipe(\\n      startWith(this.lengthCtrl.value),\\n      map((length) =>\\n        length ? { pagination: { length: length < 0 ? 0 : length } } : {}\\n      )\\n    ),\\n    this.activateOnRowHover$,\\n    this.activateOnNavigation$,\\n  ]).pipe(\\n    map(\\n      ([pagination, activateRowOnHover, activateRowOnKeyboardNavigation]) => ({\\n        columns: {\\n          id: {\\n            sortable: true,\\n          },\\n          first_name: {\\n            sortable: true,\\n          },\\n          last_name: {\\n            sortable: true,\\n          },\\n          gender: {\\n            sortable: true,\\n          },\\n          email: {\\n            sortable: true,\\n          },\\n        },\\n        ...pagination,\\n        rowClick: true,\\n        activateRowOnHover,\\n        activateRowOnKeyboardNavigation,\\n        rowSelect: true,\\n      })\\n    )\\n  );\\n\\n  setActiveRow(event: GtRowActiveEvent) {\\n    console.log(event);\\n    if (event.event && event.event.type === \'keydown\') {\\n      // stop the event from propagating, otherwise the page will scroll\\n      event.event.preventDefault();\\n    }\\n    this._activeRow$.next(<RowData | null>event.row);\\n  }\\n  get activeRow$() {\\n    return this._activeRow$.asObservable();\\n  }\\n  private _activeRow$ = new BehaviorSubject<RowData | null>(null);\\n  isSelected(row: RowData, selection: typeof this.selection) {\\n    return selection[row.id];\\n  }\\n\\n  selection: { [key: string]: boolean } = {};\\n\\n  selectRow(event: GtRowClickEvent | GtRowSelectEvent) {\\n    const selection = { ...this.selection };\\n    const row = event.row;\\n    if (!row) return;\\n    if (!selection[row.id]) {\\n      selection[row.id] = true;\\n    } else {\\n      delete selection[row.id];\\n    }\\n    // update the selection\\n    this.selection = selection;\\n  }\\n\\n  get isAllSelected() {\\n    return Object.keys(this.selection).length > 0;\\n  }\\n  toggleAll() {\\n    if (this.isAllSelected) {\\n      this.selection = {};\\n      return;\\n    }\\n    const selection = { ...this.selection };\\n    this.data$.pipe(take(1), takeUntil(this.unsubscribe$)).subscribe((data) => {\\n      data.forEach((row, index) => {\\n        selection[index] = true;\\n      });\\n    });\\n    this.selection = selection;\\n  }\\n\\n  ngOnDestroy() {\\n    this.unsubscribe$.next();\\n    this.unsubscribe$.complete();\\n  }\\n};\\n`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'row-select.component.html\',\\n    code: `<div class=\\"row gy-3 gy-sm-0 gx-2 align-items-center\\">\\n  <div class=\\"col-12 col-sm-auto\\">\\n    <button\\n      class=\\"btn w-100\\"\\n      (click)=\\"toggleRowHover()\\"\\n      [class.btn-outline-primary]=\\"!activateOnRowHover\\"\\n      [class.btn-primary]=\\"activateOnRowHover\\"\\n    >\\n      {{ activateOnRowHover ? \\"Disable on hover\\" : \\"Enable on hover\\" }}\\n    </button>\\n  </div>\\n  <div class=\\"col-12 col-sm-auto\\">\\n    <button\\n      class=\\"btn w-100\\"\\n      (click)=\\"toggleRowNavigation()\\"\\n      [class.btn-outline-primary]=\\"!activateOnNavigation\\"\\n      [class.btn-primary]=\\"activateOnNavigation\\"\\n    >\\n      {{\\n        activateOnNavigation\\n          ? \\"Disable on keyboard navigation\\"\\n          : \\"Enable on keyboard navigation\\"\\n      }}\\n    </button>\\n  </div>\\n  <div class=\\"col-12 col-sm-auto\\">\\n    <button\\n      class=\\"btn w-100\\"\\n      [class.btn-outline-primary]=\\"!isAllSelected\\"\\n      [class.btn-primary]=\\"isAllSelected\\"\\n      (click)=\\"toggleAll()\\"\\n    >\\n      {{ isAllSelected ? \\"Deselect all\\" : \\"Select all\\" }}\\n    </button>\\n  </div>\\n</div>\\n<div class=\\"row gy-3 gy-sm-0 gx-2 align-items-center mt-3\\">\\n  <div class=\\"form-group col-12 col-sm-auto d-flex align-items-center\\">\\n    <label for=\\"length_input\\" class=\\"text-nowrap me-2\\">Number of rows:</label>\\n    <input\\n      id=\\"length_input\\"\\n      [formControl]=\\"lengthCtrl\\"\\n      type=\\"number\\"\\n      class=\\"form-control\\"\\n      style=\\"max-width: 60px\\"\\n    />\\n  </div>\\n  <div class=\\"col-12 col-sm-auto\\">\\n    Selected rows: {{ (selection | keyvalue).length }}\\n  </div>\\n  <div class=\\"col-12 col-sm-auto\\">\\n    Active row id: {{ (activeRow$ | async)?.id ?? \\"none\\" }}\\n  </div>\\n</div>\\n<div class=\\"mx-n3 mx-sm-0 my-3 overflow-auto\\">\\n  <angular-generic-table\\n    [data]=\\"data$\\"\\n    [config]=\\"config$\\"\\n    [loading]=\\"loading$\\"\\n    [isRowSelectedFn]=\\"isSelected\\"\\n    [customClasses]=\\"customClassNames\\"\\n    (rowClick)=\\"selectRow($event)\\"\\n    (rowActive)=\\"setActiveRow($event)\\"\\n    (rowSelect)=\\"selectRow($event)\\"\\n    [selection]=\\"selection\\"\\n    #tableRef\\n  >\\n    <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n    <div class=\\"table-no-data alert alert-info mt-3\\">Table is empty</div>\\n  </angular-generic-table>\\n  <angular-generic-table-pagination [table]=\\"tableRef\\">\\n  </angular-generic-table-pagination>\\n</div>`,\\n    language: \'xml\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { RowSelectComponent } from \'./row-select.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [RowSelectComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [RowSelectComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"}],"projects/docs/src/app/examples/row-hover-click/row-hover-click.component.ts":[{"name":"RowHoverClick","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/row-hover-click/row-hover-click.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<RowHoverClickComponent>","defaultValue":"(\\n  args: RowHoverClickComponent\\n) => ({\\n  props: args,\\n  component: RowHoverClickComponent,\\n})"}],"projects/docs/src/app/examples/row-select/row-select.component.ts":[{"name":"RowSelect","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/row-select/row-select.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<RowSelectComponent>","defaultValue":"(\\n  args: RowSelectComponent\\n) => ({\\n  props: args,\\n  component: RowSelectComponent,\\n})"}],"projects/docs/src/app/examples/server-side-pagination/server-side-pagination.component.ts":[{"name":"ServerSidePagination","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/server-side-pagination/server-side-pagination.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<ServerSidePaginationComponent>","defaultValue":"(\\n  args: ServerSidePaginationComponent\\n) => ({\\n  props: args,\\n  component: ServerSidePaginationComponent,\\n})"}],"projects/docs/src/app/examples/simple/simple.component.ts":[{"name":"Simple","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/simple/simple.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<SimpleComponent>","defaultValue":"(args: SimpleComponent) => ({\\n  props: args,\\n  component: SimpleComponent,\\n})"}],"projects/docs/src/app/examples/footer/simple.snippets.ts":[{"name":"SIMPLE_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/footer/simple.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'footer-table.component.ts\',\\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { TableConfig, TableRow } from \'@angular-generic-table/core\';\\nimport { DecimalPipe } from \'@angular/common\';\\n\\n@Component({\\n  template: \\\\`\\n    <div class=\\"overflow-auto\\">\\n      <angular-generic-table [data]=\\"data\\" [config]=\\"config\\">\\n      </angular-generic-table>\\n    </div>\\n    <ng-template #heightTmplRef let-row=\\"row\\" let-col=\\"col\\">\\n      <ng-container *ngIf=\\"row[col.key || col] as height\\"\\n        >{{ height }} m\\n      </ng-container>\\n    </ng-template>\\n  \\\\`,\\n})\\nexport class FooterComponent implements OnInit {\\n  @ViewChild(\'heightTmplRef\', { static: true }) heightTmplRef:\\n    | TemplateRef<any>\\n    | undefined;\\n  data = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n      age: 27,\\n      weight: 85.457,\\n      height: 1.85,\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n      age: 25,\\n      weight: 60.123,\\n      height: 1.65,\\n    },\\n  ];\\n  config: TableConfig = {};\\n  ngOnInit() {\\n    this.config = {\\n      columns: {\\n        firstName: {},\\n        lastName: {},\\n        gender: {},\\n        favoriteFood: {\\n          class: \'text-end flex-end\',\\n        },\\n        age: {\\n          class: \'text-end\',\\n        },\\n        weight: {\\n          class: \'text-end\',\\n          transform: {\\n            pipe: DecimalPipe,\\n            args: [\'1.0-2\'],\\n          },\\n        },\\n        height: {\\n          class: \'text-end\',\\n          templateRef: this.heightTmplRef,\\n        },\\n      },\\n      footer: {\\n        headers: {\\n          sum: \'Total\',\\n          numberOfWomen: \'Number of women\',\\n          numberOfMen: \'Number of men\',\\n          min: true,\\n          max: true,\\n          avg: true,\\n          count: true,\\n          static: true,\\n          first: true,\\n        },\\n        rowOrder: [\\n          \'first\',\\n          \'numberOfWomen\',\\n          \'numberOfMen\',\\n          \'min\',\\n          \'max\',\\n          \'sum\',\\n          \'avg\',\\n          \'count\',\\n        ],\\n        columns: {\\n          firstName: {},\\n          lastName: {\\n            static: \'n/a\',\\n          },\\n          gender: {\\n            numberOfWomen: (data: Array<TableRow>, key) => {\\n              let count = 0;\\n              for (let i = 0; i < data.length; i++) {\\n                if (data[i][key] === \'female\') {\\n                  count++;\\n                }\\n              }\\n              return count;\\n            },\\n            numberOfMen: (data: Array<TableRow>, key) => {\\n              let count = 0;\\n              for (let i = 0; i < data.length; i++) {\\n                if (data[i][key] === \'male\') {\\n                  count++;\\n                }\\n              }\\n              return count;\\n            },\\n          },\\n          favoriteFood: {\\n            first: (data: Array<TableRow>, key) => data[0][key],\\n          },\\n          age: {\\n            sum: true,\\n            avg: true,\\n            count: true,\\n            max: true,\\n            min: true,\\n          },\\n          weight: {\\n            sum: true,\\n            avg: true,\\n            min: true,\\n          },\\n          height: {\\n            avg: true,\\n            min: true,\\n            max: true,\\n          },\\n        },\\n      },\\n    };\\n  }\\n\\n}`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { BasicTableComponent } from \'./basic-table.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [BasicTableComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [BasicTableComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"}],"projects/docs/src/app/examples/simple/simple.snippets.ts":[{"name":"SIMPLE_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/simple/simple.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'basic-table.component.ts\',\\n    code: `import { Component } from \'@angular/core\';\\nimport { TableConfig } from \'@angular-generic-table/core\';\\n\\ninterface BasicData {\\n  firstName: string;\\n  lastName: string;\\n  gender: \'male\' | \'female\';\\n  favoriteFood: string;\\n}\\n\\n@Component({\\n  template: \'<angular-generic-table [data]=\\"data\\" [config]=\\"config\\"></angular-generic-table>\'\\n})\\nexport class SimpleComponent {\\n  data: Array<BasicData> = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ];\\n  config: TableConfig<BasicData> = {\\n    columns: {\\n      firstName: {},\\n      lastName: {},\\n      gender: {},\\n      favoriteFood: {},\\n    },\\n  };\\n`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { BasicTableComponent } from \'./basic-table.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [BasicTableComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [BasicTableComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"}],"projects/docs/src/app/examples/sorting/sorting.snippets.ts":[{"name":"SIMPLE_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/sorting/sorting.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'sorting-table.component.ts\',\\n    code: `import { Component } from \'@angular/core\';\\nimport { TableConfig } from \'@angular-generic-table/core\';\\n\\ninterface SortingData {\\n  firstName: string;\\n  lastName: string;\\n  gender: \'male\' | \'female\';\\n  favoriteFood: string;\\n  birthdate: number;\\n}\\n\\n@Component({\\n  template: \'<div class=\\"overflow-auto\\">\\n      <angular-generic-table\\n        #table\\n        [data]=\\"data\\"\\n        [config]=\\"config\\"\\n        [(sortOrder)]=\\"sortOrder\\"\\n        (columnSort)=\\"logSortChange($event)\\"\\n      ></angular-generic-table>\\n    </div>\\n    <div class=\\"row mb-3 gy-3\\">\\n      <div class=\\"col-12 col-sm-auto\\">\\n        <button\\n          class=\\"btn btn-primary w-100\\"\\n          (click)=\\"table.sortByKey(\'firstName\', $event)\\"\\n        >\\n          Sort on first name\\n        </button>\\n      </div>\\n      <div class=\\"col-12 col-sm-auto\\">\\n        <button class=\\"btn btn-primary w-100\\" (click)=\\"resetSort()\\">\\n          Reset sorting\\n        </button>\\n      </div>\\n    </div>\\n    <strong>Current sort order</strong>\\n    <p>\\n      <code>\\n        {{ sortOrder | json }}\\n      </code>\\n    </p>\'\\n})\\nexport class SimpleComponent {\\n  initialSortOrder: GtSortOrder<SortingData> = [\\n    { key: \'birthdate\', order: \'asc\' },\\n    { key: \'gender\', order: \'asc\' },\\n    { key: \'firstName\', order: \'desc\' },\\n  ];\\n  sortOrder: GtSortOrder<SortingData> = this.initialSortOrder;\\n  data: Array<SortingData> = [\\n    {\\n      firstName: \'John\',\\n      lastName: \'Doe\',\\n      gender: \'male\',\\n      favoriteFood: \'pizza\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Jane\',\\n      lastName: \'Smith\',\\n      gender: \'female\',\\n      favoriteFood: \'sushi\',\\n      birthdate: 803404800000,\\n    },\\n    {\\n      firstName: \'Bob\',\\n      lastName: \'Johnson\',\\n      gender: \'male\',\\n      favoriteFood: \'burgers\',\\n      birthdate: 649345600000,\\n    },\\n    {\\n      firstName: \'Emily\',\\n      lastName: \'Williams\',\\n      gender: \'female\',\\n      favoriteFood: \'chicken\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Michael\',\\n      lastName: \'Jones\',\\n      gender: \'male\',\\n      favoriteFood: \'steak\',\\n      birthdate: 803404800000,\\n    },\\n    {\\n      firstName: \'Matthew\',\\n      lastName: \'Brown\',\\n      gender: \'male\',\\n      favoriteFood: \'seafood\',\\n      birthdate: 649345600000,\\n    },\\n    {\\n      firstName: \'Jessica\',\\n      lastName: \'Miller\',\\n      gender: \'female\',\\n      favoriteFood: \'salad\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Jacob\',\\n      lastName: \'Moore\',\\n      gender: \'male\',\\n      favoriteFood: \'pasta\',\\n      birthdate: 803404800000,\\n    },\\n    {\\n      firstName: \'Nicholas\',\\n      lastName: \'Taylor\',\\n      gender: \'male\',\\n      favoriteFood: \'soup\',\\n      birthdate: 649345600000,\\n    },\\n    {\\n      firstName: \'Ashley\',\\n      lastName: \'Anderson\',\\n      gender: \'female\',\\n      favoriteFood: \'tacos\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Brandon\',\\n      lastName: \'Thomas\',\\n      gender: \'male\',\\n      favoriteFood: \'nachos\',\\n      birthdate: 803404800000,\\n    },\\n  ];\\n  config: TableConfig<SortingData> = {\\n    columns: {\\n      firstName: {\\n        sortable: true,\\n      },\\n      lastName: {\\n        sortable: true,\\n      },\\n      gender: {\\n        sortable: true,\\n      },\\n      favoriteFood: {\\n        sortable: true,\\n      },\\n      birthdate: {\\n        sortable: true,\\n        transform: {\\n          pipe: DatePipe,\\n        },\\n      },\\n    },\\n  };\\n\\n  logSortChange(sortEvent: GtSortEvent<SortingData>) {\\n    console.log(sortEvent);\\n  }\\n\\n  resetSort() {\\n    this.sortOrder = this.initialSortOrder;\\n  }\\n}\\n`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { SortingTableComponent } from \'./sorting-table.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [SortingTableComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [SortingTableComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"}],"projects/docs/src/app/examples/sorting/sorting.component.ts":[{"name":"Sorting","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/sorting/sorting.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<SortingComponent>","defaultValue":"(args: SortingComponent) => ({\\n  props: args,\\n  component: SortingComponent,\\n})"}],"projects/docs/src/app/components/tabs/tabs.component.ts":[{"name":"Tabs","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/components/tabs/tabs.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<TabsComponent>","defaultValue":"(args: TabsComponent) => ({\\n  props: args,\\n  component: TabsComponent,\\n})"}],"projects/docs/src/app/examples/transpose/transpose.component.ts":[{"name":"Transpose","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/transpose/transpose.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<TransposeComponent>","defaultValue":"(\\n  args: TransposeComponent\\n) => ({\\n  props: args,\\n  component: TransposeComponent,\\n})"}],"projects/docs/src/app/examples/transpose/transpose.snippets.ts":[{"name":"TRANSPOSE_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/transpose/transpose.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'transpose.component.ts\',\\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { BehaviorSubject, Observable } from \'rxjs\';\\nimport { TableConfig, GtDeltaComponent } from \'@angular-generic-table/core\';\\nimport { FormBuilder } from \'@angular/forms\';\\nimport { withLatestFrom } from \'rxjs/operators\';\\n\\ninterface RawData {\\n  year: string;\\n  value: number;\\n}\\ninterface YearData extends RawData {\\n  delta: number;\\n  deltaIndex: number;\\n  combined: number;\\n  deltaAbsolute: number;\\n}\\n@Component({\\n  templateUrl: \'./transpose.component.html\',\\n  styles: []\\n})\\nexport class TransposeComponent implements OnInit {\\n  @ViewChild(\'delta\', { static: true }) delta:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  @ViewChild(\'deltaAbsolute\', { static: true }) deltaAbsolute:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  @ViewChild(\'deltaIndex\', { static: true }) deltaIndex:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  @ViewChild(\'combined\', { static: true }) combined:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  loading$ = new BehaviorSubject(false);\\n  reactiveForm = this.fb.group({\\n    length: [10],\\n    search: [\'\'],\\n  });\\n  search$ = this.reactiveForm.get(\'search\')?.valueChanges as Observable<string>;\\n  tableConfig$: BehaviorSubject<TableConfig<YearData>> = new BehaviorSubject<\\n    TableConfig<YearData>\\n  >({});\\n  data: Array<RawData> = [];\\n\\n  constructor(private fb: UntypedFormBuilder) {}\\n\\n  ngOnInit(): void {\\n    this.transpose();\\n    this.load();\\n    this.reactiveForm\\n      .get(\'length\')\\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\\n      .subscribe(([length, config]) => {\\n        length = +length;\\n        this.tableConfig$.next({\\n          ...config,\\n          pagination: { ...config.pagination, length },\\n        });\\n      });\\n  }\\n\\n  simulateLoad(): void {\\n    this.loading$.next(true);\\n    // set loading state to false after 2 seconds\\n    setTimeout(() => this.loading$.next(false), 2000);\\n  }\\n  empty(): void {\\n    this.data = [];\\n  }\\n  load(): void {\\n    this.data = [\\n      {\\n        year: \'2010\',\\n        value: 15,\\n      },\\n      {\\n        year: \'2011\',\\n        value: 30,\\n      },\\n      {\\n        year: \'2012\',\\n        value: 25,\\n      },\\n      {\\n        year: \'2013\',\\n        value: 0,\\n      },\\n      {\\n        year: \'2014\',\\n        value: 40,\\n      },\\n      {\\n        year: \'2015\',\\n        value: 0,\\n      },\\n      {\\n        year: \'2016\',\\n        value: -5,\\n      },\\n      {\\n        year: \'2018\',\\n        value: 75,\\n      },\\n      {\\n        year: \'2019\',\\n        value: 100,\\n      },\\n      {\\n        year: \'2020\',\\n        value: 250,\\n      },\\n      {\\n        year: \'2021\',\\n        value: 50,\\n      },\\n      {\\n        year: \'2022\',\\n        value: 60,\\n      },\\n    ];\\n  }\\n  transpose(): void {\\n    if (this.tableConfig$.value.columns) {\\n      this.tableConfig$.next({\\n        stickyHeaders: {\\n          row: true,\\n          column: true,\\n        },\\n        rows: {\\n          year: {\\n            sortable: true,\\n            header: false,\\n            class: \'text-end\',\\n          },\\n          value: {\\n            class: \'text-end\',\\n          },\\n          delta: {\\n            header: \'Delta %\',\\n            templateRef: this.delta,\\n            class: \'text-end\',\\n          },\\n          deltaIndex: {\\n            header: \'Since inception %\',\\n            templateRef: this.deltaIndex,\\n            class: \'text-end\',\\n          },\\n          deltaAbsolute: {\\n            header: \'Delta\',\\n            templateRef: this.deltaAbsolute,\\n            class: \'text-end\',\\n          },\\n          combined: {\\n            header: \'Value with change\',\\n            templateRef: this.combined,\\n            class: \'text-end text-nowrap\',\\n          },\\n        },\\n      });\\n    } else {\\n      this.tableConfig$.next({\\n        stickyHeaders: {\\n          row: true,\\n          column: true,\\n        },\\n        columns: {\\n          year: {\\n            sortable: true,\\n          },\\n          value: {\\n            class: \'text-end\',\\n          },\\n          delta: {\\n            header: \'Delta %\',\\n            templateRef: this.delta,\\n            class: \'text-end\',\\n          },\\n          deltaIndex: {\\n            header: \'Since inception %\',\\n            templateRef: this.deltaIndex,\\n            class: \'text-end\',\\n          },\\n          deltaAbsolute: {\\n            header: \'Delta\',\\n            templateRef: this.deltaAbsolute,\\n            class: \'text-end\',\\n          },\\n          combined: {\\n            header: \'Value with change\',\\n            templateRef: this.combined,\\n            class: \'text-end text-nowrap\',\\n          },\\n        },\\n        pagination: { length: this.reactiveForm.get(\'length\')?.value },\\n      });\\n    }\\n  }\\n}\\n`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'transpose.component.html\',\\n    code: `<form [formGroup]=\\"reactiveForm\\">\\n  <div class=\\"row gy-3 gx-3 align-items-end mb-3\\">\\n    <div class=\\"form-group col-6 col-sm-auto\\">\\n      <label for=\\"length_input\\">Number of rows</label>\\n      <input\\n        id=\\"length_input\\"\\n        formControlName=\\"length\\"\\n        type=\\"number\\"\\n        class=\\"form-control\\"\\n      />\\n    </div>\\n    <div class=\\"form-group col-6 col-sm-auto\\">\\n      <label for=\\"search_input\\">Search</label>\\n      <input\\n        id=\\"search_input\\"\\n        formControlName=\\"search\\"\\n        type=\\"text\\"\\n        class=\\"form-control\\"\\n      />\\n    </div>\\n    <div class=\\"col-auto\\">\\n      <button\\n        class=\\"btn btn-outline-primary w-100\\"\\n        (click)=\\"simulateLoad()\\"\\n      >\\n        Simulate load\\n      </button>\\n    </div>\\n    <div class=\\"col col-sm-auto\\">\\n      <button class=\\"btn btn-outline-danger w-100\\" (click)=\\"empty()\\">\\n        Empty\\n      </button>\\n    </div>\\n    <div class=\\"col col-sm-auto\\">\\n      <button class=\\"btn btn-outline-primary w-100\\" (click)=\\"load()\\">\\n        Reset\\n      </button>\\n    </div>\\n    <div class=\\"col col-sm-auto\\">\\n      <button class=\\"btn btn-outline-primary w-100\\" (click)=\\"transpose()\\">\\n        Transpose\\n      </button>\\n    </div>\\n  </div>\\n  <div class=\\"overflow-auto\\">\\n    <angular-generic-table\\n      #table\\n      [data]=\\"data\\"\\n      [config]=\\"tableConfig$\\"\\n      [loading]=\\"loading$\\"\\n      [search]=\\"search$\\"\\n    >\\n      <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n      <div class=\\"table-no-data alert alert-info mt-3\\">Table is empty</div>\\n    </angular-generic-table>\\n  </div>\\n  <angular-generic-table-pagination [table]=\\"table\\">\\n  </angular-generic-table-pagination>\\n  <ng-template #delta let-index=\\"index\\" let-data=\\"data\\">\\n    <gt-delta [index]=\\"index\\" [data]=\\"data\\"></gt-delta>\\n  </ng-template>\\n  <ng-template #deltaAbsolute let-index=\\"index\\" let-data=\\"data\\">\\n    <gt-delta\\n      [index]=\\"index\\"\\n      [data]=\\"data\\"\\n      [deltaTemplate]=\\"deltaTemplate\\"\\n    ></gt-delta>\\n  </ng-template>\\n  <ng-template #deltaIndex let-index=\\"index\\" let-data=\\"data\\">\\n    <gt-delta [index]=\\"index\\" [data]=\\"data\\" [baseIndex]=\\"0\\"></gt-delta>\\n  </ng-template>\\n  <ng-template\\n    #combined\\n    let-index=\\"index\\"\\n    let-data=\\"data\\"\\n    let-row=\\"row\\"\\n    let-col=\\"col\\"\\n  >\\n    {{ row.value }}\\n    <ng-container *ngIf=\\"index > 0\\">\\n      <gt-delta [index]=\\"index\\" [data]=\\"data\\"></gt-delta>\\n    </ng-container>\\n  </ng-template>\\n  <ng-template #deltaTemplate let-delta=\\"delta\\">\\n    <span>{{ delta.absolute }}</span></ng-template\\n  >\\n  <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n</form>`,\\n    language: \'xml\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { HorizontalTableComponent } from \'./horizontal-table.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [HorizontalTableComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [HorizontalTableComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"}]},"groupedFunctions":{},"groupedEnumerations":{},"groupedTypeAliases":{"projects/core/src/lib/models/table-config.interface.ts":[{"name":"FooterCalculation","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"sum\\" | \\"avg\\" | \\"count\\" | \\"max\\" | \\"min\\"","file":"projects/core/src/lib/models/table-config.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186}],"projects/core/src/lib/models/table-sort.interface.ts":[{"name":"GtOrder","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"asc\\" | \\"desc\\"","file":"projects/core/src/lib/models/table-sort.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"GtSortOrder","ctype":"miscellaneous","subtype":"typealias","rawtype":"Array<GtSortConfig<R>>","file":"projects/core/src/lib/models/table-sort.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":177}],"projects/core/src/lib/models/table-column.interface.ts":[{"name":"SearchFunction","ctype":"miscellaneous","subtype":"typealias","rawtype":"function","file":"projects/core/src/lib/models/table-column.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":178}]}},"routes":{"name":"<root>","kind":"module","className":"AppModule","children":[{"name":"routes","filename":"projects/docs/src/app/app-routing.module.ts","module":"AppRoutingModule","children":[{"path":"advanced","component":"AdvancedComponent"},{"path":"pagination","component":"PaginationComponent"},{"path":"lazy-loading","component":"ServerSidePaginationComponent"},{"path":"simple","component":"SimpleComponent"},{"path":"sorting","component":"SortingComponent"},{"path":"row-hover-click","component":"RowHoverClickComponent"},{"path":"row-select","component":"RowSelectComponent"},{"path":"horizontal-table","component":"HorizontalTableComponent"},{"path":"custom-templates","component":"CustomTemplatesComponent"},{"path":"mobile-layout","component":"MobileLayoutComponent"},{"path":"nested","component":"NestedDataComponent"},{"path":"transpose","component":"TransposeComponent"},{"path":"footer","component":"FooterComponent"}],"kind":"module"}]},"coverage":{"count":5,"status":"low","files":[{"filePath":"projects/core/src/lib/core.component.ts","type":"component","linktype":"component","name":"CoreComponent","coveragePercent":15,"coverageCount":"10/64","status":"low"},{"filePath":"projects/core/src/lib/core.service.ts","type":"injectable","linktype":"injectable","name":"CoreService","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"projects/core/src/lib/gt-delta/gt-delta.component.ts","type":"component","linktype":"component","name":"GtDeltaComponent","coveragePercent":0,"coverageCount":"0/15","status":"low"},{"filePath":"projects/core/src/lib/gt-delta/gt-delta.component.ts","type":"interface","linktype":"interface","name":"GtDelta","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/core/src/lib/models/gt-pagination.ts","type":"interface","linktype":"interface","name":"GtPaginationAriaLabels","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/core/src/lib/models/gt-pagination.ts","type":"interface","linktype":"interface","name":"GtPaginationClasses","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"projects/core/src/lib/models/gt-pagination.ts","type":"interface","linktype":"interface","name":"GtPaginationInfo","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"projects/core/src/lib/models/table-column.interface.ts","type":"interface","linktype":"interface","name":"TableColumn","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"projects/core/src/lib/models/table-config.interface.ts","type":"interface","linktype":"interface","name":"CalcFunc","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"projects/core/src/lib/models/table-config.interface.ts","type":"interface","linktype":"interface","name":"TableConfig","coveragePercent":46,"coverageCount":"6/13","status":"medium"},{"filePath":"projects/core/src/lib/models/table-config.interface.ts","type":"interface","linktype":"interface","name":"TableFooterColumn","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/core/src/lib/models/table-events.interface.ts","type":"interface","linktype":"interface","name":"GtPageChangeEvent","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"projects/core/src/lib/models/table-events.interface.ts","type":"interface","linktype":"interface","name":"GtRowActiveEvent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/core/src/lib/models/table-events.interface.ts","type":"interface","linktype":"interface","name":"GtRowClickEvent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/core/src/lib/models/table-events.interface.ts","type":"interface","linktype":"interface","name":"GtRowSelectEvent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/core/src/lib/models/table-events.interface.ts","type":"interface","linktype":"interface","name":"GtSortEvent","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"projects/core/src/lib/models/table-info.interface.ts","type":"interface","linktype":"interface","name":"TableInfo","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"projects/core/src/lib/models/table-meta.interface.ts","type":"interface","linktype":"interface","name":"TableMeta","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/core/src/lib/models/table-row.interface.ts","type":"interface","linktype":"interface","name":"TableRow","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/core/src/lib/models/table-sort.interface.ts","type":"interface","linktype":"interface","name":"GtSortConfig","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/core/src/lib/pagination/pagination.component.ts","type":"component","linktype":"component","name":"PaginationComponent","coveragePercent":53,"coverageCount":"8/15","status":"good"},{"filePath":"projects/core/src/lib/pipes/capital-case.pipe.ts","type":"pipe","linktype":"pipe","name":"CapitalCasePipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/core/src/lib/pipes/dash-case.pipe.ts","type":"pipe","linktype":"pipe","name":"DashCasePipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/core/src/lib/pipes/dynamic.pipe.ts","type":"pipe","linktype":"pipe","name":"DynamicPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/core/src/lib/pipes/highlight.pipe.ts","type":"pipe","linktype":"pipe","name":"HighlightPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/core/src/lib/pipes/row-selection.pipe.ts","type":"pipe","linktype":"pipe","name":"RowSelectionPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/core/src/lib/pipes/sort-class.pipe.ts","type":"pipe","linktype":"pipe","name":"SortClassPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/core/src/lib/utilities/utilities.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"calculate","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/core/src/lib/utilities/utilities.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"capitalize","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/core/src/lib/utilities/utilities.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"chunk","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/core/src/lib/utilities/utilities.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"dashed","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/core/src/lib/utilities/utilities.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"parseSortOrderParams","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"projects/core/src/lib/utilities/utilities.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"search","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/core/src/lib/utilities/utilities.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"sortOnMultipleKeys","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"projects/core/src/lib/utilities/utilities.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"sortOrderConfigToParam","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"projects/core/src/lib/utilities/utilities.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"sortOrderToParams","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"projects/core/src/test.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"context","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/core/src/test.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"require","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/app.component.ts","type":"component","linktype":"component","name":"AppComponent","coveragePercent":0,"coverageCount":"0/24","status":"low"},{"filePath":"projects/docs/src/app/app.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Advanced","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/components/tabs/tabs.component.ts","type":"component","linktype":"component","name":"TabsComponent","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"projects/docs/src/app/components/tabs/tabs.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Tabs","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/advanced/advanced.component.ts","type":"component","linktype":"component","name":"AdvancedComponent","coveragePercent":0,"coverageCount":"0/25","status":"low"},{"filePath":"projects/docs/src/app/examples/advanced/advanced.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Advanced","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/advanced/advanced.snippets.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ADVANCED_DOCS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/custom-templates/custom-templates.component.ts","type":"component","linktype":"component","name":"CustomTemplatesComponent","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"projects/docs/src/app/examples/custom-templates/custom-templates.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"CustomTemplates","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/custom-templates/custom-templates.snippets.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"CUSTOM_TEMPLATES_DOCS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/footer/footer.component.ts","type":"component","linktype":"component","name":"FooterComponent","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"projects/docs/src/app/examples/footer/footer.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Footer","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/footer/simple.snippets.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SIMPLE_SNIPPETS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/horizontal-table/horizontal-table.component.ts","type":"component","linktype":"component","name":"HorizontalTableComponent","coveragePercent":0,"coverageCount":"0/12","status":"low"},{"filePath":"projects/docs/src/app/examples/horizontal-table/horizontal-table.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Horizontal","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/horizontal-table/horizontal-table.snippets.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"HORIZONTAL_TABLE_SNIPPETS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/mobile-layout/mobile-layout.component.ts","type":"component","linktype":"component","name":"MobileLayoutComponent","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"projects/docs/src/app/examples/mobile-layout/mobile-layout.component.ts","type":"pipe","linktype":"pipe","name":"GenderPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/mobile-layout/mobile-layout.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Mobile","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/mobile-layout/mobileLayout.snippets.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"MOBILE_LAYOUT_SNIPPETS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/nested-data/nested-data.component.ts","type":"component","linktype":"component","name":"NestedDataComponent","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"projects/docs/src/app/examples/nested-data/nested-data.component.ts","type":"interface","linktype":"interface","name":"Data","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"projects/docs/src/app/examples/nested-data/nested-data.component.ts","type":"interface","linktype":"interface","name":"NestedData","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/docs/src/app/examples/nested-data/nested-data.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Nested","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/nested-data/nested.snippets.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"NESTED_SNIPPETS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/pagination/pagination.component.ts","type":"component","linktype":"component","name":"PaginationComponent","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"projects/docs/src/app/examples/pagination/pagination.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Pagination","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/pagination/pagination.snippets.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ADVANCED_DOCS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/row-hover-click/row-hover-click.component.ts","type":"component","linktype":"component","name":"RowHoverClickComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"projects/docs/src/app/examples/row-hover-click/row-hover-click.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"RowHoverClick","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/row-hover-click/row-hower-click.snippets.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ROW_HOVER_CLICK_SNIPPETS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/row-select/row-select.component.ts","type":"component","linktype":"component","name":"RowSelectComponent","coveragePercent":0,"coverageCount":"0/20","status":"low"},{"filePath":"projects/docs/src/app/examples/row-select/row-select.component.ts","type":"interface","linktype":"interface","name":"RowData","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"projects/docs/src/app/examples/row-select/row-select.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"RowSelect","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/row-select/row-select.snippets.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ROW_SELECT_SNIPPETS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/server-side-pagination/server-side-pagination.component.ts","type":"component","linktype":"component","name":"ServerSidePaginationComponent","coveragePercent":0,"coverageCount":"0/17","status":"low"},{"filePath":"projects/docs/src/app/examples/server-side-pagination/server-side-pagination.component.ts","type":"interface","linktype":"interface","name":"LazyLoadingData","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"projects/docs/src/app/examples/server-side-pagination/server-side-pagination.component.ts","type":"interface","linktype":"interface","name":"LazyLoadingResponse","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"projects/docs/src/app/examples/server-side-pagination/server-side-pagination.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ServerSidePagination","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/server-side-pagination/server-side-pagination.snippets.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"LAZY_LOADING_DOCS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/simple/simple.component.ts","type":"component","linktype":"component","name":"SimpleComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/docs/src/app/examples/simple/simple.component.ts","type":"interface","linktype":"interface","name":"BasicData","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"projects/docs/src/app/examples/simple/simple.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/simple/simple.snippets.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SIMPLE_SNIPPETS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/sorting/sorting.component.ts","type":"component","linktype":"component","name":"SortingComponent","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"projects/docs/src/app/examples/sorting/sorting.component.ts","type":"interface","linktype":"interface","name":"SortingData","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"projects/docs/src/app/examples/sorting/sorting.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Sorting","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/sorting/sorting.snippets.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SIMPLE_SNIPPETS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/transpose/transpose.component.ts","type":"component","linktype":"component","name":"TransposeComponent","coveragePercent":0,"coverageCount":"0/17","status":"low"},{"filePath":"projects/docs/src/app/examples/transpose/transpose.component.ts","type":"interface","linktype":"interface","name":"RawData","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/docs/src/app/examples/transpose/transpose.component.ts","type":"interface","linktype":"interface","name":"YearData","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"projects/docs/src/app/examples/transpose/transpose.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Transpose","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/transpose/transpose.snippets.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"TRANSPOSE_SNIPPETS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/environments/environment.prod.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"environment","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/environments/environment.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"environment","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/test.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"context","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/test.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"require","coveragePercent":0,"coverageCount":"0/1","status":"low"}]}}');(0,angular.P)(documentation_namespaceObject);var parameters={actions:{argTypesRegex:"^on[A-Z].*"},controls:{matchers:{color:/(background|color)$/i,date:/Date$/}},docs:{inlineStories:!0},options:{storySort:{method:"configure",includeNames:!0,order:["Introduction","Examples",["Basic","Sorting","Nested data","Row click & active state","Row selection","Pagination",["Setup","Client-side","Server-side"],"Custom templates","Table footer","Horizontal layout","Transpose data","Mobile layout"]]}},themes:{default:"Bootstrap",clearable:!1,list:[{name:"Bootstrap",class:"theme-bootstrap",color:"var(--bs-primary)"}],onChange:function onChange(theme){document.body.setAttribute("data-theme",theme.class)}}},__namedExportsOrder=["parameters"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":return(0,ClientApi.uc)(value);case"argTypes":return(0,ClientApi.v9)(value);case"decorators":return value.forEach((function(decorator){return(0,ClientApi.$9)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return(0,ClientApi.HZ)(loader,!1)}));case"parameters":return(0,ClientApi.h1)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return(0,ClientApi.My)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return(0,ClientApi._C)(enhancer)}));case"render":return(0,ClientApi.$P)(value);case"globals":case"globalTypes":var v={};return v[key]=value,(0,ClientApi.h1)(v,!1);case"__namedExportsOrder":case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./storybook-init-framework-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js")},"./projects/docs/src/stories/Introduction.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_7__.h_,{title:"Introduction",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("h1",{id:"angular-generic-table-docs"},"Angular Generic Table Docs"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("p",null,"Generic table version 5 has been rebuilt to be more efficient and to make it easier to customize and add new features. It still relies on native html tables for layout and rendering. Follow the instructions below to get started with the latest release candidate."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("h2",{id:"install"},"Install"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("code",{parentName:"pre"},"npm install @angular-generic-table/core@rc --save\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("h2",{id:"import-module"},"Import module"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("p",null,"We recommend import ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("inlineCode",{parentName:"p"},"GenericTableCoreModule")," into a shared module eg. ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("inlineCode",{parentName:"p"},"SharedModule")," that can be imported into other, preferably lazy loaded modules when needed."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("code",{parentName:"pre",className:"language-ts"},"import { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [...],\n  imports: [\n    ...\n    GenericTableCoreModule\n  ],\n  exports: [\n    GenericTableCoreModule\n  ]\n})\nexport class SharedModule {}\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("h2",{id:"import-styling"},"Import styling"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("p",null,"We recommend setting up your Angular project to use scss (SASS) for css preprocessing."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("p",null,"Once configured to use scss, it's just a matter of including the scss to your main styles file, typically it would be ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("inlineCode",{parentName:"p"},"styles.scss")," located at the root of the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("inlineCode",{parentName:"p"},"src")," folder unless you've changed it."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("h3",{id:"add-scss"},"Add scss"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("inlineCode",{parentName:"p"},"{project}/src/styles.scss")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("code",{parentName:"pre",className:"language-scss"},"// import base styles from angular-generic-table/core\n@use '~@angular-generic-table/core/scss' as generic-table-styles;\n@include generic-table-styles.styles(); // all styles\n\n// @include generic-table-styles.search-style(); // search (highlight) style\n// @include generic-table-styles.mobile-style(); // mobile layout style\n// @include generic-table-styles.pagination-style(); // pagination styles\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("h3",{id:"override-scss-variables"},"Override scss variables"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("p",null,"It's possible to override the scss variables used by generic table by passing them when importing the scss.\n",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("inlineCode",{parentName:"p"},"{project}/src/styles.scss")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("code",{parentName:"pre",className:"language-scss"},"// import base styles from angular-generic-table/core and override scss variables\n@use '~@angular-generic-table/core/scss' as generic-table-styles with (\n    $highlight-background-color: purple,\n    $mobile-style-max-width: 375px\n);\n@include generic-table-styles.styles();\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("strong",{parentName:"p"},"SCSS Variables")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("table",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("thead",{parentName:"table"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tr",{parentName:"thead"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("th",{parentName:"tr",align:"left"},"Default value"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tbody",{parentName:"table"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tr",{parentName:"tbody"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"$highlight-background-color:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"#ffdd00;")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tr",{parentName:"tbody"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"$mobile-style-selector:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"'table.table-mobile';")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tr",{parentName:"tbody"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"$mobile-style-max-width:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"576px;")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tr",{parentName:"tbody"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"$mobile-style-header-font-weight:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"500;")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tr",{parentName:"tbody"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"$mobile-style-header-background-color:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"#fff;")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tr",{parentName:"tbody"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"$mobile-style-button-selector:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"'.btn-sm';")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tr",{parentName:"tbody"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"$mobile-style-border-bottom:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"solid 1px #dedede;")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tr",{parentName:"tbody"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"$mobile-style-button-font-size:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"1rem;")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tr",{parentName:"tbody"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"$mobile-style-button-padding:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"0.5625rem 1rem;")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tr",{parentName:"tbody"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"$pagination-ellipsis-content:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"'...';")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tr",{parentName:"tbody"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"$pagination-active-color:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"#000;")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tr",{parentName:"tbody"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"$pagination-justify-content:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"center;")))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("h3",{id:"have-other-needs"},"Have other needs?"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("p",null,"More examples and use cases coming soon! In the meantime create an ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("a",{parentName:"p",href:"https://github.com/hjalmers/angular-generic-table/issues",target:"_blank",rel:"nofollow noopener noreferrer"},"issue over at github")))}MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Introduction",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_7__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["__page"]},"./projects/docs/src/stories/examples/Advanced.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>Advanced_stories,multipleFeatures:()=>multipleFeatures});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/fesm2020/platform-browser.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),core_module=__webpack_require__("./projects/core/src/lib/core.module.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),BehaviorSubject=__webpack_require__("./node_modules/rxjs/_esm2015/internal/BehaviorSubject.js"),ReplaySubject=__webpack_require__("./node_modules/rxjs/_esm2015/internal/ReplaySubject.js"),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),withLatestFrom=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/withLatestFrom.js");const ADVANCED_DOCS=[{name:"advanced.component.html",code:'<div class="row gx-2 gy-3 mb-3">\n  <div class="col-12 col-sm-auto">\n    <button class="btn btn-primary w-100" (click)="addData()">Add random data</button>\n  </div>\n  <div class="col-12 col-sm-auto">\n    <button class="btn btn-danger w-100" (click)="removeData()">Remove data</button>\n  </div>\n  <div class="col-12 col-sm-auto">\n    <button class="btn btn-secondary w-100" (click)="simulateLoad()">Load</button>\n  </div>\n</div>\n<form [formGroup]="paginationForm">\n  <div class="row">\n    <div class="form-group col-12 col-sm-auto">\n      <label for="length_input">Length</label>\n      <input id="length_input" formControlName="length" type="number" class="form-control">\n    </div>\n    <div class="form-group col-12 col-sm-auto">\n      <label for="search_input">Search</label>\n      <input id="search_input" formControlName="search" type="text" class="form-control">\n    </div>\n  </div>\n</form>\n<div class="mx-n3 mx-sm-0">\n  <angular-generic-table [data]="data$" [config]="tableConfig$" [page]="(currentPage$ | async)!" [search]="search$" [loading]="loading$" #table>\n    <div class="table-loading gt-skeleton-loader"></div>\n    <div class="table-no-data alert alert-info mt-3">\n      Table is empty\n    </div>\n  </angular-generic-table>\n</div>\n<div class="row justify-content-between justify-content-sm-center align-items-center mt-3" *ngIf="{current: (currentPage$ | async) || 0,total: (table.table$ | async)?.info?.pageTotal || 1\n} as pagination">\n  <div class="col-auto">\n    <button class="btn btn-primary" (click)="prev()" [disabled]="pagination.current === 0">Prev</button>\n  </div>\n  <div class="col-auto">\n    <button class="btn btn-primary" (click)="next()" [disabled]="pagination.total -1 === pagination.current">Next</button>\n  </div>\n  <div class="col-auto">Current page: {{pagination.current +1}}</div>\n  <div class="col-auto">Total pages: {{pagination.total}}</div>\n  <div class="col-auto">\n    Records: {{(data$ | async).length}}\n  </div>\n  <div class="col-auto">\n    {{clicked}}\n  </div>\n</div>\n<ng-template #actions let-row="row" let-col="col" let-index="index">\n  <button\n    *ngIf="index !== undefined"\n    class="btn btn-outline-primary btn-sm"\n    (click)="clickAction(row, col, index)"\n  >\n    Click me!\n  </button>\n</ng-template>\n<ng-template #color let-row="row" let-col="col">\n  <div\n    [style.background]="row[col.key]"\n    style="width: 1.5rem; height: 1.5rem; border-radius: 50%"\n  ></div>\n</ng-template>',language:"xml"},{name:"advanced.component.ts",code:"import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\nimport { FormBuilder } from '@angular/forms';\nimport { TableColumn, TableConfig, TableRow } from '@angular-generic-table/core';\nimport { withLatestFrom } from 'rxjs/operators';\n\n@Component({\n  templateUrl: './advanced.component.html',\n})\nexport class AdvancedComponent implements OnInit {\n  get currentPage$(): Observable<number> {\n    return this._currentPage$.asObservable();\n  }\n\n  set currentPage(value: number) {\n    this._currentPage$.next(value);\n  }\n  constructor(private fb: FormBuilder) {}\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n  paginationForm = this.fb.group({\n    length: [10],\n    search: [''],\n  });\n  search$ = this.paginationForm.get('search')?.valueChanges as Observable<string>;\n  loading$ = new BehaviorSubject(true);\n  data$: BehaviorSubject<any> = new BehaviorSubject([\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteColor: '#26BFAF',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteColor: '#0f0',\n      favoriteFood: 'Pizza',\n    },\n  ]);\n\n  private _currentPage$ = new BehaviorSubject(0);\n\n  clicked: string = '';\n  maleFirstNames = ['Peter', 'Clark', 'Ruben', 'John', 'Jack', 'Roscoe'];\n  femaleFirstNames = ['Mary Jane', 'Kim', 'Sarah', 'Michelle', 'Ann'];\n  lastNames = ['Andersson', 'Smith', 'Parker', 'Kent', 'Rogers', 'Lane', 'Jackson'];\n  foods = ['Pizza', 'Pasta', 'Hamburger', 'Pancakes', 'Tacos', 'Lasagna', 'Meatloaf'];\n  colors = ['#33d60b', '#dcafff', '#3fc9ff', '#ff1600', '#5238b1', '#fff'];\n\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\n\n  addData(): void {\n    this.data$.next([...this.data$.getValue(), this.randomRecord()]);\n  }\n\n  removeData(): void {\n    this.data$.next([]);\n  }\n\n  simulateLoad(): void {\n    this.loading$.next(true);\n    // set loading state to false after 2 seconds\n    setTimeout(() => this.loading$.next(false), 2000);\n  }\n\n  clickAction(row: TableRow, column: { key: string; value: TableColumn }, index: number): void {\n    console.log('clicked row:', row, 'col:', column);\n    this.clicked = `clicked row number: ${index}`;\n  }\n\n  randomRecord(): TableRow {\n    const random = Math.floor(Math.random() * 2);\n    const newRecord = {\n      firstName: random\n        ? this.maleFirstNames[Math.floor(Math.random() * this.maleFirstNames.length)]\n        : this.femaleFirstNames[Math.floor(Math.random() * this.femaleFirstNames.length)],\n      lastName: this.lastNames[Math.floor(Math.random() * this.lastNames.length)],\n      gender: random ? 'male' : 'female',\n      favoriteColor: this.colors[Math.floor(Math.random() * this.colors.length)],\n      favoriteFood: this.foods[Math.floor(Math.random() * this.foods.length)],\n    };\n    console.log('added new random record:', newRecord);\n\n    return newRecord;\n  }\n\n  next = () => {\n    this.currentPage = this._currentPage$.value + 1;\n  };\n  prev = () => {\n    this.currentPage = this._currentPage$.value - 1;\n  };\n\n  ngOnInit(): void {\n    this.simulateLoad();\n    this.paginationForm\n      .get('length')\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\n      .subscribe(([length, config]) => {\n        length = +length;\n        this.tableConfig$.next({\n          ...config,\n          pagination: { ...config.pagination, length },\n        });\n      });\n    this.tableConfig$.next({\n      class: 'table table-mobile text-nowrap mb-0',\n      columns: {\n        firstName: {\n          header: 'First name',\n          mobileHeader: true,\n          sortable: true,\n          order: 0,\n        },\n        lastName: {\n          header: 'Last name',\n          mobileHeader: true,\n          hidden: false,\n          sortable: true,\n        },\n        gender: {\n          mobileHeader: 'Sex',\n          sortable: true,\n          order: 1,\n        },\n        favoriteColor: {\n          header: 'Favorite color',\n          mobileHeader: true,\n          templateRef: this.color,\n          sortable: false,\n          order: 2,\n          search: false,\n          class: 'custom-class',\n        },\n        favoriteFood: {\n          mobileHeader: true,\n          header: 'Favorite food',\n          hidden: false,\n          sortable: true,\n          order: 0,\n        },\n        action: {\n          mobileHeader: false,\n          header: false,\n          templateRef: this.actions,\n          order: 6,\n        },\n      },\n      pagination: {\n        length: this.paginationForm.get('length')?.value || 0,\n      },\n      footer: {\n        columns: {\n          gender: {\n            count: (data, key) => {\n              let men = 0;\n              let women = 0;\n              for (let i = 0; i < data.length; i++) {\n                if (data[i][key] === 'female') {\n                  women++;\n                } else if (data[i][key] === 'male') {\n                  men++;\n                }\n              }\n              return `♂ ${men} ♀ ${women}`;\n            },\n          },\n          favoriteColor: {},\n          action: { count: (data, key) => `Total: ${data.length}` },\n        },\n      },\n    });\n  }\n}",language:"typescript"},{name:"app.module.ts",code:"import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AdvancedComponent } from './advanced.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [AdvancedComponent],\n  imports: [BrowserModule, ReactiveFormsModule, GenericTableCoreModule],\n  bootstrap: [AdvancedComponent]\n})\nexport class AppModule {}",language:"typescript"}];var _class;let AdvancedComponent=((_class=class AdvancedComponent{get currentPage$(){return this._currentPage$.asObservable()}set currentPage(value){this._currentPage$.next(value)}constructor(fb){this.fb=fb,this.paginationForm=this.fb.group({length:[10],search:[""]}),this.search$=this.paginationForm.get("search")?.valueChanges,this.loading$=new BehaviorSubject.X(!0),this.data$=new BehaviorSubject.X([{firstName:"Peter",lastName:"Parker",gender:"male",favoriteColor:"#26BFAF",favoriteFood:"Pasta"},{firstName:"Mary Jane",lastName:"Watson",gender:"female",favoriteColor:"#0f0",favoriteFood:"Pizza"}]),this._currentPage$=new BehaviorSubject.X(0),this.clicked="",this.maleFirstNames=["Peter","Clark","Ruben","John","Jack","Roscoe"],this.femaleFirstNames=["Mary Jane","Kim","Sarah","Michelle","Ann"],this.lastNames=["Andersson","Smith","Parker","Kent","Rogers","Lane","Jackson"],this.foods=["Pizza","Pasta","Hamburger","Pancakes","Tacos","Lasagna","Meatloaf"],this.colors=["#33d60b","#dcafff","#3fc9ff","#ff1600","#5238b1","#fff"],this.tableConfig$=new ReplaySubject.t(1),this.SNIPPETS=ADVANCED_DOCS,this.next=()=>{this.currentPage=this._currentPage$.value+1},this.prev=()=>{this.currentPage=this._currentPage$.value-1}}addData(){this.data$.next([...this.data$.getValue(),this.randomRecord()])}removeData(){this.data$.next([])}simulateLoad(){this.loading$.next(!0),setTimeout((()=>this.loading$.next(!1)),2e3)}clickAction(row,column,index){console.log("clicked row:",row,"col:",column),this.clicked=`clicked row number: ${index}`}randomRecord(){const random=Math.floor(2*Math.random()),newRecord={firstName:random?this.maleFirstNames[Math.floor(Math.random()*this.maleFirstNames.length)]:this.femaleFirstNames[Math.floor(Math.random()*this.femaleFirstNames.length)],lastName:this.lastNames[Math.floor(Math.random()*this.lastNames.length)],gender:random?"male":"female",favoriteColor:this.colors[Math.floor(Math.random()*this.colors.length)],favoriteFood:this.foods[Math.floor(Math.random()*this.foods.length)]};return console.log("added new random record:",newRecord),newRecord}ngOnInit(){this.simulateLoad(),this.paginationForm.get("length")?.valueChanges.pipe((0,withLatestFrom.M)(this.tableConfig$)).subscribe((([length,config])=>{length=+length,this.tableConfig$.next({...config,pagination:{...config.pagination,length}})})),this.tableConfig$.next({class:"table text-nowrap mb-0",mobileLayout:!0,columns:{firstName:{header:"First name",mobileHeader:!0,sortable:!0,order:0},lastName:{header:"Last name",mobileHeader:!0,hidden:!1,sortable:!0},gender:{mobileHeader:"Sex",sortable:!0,order:1},favoriteColor:{header:"Favorite color",mobileHeader:!0,templateRef:this.color,sortable:!1,order:2,search:!1,class:"custom-class"},favoriteFood:{mobileHeader:!0,header:"Favorite food",hidden:!1,sortable:!0,order:0},action:{mobileHeader:!1,header:!1,templateRef:this.actions,order:6,class:"py-1 text-end"}},pagination:{length:this.paginationForm.get("length")?.value||0},footer:{columns:{gender:{count:(data,key)=>{let men=0,women=0;for(let i=0;i<data.length;i++)"female"===data[i][key]?women++:"male"===data[i][key]&&men++;return`♂ ${men} ♀ ${women}`}},favoriteColor:{},action:{count:(data,key)=>`Total: ${data.length}`}}}})}}).ctorParameters=()=>[{type:fesm2020_forms.UntypedFormBuilder}],_class.propDecorators={actions:[{type:core.ViewChild,args:["actions",{static:!0}]}],color:[{type:core.ViewChild,args:["color",{static:!0}]}]},_class);AdvancedComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"docs-advanced",template:'<div class="row mb-3 gy-3 gx-2">\n  <div class="col-12 col-sm-auto">\n    <button class="btn btn-primary w-100" (click)="addData()">\n      Add random data\n    </button>\n  </div>\n  <div class="col-12 col-sm-auto">\n    <button class="btn btn-danger w-100" (click)="removeData()">\n      Remove data\n    </button>\n  </div>\n  <div class="col-12 col-sm-auto">\n    <button class="btn btn-secondary w-100" (click)="simulateLoad()">\n      Load\n    </button>\n  </div>\n</div>\n<form [formGroup]="paginationForm">\n  <div class="row gy-3">\n    <div class="form-group col-6 col-sm-auto">\n      <label for="length_input">Length</label>\n      <input\n        id="length_input"\n        formControlName="length"\n        type="number"\n        class="form-control"\n      />\n    </div>\n    <div class="form-group col-6 col-sm-auto">\n      <label for="search_input">Search</label>\n      <input\n        id="search_input"\n        formControlName="search"\n        type="text"\n        class="form-control"\n      />\n    </div>\n  </div>\n</form>\n<div class="overflow-scroll mt-3 pb-3">\n  <angular-generic-table\n    [data]="data$"\n    [config]="tableConfig$"\n    [paginationIndex]="(currentPage$ | async)!"\n    [search]="search$"\n    [loading]="loading$"\n    #table\n  >\n    <div class="table-loading gt-skeleton-loader"></div>\n    <div class="table-no-data alert alert-info mt-3">Table is empty</div>\n  </angular-generic-table>\n</div>\n<div\n  class="row justify-content-center align-items-center gy-3"\n  *ngIf="{\n    current: (currentPage$ | async) || 0,\n    total: (table.table$ | async)?.info?.pageTotal || 1\n  } as pagination"\n>\n  <div class="col-6 col-sm-auto">\n    <button\n      class="btn btn-primary w-100"\n      (click)="prev()"\n      [disabled]="pagination.current === 0"\n    >\n      Prev\n    </button>\n  </div>\n  <div class="col-6 col-sm-auto">\n    <button\n      class="btn btn-primary w-100"\n      (click)="next()"\n      [disabled]="pagination.total - 1 === pagination.current"\n    >\n      Next\n    </button>\n  </div>\n  <div class="col-auto">Current page: {{ pagination.current + 1 }}</div>\n  <div class="col-auto">Total pages: {{ pagination.total }}</div>\n  <div class="col-auto">Records: {{ (data$ | async).length }}</div>\n  <div class="col-auto">\n    {{ clicked }}\n  </div>\n</div>\n<ng-template #actions let-row="row" let-col="col" let-index="index">\n  <button\n    *ngIf="index !== undefined"\n    class="btn btn-outline-primary btn-sm"\n    (click)="clickAction(row, col, index)"\n  >\n    Click me!\n  </button>\n</ng-template>\n<ng-template #color let-row="row" let-col="col">\n  <div\n    [style.background]="row[col.key]"\n    style="width: 1.5rem; height: 1.5rem; border-radius: 50%"\n  ></div>\n</ng-template>\n<docs-tabs [content]="SNIPPETS"></docs-tabs>\n'})],AdvancedComponent);const Advanced=args=>({props:args,component:AdvancedComponent});var tabs_component=__webpack_require__("./projects/docs/src/app/components/tabs/tabs.component.ts"),http=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),pagination_module=__webpack_require__("./projects/core/src/lib/pagination/pagination.module.ts"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Examples/Multiple features",decorators:[(0,client.moduleMetadata)({declarations:[AdvancedComponent,tabs_component.n],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],mdxType:"Meta"}),(0,esm.kt)("h1",{id:"multiple-features"},"Multiple features"),(0,esm.kt)("p",null,"Example showcasing:"),(0,esm.kt)("ul",null,(0,esm.kt)("li",{parentName:"ul"},"Sorting"),(0,esm.kt)("li",{parentName:"ul"},"Loading state"),(0,esm.kt)("li",{parentName:"ul"},"Empty state"),(0,esm.kt)("li",{parentName:"ul"},"Global search"),(0,esm.kt)("li",{parentName:"ul"},"Mobile table layout with sticky header (resize viewport to < 576px to view example)"),(0,esm.kt)("li",{parentName:"ul"},"Custom pagination"),(0,esm.kt)("li",{parentName:"ul"},"Add/remove data"),(0,esm.kt)("li",{parentName:"ul"},"Custom templates"),(0,esm.kt)("li",{parentName:"ul"},"Table footer")),(0,esm.kt)("h3",{id:"example"},"Example"),(0,esm.kt)(dist_esm.oG,{name:"Multiple features",mdxType:"Story"},Advanced.bind({})))}MDXContent.isMDXComponent=!0;var multipleFeatures=Advanced.bind({});multipleFeatures.storyName="Multiple features",multipleFeatures.parameters={storySource:{source:"Advanced.bind({})"}};var componentMeta={title:"Examples/Multiple features",decorators:[(0,client.moduleMetadata)({declarations:[AdvancedComponent,tabs_component.n],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],includeStories:["multipleFeatures"]},mdxStoryNameToKey={"Multiple features":"multipleFeatures"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))}});const Advanced_stories=componentMeta;var __namedExportsOrder=["multipleFeatures"]},"./projects/docs/src/stories/examples/Custom-templates.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,customTemplates:()=>customTemplates,default:()=>Custom_templates_stories});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/fesm2020/platform-browser.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),core_module=__webpack_require__("./projects/core/src/lib/core.module.ts"),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),tabs_component=__webpack_require__("./projects/docs/src/app/components/tabs/tabs.component.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),ReplaySubject=__webpack_require__("./node_modules/rxjs/_esm2015/internal/ReplaySubject.js");const CUSTOM_TEMPLATES_DOCS=[{name:"custom-templates.component.ts",code:"import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { TableColumn, TableConfig, TableRow } from '@angular-generic-table/core';\nimport { ReplaySubject } from 'rxjs';\n\n@Component({\n  selector: 'custom-templates',\n  templateUrl: `./custom-templates.component.html`\n})\nexport class CustomTemplatesComponent implements OnInit {\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n  clicked = '';\n\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteColor: '#26BFAF',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteColor: '#0f0',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config$: ReplaySubject<TableConfig> = new ReplaySubject(1);\n  ngOnInit(): void {\n    this.config$.next({\n      columns: {\n        firstName: {},\n        lastName: {},\n        gender: {},\n        favoriteColor: {\n          templateRef: this.color,\n        },\n        favoriteFood: {},\n        action: {\n          templateRef: this.actions,\n        },\n      },\n    });\n  }\n  clickAction(row: TableRow, column: { key: string; value: TableColumn }, index: number): void {\n    console.log('clicked row:', row, 'col:', column);\n    this.clicked = `clicked row number: ${index}`;\n  }\n}",language:"typescript"},{name:"app.module.ts",code:"import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { CustomTemplatesComponent } from './custom-templates-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [CustomTemplatesComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [CustomTemplatesComponent]\n})\nexport class AppModule {}",language:"typescript"},{name:"custom-templates.component.html",code:'<angular-generic-table [data]="data" [config]="config$"></angular-generic-table>\n<ng-template #actions let-row="row" let-col="col" let-index="index">\n <button class="btn btn-outline-primary btn-sm my-sm-n3 text-nowrap" (click)="clickAction(row, col, index)">Click me!</button>\n</ng-template>\n<ng-template #color let-row="row" let-col="col">\n <div [style.background]="row[col.key]" style="width: 1.5rem; height: 1.5rem; border-radius: 50%"></div>\n</ng-template>\n{{ clicked }}',language:"xml"}];var _class;let CustomTemplatesComponent=((_class=class CustomTemplatesComponent{constructor(){this.clicked="",this.data=[{firstName:"Peter",lastName:"Parker",gender:"male",favoriteColor:"#26BFAF",favoriteFood:"Pasta"},{firstName:"Mary Jane",lastName:"Watson",gender:"female",favoriteColor:"#0f0",favoriteFood:"Pizza"}],this.config$=new ReplaySubject.t(1),this.SNIPPETS=CUSTOM_TEMPLATES_DOCS}ngOnInit(){this.config$.next({columns:{firstName:{},lastName:{},gender:{},favoriteColor:{templateRef:this.color},favoriteFood:{},action:{templateRef:this.actions}}})}clickAction(row,column,index){console.log("clicked row:",row,"col:",column),this.clicked=`clicked row number: ${index}`}}).propDecorators={actions:[{type:core.ViewChild,args:["actions",{static:!0}]}],color:[{type:core.ViewChild,args:["color",{static:!0}]}]},_class);CustomTemplatesComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"docs-custom-templates",template:'\n    <div class="overflow-auto">\n      <angular-generic-table\n        [data]="data"\n        [config]="config$"\n      ></angular-generic-table>\n    </div>\n    <ng-template #actions let-row="row" let-col="col" let-index="index">\n      <button\n        class="btn btn-outline-primary btn-sm my-sm-n3 text-nowrap"\n        (click)="clickAction(row, col, index)"\n      >\n        Click me!\n      </button>\n    </ng-template>\n    <ng-template #color let-row="row" let-col="col">\n      <div\n        [style.background]="row[col.key]"\n        style="width: 1.5rem; height: 1.5rem; border-radius: 50%"\n      ></div>\n    </ng-template>\n    {{ clicked }}\n    <docs-tabs [content]="SNIPPETS"></docs-tabs>\n  '})],CustomTemplatesComponent);const CustomTemplates=args=>({props:args,component:CustomTemplatesComponent});var http=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),pagination_module=__webpack_require__("./projects/core/src/lib/pagination/pagination.module.ts"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Examples/Custom templates",decorators:[(0,client.moduleMetadata)({declarations:[CustomTemplatesComponent,tabs_component.n],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],mdxType:"Meta"}),(0,esm.kt)("h1",{id:"custom-templates"},"Custom templates"),(0,esm.kt)("p",null,"Define custom templates and assign them to different columns using the ",(0,esm.kt)("inlineCode",{parentName:"p"},"templateRef")," property when declaring ",(0,esm.kt)("inlineCode",{parentName:"p"},"columns")," in ",(0,esm.kt)("inlineCode",{parentName:"p"},"config"),"."),(0,esm.kt)(dist_esm.oG,{name:"Custom templates",mdxType:"Story"},CustomTemplates.bind({})))}MDXContent.isMDXComponent=!0;var customTemplates=CustomTemplates.bind({});customTemplates.storyName="Custom templates",customTemplates.parameters={storySource:{source:"CustomTemplates.bind({})"}};var componentMeta={title:"Examples/Custom templates",decorators:[(0,client.moduleMetadata)({declarations:[CustomTemplatesComponent,tabs_component.n],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],includeStories:["customTemplates"]},mdxStoryNameToKey={"Custom templates":"customTemplates"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))}});const Custom_templates_stories=componentMeta;var __namedExportsOrder=["customTemplates"]},"./projects/docs/src/stories/examples/Footer.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>Footer_stories,tableFooter:()=>tableFooter});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/fesm2020/platform-browser.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),core_module=__webpack_require__("./projects/core/src/lib/core.module.ts"),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),tabs_component=__webpack_require__("./projects/docs/src/app/components/tabs/tabs.component.ts"),http=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),pagination_module=__webpack_require__("./projects/core/src/lib/pagination/pagination.module.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");const SIMPLE_SNIPPETS=[{name:"footer-table.component.ts",code:"import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { TableConfig, TableRow } from '@angular-generic-table/core';\nimport { DecimalPipe } from '@angular/common';\n\n@Component({\n  template: `\n    <div class=\"overflow-auto\">\n      <angular-generic-table [data]=\"data\" [config]=\"config\">\n      </angular-generic-table>\n    </div>\n    <ng-template #heightTmplRef let-row=\"row\" let-col=\"col\">\n      <ng-container *ngIf=\"row[col.key || col] as height\"\n        >{{ height }} m\n      </ng-container>\n    </ng-template>\n  `,\n})\nexport class FooterComponent implements OnInit {\n  @ViewChild('heightTmplRef', { static: true }) heightTmplRef:\n    | TemplateRef<any>\n    | undefined;\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n      age: 27,\n      weight: 85.457,\n      height: 1.85,\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n      age: 25,\n      weight: 60.123,\n      height: 1.65,\n    },\n  ];\n  config: TableConfig = {};\n  ngOnInit() {\n    this.config = {\n      columns: {\n        firstName: {},\n        lastName: {},\n        gender: {},\n        favoriteFood: {\n          class: 'text-end flex-end',\n        },\n        age: {\n          class: 'text-end',\n        },\n        weight: {\n          class: 'text-end',\n          transform: {\n            pipe: DecimalPipe,\n            args: ['1.0-2'],\n          },\n        },\n        height: {\n          class: 'text-end',\n          templateRef: this.heightTmplRef,\n        },\n      },\n      footer: {\n        headers: {\n          sum: 'Total',\n          numberOfWomen: 'Number of women',\n          numberOfMen: 'Number of men',\n          min: true,\n          max: true,\n          avg: true,\n          count: true,\n          static: true,\n          first: true,\n        },\n        rowOrder: [\n          'first',\n          'numberOfWomen',\n          'numberOfMen',\n          'min',\n          'max',\n          'sum',\n          'avg',\n          'count',\n        ],\n        columns: {\n          firstName: {},\n          lastName: {\n            static: 'n/a',\n          },\n          gender: {\n            numberOfWomen: (data: Array<TableRow>, key) => {\n              let count = 0;\n              for (let i = 0; i < data.length; i++) {\n                if (data[i][key] === 'female') {\n                  count++;\n                }\n              }\n              return count;\n            },\n            numberOfMen: (data: Array<TableRow>, key) => {\n              let count = 0;\n              for (let i = 0; i < data.length; i++) {\n                if (data[i][key] === 'male') {\n                  count++;\n                }\n              }\n              return count;\n            },\n          },\n          favoriteFood: {\n            first: (data: Array<TableRow>, key) => data[0][key],\n          },\n          age: {\n            sum: true,\n            avg: true,\n            count: true,\n            max: true,\n            min: true,\n          },\n          weight: {\n            sum: true,\n            avg: true,\n            min: true,\n          },\n          height: {\n            avg: true,\n            min: true,\n            max: true,\n          },\n        },\n      },\n    };\n  }\n\n}",language:"typescript"},{name:"app.module.ts",code:"import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { BasicTableComponent } from './basic-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [BasicTableComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [BasicTableComponent]\n})\nexport class AppModule {}",language:"typescript"}];var _class;let FooterComponent=((_class=class FooterComponent{constructor(){this.data=[{firstName:"Peter",lastName:"Parker",gender:"male",favoriteFood:"Pasta",age:27,weight:85.457,height:1.85},{firstName:"Mary Jane",lastName:"Watson",gender:"female",favoriteFood:"Pizza",age:25,weight:60.123,height:1.65}],this.config={},this.SNIPPETS=SIMPLE_SNIPPETS}ngOnInit(){this.config={mobileLayout:!0,columns:{firstName:{mobileHeader:!0},lastName:{mobileHeader:!0},gender:{mobileHeader:!0},favoriteFood:{mobileHeader:!0,class:"text-end flex-end"},age:{mobileHeader:!0,class:"text-end"},weight:{mobileHeader:!0,class:"text-end",transform:{pipe:common.JJ,args:["1.0-2"]}},height:{mobileHeader:!0,class:"text-end",templateRef:this.heightTmplRef}},footer:{headers:{sum:"Total",numberOfWomen:"Number of women",numberOfMen:"Number of men",min:!0,max:!0,avg:!0,count:!0,static:!0,first:!0},rowOrder:["first","numberOfWomen","numberOfMen","min","max","sum","avg","count"],columns:{firstName:{},lastName:{static:"n/a"},gender:{numberOfWomen:(data,key)=>{let count=0;for(let i=0;i<data.length;i++)"female"===data[i][key]&&count++;return count},numberOfMen:(data,key)=>{let count=0;for(let i=0;i<data.length;i++)"male"===data[i][key]&&count++;return count}},favoriteFood:{first:(data,key)=>data[0][key]},age:{sum:!0,avg:!0,count:!0,max:!0,min:!0},weight:{sum:!0,avg:!0,min:!0},height:{avg:!0,min:!0,max:!0}}}}}}).propDecorators={heightTmplRef:[{type:core.ViewChild,args:["heightTmplRef",{static:!0}]}]},_class);FooterComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"docs-footer",template:'\n    <div class="overflow-auto">\n      <angular-generic-table [data]="data" [config]="config">\n      </angular-generic-table>\n    </div>\n    <docs-tabs [content]="SNIPPETS"></docs-tabs>\n    <ng-template #heightTmplRef let-row="row" let-col="col">\n      <ng-container *ngIf="row[col.key || col] as height"\n        >{{ height }} m\n      </ng-container>\n    </ng-template>\n  '})],FooterComponent);const Footer=args=>({props:args,component:FooterComponent});var _excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Preview=function makeShortcode(name){return function MDXDefaultShortcode(props){return console.warn("Component "+name+" was not imported, exported, or provided by MDXProvider as global scope"),(0,esm.kt)("div",props)}}("Preview"),layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Examples/Table footer",decorators:[(0,client.moduleMetadata)({declarations:[tabs_component.n,FooterComponent],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],mdxType:"Meta"}),(0,esm.kt)("h1",{id:"table-footer"},"Table footer"),(0,esm.kt)("p",null,"Use the footer config option to display accumulations like totals, count, min, max etc. or any other content for that matter in the footer of the table. Pass your own data or accumulator function or use the ones provided by Generic Table."),(0,esm.kt)("strong",null,"Footer config"),(0,esm.kt)("p",null,"The footer config has the following options which are described more in detail below."),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-json"},"\"footer\": {\n    \"headers\"?: {\n      [key: 'sum'|'avg'|'count'|'max'|'min'|string]: string|boolean;\n    };\n    \"columns\"?: {\n      [key: string]: {\n        [key: 'sum'|'avg'|'count'|'max'|'min'|string]: boolean|number|string|Function;\n      };\n    };\n    \"rowOrder\"?: Array<'sum'|'avg'|'count'|'max'|'min'|string>;\n    \"emptyContent\"?: string;\n  };\n")),(0,esm.kt)("strong",null,"Footer config options"),(0,esm.kt)(Preview,{mdxSource:"%0A%3Cdiv%20class=%22overflow-auto%22%3E%0A%20%20%20%20%3Ctable%3E%0A%20%20%20%20%20%20%3Cthead%3E%0A%20%20%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%20%20%3Cth%3EOption%3C/th%3E%0A%20%20%20%20%20%20%20%20%3Cth%3EDescription%3C/th%3E%0A%20%20%20%20%20%20%3C/tr%3E%0A%20%20%20%20%20%20%3C/thead%3E%0A%20%20%20%20%20%20%3Ctbody%3E%0A%20%20%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%20%20%3Ctd%3E%3Ccode%3Eheaders%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%20%20%3Ctd%3EKey%20value%20pairs%20for%20headers,%20each%20key%20corresponds%20to%20name%20of%20accumulator.%3C/td%3E%0A%20%20%20%20%20%20%3C/tr%3E%0A%20%20%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%20%20%3Ctd%3E%3Ccode%3Ecolumns%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%20%20%3Ctd%3EKey%20value%20pairs%20with%20columns%20that%20should%20display%20content/accumulations.%20Specify%20which%20accumulator%20to%20use%20%3Ccode%3Emin%3C/code%3E,%20%3Ccode%3Emax%3C/code%3E,%20%3Ccode%3Eavg%3C/code%3E,%20%3Ccode%3Ecount%3C/code%3E,%20%3Ccode%3Esum%3C/code%3E%20or%20define%20your%20own%20one%20or%20add%20fixed%20content%20to%20display.%20%3C/td%3E%0A%20%20%20%20%20%20%3C/tr%3E%0A%20%20%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%20%20%3Ctd%3E%3Ccode%3ErowOrder%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%20%20%3Ctd%3ERow%20order%20for%20accumulators.%3C/td%3E%0A%20%20%20%20%20%20%3C/tr%3E%0A%20%20%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%20%20%3Ctd%3E%3Ccode%3EemptyContent%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%20%20%3Ctd%3EContent%20to%20display%20when%20accumulation%20is%20undefined%20or%20null%20for%20a%20field.%3C/td%3E%0A%20%20%20%20%20%20%3C/tr%3E%0A%20%20%20%20%20%20%3C/tbody%3E%0A%20%20%20%20%3C/table%3E%0A%20%20%3C/div%3E%0A",mdxType:"Preview"},(0,esm.kt)("div",{class:"overflow-auto"},(0,esm.kt)("table",null,(0,esm.kt)("thead",null,(0,esm.kt)("tr",null,(0,esm.kt)("th",null,"Option"),(0,esm.kt)("th",null,"Description"))),(0,esm.kt)("tbody",null,(0,esm.kt)("tr",null,(0,esm.kt)("td",null,(0,esm.kt)("code",null,"headers")),(0,esm.kt)("td",null,"Key value pairs for headers, each key corresponds to name of accumulator.")),(0,esm.kt)("tr",null,(0,esm.kt)("td",null,(0,esm.kt)("code",null,"columns")),(0,esm.kt)("td",null,"Key value pairs with columns that should display content/accumulations. Specify which accumulator to use ",(0,esm.kt)("code",null,"min"),", ",(0,esm.kt)("code",null,"max"),", ",(0,esm.kt)("code",null,"avg"),", ",(0,esm.kt)("code",null,"count"),", ",(0,esm.kt)("code",null,"sum")," or define your own one or add fixed content to display. ")),(0,esm.kt)("tr",null,(0,esm.kt)("td",null,(0,esm.kt)("code",null,"rowOrder")),(0,esm.kt)("td",null,"Row order for accumulators.")),(0,esm.kt)("tr",null,(0,esm.kt)("td",null,(0,esm.kt)("code",null,"emptyContent")),(0,esm.kt)("td",null,"Content to display when accumulation is undefined or null for a field.")))))),(0,esm.kt)("strong",null,"Example config"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-json"},'"footer": {\n  "headers": {\n    "customFn": "Custom",\n    "min": true,\n  },\n  "columns": {\n    "foo": {\n      "min": true,\n      "max": true,\n      "customFn": (data: Array<TableRow>, key: string) => ...,\n    }\n  },\n  "rowOrder": ["min", "max", "customFn"],\n}\n')),(0,esm.kt)("strong",null,"Example"),(0,esm.kt)("br",null),"Take a look at the ",(0,esm.kt)("a",{href:"examples?path=/docs/examples-multiple-features--multiple-features"},"Multiple features example")," to view another configuration.",(0,esm.kt)("br",null),(0,esm.kt)("br",null),(0,esm.kt)(dist_esm.oG,{name:"Table footer",mdxType:"Story"},Footer.bind({})))}MDXContent.isMDXComponent=!0;var tableFooter=Footer.bind({});tableFooter.storyName="Table footer",tableFooter.parameters={storySource:{source:"Footer.bind({})"}};var componentMeta={title:"Examples/Table footer",decorators:[(0,client.moduleMetadata)({declarations:[tabs_component.n,FooterComponent],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],includeStories:["tableFooter"]},mdxStoryNameToKey={"Table footer":"tableFooter"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))}});const Footer_stories=componentMeta;var __namedExportsOrder=["tableFooter"]},"./projects/docs/src/stories/examples/Horizontal.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>Horizontal_stories,horizontalLayout:()=>horizontalLayout});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/fesm2020/platform-browser.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),core_module=__webpack_require__("./projects/core/src/lib/core.module.ts"),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),tabs_component=__webpack_require__("./projects/docs/src/app/components/tabs/tabs.component.ts"),http=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),pagination_module=__webpack_require__("./projects/core/src/lib/pagination/pagination.module.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");const HORIZONTAL_TABLE_SNIPPETS=[{name:"horizontal-table.component.ts",code:"import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { GtDeltaComponent, TableConfig } from '@angular-generic-table/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'docs-horizontal',\n  templateUrl: './horizontal-table.component.html',\n  styles: [],\n})\nexport class TransposeComponent implements OnInit {\n  @ViewChild('feelings', { static: true }) feelings:\n    | TemplateRef<any>\n    | undefined;\n  @ViewChild('delta', { static: true }) delta: TemplateRef<GtDeltaComponent> | undefined;\n  @ViewChild('deltaIndex', { static: true }) deltaIndex:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  loading$ = new BehaviorSubject(false);\n  config: TableConfig = {};\n  data: any = [];\n\n  ngOnInit(): void {\n    this.config = {\n      stickyHeaders: {\n        row: true,\n      },\n      mobileLayout: true,\n      rows: {\n        year: {\n          class: 'text-end',\n          header: false\n        },\n        value: {\n          class: 'text-end'\n        },\n        delta: {\n          header: 'Delta %',\n          templateRef: this.delta,\n          class: 'text-end'\n        },\n        deltaIndex: {\n          header: 'Since inception %',\n          templateRef: this.deltaIndex,\n          class: 'text-end'\n        },\n        feeling: {\n          templateRef: this.feelings,\n          class: 'text-end'\n        },\n      },\n    };\n    this.load();\n  }\n  simulateLoad(): void {\n    this.loading$.next(true);\n    // set loading state to false after 2 seconds\n    setTimeout(() => this.loading$.next(false), 2000);\n  }\n  empty(): void {\n    this.data = [];\n  }\n  load(): void {\n    this.data = [\n      {\n        year: '2017',\n        value: 50,\n        feeling: 'neutral'\n      },\n      {\n        year: '2018',\n        value: 75,\n        feeling: 'positive'\n      },\n      {\n        year: '2019',\n        value: 100,\n        feeling: 'thrilled'\n      },\n      {\n        year: '2020',\n        value: 250,\n        feeling: 'thrilled'\n      },\n      {\n        year: '2021',\n        value: 50,\n        feeling: 'negative'\n      }\n    ];\n  }\n}\n",language:"typescript"},{name:"horizontal-table.component.html",code:'<button class="btn btn-outline-primary" (click)="simulateLoad()">Simulate load</button>\n<button class="btn btn-outline-danger mx-3" (click)="empty()">Empty</button>\n<button class="btn btn-outline-primary" (click)="load()">Reset</button>\n<div class="overflow-auto">\n  <angular-generic-table\n    [data]="data"\n    [config]="config"\n    [loading]="loading$"\n  >\n    <div class="table-loading gt-skeleton-loader"></div>\n    <div class="table-no-data alert alert-info mt-3">Table is empty</div>\n  </angular-generic-table>\n</div>\n<ng-template #feelings let-row="row" let-col="col">\n  <div [ngSwitch]="row[col.key]">\n    <ng-container *ngSwitchCase="\'thrilled\'">😀</ng-container>\n    <ng-container *ngSwitchCase="\'positive\'">🙂</ng-container>\n    <ng-container *ngSwitchCase="\'neutral\'">😐</ng-container>\n    <ng-container *ngSwitchCase="\'negative\'">😭</ng-container>\n  </div>\n</ng-template>\n<ng-template #delta let-data="data" let-index="index">\n  <gt-delta [index]="index" [data]="data"></gt-delta>\n</ng-template>\n<ng-template #deltaIndex let-data="data" let-index="index">\n  <gt-delta [index]="index" [baseIndex]="0" [data]="data"></gt-delta>\n</ng-template>',language:"xml"},{name:"app.module.ts",code:"import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HorizontalTableComponent } from './horizontal-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [HorizontalTableComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [HorizontalTableComponent]\n})\nexport class AppModule {}",language:"typescript"}];var _class,BehaviorSubject=__webpack_require__("./node_modules/rxjs/_esm2015/internal/BehaviorSubject.js");let HorizontalTableComponent=((_class=class HorizontalTableComponent{constructor(){this.loading$=new BehaviorSubject.X(!1),this.config={},this.data=[],this.SNIPPETS=HORIZONTAL_TABLE_SNIPPETS}ngOnInit(){this.config={stickyHeaders:{row:!0},mobileLayout:!0,rows:{year:{class:"text-end",header:!1},value:{class:"text-end"},delta:{header:"Delta %",templateRef:this.delta,class:"text-end"},deltaIndex:{header:"Since inception %",templateRef:this.deltaIndex,class:"text-end"},feeling:{templateRef:this.feelings,class:"text-end"}}},this.load()}simulateLoad(){this.loading$.next(!0),setTimeout((()=>this.loading$.next(!1)),2e3)}empty(){this.data=[]}load(){this.data=[{year:"2017",value:50,feeling:"neutral"},{year:"2018",value:75,feeling:"positive"},{year:"2019",value:100,feeling:"thrilled"},{year:"2020",value:250,feeling:"thrilled"},{year:"2021",value:50,feeling:"negative"}]}}).propDecorators={feelings:[{type:core.ViewChild,args:["feelings",{static:!0}]}],delta:[{type:core.ViewChild,args:["delta",{static:!0}]}],deltaIndex:[{type:core.ViewChild,args:["deltaIndex",{static:!0}]}]},_class);HorizontalTableComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"docs-horizontal-table",template:'\n    <button class="btn btn-outline-primary" (click)="simulateLoad()">\n      Simulate load\n    </button>\n    <button class="btn btn-outline-danger mx-3" (click)="empty()">Empty</button>\n    <button class="btn btn-outline-primary" (click)="load()">Reset</button>\n    <div class="overflow-auto">\n      <angular-generic-table\n        [data]="data"\n        [config]="config"\n        [loading]="loading$"\n      >\n        <div class="table-loading gt-skeleton-loader"></div>\n        <div class="table-no-data alert alert-info mt-3">Table is empty</div>\n      </angular-generic-table>\n    </div>\n    <ng-template #feelings let-row="row" let-col="col">\n      <div [ngSwitch]="row[col.key]">\n        <ng-container *ngSwitchCase="\'thrilled\'">😀</ng-container>\n        <ng-container *ngSwitchCase="\'positive\'">🙂</ng-container>\n        <ng-container *ngSwitchCase="\'neutral\'">😐</ng-container>\n        <ng-container *ngSwitchCase="\'negative\'">😭</ng-container>\n      </div>\n    </ng-template>\n    <ng-template #delta let-data="data" let-index="index">\n      <gt-delta [index]="index" [data]="data"></gt-delta>\n    </ng-template>\n    <ng-template #deltaIndex let-data="data" let-index="index">\n      <gt-delta [index]="index" [baseIndex]="0" [data]="data"></gt-delta>\n    </ng-template>\n    <docs-tabs [content]="SNIPPETS"></docs-tabs>\n  '})],HorizontalTableComponent);const Horizontal=args=>({props:args,component:HorizontalTableComponent});var _excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Examples/Horizontal layout",decorators:[(0,client.moduleMetadata)({declarations:[HorizontalTableComponent,tabs_component.n],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],mdxType:"Meta"}),(0,esm.kt)("h1",{id:"horizontal-layout"},"Horizontal layout"),(0,esm.kt)("p",null,"Declare ",(0,esm.kt)("inlineCode",{parentName:"p"},"rows")," instead of ",(0,esm.kt)("inlineCode",{parentName:"p"},"columns")," to get a horizontal table where records are added as columns instead of rows. The example below freezes the first column by setting ",(0,esm.kt)("inlineCode",{parentName:"p"},"stickyHeaders.row")," to true, it also uses ",(0,esm.kt)("inlineCode",{parentName:"p"},"<gt-delta>")," which is a helper component to display the delta between two values (by default it compares against previous row or column)."),(0,esm.kt)(dist_esm.oG,{name:"Horizontal layout",mdxType:"Story"},Horizontal.bind({})))}MDXContent.isMDXComponent=!0;var horizontalLayout=Horizontal.bind({});horizontalLayout.storyName="Horizontal layout",horizontalLayout.parameters={storySource:{source:"Horizontal.bind({})"}};var componentMeta={title:"Examples/Horizontal layout",decorators:[(0,client.moduleMetadata)({declarations:[HorizontalTableComponent,tabs_component.n],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],includeStories:["horizontalLayout"]},mdxStoryNameToKey={"Horizontal layout":"horizontalLayout"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))}});const Horizontal_stories=componentMeta;var __namedExportsOrder=["horizontalLayout"]},"./projects/docs/src/stories/examples/Mobile.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>Mobile_stories,mobileLayout:()=>mobileLayout});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/fesm2020/platform-browser.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),core_module=__webpack_require__("./projects/core/src/lib/core.module.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),mobile_layout_component=__webpack_require__("./projects/docs/src/app/examples/mobile-layout/mobile-layout.component.ts.css?ngResource!=!./node_modules/@ngtools/webpack/src/loaders/inline-resource.js?data=CiAgICAgIC50YWJsZSB0aCB7CiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDsKICAgICAgfQogICAg!./projects/docs/src/app/examples/mobile-layout/mobile-layout.component.ts"),mobile_layout_component_default=__webpack_require__.n(mobile_layout_component),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),BehaviorSubject=__webpack_require__("./node_modules/rxjs/_esm2015/internal/BehaviorSubject.js"),map=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/map.js");const MOBILE_LAYOUT_SNIPPETS=[{name:"mobile-layout.component.ts",code:"import {Component, Pipe, PipeTransform, TemplateRef, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {TableColumn, TableConfig, TableRow} from \"@angular-generic-table/core\";\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {map} from \"rxjs/operators\";\n\n@Pipe({\n  name: 'genderPipe',\n})\nexport class GenderPipe implements PipeTransform {\n  transform(gender: 'male' | 'female'): string {\n  return gender === 'male' ? '👨' : '👩';\n  }\n}\n\n@Component({\n  selector: 'docs-mobile-layout',\n  template: `\n    <div class=\"d-flex justify-content-end mb-1 align-items-center\">\n      {{clicked}} <button class=\"btn btn-link d-sm-none \" (click)=\"toggleLayout()\">{{(mobileLayout$ | async)? 'Desktop ' : 'Mobile '}} layout</button>\n    </div>\n    <div [class.overflow-auto]=\"(mobileLayout$ | async) === false\">\n      <angular-generic-table [data]=\"data\" [config]=\"config$\"></angular-generic-table>\n    </div>\n    <ng-template #actions let-row=\"row\" let-col=\"col\" let-index=\"index\">\n      <button class=\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\" (click)=\"clickAction(row, col, index)\">Click me!</button>\n    </ng-template>\n  `,\n  styles: [`\n    .table th {\n      white-space: nowrap;\n    }\n  `],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MobileLayoutComponent {\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  clicked = '';\n\n  mobileLayout$ = new BehaviorSubject(true);\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config$: Observable<TableConfig> = this.mobileLayout$.pipe(\n    map(mobileLayout => ({\n      mobileLayout,\n      columns: {\n        firstName: {\n          mobileHeader: true,\n          sortable: true\n        },\n        lastName: {\n          mobileHeader: true,\n          sortable: true\n        },\n        gender: {\n          mobileHeader: true,\n          transform: {\n            pipe: GenderPipe\n          }\n        },\n        favoriteFood: {\n          mobileHeader: true\n        },\n        action: {\n          mobileHeader: false,\n          header: false,\n          templateRef: this.actions,\n        },\n      },\n    }))\n  );\n\n  toggleLayout = (): void => {\n    this.mobileLayout$.next(!this.mobileLayout$.getValue());\n  }\n  clickAction(row: TableRow, column: { key: string; value: TableColumn }, index: number): void {\n    console.log('clicked row:', row, 'col:', column);\n    this.clicked = `Clicked row number: ${index}`;\n  }\n}",language:"typescript"},{name:"app.module.ts",code:"import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { MobileLayoutComponent } from './mobile-layout.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [MobileLayoutComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [MobileLayoutComponent]\n})\nexport class AppModule {}",language:"typescript"}];var _class;let GenderPipe=class GenderPipe{transform(gender){return"male"===gender?"👨":"👩"}};GenderPipe=(0,tslib_es6.gn)([(0,core.Pipe)({name:"genderPipe"})],GenderPipe);let MobileLayoutComponent=(_class=class MobileLayoutComponent{constructor(){this.clicked="",this.mobileLayout$=new BehaviorSubject.X(!0),this.data=[{firstName:"Peter",lastName:"Parker",gender:"male",favoriteFood:"Pasta"},{firstName:"Mary Jane",lastName:"Watson",gender:"female",favoriteFood:"Pizza"}],this.config$=this.mobileLayout$.pipe((0,map.U)((mobileLayout=>({mobileLayout,columns:{firstName:{mobileHeader:!0,sortable:!0},lastName:{mobileHeader:!0,sortable:!0},gender:{mobileHeader:!0,transform:{pipe:GenderPipe}},favoriteFood:{mobileHeader:!0},action:{mobileHeader:!1,header:!1,templateRef:this.actions}}})))),this.SNIPPETS=MOBILE_LAYOUT_SNIPPETS,this.toggleLayout=()=>{this.mobileLayout$.next(!this.mobileLayout$.getValue())}}clickAction(row,column,index){console.log("clicked row:",row,"col:",column),this.clicked=`Clicked row number: ${index}`}},_class.propDecorators={actions:[{type:core.ViewChild,args:["actions",{static:!0}]}]},_class);MobileLayoutComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"docs-mobile-layout",template:'\n    <div class="d-flex justify-content-end mb-1 align-items-center">\n      {{ clicked }}\n      <button class="btn btn-link d-sm-none " (click)="toggleLayout()">\n        {{ (mobileLayout$ | async) ? \'Desktop \' : \'Mobile \' }} layout\n      </button>\n    </div>\n    <div [class.overflow-auto]="(mobileLayout$ | async) === false">\n      <angular-generic-table\n        [data]="data"\n        [config]="config$"\n      ></angular-generic-table>\n    </div>\n    <ng-template #actions let-row="row" let-col="col" let-index="index">\n      <button\n        class="btn btn-outline-primary btn-sm my-sm-n3 text-nowrap"\n        (click)="clickAction(row, col, index)"\n      >\n        Click me!\n      </button>\n    </ng-template>\n    <docs-tabs [content]="SNIPPETS"></docs-tabs>\n  ',encapsulation:core.ViewEncapsulation.None,styles:[mobile_layout_component_default()]})],MobileLayoutComponent);const Mobile=args=>({props:args,component:MobileLayoutComponent});var fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),tabs_component=__webpack_require__("./projects/docs/src/app/components/tabs/tabs.component.ts"),http=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),pagination_module=__webpack_require__("./projects/core/src/lib/pagination/pagination.module.ts"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Examples/Mobile layout",decorators:[(0,client.moduleMetadata)({declarations:[tabs_component.n],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],mdxType:"Meta"}),(0,esm.kt)("h1",{id:"mobile-layout"},"Mobile layout"),(0,esm.kt)("p",null,"Use mobile layout for table by setting ",(0,esm.kt)("inlineCode",{parentName:"p"},"mobileLayout")," config option to ",(0,esm.kt)("inlineCode",{parentName:"p"},"true")," for table (or by adding class ",(0,esm.kt)("inlineCode",{parentName:"p"},".table-mobile")," to table). Using config option is the preferred way as it will not only add the correct styling but also hide mobile headers automatically when option changes. Generic table uses CSS to create an layout optimized for mobiles, i.e the markup stays the same and it's still use table elements for rendering. Resize the window or view the example below on a small screen to checkout the mobile version as well as the ability toggle to desktop layout."),(0,esm.kt)("h3",{id:"set-breakpoint-for-mobile-layout"},"Set breakpoint for mobile layout"),(0,esm.kt)("p",null,"Since Generic table relies solely on CSS and media queries to accomplish the mobile layout, it's just a matter of declaring a breakpoint using ",(0,esm.kt)("inlineCode",{parentName:"p"},"SCSS"),". Override the default value of ",(0,esm.kt)("inlineCode",{parentName:"p"},"576px"),"\n(bootstrap breakpoint for small screens), by passing a new value for ",(0,esm.kt)("inlineCode",{parentName:"p"},"$mobile-style-max-width")," like this:"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-scss"},"@use '@angular-generic-table/core/scss' as generic-table-styles with (\n  $mobile-style-max-width: 375px\n);\n@include generic-table-styles.styles();\n")),(0,esm.kt)("h3",{id:"example"},"Example"),(0,esm.kt)(dist_esm.oG,{name:"Mobile layout",mdxType:"Story"},Mobile.bind({})))}MDXContent.isMDXComponent=!0;var mobileLayout=Mobile.bind({});mobileLayout.storyName="Mobile layout",mobileLayout.parameters={storySource:{source:"Mobile.bind({})"}};var componentMeta={title:"Examples/Mobile layout",decorators:[(0,client.moduleMetadata)({declarations:[tabs_component.n],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],includeStories:["mobileLayout"]},mdxStoryNameToKey={"Mobile layout":"mobileLayout"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))}});const Mobile_stories=componentMeta;var __namedExportsOrder=["mobileLayout"]},"./projects/docs/src/stories/examples/Nested-data.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>Nested_data_stories,nestedData:()=>nestedData});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/fesm2020/platform-browser.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),core_module=__webpack_require__("./projects/core/src/lib/core.module.ts"),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),tabs_component=__webpack_require__("./projects/docs/src/app/components/tabs/tabs.component.ts"),http=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),pagination_module=__webpack_require__("./projects/core/src/lib/pagination/pagination.module.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");const NESTED_SNIPPETS=[{name:"nested-data.component.ts",code:"import {Component, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {TableConfig, TableRows} from \"@angular-generic-table/core\";\n\ninterface NestedData {\n  name: {\n    first: string;\n    last: string;\n  };\n  data: {\n    details?: {\n      gender: 'male' | 'female';\n      favoriteFood: 'Pasta' | 'Pizza';\n    };\n  };\n}\n\ninterface Data {\n  firstName: string;\n  lastName: string;\n  gender: 'male' | 'female';\n  favoriteFood: 'Pasta' | 'Pizza';\n  missing: string;\n}\n@Component({\n  selector: 'nested-data',\n  template: `\n    <div class=\"row gy-3\">\n      <div class=\"col col-sm-auto\">\n        <button class=\"btn btn-outline-primary mb-3\" (click)=\"loadData()\">\n          Load other data\n        </button>\n      </div>\n      <div class=\"col col-sm-auto\">\n        <button class=\"btn btn-outline-primary mb-3\" (click)=\"resetData()\">\n          Reset\n        </button>\n      </div>\n    </div>\n    <angular-generic-table [data]=\"data\" [config]=\"config\"></angular-generic-table>\n    <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n    <ng-template #gender let-row=\"row\" let-col=\"col\">\n      <div [ngSwitch]=\"row[col.key]\">\n        <ng-container *ngSwitchCase=\"'male'\">♂️</ng-container>\n        <ng-container *ngSwitchCase=\"'female'\">♀️</ng-container>\n      </div>\n    </ng-template>\n  `,\n  styles: [],\n})\nexport class NestedDataComponent implements OnInit {\n  @ViewChild('gender', { static: true }) gender: TemplateRef<any> | undefined;\n\n  config: TableConfig<Data> = {};\n  data: Array<NestedData> = [];\n  ngOnInit(): void {\n    this.resetData();\n    this.config = {\n      columns: {\n        firstName: {\n          sortable: true,\n          mapTo: { path: 'name.first' },\n        },\n        lastName: {\n          sortable: true,\n          mapTo: { path: 'name.last' },\n        },\n        gender: {\n          mapTo: { path: 'data.details.gender' },\n          templateRef: this.gender,\n        },\n        favoriteFood: {\n          sortable: true,\n          mapTo: { path: 'data.details.favoriteFood', missingValue: 'n/a' },\n        },\n        missing: {\n          mapTo: { path: 'data.missingKey.noMatch', missingValue: 'n/a' },\n        },\n      },\n    };\n  }\n\n  resetData() {\n    this.data = [\n      {\n        name: {\n          first: 'Peter',\n          last: 'Parker',\n        },\n        data: {\n          details: {\n            gender: 'male',\n            favoriteFood: 'Pasta',\n          },\n        },\n      },\n      {\n        name: {\n          first: 'Mary Jane',\n          last: 'Watson',\n        },\n        data: {\n          details: {\n            gender: 'female',\n            favoriteFood: 'Pizza',\n          },\n        },\n      },\n    ];\n  }\n\n  loadData(): void {\n    this.data = [\n      {\n        name: {\n          first: 'John',\n          last: 'Doe',\n        },\n        data: {\n          details: {\n            gender: 'male',\n            favoriteFood: 'Pasta',\n          },\n        },\n      },\n      {\n        name: {\n          first: 'Jane',\n          last: 'Doe',\n        },\n        data: {\n          details: {\n            gender: 'female',\n            favoriteFood: 'Pizza',\n          },\n        },\n      },\n      {\n        name: {\n          first: 'Foo',\n          last: 'Bar',\n        },\n        data: {},\n      },\n    ];\n  }\n}",language:"typescript"},{name:"app.module.ts",code:"import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { NestedDataComponent } from './nested-data.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [NestedDataComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [NestedDataComponent]\n})\nexport class AppModule {}",language:"typescript"}];var _class,core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let NestedDataComponent=((_class=class NestedDataComponent{constructor(){this.config={},this.data=[],this.SNIPPETS=NESTED_SNIPPETS}ngOnInit(){this.resetData(),this.config={columns:{firstName:{sortable:!0,mapTo:{path:"name.first"}},lastName:{sortable:!0,mapTo:{path:"name.last"}},gender:{mapTo:{path:"data.details.gender"},templateRef:this.gender},favoriteFood:{sortable:!0,mapTo:{path:"data.details.favoriteFood",missingValue:"n/a"}},missing:{mapTo:{path:"data.missingKey.noMatch",missingValue:"n/a"}}}}}resetData(){this.data=[{name:{first:"Peter",last:"Parker"},data:{details:{gender:"male",favoriteFood:"Pasta"}}},{name:{first:"Mary Jane",last:"Watson"},data:{details:{gender:"female",favoriteFood:"Pizza"}}}]}loadData(){this.data=[{name:{first:"John",last:"Doe"},data:{details:{gender:"male",favoriteFood:"Pasta"}}},{name:{first:"Jane",last:"Doe"},data:{details:{gender:"female",favoriteFood:"Pizza"}}},{name:{first:"Foo",last:"Bar"},data:{}}]}}).propDecorators={gender:[{type:core.ViewChild,args:["gender",{static:!0}]}]},_class);NestedDataComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"nested-data",template:'\n    <div class="row gy-3">\n      <div class="col col-sm-auto">\n        <button class="btn btn-outline-primary mb-3" (click)="loadData()">\n          Load other data\n        </button>\n      </div>\n      <div class="col col-sm-auto">\n        <button class="btn btn-outline-primary mb-3" (click)="resetData()">\n          Reset\n        </button>\n      </div>\n    </div>\n    <div class="overflow-auto">\n      <angular-generic-table\n        [data]="data"\n        [config]="config"\n      ></angular-generic-table>\n    </div>\n    <docs-tabs [content]="SNIPPETS"></docs-tabs>\n    <ng-template #gender let-row="row" let-col="col">\n      <div [ngSwitch]="row[col.key]">\n        <ng-container *ngSwitchCase="\'male\'">♂️</ng-container>\n        <ng-container *ngSwitchCase="\'female\'">♀️</ng-container>\n      </div>\n    </ng-template>\n  '})],NestedDataComponent);const Nested=args=>({props:args,component:NestedDataComponent});var _excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Examples/Nested data",decorators:[(0,client.moduleMetadata)({declarations:[tabs_component.n,NestedDataComponent],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],mdxType:"Meta"}),(0,esm.kt)("h1",{id:"nested-data"},"Nested data"),(0,esm.kt)("p",null,"Generic table can generate tables based on nested JSON structures, just use ",(0,esm.kt)("inlineCode",{parentName:"p"},"mapTo")," option and pass string path to object value as ",(0,esm.kt)("inlineCode",{parentName:"p"},"path")," and optionally a ",(0,esm.kt)("inlineCode",{parentName:"p"},"missingValue")," value which will be used if key is undefined."),(0,esm.kt)(dist_esm.oG,{name:"Nested data",mdxType:"Story"},Nested.bind({})))}MDXContent.isMDXComponent=!0;var nestedData=Nested.bind({});nestedData.storyName="Nested data",nestedData.parameters={storySource:{source:"Nested.bind({})"}};var componentMeta={title:"Examples/Nested data",decorators:[(0,client.moduleMetadata)({declarations:[tabs_component.n,NestedDataComponent],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],includeStories:["nestedData"]},mdxStoryNameToKey={"Nested data":"nestedData"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))}});const Nested_data_stories=componentMeta;var __namedExportsOrder=["nestedData"]},"./projects/docs/src/stories/examples/Pagination/Client-side-pagination.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,clientSide:()=>clientSide,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_angular__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_angular_platform_browser__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__("./node_modules/@angular/platform-browser/fesm2020/platform-browser.mjs"),_angular_common__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),_core_src_lib_core_module__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./projects/core/src/lib/core.module.ts"),_angular_forms__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),_app_components_tabs_tabs_component__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./projects/docs/src/app/components/tabs/tabs.component.ts"),_app_examples_pagination_pagination_component__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./projects/docs/src/app/examples/pagination/pagination.component.ts"),_angular_common_http__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),_core_src_lib_pagination_pagination_module__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("./projects/core/src/lib/pagination/pagination.module.ts"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_7__.h_,{title:"Examples/Pagination",decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_8__.moduleMetadata)({declarations:[_app_examples_pagination_pagination_component__WEBPACK_IMPORTED_MODULE_11__.Q,_app_components_tabs_tabs_component__WEBPACK_IMPORTED_MODULE_10__.n],imports:[_angular_platform_browser__WEBPACK_IMPORTED_MODULE_13__.BrowserModule,_angular_common__WEBPACK_IMPORTED_MODULE_14__.ez,_core_src_lib_core_module__WEBPACK_IMPORTED_MODULE_9__.h,_core_src_lib_pagination_pagination_module__WEBPACK_IMPORTED_MODULE_12__.i,_angular_forms__WEBPACK_IMPORTED_MODULE_15__.ReactiveFormsModule,_angular_common_http__WEBPACK_IMPORTED_MODULE_16__.JF]})],mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("h1",{id:"client-side-example"},"Client side example"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("p",null,"The example below shows a simple example when pagination is done and handled client side, i.e. the table has all the data it can display."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("h3",{id:"example"},"Example"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_7__.oG,{name:"Client-side",mdxType:"Story"},_app_examples_pagination_pagination_component__WEBPACK_IMPORTED_MODULE_11__.t.bind({})))}MDXContent.isMDXComponent=!0;var clientSide=_app_examples_pagination_pagination_component__WEBPACK_IMPORTED_MODULE_11__.t.bind({});clientSide.storyName="Client-side",clientSide.parameters={storySource:{source:"Pagination.bind({})"}};var componentMeta={title:"Examples/Pagination",decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_8__.moduleMetadata)({declarations:[_app_examples_pagination_pagination_component__WEBPACK_IMPORTED_MODULE_11__.Q,_app_components_tabs_tabs_component__WEBPACK_IMPORTED_MODULE_10__.n],imports:[_angular_platform_browser__WEBPACK_IMPORTED_MODULE_13__.BrowserModule,_angular_common__WEBPACK_IMPORTED_MODULE_14__.ez,_core_src_lib_core_module__WEBPACK_IMPORTED_MODULE_9__.h,_core_src_lib_pagination_pagination_module__WEBPACK_IMPORTED_MODULE_12__.i,_angular_forms__WEBPACK_IMPORTED_MODULE_15__.ReactiveFormsModule,_angular_common_http__WEBPACK_IMPORTED_MODULE_16__.JF]})],includeStories:["clientSide"]},mdxStoryNameToKey={"Client-side":"clientSide"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_7__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["clientSide"]},"./projects/docs/src/stories/examples/Pagination/Pagination-get-started.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_angular__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_angular_platform_browser__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__("./node_modules/@angular/platform-browser/fesm2020/platform-browser.mjs"),_angular_common__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),_core_src_lib_core_module__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./projects/core/src/lib/core.module.ts"),_angular_forms__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),_app_components_tabs_tabs_component__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./projects/docs/src/app/components/tabs/tabs.component.ts"),_app_examples_pagination_pagination_component__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./projects/docs/src/app/examples/pagination/pagination.component.ts"),_angular_common_http__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),_core_src_lib_pagination_pagination_module__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("./projects/core/src/lib/pagination/pagination.module.ts"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Preview=function makeShortcode(name){return function MDXDefaultShortcode(props){return console.warn("Component "+name+" was not imported, exported, or provided by MDXProvider as global scope"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("div",props)}}("Preview"),layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_7__.h_,{title:"Examples/Pagination/Setup",decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_8__.moduleMetadata)({declarations:[_app_examples_pagination_pagination_component__WEBPACK_IMPORTED_MODULE_11__.Q,_app_components_tabs_tabs_component__WEBPACK_IMPORTED_MODULE_10__.n],imports:[_angular_platform_browser__WEBPACK_IMPORTED_MODULE_13__.BrowserModule,_angular_common__WEBPACK_IMPORTED_MODULE_14__.ez,_core_src_lib_core_module__WEBPACK_IMPORTED_MODULE_9__.h,_core_src_lib_pagination_pagination_module__WEBPACK_IMPORTED_MODULE_12__.i,_angular_forms__WEBPACK_IMPORTED_MODULE_15__.ReactiveFormsModule,_angular_common_http__WEBPACK_IMPORTED_MODULE_16__.JF]})],mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("h1",{id:"pagination---get-started"},"Pagination - Get started"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("p",null,"What would a table be without pagination? To simplify things for you, Angular Generic Table provides a basic pagination component. Just pass a reference to the table like this:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("code",{parentName:"pre",className:"language-markup"},'<angular-generic-table #tableRef" .../>\n<angular-generic-table-pagination [table]="tableRef"/>\n')),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("h3",{id:"inputs"},"Inputs"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)(Preview,{mdxSource:"%0A%3Cdiv%20class=%22overflow-auto%22%3E%0A%20%20%3Ctable%3E%0A%20%20%20%20%3Cthead%3E%0A%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%3Cth%3E@Input%3C/th%3E%0A%20%20%20%20%20%20%3Cth%3EDescription%3C/th%3E%0A%20%20%20%20%20%20%3Cth%3EType%3C/th%3E%0A%20%20%20%20%20%20%3Cth%3EDefault%3C/th%3E%0A%20%20%20%20%3C/tr%3E%0A%20%20%20%20%3C/thead%3E%0A%20%20%20%20%3Ctbody%3E%0A%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3Etable%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3ETable%20connected%20to%20the%20pagination%20control.%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3ETable%20component%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3En/a%3C/code%3E%3C/td%3E%0A%20%20%20%20%3C/tr%3E%0A%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3EpagingInfo%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3EPass%20pagination%20data%20when%20pagination%20is%20done%20server-side.%0A%20%20%20%20%20%20%20%20%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20%3Ccode%3E{%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20%20%20 pagePrevious:%20null,%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20%20%20 pageCurrent:%201,%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20%20%20 pageNext:%202,%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20%20%20 pageSize:%2010,%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20%20%20 numberOfRecords:%20100%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20%20%20}%0A%20%20%20%20%20%20%20%20%3C/code%3E%0A%20%20%20%20%20%20%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3EGtPaginationInfo%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3En/a%3C/code%3E%3C/td%3E%0A%20%20%20%20%3C/tr%3E%0A%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3EpaginationLength%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3ENumber%20of%20pagination%20buttons%20to%20show.%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3Enumber%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3E5%3C/code%3E%3C/td%3E%0A%20%20%20%20%3C/tr%3E%0A%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3Eclasses%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3EClasses%20for%20pagination%20elements.%20Pass%20an%20object%20with%20key%20values,%20where%20key%20is%20element%20and%20value%20is%20classes%20to%20be%20applied.%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3EGtPaginationClasses%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3E{%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20 nav:%20null,%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20 ul:%20'pagination',%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20 li:%20'page-item',%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20 button:%20'page-link'%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20}%0A%20%20%20%20%20%20%3C/code%3E%3C/td%3E%0A%20%20%20%20%3C/tr%3E%0A%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3EariaLabels%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3EAria%20labels%20for%20pagination%20elements.%20Pass%20an%20object%20with%20key%20values,%20where%20key%20is%20element%20and%20value%20is%20aria%20label%20to%20use.%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3EGtPaginationAriaLabels%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3E%0A%20%20%20%20%20%20%20%20{%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20 nav:%20'Table%20navigation',%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20 button:%20'Go%20to%20page%20'%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20}%0A%20%20%20%20%20%20%3C/code%3E%3C/td%3E%0A%20%20%20%20%3C/tr%3E%0A%20%20%20%20%3C/tbody%3E%0A%20%20%3C/table%3E%0A%20%20%3C/div%3E%0A",mdxType:"Preview"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("div",{class:"overflow-auto"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("table",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("thead",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tr",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("th",null,"@Input"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("th",null,"Description"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("th",null,"Type"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("th",null,"Default"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tbody",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tr",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("code",null,"table")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",null,"Table connected to the pagination control."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",null,"Table component"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("code",null,"n/a"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tr",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("code",null,"pagingInfo")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",null,"Pass pagination data when pagination is done server-side.",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("br",null),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("code",null,"{",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("br",null)," pagePrevious: null,",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("br",null)," pageCurrent: 1,",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("br",null)," pageNext: 2,",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("br",null)," pageSize: 10,",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("br",null)," numberOfRecords: 100",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("br",null),"}")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("code",null,"GtPaginationInfo")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("code",null,"n/a"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tr",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("code",null,"paginationLength")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",null,"Number of pagination buttons to show."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("code",null,"number")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("code",null,"5"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tr",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("code",null,"classes")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",null,"Classes for pagination elements. Pass an object with key values, where key is element and value is classes to be applied."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("code",null,"GtPaginationClasses")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("code",null,"{",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("br",null)," nav: null,",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("br",null)," ul: 'pagination',",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("br",null)," li: 'page-item',",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("br",null)," button: 'page-link'",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("br",null),"}"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tr",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("code",null,"ariaLabels")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",null,"Aria labels for pagination elements. Pass an object with key values, where key is element and value is aria label to use."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("code",null,"GtPaginationAriaLabels")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("code",null,"{",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("br",null)," nav: 'Table navigation',",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("br",null)," button: 'Go to page '",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("br",null),"}"))))))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("h3",{id:"import-module"},"Import module"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("p",null,"In order to use the pagination component provided by angular generic table, you need to import it."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("code",{parentName:"pre",className:"language-ts"},"import { GenericTableCoreModule, GenericTablePaginationModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [...],\n  imports: [\n    ...\n    GenericTableCoreModule,\n    GenericTablePaginationModule\n  ],\n  exports: [\n    GenericTableCoreModule,\n    GenericTablePaginationModule\n  ]\n})\nexport class SharedModule {}\n")))}MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Examples/Pagination/Setup",decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_8__.moduleMetadata)({declarations:[_app_examples_pagination_pagination_component__WEBPACK_IMPORTED_MODULE_11__.Q,_app_components_tabs_tabs_component__WEBPACK_IMPORTED_MODULE_10__.n],imports:[_angular_platform_browser__WEBPACK_IMPORTED_MODULE_13__.BrowserModule,_angular_common__WEBPACK_IMPORTED_MODULE_14__.ez,_core_src_lib_core_module__WEBPACK_IMPORTED_MODULE_9__.h,_core_src_lib_pagination_pagination_module__WEBPACK_IMPORTED_MODULE_12__.i,_angular_forms__WEBPACK_IMPORTED_MODULE_15__.ReactiveFormsModule,_angular_common_http__WEBPACK_IMPORTED_MODULE_16__.JF]})],includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_7__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["__page"]},"./projects/docs/src/stories/examples/Pagination/Server-side-pagination.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>Server_side_pagination_stories,serverSide:()=>serverSide});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/fesm2020/platform-browser.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),core_module=__webpack_require__("./projects/core/src/lib/core.module.ts"),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),tabs_component=__webpack_require__("./projects/docs/src/app/components/tabs/tabs.component.ts"),http=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),pagination_module=__webpack_require__("./projects/core/src/lib/pagination/pagination.module.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var _class,core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let CoreService=((_class=class CoreService{constructor(){}}).ctorParameters=()=>[],_class);CoreService=(0,tslib_es6.gn)([(0,core.Injectable)({providedIn:"root"})],CoreService);__webpack_require__("./projects/core/src/lib/core.component.ts"),__webpack_require__("./projects/core/src/lib/gt-delta/gt-delta.component.ts"),__webpack_require__("./projects/core/src/lib/pagination/pagination.component.ts");var utilities=__webpack_require__("./projects/core/src/lib/utilities/utilities.ts"),BehaviorSubject=(__webpack_require__("./projects/core/src/lib/pipes/capital-case.pipe.ts"),__webpack_require__("./projects/core/src/lib/pipes/dash-case.pipe.ts"),__webpack_require__("./projects/core/src/lib/pipes/dynamic.pipe.ts"),__webpack_require__("./projects/core/src/lib/pipes/highlight.pipe.ts"),__webpack_require__("./projects/core/src/lib/pipes/sort-class.pipe.ts"),__webpack_require__("./node_modules/rxjs/_esm2015/internal/BehaviorSubject.js")),ReplaySubject=__webpack_require__("./node_modules/rxjs/_esm2015/internal/ReplaySubject.js"),shareReplay=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/shareReplay.js"),tap=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/tap.js"),switchMap=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/switchMap.js"),pluck=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/pluck.js");const LAZY_LOADING_DOCS=[{name:"server-side-pagination.component.html",code:'<form [formGroup]="paginationForm">\n  <div class="row gy-3">\n    <div class="form-group col-12 col-sm-auto">\n      <label for="search_input">Search</label>\n      <input\n        id="search_input"\n        formControlName="search"\n        type="text"\n        class="form-control"\n      />\n    </div>\n  </div>\n</form>\n<div class="mx-n3 mx-sm-0 my-3 overflow-auto">\n  <angular-generic-table\n    [data]="data$"\n    [config]="tableConfig$"\n    [search]="search$"\n    [loading]="loading$"\n    [pagingInfo]="paging$ | async"\n    (pageChange)="onPageChange($event)"\n    (columnSort)="onSortOrderChange($event)"\n    [sortOrder]="sorting$ | async"\n    #table\n  >\n    <div\n      class="table-loading gt-skeleton-loader"\n      [style.--gt-skeleton-height]="\n        ((table.table$ | async)?.info?.pageSize ?? 0) * 41 - 11 + \'px\'\n      "\n    ></div>\n    <div class="table-no-data alert alert-info mt-3">Table is empty</div>\n  </angular-generic-table>\n</div>\n<angular-generic-table-pagination [table]="table">\n</angular-generic-table-pagination>',language:"xml"},{name:"server-side-pagination.component.ts",code:"import {\n  ChangeDetectionStrategy,\n  Component,\n  OnInit,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { DatePipe, formatDate } from '@angular/common';\nimport {\n  GtPageChangeEvent,\n  GtSortEvent,\n  GtSortOrder,\n  TableConfig,\n  GtPaginationInfo,\n  sortOrderToParams\n} from '@angular-generic-table/core';\nimport { FormBuilder } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\nimport { pluck, shareReplay, switchMap, tap } from 'rxjs/operators';\n\ninterface LazyLoadingData {\n  birthday: string;\n  email: string;\n  favorite_color: string;\n  first_name: string;\n  gender: string;\n  id: number;\n  last_name: string;\n}\n\ninterface LazyLoadingResponse {\n  data: Array<LazyLoadingData>;\n  paging: GtPaginationInfo;\n  sorting: GtSortOrder<LazyLoadingData>;\n  filters: [\n    {\n      [Property in keyof LazyLoadingResponse]: { [key: string]: any };\n    }\n  ];\n  request: any;\n  error: any;\n}\n\n@Component({\n  templateUrl: './server-side-pagination.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ServerSidePaginationComponent implements OnInit {\n  constructor(private fb: FormBuilder, private http: HttpClient) {}\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n\n paginationForm = this.fb.group({\n    search: ['']\n  });\n requestParams$ = new BehaviorSubject({\n    page: 1,\n    page_size: 10,\n    sort_by: '+id',\n });\n search$ = this.paginationForm.controls.search.valueChanges.pipe(\n    shareReplay(1)\n );\n loading$ = new BehaviorSubject(true);\n\n request$ = this.requestParams$.pipe(\n    tap((_) => this.loading$.next(true)), // show loading indicator whenever requests are changed (remove to disable loading indicator)\n    switchMap((params) =>\n      this.http.get<LazyLoadingResponse>(\n        'https://private-a6da3-generictableapi.apiary-mock.com/data',\n        {\n          params,\n        }\n      )\n    ),\n    tap((_) => this.loading$.next(false)), // hide loading indicator\n    shareReplay(1)\n );\n\n data$: Observable<Array<LazyLoadingData>> = this.request$.pipe(\n    pluck('data'),\n    shareReplay(1)\n );\n\n paging$: Observable<GtPaginationInfo> = this.request$.pipe(\n    pluck('paging'),\n    shareReplay(1)\n );\n\n sorting$ = this.request$.pipe(\n    pluck('sorting'),\n    shareReplay(1)\n );\n\n onPageChange(event: GtPageChangeEvent): void {\n    const current = { ...this.requestParams$.value };\n    if (current.page != event.index + 1) {\n      this.requestParams$.next({\n        ...current,\n        page: event.index + 1,\n      });\n    }\n  }\n\n onSortOrderChange(event: GtSortEvent): void {\n   let sort_by = sortOrderToParams([...event.currentSortOrder]);\n   const current = { ...this.requestParams$.value };\n   if (current.sort_by !== sort_by) {\n     this.requestParams$.next({\n       ...current,\n       page: 1, // reset page to 1 when sorting changes\n       sort_by,\n     });\n   }\n }\n\n tableConfig$: ReplaySubject<TableConfig<LazyLoadingData>> = new ReplaySubject(\n   1\n );\n\n ngOnInit(): void {\n   this.tableConfig$.next({\n      class: 'table text-nowrap',\n      columns: {\n        id: {\n          sortable: true,\n        },\n        first_name: {},\n        last_name: {\n          sortable: true,\n        },\n        gender: {\n          sortable: true,\n        },\n        birthday: {\n          class: 'text-end justify-content-end',\n          search: (row, column) => formatDate(row[column], 'longDate', 'en'),\n          transform: {\n            pipe: DatePipe,\n            args: ['longDate'],\n          },\n        },\n        favorite_color: {\n          hidden: true,\n        },\n        email: {\n          hidden: true,\n        },\n      },\n      pagination: {\n        length: 10,\n      },\n    });\n  }\n}\n",language:"typescript"},{name:"app.module.ts",code:"import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { ServerSidePaginationComponent } from './server-side-pagination.component';\nimport { GenericTableCoreModule, GenericTablePaginationModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [ServerSidePaginationComponent],\n  imports: [\n    BrowserModule,\n    GenericTableCoreModule,\n    GenericTablePaginationModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  bootstrap: [ServerSidePaginationComponent]\n})\nexport class AppModule {}",language:"typescript"}];var server_side_pagination_component_class;let ServerSidePaginationComponent=(server_side_pagination_component_class=class ServerSidePaginationComponent{constructor(fb,http){this.fb=fb,this.http=http,this.paginationForm=this.fb.group({search:[""]}),this.requestParams$=new BehaviorSubject.X({page:1,page_size:10,sort_by:"+id"}),this.search$=this.paginationForm.controls.search.valueChanges.pipe((0,shareReplay.d)(1)),this.loading$=new BehaviorSubject.X(!0),this.request$=this.requestParams$.pipe((0,tap.b)((_=>this.loading$.next(!0))),(0,switchMap.w)((params=>this.http.get("https://private-a6da3-generictableapi.apiary-mock.com/data",{params}))),(0,tap.b)((_=>this.loading$.next(!1))),(0,shareReplay.d)(1)),this.data$=this.request$.pipe((0,pluck.j)("data"),(0,shareReplay.d)(1)),this.paging$=this.request$.pipe((0,pluck.j)("paging"),(0,shareReplay.d)(1)),this.sorting$=this.request$.pipe((0,pluck.j)("sorting"),(0,shareReplay.d)(1)),this.tableConfig$=new ReplaySubject.t(1),this.SNIPPETS=LAZY_LOADING_DOCS}onPageChange(event){const current={...this.requestParams$.value};current.page!=event.index+1&&this.requestParams$.next({...current,page:event.index+1})}onSortOrderChange(event){let sort_by=(0,utilities.r$)([...event.currentSortOrder]);const current={...this.requestParams$.value};current.sort_by!==sort_by&&this.requestParams$.next({...current,page:1,sort_by})}ngOnInit(){this.tableConfig$.next({class:"table text-nowrap",columns:{id:{sortable:!0},first_name:{},last_name:{sortable:!0},gender:{sortable:!0},birthday:{class:"text-end justify-content-end",search:(row,column)=>(0,common.p6)(row[column],"longDate","en"),transform:{pipe:common.uU,args:["longDate"]}},favorite_color:{hidden:!0},email:{hidden:!0}},pagination:{length:10}})}},server_side_pagination_component_class.ctorParameters=()=>[{type:fesm2020_forms.FormBuilder},{type:http.eN}],server_side_pagination_component_class.propDecorators={actions:[{type:core.ViewChild,args:["actions",{static:!0}]}],color:[{type:core.ViewChild,args:["color",{static:!0}]}]},server_side_pagination_component_class);ServerSidePaginationComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"docs-lazy-loading",template:'<form [formGroup]="paginationForm">\n  <div class="row gy-3">\n    <div class="form-group col-12 col-sm-auto">\n      <label for="search_input">Search</label>\n      <input\n        id="search_input"\n        formControlName="search"\n        type="text"\n        class="form-control"\n      />\n    </div>\n  </div>\n</form>\n<div class="mx-n3 mx-sm-0 my-3 overflow-auto">\n  <angular-generic-table\n    [data]="data$"\n    [config]="tableConfig$"\n    [search]="search$"\n    [loading]="loading$"\n    [pagingInfo]="paging$ | async"\n    (pageChange)="onPageChange($event)"\n    (columnSort)="onSortOrderChange($event)"\n    [sortOrder]="sorting$ | async"\n    #table\n  >\n    <div\n      class="table-loading gt-skeleton-loader"\n      [style.--gt-skeleton-height]="\n        ((table.table$ | async)?.info?.pageSize ?? 0) * 41 - 11 + \'px\'\n      "\n    ></div>\n    <div class="table-no-data alert alert-info mt-3">Table is empty</div>\n  </angular-generic-table>\n</div>\n<angular-generic-table-pagination [table]="table">\n</angular-generic-table-pagination>\n<docs-tabs [content]="SNIPPETS"></docs-tabs>\n',changeDetection:core.ChangeDetectionStrategy.OnPush})],ServerSidePaginationComponent);const ServerSidePagination=args=>({props:args,component:ServerSidePaginationComponent});var _excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Preview=function makeShortcode(name){return function MDXDefaultShortcode(props){return console.warn("Component "+name+" was not imported, exported, or provided by MDXProvider as global scope"),(0,esm.kt)("div",props)}}("Preview"),layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Examples/Pagination",decorators:[(0,client.moduleMetadata)({declarations:[ServerSidePaginationComponent,tabs_component.n],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],mdxType:"Meta"}),(0,esm.kt)("h1",{id:"server-side-example"},"Server side example"),(0,esm.kt)("p",null,"The example below shows a setup where pagination is handled server-side, i.e data for each page is returned by backend."),(0,esm.kt)(Preview,{mdxSource:"%0A%3Cdiv%20className=%7B'alert%20alert-info'%7D%3E%0A%20%20%20%20%3Cstrong%3EMocked%20backend%3C/strong%3E%0A%20%20%20%20%3Cp%3EThe%20backend%20used%20in%20this%20example%20uses%20static%20data%20and%20not%20all%20methods%20and%20options%20have%20been%20implemented.%20For%20example,%20data%20is%20not%20correct%20for%20all%20pages%20and%20it's%20not%20possible%20to%20sort%20on%20all%20properties%20or%20use%20search%20as%20it's%20just%20meant%20to%20showcase%20how%20things%20can%20be%20implemented.%20You%20can%20view%20the%20network%20tab%20in%20your%20browser%20to%20see%20what%20requests%20are%20made%20and%20the%20response%20they%20return.%20The%20blueprint%20and%20docs%20for%20the%20API%20is%20also%20available%20%3Ca%20href=%7B'https://generictableapi.docs.apiary.io/'%7D%20target=%7B'_blank'%7D%3Ehere%3C/a%3E.%3C/p%3E%0A%20%20%20%20%3Cp%3E%3Cstrong%3ESome%20things%20that%20do%20work%20that%20you%20can%20try:%3C/strong%3E%0A%20%20%20%20%3Cul%20className=%7B'mt-3'%7D%3E%0A%20%20%20%20%20%20%3Cli%20className=%7B'text-reset'%7D%3ESort%20ascending/descending%20on%20%3Cstrong%3EId%3C/strong%3E%20(only%20first%20page%20is%20correct%20when%20sort%20is%20descending)%3C/li%3E%0A%20%20%20%20%20%20%3Cli%20className=%7B'text-reset'%7D%3ESort%20ascending%20on%20%3Cstrong%3ELast%20name%3C/strong%3E%20(only%20first%20page%20is%20correct)%3C/li%3E%0A%20%20%20%20%20%20%3Cli%20className=%7B'text-reset'%7D%3ESort%20ascending%20on%20%3Cstrong%3ELast%20name%3C/strong%3E%20followed%20by%20%3Cstrong%3EGender%3C/strong%3E%20(hold%20shift%20key%20to%20sort%20on%20second%20property,%20only%20first%20page%20is%20correct)%3C/li%3E%0A%20%20%20%20%3C/ul%3E%0A%20%20%20%20%3C/p%3E%0A%20%20%3C/div%3E%0A",mdxType:"Preview"},(0,esm.kt)("div",{className:"alert alert-info"},(0,esm.kt)("strong",null,"Mocked backend"),(0,esm.kt)("p",null,"The backend used in this example uses static data and not all methods and options have been implemented. For example, data is not correct for all pages and it's not possible to sort on all properties or use search as it's just meant to showcase how things can be implemented. You can view the network tab in your browser to see what requests are made and the response they return. The blueprint and docs for the API is also available ",(0,esm.kt)("a",{href:"https://generictableapi.docs.apiary.io/",target:"_blank"},"here"),"."),(0,esm.kt)("p",null,(0,esm.kt)("strong",null,"Some things that do work that you can try:"),(0,esm.kt)("ul",{className:"mt-3"},(0,esm.kt)("li",{className:"text-reset"},"Sort ascending/descending on ",(0,esm.kt)("strong",null,"Id")," (only first page is correct when sort is descending)"),(0,esm.kt)("li",{className:"text-reset"},"Sort ascending on ",(0,esm.kt)("strong",null,"Last name")," (only first page is correct)"),(0,esm.kt)("li",{className:"text-reset"},"Sort ascending on ",(0,esm.kt)("strong",null,"Last name")," followed by ",(0,esm.kt)("strong",null,"Gender")," (hold shift key to sort on second property, only first page is correct)"))))),(0,esm.kt)("h3",{id:"example"},"Example"),(0,esm.kt)(dist_esm.oG,{name:"Server-side",mdxType:"Story"},ServerSidePagination.bind({})))}MDXContent.isMDXComponent=!0;var serverSide=ServerSidePagination.bind({});serverSide.storyName="Server-side",serverSide.parameters={storySource:{source:"ServerSidePagination.bind({})"}};var componentMeta={title:"Examples/Pagination",decorators:[(0,client.moduleMetadata)({declarations:[ServerSidePaginationComponent,tabs_component.n],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],includeStories:["serverSide"]},mdxStoryNameToKey={"Server-side":"serverSide"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))}});const Server_side_pagination_stories=componentMeta;var __namedExportsOrder=["serverSide"]},"./projects/docs/src/stories/examples/Row-events.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>Row_events_stories,rowClickActiveState:()=>rowClickActiveState});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/fesm2020/platform-browser.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),core_module=__webpack_require__("./projects/core/src/lib/core.module.ts"),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),tabs_component=__webpack_require__("./projects/docs/src/app/components/tabs/tabs.component.ts"),http=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),pagination_module=__webpack_require__("./projects/core/src/lib/pagination/pagination.module.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),row_hover_click_component=__webpack_require__("./projects/docs/src/app/examples/row-hover-click/row-hover-click.component.ts.css?ngResource!=!./node_modules/@ngtools/webpack/src/loaders/inline-resource.js?data=CiAgICAgIDpob3N0IDo6bmctZGVlcCAuZ3QtYWN0aXZlIHsKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1icy1oaWdobGlnaHQtYmcpOwogICAgICB9CiAgICA%3D!./projects/docs/src/app/examples/row-hover-click/row-hover-click.component.ts"),row_hover_click_component_default=__webpack_require__.n(row_hover_click_component),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");const ROW_HOVER_CLICK_SNIPPETS=[{name:"row-hover-click.component.ts",code:"import { Component } from '@angular/core';\nimport { GtRowClickEvent, GtRowHoverEvent } from '@angular-generic-table/core';\n\n\n@Component({\n  selector: 'row-hover-click-table',\n  template: '<div class=\"overflow-auto\">\n      <button class=\"btn btn-outline-primary me-3\" (click)=\"tableRef.hoverRow(1)\">\n        Mark second row as active\n      </button>\n      <button class=\"btn btn-outline-primary\" (click)=\"tableRef.hoverRow(null)\">\n        Remove active state\n      </button>\n      <angular-generic-table\n        [data]=\"data\"\n        [config]=\"config\"\n        (rowClick)=\"onRowClick($event)\"\n        (rowActive)=\"onRowHover($event)\"\n        #tableRef\n      ></angular-generic-table>\n      {{ clicked }}\n    </div>',\n  styles: [\n    `\n      :host ::ng-deep .gt-active {\n        background-color: var(--bs-highlight-bg);\n      }\n    `,\n  ],\n})\nexport class RowHoverClickComponent {\n  clicked = '';\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config = {\n    columns: {\n      firstName: {},\n      lastName: {},\n      gender: {},\n      favoriteFood: {},\n    },\n    rowClick: true,\n    activateRowOnHover: true,\n  };\n\n  onRowClick(event: GtRowClickEvent) {\n    console.log('row clicked', event);\n    this.clicked = `clicked row number: ${event.index}`;\n  }\n  onRowHover(event: GtRowHoverEvent) {\n    console.log('row hovered', event);\n  }\n",language:"typescript"},{name:"app.module.ts",code:"import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { RowHoverClickTableComponent } from './events-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [RowHoverClickTableComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [RowHoverClickTableComponent]\n})\nexport class AppModule {}",language:"typescript"}];let RowHoverClickComponent=class RowHoverClickComponent{constructor(){this.clicked="",this.data=[{firstName:"Peter",lastName:"Parker",gender:"male",favoriteFood:"Pasta"},{firstName:"Mary Jane",lastName:"Watson",gender:"female",favoriteFood:"Pizza"}],this.config={columns:{firstName:{},lastName:{},gender:{},favoriteFood:{}},rowClick:!0,activateRowOnHover:!0},this.SNIPPETS=ROW_HOVER_CLICK_SNIPPETS}onRowClick(event){console.log("row clicked",event),this.clicked=`clicked row number: ${event.index}`}onRowHover(event){console.log("row hovered",event)}};RowHoverClickComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"docs-row-hover-click",template:'\n    <div class="overflow-auto">\n      <button\n        class="btn btn-outline-primary me-3"\n        (click)="tableRef.activateRow(1)"\n      >\n        Mark second row as active\n      </button>\n      <button\n        class="btn btn-outline-primary"\n        (click)="tableRef.activateRow(null)"\n      >\n        Remove active state\n      </button>\n      <angular-generic-table\n        [data]="data"\n        [config]="config"\n        (rowClick)="onRowClick($event)"\n        (rowActive)="onRowHover($event)"\n        #tableRef\n      ></angular-generic-table>\n    </div>\n    {{ clicked }}\n    <docs-tabs [content]="SNIPPETS"></docs-tabs>\n  ',styles:[row_hover_click_component_default()]})],RowHoverClickComponent);const RowHoverClick=args=>({props:args,component:RowHoverClickComponent});var _excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Examples/Row click & active state",decorators:[(0,client.moduleMetadata)({declarations:[tabs_component.n,RowHoverClickComponent],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],mdxType:"Meta"}),(0,esm.kt)("h1",{id:"row-click-and-active-state"},"Row click and active state"),(0,esm.kt)("p",null,"Set ",(0,esm.kt)("inlineCode",{parentName:"p"},"rowClick")," and ",(0,esm.kt)("inlineCode",{parentName:"p"},"activateRowOnHover")," to ",(0,esm.kt)("inlineCode",{parentName:"p"},"true")," in ",(0,esm.kt)("inlineCode",{parentName:"p"},"config")," to enable row click and row active events which can be used to trigger actions when rows are clicked or activated on hover (mouseenter/leave). These events are emitted and declared using ",(0,esm.kt)("inlineCode",{parentName:"p"},"@Output rowClick")," and ",(0,esm.kt)("inlineCode",{parentName:"p"},"@Output() rowActive"),". It's also possible to toggle active state on a row using ",(0,esm.kt)("inlineCode",{parentName:"p"},"activateRow")," method on the table component (currently it takes a row index as argument), pass null to remove active state. The later might come in handy when you want to highlight something in the table based on an external source like a chart etc. Note that you should use css if you're only interested in styling the row on row hover, no need to listen to events or set active state to do that."),(0,esm.kt)("h3",{id:"example"},"Example"),(0,esm.kt)(dist_esm.oG,{name:"Row click & active state",mdxType:"Story"},RowHoverClick.bind({})))}MDXContent.isMDXComponent=!0;var rowClickActiveState=RowHoverClick.bind({});rowClickActiveState.storyName="Row click & active state",rowClickActiveState.parameters={storySource:{source:"RowHoverClick.bind({})"}};var componentMeta={title:"Examples/Row click & active state",decorators:[(0,client.moduleMetadata)({declarations:[tabs_component.n,RowHoverClickComponent],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],includeStories:["rowClickActiveState"]},mdxStoryNameToKey={"Row click & active state":"rowClickActiveState"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))}});const Row_events_stories=componentMeta;var __namedExportsOrder=["rowClickActiveState"]},"./projects/docs/src/stories/examples/Row-selection.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>Row_selection_stories,rowSelection:()=>rowSelection});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/fesm2020/platform-browser.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),core_module=__webpack_require__("./projects/core/src/lib/core.module.ts"),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),tabs_component=__webpack_require__("./projects/docs/src/app/components/tabs/tabs.component.ts"),http=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),pagination_module=__webpack_require__("./projects/core/src/lib/pagination/pagination.module.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var row_select_component=__webpack_require__("./projects/docs/src/app/examples/row-select/row-select.component.ts.css?ngResource!=!./node_modules/@ngtools/webpack/src/loaders/inline-resource.js?data=CiAgICAgIDpob3N0IDo6bmctZGVlcCAuZ3QtYWN0aXZlIHsKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1icy1oaWdobGlnaHQtYmcpOwogICAgICB9CiAgICAgIDpob3N0IDo6bmctZGVlcCAudGFibGUgPiB0Ym9keSA%2BIHRyIHsKICAgICAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICAgIH0KICAgIA%3D%3D!./projects/docs/src/app/examples/row-select/row-select.component.ts"),row_select_component_default=__webpack_require__.n(row_select_component),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),BehaviorSubject=__webpack_require__("./node_modules/rxjs/_esm2015/internal/BehaviorSubject.js"),Subject=__webpack_require__("./node_modules/rxjs/_esm2015/internal/Subject.js"),combineLatest=__webpack_require__("./node_modules/rxjs/_esm2015/internal/observable/combineLatest.js"),pluck=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/pluck.js"),tap=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/tap.js"),takeUntil=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/takeUntil.js"),shareReplay=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/shareReplay.js"),startWith=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/startWith.js"),map=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/map.js"),take=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/take.js");const ROW_SELECT_SNIPPETS=[{name:"row-select.component.ts",code:"import { ChangeDetectionStrategy, Component, OnDestroy } from '@angular/core';\nimport {\n  GtRowSelectEvent,\n  GtRowClickEvent,\n  TableRow,\n  GtRowActiveEvent,\n} from '@angular-generic-table/core';\nimport { BehaviorSubject, combineLatest, Observable, Subject } from 'rxjs';\nimport {\n  map,\n  pluck,\n  shareReplay,\n  startWith,\n  take,\n  takeUntil,\n  tap,\n} from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { FormControl } from '@angular/forms';\ninterface RowData {\n  birthday: string;\n  email: string;\n  favorite_color: string;\n  first_name: string;\n  gender: 'Female' | 'Male';\n  id: number;\n  last_name: string;\n}\n@Component({\n  templateUrl: './row-select.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [\n    `\n      :host ::ng-deep .gt-active {\n        background-color: var(--bs-highlight-bg);\n      }\n      :host ::ng-deep .table > tbody > tr {\n        cursor: pointer;\n      }\n    `,\n  ],\n})\nexport class RowSelectComponent implements OnDestroy {\n  constructor(private http: HttpClient) {}\n\n  get activateOnRowHover$(): Observable<boolean> {\n    return this._activateOnRowHover$.asObservable();\n  }\n  get activateOnRowHover(): boolean {\n    return this._activateOnRowHover$.getValue();\n  }\n  toggleRowHover() {\n    this._activateOnRowHover$.next(!this.activateOnRowHover);\n  }\n  private _activateOnRowHover$ = new BehaviorSubject<boolean>(true);\n\n  get activateOnNavigation$(): Observable<boolean> {\n    return this._activateOnNavigation$.asObservable();\n  }\n  get activateOnNavigation(): boolean {\n    return this._activateOnNavigation$.getValue();\n  }\n  toggleRowNavigation() {\n    this._activateOnNavigation$.next(!this.activateOnNavigation);\n  }\n  private _activateOnNavigation$ = new BehaviorSubject<boolean>(true);\n\n  private unsubscribe$ = new Subject();\n  loading$ = new BehaviorSubject<boolean>(true);\n  customClassNames = {\n    selectedRow: 'table-active',\n  };\n  lengthCtrl = new FormControl(15);\n  data$ = this.http\n    .get<{ data: TableRow[] }>(\n      'https://private-730c61-generictable.apiary-mock.com/data'\n    )\n    .pipe(\n      pluck('data'),\n      tap((_) => this.loading$.next(false)),\n      takeUntil(this.unsubscribe$),\n      shareReplay(1)\n    );\n  config$ = combineLatest([\n    this.lengthCtrl.valueChanges.pipe(\n      startWith(this.lengthCtrl.value),\n      map((length) =>\n        length ? { pagination: { length: length < 0 ? 0 : length } } : {}\n      )\n    ),\n    this.activateOnRowHover$,\n    this.activateOnNavigation$,\n  ]).pipe(\n    map(\n      ([pagination, activateRowOnHover, activateRowOnKeyboardNavigation]) => ({\n        columns: {\n          id: {\n            sortable: true,\n          },\n          first_name: {\n            sortable: true,\n          },\n          last_name: {\n            sortable: true,\n          },\n          gender: {\n            sortable: true,\n          },\n          email: {\n            sortable: true,\n          },\n        },\n        ...pagination,\n        rowClick: true,\n        activateRowOnHover,\n        activateRowOnKeyboardNavigation,\n        rowSelect: true,\n      })\n    )\n  );\n\n  setActiveRow(event: GtRowActiveEvent) {\n    console.log(event);\n    if (event.event && event.event.type === 'keydown') {\n      // stop the event from propagating, otherwise the page will scroll\n      event.event.preventDefault();\n    }\n    this._activeRow$.next(<RowData | null>event.row);\n  }\n  get activeRow$() {\n    return this._activeRow$.asObservable();\n  }\n  private _activeRow$ = new BehaviorSubject<RowData | null>(null);\n  isSelected(row: RowData, selection: typeof this.selection) {\n    return selection[row.id];\n  }\n\n  selection: { [key: string]: boolean } = {};\n\n  selectRow(event: GtRowClickEvent | GtRowSelectEvent) {\n    const selection = { ...this.selection };\n    const row = event.row;\n    if (!row) return;\n    if (!selection[row.id]) {\n      selection[row.id] = true;\n    } else {\n      delete selection[row.id];\n    }\n    // update the selection\n    this.selection = selection;\n  }\n\n  get isAllSelected() {\n    return Object.keys(this.selection).length > 0;\n  }\n  toggleAll() {\n    if (this.isAllSelected) {\n      this.selection = {};\n      return;\n    }\n    const selection = { ...this.selection };\n    this.data$.pipe(take(1), takeUntil(this.unsubscribe$)).subscribe((data) => {\n      data.forEach((row, index) => {\n        selection[index] = true;\n      });\n    });\n    this.selection = selection;\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n};\n",language:"typescript"},{name:"row-select.component.html",code:'<div class="row gy-3 gy-sm-0 gx-2 align-items-center">\n  <div class="col-12 col-sm-auto">\n    <button\n      class="btn w-100"\n      (click)="toggleRowHover()"\n      [class.btn-outline-primary]="!activateOnRowHover"\n      [class.btn-primary]="activateOnRowHover"\n    >\n      {{ activateOnRowHover ? "Disable on hover" : "Enable on hover" }}\n    </button>\n  </div>\n  <div class="col-12 col-sm-auto">\n    <button\n      class="btn w-100"\n      (click)="toggleRowNavigation()"\n      [class.btn-outline-primary]="!activateOnNavigation"\n      [class.btn-primary]="activateOnNavigation"\n    >\n      {{\n        activateOnNavigation\n          ? "Disable on keyboard navigation"\n          : "Enable on keyboard navigation"\n      }}\n    </button>\n  </div>\n  <div class="col-12 col-sm-auto">\n    <button\n      class="btn w-100"\n      [class.btn-outline-primary]="!isAllSelected"\n      [class.btn-primary]="isAllSelected"\n      (click)="toggleAll()"\n    >\n      {{ isAllSelected ? "Deselect all" : "Select all" }}\n    </button>\n  </div>\n</div>\n<div class="row gy-3 gy-sm-0 gx-2 align-items-center mt-3">\n  <div class="form-group col-12 col-sm-auto d-flex align-items-center">\n    <label for="length_input" class="text-nowrap me-2">Number of rows:</label>\n    <input\n      id="length_input"\n      [formControl]="lengthCtrl"\n      type="number"\n      class="form-control"\n      style="max-width: 60px"\n    />\n  </div>\n  <div class="col-12 col-sm-auto">\n    Selected rows: {{ (selection | keyvalue).length }}\n  </div>\n  <div class="col-12 col-sm-auto">\n    Active row id: {{ (activeRow$ | async)?.id ?? "none" }}\n  </div>\n</div>\n<div class="mx-n3 mx-sm-0 my-3 overflow-auto">\n  <angular-generic-table\n    [data]="data$"\n    [config]="config$"\n    [loading]="loading$"\n    [isRowSelectedFn]="isSelected"\n    [customClasses]="customClassNames"\n    (rowClick)="selectRow($event)"\n    (rowActive)="setActiveRow($event)"\n    (rowSelect)="selectRow($event)"\n    [selection]="selection"\n    #tableRef\n  >\n    <div class="table-loading gt-skeleton-loader"></div>\n    <div class="table-no-data alert alert-info mt-3">Table is empty</div>\n  </angular-generic-table>\n  <angular-generic-table-pagination [table]="tableRef">\n  </angular-generic-table-pagination>\n</div>',language:"xml"},{name:"app.module.ts",code:"import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { RowSelectComponent } from './row-select.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [RowSelectComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [RowSelectComponent]\n})\nexport class AppModule {}",language:"typescript"}];var _class;let RowSelectComponent=(_class=class RowSelectComponent{constructor(http){this.http=http,this._activateOnRowHover$=new BehaviorSubject.X(!0),this._activateOnNavigation$=new BehaviorSubject.X(!0),this.unsubscribe$=new Subject.xQ,this.loading$=new BehaviorSubject.X(!0),this.customClassNames={selectedRow:"table-active"},this.lengthCtrl=new fesm2020_forms.FormControl(15),this.data$=this.http.get("https://private-730c61-generictable.apiary-mock.com/data").pipe((0,pluck.j)("data"),(0,tap.b)((_=>this.loading$.next(!1))),(0,takeUntil.R)(this.unsubscribe$),(0,shareReplay.d)(1)),this.config$=(0,combineLatest.aj)([this.lengthCtrl.valueChanges.pipe((0,startWith.O)(this.lengthCtrl.value),(0,map.U)((length=>length?{pagination:{length:length<0?0:length}}:{}))),this.activateOnRowHover$,this.activateOnNavigation$]).pipe((0,map.U)((([pagination,activateRowOnHover,activateRowOnKeyboardNavigation])=>({columns:{id:{sortable:!0},first_name:{sortable:!0},last_name:{sortable:!0},gender:{sortable:!0},email:{sortable:!0}},...pagination,rowClick:!0,activateRowOnHover,activateRowOnKeyboardNavigation,rowSelect:!0})))),this._activeRow$=new BehaviorSubject.X(null),this.selection={},this.SNIPPETS=ROW_SELECT_SNIPPETS}get activateOnRowHover$(){return this._activateOnRowHover$.asObservable()}get activateOnRowHover(){return this._activateOnRowHover$.getValue()}toggleRowHover(){this._activateOnRowHover$.next(!this.activateOnRowHover)}get activateOnNavigation$(){return this._activateOnNavigation$.asObservable()}get activateOnNavigation(){return this._activateOnNavigation$.getValue()}toggleRowNavigation(){this._activateOnNavigation$.next(!this.activateOnNavigation)}setActiveRow(event){console.log(event),event.event&&"keydown"===event.event.type&&event.event.preventDefault(),this._activeRow$.next(event.row)}get activeRow$(){return this._activeRow$.asObservable()}isSelected(row,selection){return selection[row.id]}selectRow(event){const selection={...this.selection},row=event.row;row&&(selection[row.id]?delete selection[row.id]:selection[row.id]=!0,this.selection=selection)}get isAllSelected(){return Object.keys(this.selection).length>0}toggleAll(){if(this.isAllSelected)return void(this.selection={});const selection={...this.selection};this.data$.pipe((0,take.q)(1),(0,takeUntil.R)(this.unsubscribe$)).subscribe((data=>{data.forEach(((row,index)=>{selection[index]=!0}))})),this.selection=selection}ngOnDestroy(){this.unsubscribe$.next(),this.unsubscribe$.complete()}},_class.ctorParameters=()=>[{type:http.eN}],_class);RowSelectComponent=(0,tslib_es6.gn)([(0,core.Component)({template:'<div class="row gy-3 gy-sm-0 gx-2 align-items-center">\n  <div class="col-12 col-sm-auto">\n    <button\n      class="btn w-100"\n      (click)="toggleRowHover()"\n      [class.btn-outline-primary]="!activateOnRowHover"\n      [class.btn-primary]="activateOnRowHover"\n    >\n      {{ activateOnRowHover ? "Disable on hover" : "Enable on hover" }}\n    </button>\n  </div>\n  <div class="col-12 col-sm-auto">\n    <button\n      class="btn w-100"\n      (click)="toggleRowNavigation()"\n      [class.btn-outline-primary]="!activateOnNavigation"\n      [class.btn-primary]="activateOnNavigation"\n    >\n      {{\n        activateOnNavigation\n          ? "Disable on keyboard navigation"\n          : "Enable on keyboard navigation"\n      }}\n    </button>\n  </div>\n  <div class="col-12 col-sm-auto">\n    <button\n      class="btn w-100"\n      [class.btn-outline-primary]="!isAllSelected"\n      [class.btn-primary]="isAllSelected"\n      (click)="toggleAll()"\n    >\n      {{ isAllSelected ? "Deselect all" : "Select all" }}\n    </button>\n  </div>\n</div>\n<div class="row gy-3 gy-sm-0 gx-2 align-items-center mt-3">\n  <div class="form-group col-12 col-sm-auto d-flex align-items-center">\n    <label for="length_input" class="text-nowrap me-2">Number of rows:</label>\n    <input\n      id="length_input"\n      [formControl]="lengthCtrl"\n      type="number"\n      class="form-control"\n      style="max-width: 60px"\n    />\n  </div>\n  <div class="col-12 col-sm-auto">\n    Selected rows: {{ (selection | keyvalue).length }}\n  </div>\n  <div class="col-12 col-sm-auto">\n    Active row id: {{ (activeRow$ | async)?.id ?? "none" }}\n  </div>\n</div>\n<div class="mx-n3 mx-sm-0 my-3 overflow-auto">\n  <angular-generic-table\n    [data]="data$"\n    [config]="config$"\n    [loading]="loading$"\n    [isRowSelectedFn]="isSelected"\n    [customClasses]="customClassNames"\n    (rowClick)="selectRow($event)"\n    (rowActive)="setActiveRow($event)"\n    (rowSelect)="selectRow($event)"\n    [selection]="selection"\n    #tableRef\n  >\n    <div class="table-loading gt-skeleton-loader"></div>\n    <div class="table-no-data alert alert-info mt-3">Table is empty</div>\n  </angular-generic-table>\n  <angular-generic-table-pagination [table]="tableRef">\n  </angular-generic-table-pagination>\n</div>\n<docs-tabs [content]="SNIPPETS"></docs-tabs>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[row_select_component_default()]})],RowSelectComponent);const RowSelect=args=>({props:args,component:RowSelectComponent});var _excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Examples/Row selection",decorators:[(0,client.moduleMetadata)({declarations:[tabs_component.n,RowSelectComponent],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],mdxType:"Meta"}),(0,esm.kt)("h1",{id:"row-selection"},"Row selection"),(0,esm.kt)("h5",{id:"determining-if-row-is-selected-or-not"},"Determining if row is selected or not"),(0,esm.kt)("p",null,"Pass a function using ",(0,esm.kt)("inlineCode",{parentName:"p"},"isRowSelectedFn")," input to determine if row is selected or not, e.g. ",(0,esm.kt)("inlineCode",{parentName:"p"},"isRowSelectedFn: (row: any) => boolean = (row) => row.selected;")," if row data contains information about selected state or ",(0,esm.kt)("inlineCode",{parentName:"p"},"isRowSelectedFn: (row: any, selection: any) => boolean = (row) => selection[row.id]")," if state is not known by row but stored separately. The active selection can be passed to the table using ",(0,esm.kt)("inlineCode",{parentName:"p"},"selection")," input. It's also possible to listen to row select events using ",(0,esm.kt)("inlineCode",{parentName:"p"},"rowSelect")," output."),(0,esm.kt)("h5",{id:"keyboard-navigation-and-row-selection"},"Keyboard navigation and row selection"),(0,esm.kt)("p",null,"The example below shows one of multiple ways to implement row selection. It also shows how setting config options ",(0,esm.kt)("inlineCode",{parentName:"p"},"activateRowOnHover")," and ",(0,esm.kt)("inlineCode",{parentName:"p"},"activateRowOnKeyboardNavigation")," to true allows users to activate rows by hovering rows or using keyboard navigation (arrow keys and home and end) while table has focus. While navigating with a keyboard, rows can be selected using selection keys that can be passed using ",(0,esm.kt)("inlineCode",{parentName:"p"},"selectKeys")," input (defaults to ",(0,esm.kt)("inlineCode",{parentName:"p"},"['Enter', ' ']"),"). In the example below it's also possible to select rows by clicking them."),(0,esm.kt)("h3",{id:"example"},"Example"),(0,esm.kt)(dist_esm.oG,{name:"Row selection",mdxType:"Story"},RowSelect.bind({})))}MDXContent.isMDXComponent=!0;var rowSelection=RowSelect.bind({});rowSelection.storyName="Row selection",rowSelection.parameters={storySource:{source:"RowSelect.bind({})"}};var componentMeta={title:"Examples/Row selection",decorators:[(0,client.moduleMetadata)({declarations:[tabs_component.n,RowSelectComponent],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],includeStories:["rowSelection"]},mdxStoryNameToKey={"Row selection":"rowSelection"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))}});const Row_selection_stories=componentMeta;var __namedExportsOrder=["rowSelection"]},"./projects/docs/src/stories/examples/Sorting.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>Sorting_stories,sorting:()=>sorting});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/fesm2020/platform-browser.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),core_module=__webpack_require__("./projects/core/src/lib/core.module.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");const SIMPLE_SNIPPETS=[{name:"sorting-table.component.ts",code:"import { Component } from '@angular/core';\nimport { TableConfig } from '@angular-generic-table/core';\n\ninterface SortingData {\n  firstName: string;\n  lastName: string;\n  gender: 'male' | 'female';\n  favoriteFood: string;\n  birthdate: number;\n}\n\n@Component({\n  template: '<div class=\"overflow-auto\">\n      <angular-generic-table\n        #table\n        [data]=\"data\"\n        [config]=\"config\"\n        [(sortOrder)]=\"sortOrder\"\n        (columnSort)=\"logSortChange($event)\"\n      ></angular-generic-table>\n    </div>\n    <div class=\"row mb-3 gy-3\">\n      <div class=\"col-12 col-sm-auto\">\n        <button\n          class=\"btn btn-primary w-100\"\n          (click)=\"table.sortByKey('firstName', $event)\"\n        >\n          Sort on first name\n        </button>\n      </div>\n      <div class=\"col-12 col-sm-auto\">\n        <button class=\"btn btn-primary w-100\" (click)=\"resetSort()\">\n          Reset sorting\n        </button>\n      </div>\n    </div>\n    <strong>Current sort order</strong>\n    <p>\n      <code>\n        {{ sortOrder | json }}\n      </code>\n    </p>'\n})\nexport class SimpleComponent {\n  initialSortOrder: GtSortOrder<SortingData> = [\n    { key: 'birthdate', order: 'asc' },\n    { key: 'gender', order: 'asc' },\n    { key: 'firstName', order: 'desc' },\n  ];\n  sortOrder: GtSortOrder<SortingData> = this.initialSortOrder;\n  data: Array<SortingData> = [\n    {\n      firstName: 'John',\n      lastName: 'Doe',\n      gender: 'male',\n      favoriteFood: 'pizza',\n      birthdate: 946684800000,\n    },\n    {\n      firstName: 'Jane',\n      lastName: 'Smith',\n      gender: 'female',\n      favoriteFood: 'sushi',\n      birthdate: 803404800000,\n    },\n    {\n      firstName: 'Bob',\n      lastName: 'Johnson',\n      gender: 'male',\n      favoriteFood: 'burgers',\n      birthdate: 649345600000,\n    },\n    {\n      firstName: 'Emily',\n      lastName: 'Williams',\n      gender: 'female',\n      favoriteFood: 'chicken',\n      birthdate: 946684800000,\n    },\n    {\n      firstName: 'Michael',\n      lastName: 'Jones',\n      gender: 'male',\n      favoriteFood: 'steak',\n      birthdate: 803404800000,\n    },\n    {\n      firstName: 'Matthew',\n      lastName: 'Brown',\n      gender: 'male',\n      favoriteFood: 'seafood',\n      birthdate: 649345600000,\n    },\n    {\n      firstName: 'Jessica',\n      lastName: 'Miller',\n      gender: 'female',\n      favoriteFood: 'salad',\n      birthdate: 946684800000,\n    },\n    {\n      firstName: 'Jacob',\n      lastName: 'Moore',\n      gender: 'male',\n      favoriteFood: 'pasta',\n      birthdate: 803404800000,\n    },\n    {\n      firstName: 'Nicholas',\n      lastName: 'Taylor',\n      gender: 'male',\n      favoriteFood: 'soup',\n      birthdate: 649345600000,\n    },\n    {\n      firstName: 'Ashley',\n      lastName: 'Anderson',\n      gender: 'female',\n      favoriteFood: 'tacos',\n      birthdate: 946684800000,\n    },\n    {\n      firstName: 'Brandon',\n      lastName: 'Thomas',\n      gender: 'male',\n      favoriteFood: 'nachos',\n      birthdate: 803404800000,\n    },\n  ];\n  config: TableConfig<SortingData> = {\n    columns: {\n      firstName: {\n        sortable: true,\n      },\n      lastName: {\n        sortable: true,\n      },\n      gender: {\n        sortable: true,\n      },\n      favoriteFood: {\n        sortable: true,\n      },\n      birthdate: {\n        sortable: true,\n        transform: {\n          pipe: DatePipe,\n        },\n      },\n    },\n  };\n\n  logSortChange(sortEvent: GtSortEvent<SortingData>) {\n    console.log(sortEvent);\n  }\n\n  resetSort() {\n    this.sortOrder = this.initialSortOrder;\n  }\n}\n",language:"typescript"},{name:"app.module.ts",code:"import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { SortingTableComponent } from './sorting-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [SortingTableComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [SortingTableComponent]\n})\nexport class AppModule {}",language:"typescript"}];let SortingComponent=class SortingComponent{constructor(){this.initialSortOrder=[{key:"birthdate",order:"asc"},{key:"gender",order:"asc"},{key:"firstName",order:"desc"}],this.sortOrder=this.initialSortOrder,this.data=[{firstName:"John",lastName:"Doe",gender:"male",favoriteFood:"pizza",birthdate:9466848e5},{firstName:"Jane",lastName:"Smith",gender:"female",favoriteFood:"sushi",birthdate:8034048e5},{firstName:"Bob",lastName:"Johnson",gender:"male",favoriteFood:"burgers",birthdate:6493456e5},{firstName:"Emily",lastName:"Williams",gender:"female",favoriteFood:"chicken",birthdate:9466848e5},{firstName:"Michael",lastName:"Jones",gender:"male",favoriteFood:"steak",birthdate:8034048e5},{firstName:"Matthew",lastName:"Brown",gender:"male",favoriteFood:"seafood",birthdate:6493456e5},{firstName:"Jessica",lastName:"Miller",gender:"female",favoriteFood:"salad",birthdate:9466848e5},{firstName:"Jacob",lastName:"Moore",gender:"male",favoriteFood:"pasta",birthdate:8034048e5},{firstName:"Nicholas",lastName:"Taylor",gender:"male",favoriteFood:"soup",birthdate:6493456e5},{firstName:"Ashley",lastName:"Anderson",gender:"female",favoriteFood:"tacos",birthdate:9466848e5},{firstName:"Brandon",lastName:"Thomas",gender:"male",favoriteFood:"nachos",birthdate:8034048e5}],this.config={columns:{firstName:{sortable:!0},lastName:{sortable:!0},gender:{sortable:!0},favoriteFood:{sortable:!0},birthdate:{sortable:!0,transform:{pipe:common.uU}}}},this.SNIPPETS=SIMPLE_SNIPPETS}logSortChange(sortEvent){console.log(sortEvent)}resetSort(){this.sortOrder=this.initialSortOrder}};SortingComponent=(0,tslib_es6.gn)([(0,core.Component)({template:'\n    <div class="overflow-auto">\n      <angular-generic-table\n        #table\n        [data]="data"\n        [config]="config"\n        [(sortOrder)]="sortOrder"\n        (columnSort)="logSortChange($event)"\n      ></angular-generic-table>\n    </div>\n    <div class="row mb-3 gy-3">\n      <div class="col-12 col-sm-auto">\n        <button\n          class="btn btn-primary w-100"\n          (click)="table.sortByKey(\'firstName\', $event)"\n        >\n          Sort on first name\n        </button>\n      </div>\n      <div class="col-12 col-sm-auto">\n        <button class="btn btn-primary w-100" (click)="resetSort()">\n          Reset sorting\n        </button>\n      </div>\n    </div>\n    <strong>Current sort order</strong>\n    <p>\n      <code>\n        {{ sortOrder | json }}\n      </code>\n    </p>\n    <docs-tabs [content]="SNIPPETS"></docs-tabs>\n  '})],SortingComponent);const Sorting=args=>({props:args,component:SortingComponent});var fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),tabs_component=__webpack_require__("./projects/docs/src/app/components/tabs/tabs.component.ts"),http=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),pagination_module=__webpack_require__("./projects/core/src/lib/pagination/pagination.module.ts"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Examples/Sorting",decorators:[(0,client.moduleMetadata)({declarations:[tabs_component.n,SortingComponent],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],mdxType:"Meta"}),(0,esm.kt)("h1",{id:"sorting"},"Sorting"),(0,esm.kt)("p",null,(0,esm.kt)("strong",{parentName:"p"},"Sort on multiple columns"),(0,esm.kt)("br",null),'\nGeneric table supports sorting on multiple columns by holding "shift" key while sorting. To set or update sort order for a table use ',(0,esm.kt)("inlineCode",{parentName:"p"},"sortOrder")," input and pass ",(0,esm.kt)("inlineCode",{parentName:"p"},"GtSortOrder<R>")," which should be an array with keys and order to sort on e.g. ",(0,esm.kt)("inlineCode",{parentName:"p"},"[{key: 'firstName', order: 'asc'}, {key: 'gender', order: 'desc'}]"),"."),(0,esm.kt)("p",null,(0,esm.kt)("strong",{parentName:"p"},"Call sort programmatically"),(0,esm.kt)("br",null),"\nIt's also possible to call sort programmatically by calling ",(0,esm.kt)("inlineCode",{parentName:"p"},"sortByKey")," method on ",(0,esm.kt)("inlineCode",{parentName:"p"},"GenericTableComponent")," instance. The method accepts a row key and an optional mouse event as arguments e.g. ",(0,esm.kt)("inlineCode",{parentName:"p"},"table.sortByKey('firstName', $event)"),"."),(0,esm.kt)("p",null,(0,esm.kt)("strong",{parentName:"p"},"Toggle sortable columns"),(0,esm.kt)("br",null),"\nThe ability to sort columns by clicking on the column header is disabled by default. To enable this feature set ",(0,esm.kt)("inlineCode",{parentName:"p"},"sortable")," to ",(0,esm.kt)("inlineCode",{parentName:"p"},"true")," in the column configuration."),(0,esm.kt)("p",null,(0,esm.kt)("strong",{parentName:"p"},"Handle sorting externally"),(0,esm.kt)("br",null),"\nIt's possible to disable table sorting within the component by setting ",(0,esm.kt)("inlineCode",{parentName:"p"},"disableTableSort")," in tableConfig to ",(0,esm.kt)("inlineCode",{parentName:"p"},"true"),". This is useful when sorting is handled externally e.g. for server-side pagination. The table will still use ",(0,esm.kt)("inlineCode",{parentName:"p"},"sortOrder")," to visually show how the data is sorted but keep in mind that the data should be sorted accordingly when passed to the table."),(0,esm.kt)("p",null,(0,esm.kt)("strong",{parentName:"p"},"Sorting events"),(0,esm.kt)("br",null),"\nListen to ",(0,esm.kt)("inlineCode",{parentName:"p"},"columnSort")," event which emits ",(0,esm.kt)("inlineCode",{parentName:"p"},"GtSortEvent<R>")," to get notified when the sort order changes e.g. ",(0,esm.kt)("inlineCode",{parentName:"p"},"(columnSort)=logSortChange($event)")," this could be used to trigger sorting externally. ",(0,esm.kt)("inlineCode",{parentName:"p"},"sortOrder")," also supports two-way binding e.g. ",(0,esm.kt)("inlineCode",{parentName:"p"},"[(sortOrder)]=sortOrder")," to sync ",(0,esm.kt)("inlineCode",{parentName:"p"},"GtSortOrder<R>"),"."),(0,esm.kt)("h3",{id:"example"},"Example"),(0,esm.kt)("p",null,"The initial sort order for the table below is set to: ",(0,esm.kt)("inlineCode",{parentName:"p"},"[{ key: 'birthdate', order: 'asc' }, { key: 'gender', order: 'asc' }, { key: 'firstName', order: 'desc' }]")," and all columns are sortable with ",(0,esm.kt)("inlineCode",{parentName:"p"},"sortable")," set to ",(0,esm.kt)("inlineCode",{parentName:"p"},"true"),". Shift + click column headers or the sort button below to sort on multiple columns. It also listens to ",(0,esm.kt)("inlineCode",{parentName:"p"},"columnSort")," events which are written to the console."),(0,esm.kt)(dist_esm.oG,{name:"Sorting",mdxType:"Story"},Sorting.bind({})))}MDXContent.isMDXComponent=!0;var sorting=Sorting.bind({});sorting.storyName="Sorting",sorting.parameters={storySource:{source:"Sorting.bind({})"}};var componentMeta={title:"Examples/Sorting",decorators:[(0,client.moduleMetadata)({declarations:[tabs_component.n,SortingComponent],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],includeStories:["sorting"]},mdxStoryNameToKey={Sorting:"sorting"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))}});const Sorting_stories=componentMeta;var __namedExportsOrder=["sorting"]},"./projects/docs/src/stories/examples/Static.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,basic:()=>basic,default:()=>Static_stories});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/fesm2020/platform-browser.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),core_module=__webpack_require__("./projects/core/src/lib/core.module.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");const SIMPLE_SNIPPETS=[{name:"basic-table.component.ts",code:"import { Component } from '@angular/core';\nimport { TableConfig } from '@angular-generic-table/core';\n\ninterface BasicData {\n  firstName: string;\n  lastName: string;\n  gender: 'male' | 'female';\n  favoriteFood: string;\n}\n\n@Component({\n  template: '<angular-generic-table [data]=\"data\" [config]=\"config\"></angular-generic-table>'\n})\nexport class SimpleComponent {\n  data: Array<BasicData> = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config: TableConfig<BasicData> = {\n    columns: {\n      firstName: {},\n      lastName: {},\n      gender: {},\n      favoriteFood: {},\n    },\n  };\n",language:"typescript"},{name:"app.module.ts",code:"import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { BasicTableComponent } from './basic-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [BasicTableComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [BasicTableComponent]\n})\nexport class AppModule {}",language:"typescript"}];let SimpleComponent=class SimpleComponent{constructor(){this.data=[{firstName:"Peter",lastName:"Parker",gender:"male",favoriteFood:"Pasta"},{firstName:"Mary Jane",lastName:"Watson",gender:"female",favoriteFood:"Pizza"}],this.config={class:"table table-striped table-bordered",columns:{firstName:{},lastName:{},gender:{},favoriteFood:{}}},this.SNIPPETS=SIMPLE_SNIPPETS}};SimpleComponent=(0,tslib_es6.gn)([(0,core.Component)({template:'\n    <div class="overflow-auto">\n      <angular-generic-table\n        [data]="data"\n        [config]="config"\n      ></angular-generic-table>\n    </div>\n    <docs-tabs [content]="SNIPPETS"></docs-tabs>\n  '})],SimpleComponent);const Simple=args=>({props:args,component:SimpleComponent});var fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),tabs_component=__webpack_require__("./projects/docs/src/app/components/tabs/tabs.component.ts"),http=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),pagination_module=__webpack_require__("./projects/core/src/lib/pagination/pagination.module.ts"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Examples/Basic",decorators:[(0,client.moduleMetadata)({declarations:[SimpleComponent,tabs_component.n],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],mdxType:"Meta"}),(0,esm.kt)("h1",{id:"basic-example"},"Basic example"),(0,esm.kt)("p",null,"Pass ",(0,esm.kt)("inlineCode",{parentName:"p"},"data")," and ",(0,esm.kt)("inlineCode",{parentName:"p"},"config")," to Generic Table to generate a table. The example below uses the minimal configuration needed to generate a table with static data."),(0,esm.kt)(dist_esm.oG,{name:"Basic",args:{data:[{firstName:"Mark",lastName:"Parker",gender:"male",favoriteFood:"Pasta"},{firstName:"Mary Jane",lastName:"Watson",gender:"female",favoriteFood:"Pizza"}]},mdxType:"Story"},Simple.bind({})))}MDXContent.isMDXComponent=!0;var basic=Simple.bind({});basic.storyName="Basic",basic.args={data:[{firstName:"Mark",lastName:"Parker",gender:"male",favoriteFood:"Pasta"},{firstName:"Mary Jane",lastName:"Watson",gender:"female",favoriteFood:"Pizza"}]},basic.parameters={storySource:{source:"Simple.bind({})"}};var componentMeta={title:"Examples/Basic",decorators:[(0,client.moduleMetadata)({declarations:[SimpleComponent,tabs_component.n],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],includeStories:["basic"]},mdxStoryNameToKey={Basic:"basic"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))}});const Static_stories=componentMeta;var __namedExportsOrder=["basic"]},"./projects/docs/src/stories/examples/Transpose.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>Transpose_stories,transposeData:()=>transposeData});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/fesm2020/platform-browser.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),core_module=__webpack_require__("./projects/core/src/lib/core.module.ts"),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),tabs_component=__webpack_require__("./projects/docs/src/app/components/tabs/tabs.component.ts"),http=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),pagination_module=__webpack_require__("./projects/core/src/lib/pagination/pagination.module.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),BehaviorSubject=__webpack_require__("./node_modules/rxjs/_esm2015/internal/BehaviorSubject.js"),withLatestFrom=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/withLatestFrom.js");const TRANSPOSE_SNIPPETS=[{name:"transpose.component.ts",code:"import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { TableConfig, GtDeltaComponent } from '@angular-generic-table/core';\nimport { FormBuilder } from '@angular/forms';\nimport { withLatestFrom } from 'rxjs/operators';\n\ninterface RawData {\n  year: string;\n  value: number;\n}\ninterface YearData extends RawData {\n  delta: number;\n  deltaIndex: number;\n  combined: number;\n  deltaAbsolute: number;\n}\n@Component({\n  templateUrl: './transpose.component.html',\n  styles: []\n})\nexport class TransposeComponent implements OnInit {\n  @ViewChild('delta', { static: true }) delta:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  @ViewChild('deltaAbsolute', { static: true }) deltaAbsolute:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  @ViewChild('deltaIndex', { static: true }) deltaIndex:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  @ViewChild('combined', { static: true }) combined:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  loading$ = new BehaviorSubject(false);\n  reactiveForm = this.fb.group({\n    length: [10],\n    search: [''],\n  });\n  search$ = this.reactiveForm.get('search')?.valueChanges as Observable<string>;\n  tableConfig$: BehaviorSubject<TableConfig<YearData>> = new BehaviorSubject<\n    TableConfig<YearData>\n  >({});\n  data: Array<RawData> = [];\n\n  constructor(private fb: UntypedFormBuilder) {}\n\n  ngOnInit(): void {\n    this.transpose();\n    this.load();\n    this.reactiveForm\n      .get('length')\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\n      .subscribe(([length, config]) => {\n        length = +length;\n        this.tableConfig$.next({\n          ...config,\n          pagination: { ...config.pagination, length },\n        });\n      });\n  }\n\n  simulateLoad(): void {\n    this.loading$.next(true);\n    // set loading state to false after 2 seconds\n    setTimeout(() => this.loading$.next(false), 2000);\n  }\n  empty(): void {\n    this.data = [];\n  }\n  load(): void {\n    this.data = [\n      {\n        year: '2010',\n        value: 15,\n      },\n      {\n        year: '2011',\n        value: 30,\n      },\n      {\n        year: '2012',\n        value: 25,\n      },\n      {\n        year: '2013',\n        value: 0,\n      },\n      {\n        year: '2014',\n        value: 40,\n      },\n      {\n        year: '2015',\n        value: 0,\n      },\n      {\n        year: '2016',\n        value: -5,\n      },\n      {\n        year: '2018',\n        value: 75,\n      },\n      {\n        year: '2019',\n        value: 100,\n      },\n      {\n        year: '2020',\n        value: 250,\n      },\n      {\n        year: '2021',\n        value: 50,\n      },\n      {\n        year: '2022',\n        value: 60,\n      },\n    ];\n  }\n  transpose(): void {\n    if (this.tableConfig$.value.columns) {\n      this.tableConfig$.next({\n        stickyHeaders: {\n          row: true,\n          column: true,\n        },\n        rows: {\n          year: {\n            sortable: true,\n            header: false,\n            class: 'text-end',\n          },\n          value: {\n            class: 'text-end',\n          },\n          delta: {\n            header: 'Delta %',\n            templateRef: this.delta,\n            class: 'text-end',\n          },\n          deltaIndex: {\n            header: 'Since inception %',\n            templateRef: this.deltaIndex,\n            class: 'text-end',\n          },\n          deltaAbsolute: {\n            header: 'Delta',\n            templateRef: this.deltaAbsolute,\n            class: 'text-end',\n          },\n          combined: {\n            header: 'Value with change',\n            templateRef: this.combined,\n            class: 'text-end text-nowrap',\n          },\n        },\n      });\n    } else {\n      this.tableConfig$.next({\n        stickyHeaders: {\n          row: true,\n          column: true,\n        },\n        columns: {\n          year: {\n            sortable: true,\n          },\n          value: {\n            class: 'text-end',\n          },\n          delta: {\n            header: 'Delta %',\n            templateRef: this.delta,\n            class: 'text-end',\n          },\n          deltaIndex: {\n            header: 'Since inception %',\n            templateRef: this.deltaIndex,\n            class: 'text-end',\n          },\n          deltaAbsolute: {\n            header: 'Delta',\n            templateRef: this.deltaAbsolute,\n            class: 'text-end',\n          },\n          combined: {\n            header: 'Value with change',\n            templateRef: this.combined,\n            class: 'text-end text-nowrap',\n          },\n        },\n        pagination: { length: this.reactiveForm.get('length')?.value },\n      });\n    }\n  }\n}\n",language:"typescript"},{name:"transpose.component.html",code:'<form [formGroup]="reactiveForm">\n  <div class="row gy-3 gx-3 align-items-end mb-3">\n    <div class="form-group col-6 col-sm-auto">\n      <label for="length_input">Number of rows</label>\n      <input\n        id="length_input"\n        formControlName="length"\n        type="number"\n        class="form-control"\n      />\n    </div>\n    <div class="form-group col-6 col-sm-auto">\n      <label for="search_input">Search</label>\n      <input\n        id="search_input"\n        formControlName="search"\n        type="text"\n        class="form-control"\n      />\n    </div>\n    <div class="col-auto">\n      <button\n        class="btn btn-outline-primary w-100"\n        (click)="simulateLoad()"\n      >\n        Simulate load\n      </button>\n    </div>\n    <div class="col col-sm-auto">\n      <button class="btn btn-outline-danger w-100" (click)="empty()">\n        Empty\n      </button>\n    </div>\n    <div class="col col-sm-auto">\n      <button class="btn btn-outline-primary w-100" (click)="load()">\n        Reset\n      </button>\n    </div>\n    <div class="col col-sm-auto">\n      <button class="btn btn-outline-primary w-100" (click)="transpose()">\n        Transpose\n      </button>\n    </div>\n  </div>\n  <div class="overflow-auto">\n    <angular-generic-table\n      #table\n      [data]="data"\n      [config]="tableConfig$"\n      [loading]="loading$"\n      [search]="search$"\n    >\n      <div class="table-loading gt-skeleton-loader"></div>\n      <div class="table-no-data alert alert-info mt-3">Table is empty</div>\n    </angular-generic-table>\n  </div>\n  <angular-generic-table-pagination [table]="table">\n  </angular-generic-table-pagination>\n  <ng-template #delta let-index="index" let-data="data">\n    <gt-delta [index]="index" [data]="data"></gt-delta>\n  </ng-template>\n  <ng-template #deltaAbsolute let-index="index" let-data="data">\n    <gt-delta\n      [index]="index"\n      [data]="data"\n      [deltaTemplate]="deltaTemplate"\n    ></gt-delta>\n  </ng-template>\n  <ng-template #deltaIndex let-index="index" let-data="data">\n    <gt-delta [index]="index" [data]="data" [baseIndex]="0"></gt-delta>\n  </ng-template>\n  <ng-template\n    #combined\n    let-index="index"\n    let-data="data"\n    let-row="row"\n    let-col="col"\n  >\n    {{ row.value }}\n    <ng-container *ngIf="index > 0">\n      <gt-delta [index]="index" [data]="data"></gt-delta>\n    </ng-container>\n  </ng-template>\n  <ng-template #deltaTemplate let-delta="delta">\n    <span>{{ delta.absolute }}</span></ng-template\n  >\n  <docs-tabs [content]="SNIPPETS"></docs-tabs>\n</form>',language:"xml"},{name:"app.module.ts",code:"import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HorizontalTableComponent } from './horizontal-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [HorizontalTableComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [HorizontalTableComponent]\n})\nexport class AppModule {}",language:"typescript"}];var _class;let TransposeComponent=((_class=class TransposeComponent{constructor(fb){this.fb=fb,this.loading$=new BehaviorSubject.X(!1),this.reactiveForm=this.fb.group({length:[10],search:[""]}),this.search$=this.reactiveForm.get("search")?.valueChanges,this.tableConfig$=new BehaviorSubject.X({}),this.data=[],this.SNIPPETS=TRANSPOSE_SNIPPETS}ngOnInit(){this.transpose(),this.load(),this.reactiveForm.get("length")?.valueChanges.pipe((0,withLatestFrom.M)(this.tableConfig$)).subscribe((([length,config])=>{length=+length,this.tableConfig$.next({...config,pagination:{...config.pagination,length}})}))}simulateLoad(){this.loading$.next(!0),setTimeout((()=>this.loading$.next(!1)),2e3)}empty(){this.data=[]}load(){this.data=[{year:"2010",value:15},{year:"2011",value:30},{year:"2012",value:25},{year:"2013",value:0},{year:"2014",value:40},{year:"2015",value:0},{year:"2016",value:-5},{year:"2018",value:75},{year:"2019",value:100},{year:"2020",value:250},{year:"2021",value:50},{year:"2022",value:60}]}transpose(){this.tableConfig$.value.columns?this.tableConfig$.next({stickyHeaders:{row:!0,column:!0},rows:{year:{sortable:!0,header:!1,class:"text-end"},value:{class:"text-end"},delta:{header:"Delta %",templateRef:this.delta,class:"text-end"},deltaIndex:{header:"Since inception %",templateRef:this.deltaIndex,class:"text-end"},deltaAbsolute:{header:"Delta",templateRef:this.deltaAbsolute,class:"text-end"},combined:{header:"Value with change",templateRef:this.combined,class:"text-end text-nowrap"}}}):this.tableConfig$.next({stickyHeaders:{row:!0,column:!0},columns:{year:{sortable:!0},value:{class:"text-end"},delta:{header:"Delta %",templateRef:this.delta,class:"text-end"},deltaIndex:{header:"Since inception %",templateRef:this.deltaIndex,class:"text-end"},deltaAbsolute:{header:"Delta",templateRef:this.deltaAbsolute,class:"text-end"},combined:{header:"Value with change",templateRef:this.combined,class:"text-end text-nowrap"}},pagination:{length:this.reactiveForm.get("length")?.value}})}}).ctorParameters=()=>[{type:fesm2020_forms.UntypedFormBuilder}],_class.propDecorators={delta:[{type:core.ViewChild,args:["delta",{static:!0}]}],deltaAbsolute:[{type:core.ViewChild,args:["deltaAbsolute",{static:!0}]}],deltaIndex:[{type:core.ViewChild,args:["deltaIndex",{static:!0}]}],combined:[{type:core.ViewChild,args:["combined",{static:!0}]}]},_class);TransposeComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"docs-transpose",template:'\n    <form [formGroup]="reactiveForm">\n      <div class="row gy-3 gx-3 align-items-end mb-3">\n        <div class="form-group col-6 col-sm-auto">\n          <label for="length_input">Number of rows</label>\n          <input\n            id="length_input"\n            formControlName="length"\n            type="number"\n            class="form-control"\n          />\n        </div>\n        <div class="form-group col-6 col-sm-auto">\n          <label for="search_input">Search</label>\n          <input\n            id="search_input"\n            formControlName="search"\n            type="text"\n            class="form-control"\n          />\n        </div>\n        <div class="col-auto">\n          <button\n            class="btn btn-outline-primary w-100"\n            (click)="simulateLoad()"\n          >\n            Simulate load\n          </button>\n        </div>\n        <div class="col col-sm-auto">\n          <button class="btn btn-outline-danger w-100" (click)="empty()">\n            Empty\n          </button>\n        </div>\n        <div class="col col-sm-auto">\n          <button class="btn btn-outline-primary w-100" (click)="load()">\n            Reset\n          </button>\n        </div>\n        <div class="col col-sm-auto">\n          <button class="btn btn-outline-primary w-100" (click)="transpose()">\n            Transpose\n          </button>\n        </div>\n      </div>\n      <div class="overflow-auto">\n        <angular-generic-table\n          #table\n          [data]="data"\n          [config]="tableConfig$"\n          [loading]="loading$"\n          [search]="search$"\n        >\n          <div class="table-loading gt-skeleton-loader"></div>\n          <div class="table-no-data alert alert-info mt-3">Table is empty</div>\n        </angular-generic-table>\n      </div>\n      <angular-generic-table-pagination [table]="table">\n      </angular-generic-table-pagination>\n      <ng-template #delta let-index="index" let-data="data">\n        <gt-delta [index]="index" [data]="data"></gt-delta>\n      </ng-template>\n      <ng-template #deltaAbsolute let-index="index" let-data="data">\n        <gt-delta\n          [index]="index"\n          [data]="data"\n          [deltaTemplate]="deltaTemplate"\n        ></gt-delta>\n      </ng-template>\n      <ng-template #deltaIndex let-index="index" let-data="data">\n        <gt-delta [index]="index" [data]="data" [baseIndex]="0"></gt-delta>\n      </ng-template>\n      <ng-template\n        #combined\n        let-index="index"\n        let-data="data"\n        let-row="row"\n        let-col="col"\n      >\n        {{ row.value }}\n        <ng-container *ngIf="index > 0">\n          <gt-delta [index]="index" [data]="data"></gt-delta>\n        </ng-container>\n      </ng-template>\n      <ng-template #deltaTemplate let-delta="delta">\n        <span>{{ delta.absolute }}</span></ng-template\n      >\n      <docs-tabs [content]="SNIPPETS"></docs-tabs>\n    </form>\n  '})],TransposeComponent);const Transpose=args=>({props:args,component:TransposeComponent});var _excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Examples/Transpose data",decorators:[(0,client.moduleMetadata)({declarations:[tabs_component.n],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],mdxType:"Meta"}),(0,esm.kt)("h1",{id:"transpose-table-flip-layout"},"Transpose table (flip layout)"),(0,esm.kt)("p",null,"Similar to ",(0,esm.kt)("a",{href:"examples?path=/docs/examples-horizontal-layout--horizontal-layout"},"horizontal layout example")," but with ",(0,esm.kt)("code",null,"search")," and ",(0,esm.kt)("code",null,"pagination")," enabled as well as the ability to switch between row-layout and column-layout."),(0,esm.kt)(dist_esm.oG,{name:"Transpose data",mdxType:"Story"},Transpose.bind({})))}MDXContent.isMDXComponent=!0;var transposeData=Transpose.bind({});transposeData.storyName="Transpose data",transposeData.parameters={storySource:{source:"Transpose.bind({})"}};var componentMeta={title:"Examples/Transpose data",decorators:[(0,client.moduleMetadata)({declarations:[tabs_component.n],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],includeStories:["transposeData"]},mdxStoryNameToKey={"Transpose data":"transposeData"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))}});const Transpose_stories=componentMeta;var __namedExportsOrder=["transposeData"]},"./projects/docs/src/app/examples/mobile-layout/mobile-layout.component.ts.css?ngResource!=!./node_modules/@ngtools/webpack/src/loaders/inline-resource.js?data=CiAgICAgIC50YWJsZSB0aCB7CiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDsKICAgICAgfQogICAg!./projects/docs/src/app/examples/mobile-layout/mobile-layout.component.ts":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"\n      .table th {\n        white-space: nowrap;\n      }\n    ","",{version:3,sources:["webpack://./projects/docs/src/app/examples/mobile-layout/mobile-layout.component.ts"],names:[],mappings:";MACM;QACE,mBAAmB;MACrB",sourcesContent:["\n      .table th {\n        white-space: nowrap;\n      }\n    "],sourceRoot:""}]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/docs/src/app/examples/row-hover-click/row-hover-click.component.ts.css?ngResource!=!./node_modules/@ngtools/webpack/src/loaders/inline-resource.js?data=CiAgICAgIDpob3N0IDo6bmctZGVlcCAuZ3QtYWN0aXZlIHsKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1icy1oaWdobGlnaHQtYmcpOwogICAgICB9CiAgICA%3D!./projects/docs/src/app/examples/row-hover-click/row-hover-click.component.ts":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"\n      :host ::ng-deep .gt-active {\n        background-color: var(--bs-highlight-bg);\n      }\n    ","",{version:3,sources:["webpack://./projects/docs/src/app/examples/row-hover-click/row-hover-click.component.ts"],names:[],mappings:";MACM;QACE,wCAAwC;MAC1C",sourcesContent:["\n      :host ::ng-deep .gt-active {\n        background-color: var(--bs-highlight-bg);\n      }\n    "],sourceRoot:""}]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/docs/src/app/examples/row-select/row-select.component.ts.css?ngResource!=!./node_modules/@ngtools/webpack/src/loaders/inline-resource.js?data=CiAgICAgIDpob3N0IDo6bmctZGVlcCAuZ3QtYWN0aXZlIHsKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1icy1oaWdobGlnaHQtYmcpOwogICAgICB9CiAgICAgIDpob3N0IDo6bmctZGVlcCAudGFibGUgPiB0Ym9keSA%2BIHRyIHsKICAgICAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICAgIH0KICAgIA%3D%3D!./projects/docs/src/app/examples/row-select/row-select.component.ts":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"\n      :host ::ng-deep .gt-active {\n        background-color: var(--bs-highlight-bg);\n      }\n      :host ::ng-deep .table > tbody > tr {\n        cursor: pointer;\n      }\n    ","",{version:3,sources:["webpack://./projects/docs/src/app/examples/row-select/row-select.component.ts"],names:[],mappings:";MACM;QACE,wCAAwC;MAC1C;MACA;QACE,eAAe;MACjB",sourcesContent:["\n      :host ::ng-deep .gt-active {\n        background-color: var(--bs-highlight-bg);\n      }\n      :host ::ng-deep .table > tbody > tr {\n        cursor: pointer;\n      }\n    "],sourceRoot:""}]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/core/src/lib/gt-delta/gt-delta.component.ts.css?ngResource!=!./node_modules/@ngtools/webpack/src/loaders/inline-resource.js?data=CiAgICAgIDpob3N0IHsKICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICAgIH0KICAgIA%3D%3D!./projects/core/src/lib/gt-delta/gt-delta.component.ts":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"\n      :host {\n        display: inline-block;\n      }\n    ","",{version:3,sources:["webpack://./projects/core/src/lib/gt-delta/gt-delta.component.ts"],names:[],mappings:";MACM;QACE,qBAAqB;MACvB",sourcesContent:["\n      :host {\n        display: inline-block;\n      }\n    "],sourceRoot:""}]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/docs/src/app/components/tabs/tabs.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"pre {\n  background-image: linear-gradient(0deg, #f8f8f8 25%, #ffffff 25%, #ffffff 50%, #f8f8f8 50%, #f8f8f8 75%, #ffffff 75%, #ffffff 100%);\n  background-size: 84px 84px;\n  padding: 21px 1rem;\n}\n\nul {\n  -ms-overflow-style: none; /* IE and Edge */\n  scrollbar-width: none; /* Firefox */\n}\nul::-webkit-scrollbar {\n  display: none;\n}","",{version:3,sources:["webpack://./projects/docs/src/app/components/tabs/tabs.component.scss"],names:[],mappings:"AAAA;EACE,mIAAA;EACA,0BAAA;EACA,kBAAA;AACF;;AACA;EAIE,wBAAA,EAAA,gBAAA;EACA,qBAAA,EAAA,YAAA;AADF;AAHE;EACE,aAAA;AAKJ",sourcesContent:["pre {\n  background-image: linear-gradient(0deg, #f8f8f8 25%, #ffffff 25%, #ffffff 50%, #f8f8f8 50%, #f8f8f8 75%, #ffffff 75%, #ffffff 100%);\n  background-size: 84.00px 84.00px;\n  padding: 21px 1rem;\n}\nul {\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  -ms-overflow-style: none; /* IE and Edge */\n  scrollbar-width: none; /* Firefox */\n}\n"],sourceRoot:""}]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./.storybook/scss-loader.scss?ngGlobalStyle":()=>{},"./projects/docs/src/stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./projects/docs/src/stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$",module.exports=webpackEmptyContext},"./projects/docs/src/stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./Introduction.stories.mdx":"./projects/docs/src/stories/Introduction.stories.mdx","./examples/Advanced.stories.mdx":"./projects/docs/src/stories/examples/Advanced.stories.mdx","./examples/Custom-templates.stories.mdx":"./projects/docs/src/stories/examples/Custom-templates.stories.mdx","./examples/Footer.stories.mdx":"./projects/docs/src/stories/examples/Footer.stories.mdx","./examples/Horizontal.stories.mdx":"./projects/docs/src/stories/examples/Horizontal.stories.mdx","./examples/Mobile.stories.mdx":"./projects/docs/src/stories/examples/Mobile.stories.mdx","./examples/Nested-data.stories.mdx":"./projects/docs/src/stories/examples/Nested-data.stories.mdx","./examples/Pagination/Client-side-pagination.stories.mdx":"./projects/docs/src/stories/examples/Pagination/Client-side-pagination.stories.mdx","./examples/Pagination/Pagination-get-started.stories.mdx":"./projects/docs/src/stories/examples/Pagination/Pagination-get-started.stories.mdx","./examples/Pagination/Server-side-pagination.stories.mdx":"./projects/docs/src/stories/examples/Pagination/Server-side-pagination.stories.mdx","./examples/Row-events.stories.mdx":"./projects/docs/src/stories/examples/Row-events.stories.mdx","./examples/Row-selection.stories.mdx":"./projects/docs/src/stories/examples/Row-selection.stories.mdx","./examples/Sorting.stories.mdx":"./projects/docs/src/stories/examples/Sorting.stories.mdx","./examples/Static.stories.mdx":"./projects/docs/src/stories/examples/Static.stories.mdx","./examples/Transpose.stories.mdx":"./projects/docs/src/stories/examples/Transpose.stories.mdx"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./projects/docs/src/stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$"},"?4f7e":()=>{},"./generated-stories-entry.cjs":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module=__webpack_require__.nmd(module),(0,__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js").configure)([__webpack_require__("./projects/docs/src/stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$"),__webpack_require__("./projects/docs/src/stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$")],module,!1)}},__webpack_require__=>{var __webpack_exec__=moduleId=>__webpack_require__(__webpack_require__.s=moduleId);__webpack_require__.O(0,[826],(()=>(__webpack_exec__("./node_modules/@storybook/core-server/node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_exec__("./node_modules/@storybook/core-server/node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_exec__("./storybook-init-framework-entry.js"),__webpack_exec__("./node_modules/@storybook/angular/dist/ts3.9/client/docs/config-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/angular/dist/ts3.9/client/preview/config.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-docs/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-links/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-actions/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-backgrounds/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-measure/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-outline/preview.js-generated-config-entry.js"),__webpack_exec__("./.storybook/preview.js-generated-config-entry.js"),__webpack_exec__("./generated-stories-entry.cjs"),__webpack_exec__("./projects/docs/src/polyfills.ts"),__webpack_exec__("./.storybook/scss-loader.scss?ngGlobalStyle"))));__webpack_require__.O()}]);
//# sourceMappingURL=main.d4c4345b.iframe.bundle.js.map