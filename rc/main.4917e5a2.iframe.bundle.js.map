{"version":3,"file":"main.4917e5a2.iframe.bundle.js","mappings":"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","sources":["./.storybook/preview.js","./.storybook/preview.js-generated-config-entry.js","./projects/docs/src/stories/Introduction.stories.mdx","./projects/core/src/lib/enums/order.enum.ts","./projects/core/src/lib/utilities/utilities.ts","./projects/core/src/lib/pipes/capital-case.pipe.ts","./projects/core/src/lib/pipes/sort-class.pipe.ts","./projects/core/src/lib/pipes/dash-case.pipe.ts","./projects/core/src/lib/pipes/dynamic.pipe.ts","./projects/core/src/lib/pipes/highlight.pipe.ts","./projects/core/src/lib/core.component.ts","./projects/core/src/lib/gt-delta/gt-delta.component.ts","./projects/core/src/lib/core.module.ts","./projects/docs/src/app/examples/simple/simple.snippets.ts","./projects/docs/src/app/examples/simple/simple.component.ts","./projects/docs/src/app/examples/mobile-layout/mobileLayout.snippets.ts","./projects/docs/src/app/examples/mobile-layout/mobile-layout.component.ts","./projects/docs/src/app/examples/advanced/advanced.snippets.ts","./projects/docs/src/app/examples/advanced/advanced.component.ts","./projects/docs/src/app/components/tabs/tabs.component.ts","./projects/docs/src/app/examples/custom-templates/custom-templates.snippets.ts","./projects/docs/src/app/examples/custom-templates/custom-templates.component.ts","./projects/docs/src/app/examples/pagination/pagination.snippets.ts","./projects/docs/src/app/examples/pagination/pagination.component.ts","./projects/core/src/lib/pagination/pagination.component.ts","./projects/core/src/lib/pagination/pagination.module.ts","./projects/docs/src/app/examples/horizontal-table/horizontal-table.snippets.ts","./projects/docs/src/app/examples/horizontal-table/horizontal-table.component.ts","./projects/docs/src/app/examples/nested-data/nested.snippets.ts","./projects/docs/src/app/examples/nested-data/nested-data.component.ts","./projects/docs/src/app/examples/transpose/transpose.snippets.ts","./projects/docs/src/app/examples/transpose/transpose.component.ts","./projects/docs/src/app/examples/row-hover-click/row-hower-click.snippets.ts","./projects/docs/src/app/examples/row-hover-click/row-hover-click.component.ts","./projects/docs/src/app/examples/footer/simple.snippets.ts","./projects/docs/src/app/examples/footer/footer.component.ts","./projects/docs/src/stories/Table.stories.mdx","webpack:///./projects/docs/src/stories/ sync ^\\.(?9e9a","./projects/docs/src/stories/ sync ^\\.(","./generated-stories-entry.cjs"],"sourcesContent":["import { setCompodocJson } from \"@storybook/addon-docs/angular\";\nimport docJson from \"../documentation.json\";\n\nsetCompodocJson(docJson);\n\nexport const parameters = {\n  actions: { argTypesRegex: \"^on[A-Z].*\" },\n  controls: {\n    matchers: {\n      color: /(background|color)$/i,\n      date: /Date$/,\n    },\n  },\n  docs: { inlineStories: true },\n  themes: {\n    //default: \"Swimbird - Dark\",\n    default: \"Bootstrap\",\n    clearable: false,\n    list: [\n      //{ name: \"Swimbird - Dark\", class: \"theme-sb-dark\", color: \"#00aced\" },\n      //{ name: \"Swimbird - Light\", class: \"theme-sb-light\", color: \"#00aced\" },\n      {\n        name: \"Bootstrap\",\n        class: \"theme-bootstrap\",\n        color: \"var(--bs-primary)\",\n      },\n    ],\n    onChange: (theme) => {\n      document.body.setAttribute(\"data-theme\", theme.class);\n    },\n  },\n};\n","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable import/no-unresolved */\nimport { addDecorator, addParameters, addLoader, addArgs, addArgTypes, addArgsEnhancer, addArgTypesEnhancer, setGlobalRender } from '/home/runner/work/angular-generic-table/angular-generic-table/node_modules/@storybook/client-api';\nimport * as config from '/home/runner/work/angular-generic-table/angular-generic-table/.storybook/preview.js';\nObject.keys(config).forEach(function (key) {\n  var value = config[key];\n\n  switch (key) {\n    case 'args':\n      {\n        return addArgs(value);\n      }\n\n    case 'argTypes':\n      {\n        return addArgTypes(value);\n      }\n\n    case 'decorators':\n      {\n        return value.forEach(function (decorator) {\n          return addDecorator(decorator, false);\n        });\n      }\n\n    case 'loaders':\n      {\n        return value.forEach(function (loader) {\n          return addLoader(loader, false);\n        });\n      }\n\n    case 'parameters':\n      {\n        return addParameters(_objectSpread({}, value), false);\n      }\n\n    case 'argTypesEnhancers':\n      {\n        return value.forEach(function (enhancer) {\n          return addArgTypesEnhancer(enhancer);\n        });\n      }\n\n    case 'argsEnhancers':\n      {\n        return value.forEach(function (enhancer) {\n          return addArgsEnhancer(enhancer);\n        });\n      }\n\n    case 'render':\n      {\n        return setGlobalRender(value);\n      }\n\n    case 'globals':\n    case 'globalTypes':\n      {\n        var v = {};\n        v[key] = value;\n        return addParameters(v, false);\n      }\n\n    case '__namedExportsOrder':\n    case 'decorateStory':\n    case 'renderToDOM':\n      {\n        return null; // This key is not handled directly in v6 mode.\n      }\n\n    default:\n      {\n        // eslint-disable-next-line prefer-template\n        return console.log(key + ' was not supported :( !');\n      }\n  }\n});","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta } from '@storybook/addon-docs';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Introduction\" mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"angular-generic-table-docs\"\n    }}>{`Angular Generic Table Docs`}</h1>\n    <p>{`Generic table version 5 has been rebuilt to be more efficient and to make it easier to customize and add new features. It still relies on native html tables for layout and rendering. Follow the instructions below to get started with the latest release candidate.`}</p>\n    <h2 {...{\n      \"id\": \"install\"\n    }}>{`Install`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`npm install @angular-generic-table/core@rc --save\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"import-module\"\n    }}>{`Import module`}</h2>\n    <p>{`We recommend import `}<inlineCode parentName=\"p\">{`GenericTableCoreModule`}</inlineCode>{` into a shared module eg. `}<inlineCode parentName=\"p\">{`SharedModule`}</inlineCode>{` that can be imported into other, preferably lazy loaded modules when needed.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [...],\n  imports: [\n    ...\n    GenericTableCoreModule\n  ],\n  exports: [\n    GenericTableCoreModule\n  ]\n})\nexport class SharedModule {}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"import-styling\"\n    }}>{`Import styling`}</h2>\n    <p>{`We recommend setting up your Angular project to use scss (SASS) for css preprocessing.`}</p>\n    <p>{`Once configured to use scss, it's just a matter of including the scss to your main styles file, typically it would be `}<inlineCode parentName=\"p\">{`styles.scss`}</inlineCode>{` located at the root of the `}<inlineCode parentName=\"p\">{`src`}</inlineCode>{` folder unless you've changed it.`}</p>\n    <h3 {...{\n      \"id\": \"add-scss\"\n    }}>{`Add scss`}</h3>\n    <p><inlineCode parentName=\"p\">{`{project}/src/styles.scss`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`// import base styles from angular-generic-table/core\n@use '~@angular-generic-table/core/scss' as generic-table-styles;\n@include generic-table-styles.styles(); // all styles\n\n// @include generic-table-styles.search-style(); // search (highlight) style\n// @include generic-table-styles.mobile-style(); // mobile layout style\n// @include generic-table-styles.pagination-style(); // pagination styles\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"override-scss-variables\"\n    }}>{`Override scss variables`}</h3>\n    <p>{`It's possible to override the scss variables used by generic table by passing them when importing the scss.\n`}<inlineCode parentName=\"p\">{`{project}/src/styles.scss`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`// import base styles from angular-generic-table/core and override scss variables\n@use '~@angular-generic-table/core/scss' as generic-table-styles with (\n    $highlight-background-color: purple,\n    $mobile-style-max-width: 375px\n);\n@include generic-table-styles.styles();\n`}</code></pre>\n    <p><strong parentName=\"p\">{`SCSS Variables`}</strong></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Default value`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$highlight-background-color:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`#ffdd00;`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$mobile-style-selector:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`'table.table-mobile';`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$mobile-style-max-width:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`576px;`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$mobile-style-header-font-weight:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`500;`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$mobile-style-header-background-color:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`#fff;`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$mobile-style-button-selector:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`'.btn-sm';`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$mobile-style-border-bottom:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`solid 1px #dedede;`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$mobile-style-button-font-size:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`1rem;`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$mobile-style-button-padding:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`0.5625rem 1rem;`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$pagination-ellipsis-content:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`'...';`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$pagination-active-color:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`#000;`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$pagination-justify-content:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`center;`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"have-other-needs\"\n    }}>{`Have other needs?`}</h3>\n    <p>{`More examples and use cases coming soon! In the meantime create an `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/hjalmers/angular-generic-table/issues\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }}>{`issue over at github`}</a></p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.parameters = { docsOnly: true };\n\nconst componentMeta = { title: 'Introduction', includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","export enum Order {\n  ASC = 'asc',\n  DESC = 'desc',\n}\n","import { TableRow } from '../models/table-row.interface';\nimport { TableConfig } from '../models/table-config.interface';\n\nexport let dashed: (s: string) => string;\ndashed = (s: string) => s.replace(/[A-Z]/g, (m) => '-' + m.toLowerCase());\n\nexport let capitalize: (s: string) => string;\ncapitalize = (s) =>\n  (s.charAt(0).toUpperCase() + s.slice(1))\n    .replace(/_/g, ' ')\n    .replace(/([A-Z][a-z]+)/g, ' $1')\n    .replace(/([A-Z]{2,})/g, ' $1')\n    .replace(/\\s{2,}/g, ' ')\n    .trim();\n\nexport let chunk: (\n  array: Array<any>,\n  chunkSize: number\n) => Array<Array<TableRow>>;\nchunk = (array, chunkSize) => {\n  if (chunkSize < 0) {\n    throw new Error('Invalid chunk size');\n  }\n  if (chunkSize === 0 && !chunkSize) {\n    return [array];\n  }\n  const CHUNK = [];\n  for (let i = 0, len = array.length; i < len; i += chunkSize) {\n    CHUNK.push(array.slice(i, i + chunkSize));\n  }\n  return CHUNK;\n};\n\nexport let search: (\n  text: string,\n  caseSensitive: boolean,\n  data: Array<TableRow>,\n  config: TableConfig\n) => TableRow[];\nsearch = (\n  text: string,\n  caseSensitive: boolean,\n  data: Array<TableRow>,\n  config: TableConfig\n) => {\n  if (config.columns) {\n    const searchColumns = Object.keys(config.columns).filter(\n      // @ts-ignore\n      (key) =>\n        config.columns &&\n        !config.columns[key]?.hidden &&\n        config.columns[key]?.search !== false\n    );\n\n    const FILTERED = [];\n    for (let i = 0; i < data.length; i++) {\n      const row = data[i];\n      const match =\n        Object.entries(row)\n          .filter(([key, value]) => searchColumns.indexOf(key) !== -1)\n          .reduce((acc, [key, value], index): string => {\n            const search = config?.columns![key]?.search;\n            // if search is a function...\n            if (typeof search === 'function') {\n              // ...use search function to return value to search\n              value = search(row, key, value);\n            }\n            return (\n              acc +\n              (index === 0 ? '' : ' ? ') +\n              (caseSensitive ? value + '' : (value + '').toLowerCase())\n            );\n          }, '')\n          .indexOf(caseSensitive ? text : text.toLowerCase()) !== -1;\n      if (match) {\n        FILTERED[FILTERED.length] = row;\n      }\n    }\n    return FILTERED;\n  } else {\n    return data;\n  }\n};\n\nexport let calculate = (data: Array<TableRow>, config: TableConfig) => {\n  const CALCULATIONS: { [key: string]: boolean } = {};\n  const COLUMN_CALCULATIONS: { [key: string]: Array<string> } = {};\n  let CALCULATED = Object.entries(config.footer?.columns || {})\n    .filter(\n      ([columnName, calculations]) =>\n        Object.values(calculations || {}).filter((value) => value !== false)\n          .length >= 0\n    )\n    .reduce((acc: any, [columnName, calculations], index) => {\n      acc[columnName] = Object.entries(calculations || {})\n        .filter(([calculation, value]) => value !== false)\n        .reduce((acc: any, [calculation, value]) => {\n          if (COLUMN_CALCULATIONS[columnName]) {\n            COLUMN_CALCULATIONS[columnName].push(calculation);\n          } else if (value === true) {\n            COLUMN_CALCULATIONS[columnName] = [calculation];\n          }\n          CALCULATIONS[calculation] = true;\n          if (typeof value === 'function') {\n            value = value(data, columnName);\n          }\n          acc[calculation] = value === true ? 0 : value;\n          return acc;\n        }, {});\n      return acc;\n    }, {});\n  if (Object.keys(CALCULATED).length > 0) {\n    for (let i = 0; i < data.length; i++) {\n      Object.entries(COLUMN_CALCULATIONS).forEach(([column, calculations]) => {\n        if (calculations.indexOf('sum') > -1) {\n          CALCULATED[column].sum += data[i][column];\n        }\n        if (\n          calculations.indexOf('avg') > -1 &&\n          calculations.indexOf('sum') === -1\n        ) {\n          if (CALCULATED[column].sum === undefined) {\n            CALCULATED[column].sum = 0;\n          }\n          CALCULATED[column].sum += data[i][column];\n        }\n        if (\n          calculations.indexOf('max') > -1 &&\n          (!CALCULATED[column].max || +data[i][column] > CALCULATED[column].max)\n        ) {\n          CALCULATED[column].max = +data[i][column];\n        }\n        if (\n          calculations.indexOf('min') > -1 &&\n          (!CALCULATED[column].min || +data[i][column] < CALCULATED[column].min)\n        ) {\n          CALCULATED[column].min = +data[i][column];\n        }\n      });\n    }\n    Object.entries(COLUMN_CALCULATIONS).forEach(([column, calculations]) => {\n      if (calculations.indexOf('avg') !== -1) {\n        CALCULATED[column].avg = CALCULATED[column]?.sum / data.length;\n      }\n      if (calculations.indexOf('count') !== -1) {\n        CALCULATED[column].count = data.length;\n      }\n    });\n  }\n  return {\n    calculated: CALCULATED,\n    calculations: Object.keys(CALCULATIONS).sort(\n      (a, b) =>\n        (config.footer?.rowOrder?.indexOf(a) || 0) -\n        (config.footer?.rowOrder?.indexOf(b) || 0)\n    ),\n    calculatedColumnsCount: Object.keys(CALCULATED).length || 0,\n  };\n};\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { capitalize } from '../utilities/utilities';\n\n@Pipe({\n  name: 'capitalCase',\n  standalone: true,\n})\nexport class CapitalCasePipe implements PipeTransform {\n  transform(s: string): any {\n    return capitalize(s);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Order } from '../enums/order.enum';\n\n@Pipe({\n  name: 'sortClass',\n  standalone: true,\n})\nexport class SortClassPipe implements PipeTransform {\n  transform(\n    selection: { sortBy: string; sortByOrder: Order } | any,\n    property: string,\n    aria = false\n  ): string | null {\n    return selection?.sortBy === property\n      ? !aria\n        ? 'gt-sort-' + selection.sortByOrder\n        : selection.sortByOrder + 'ending'\n      : !aria\n      ? ''\n      : null;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { dashed } from '../utilities/utilities';\n\n@Pipe({\n  name: 'dashCase',\n  standalone: true,\n})\nexport class DashCasePipe implements PipeTransform {\n  transform(s: string): any {\n    return dashed(s);\n  }\n}\n","import { Injector, Pipe, PipeTransform, Type } from '@angular/core';\n\n@Pipe({\n  name: 'dynamicPipe',\n  standalone: true,\n})\nexport class DynamicPipe implements PipeTransform {\n  constructor(private injector: Injector) {}\n\n  transform(value: any, requiredPipe: Type<any>, pipeArgs: any[]): any {\n    const injector = Injector.create({\n      name: 'DynamicPipe',\n      parent: this.injector,\n      providers: [{ provide: requiredPipe }],\n    });\n    const pipe = injector.get(requiredPipe);\n    return pipe.transform(value, ...(pipeArgs || []));\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'highlight',\n  standalone: true,\n})\nexport class HighlightPipe implements PipeTransform {\n  transform(text: any, searchTerm: string | null): string {\n    if (!searchTerm) {\n      return text;\n    }\n    const haystackAlwaysString = text + '';\n    let highlightedText = haystackAlwaysString; // fallback\n\n    let searchPattern;\n    try {\n      searchPattern = new RegExp(\n        '(' +\n          // @ts-ignore\n          searchTerm\n            .toLowerCase()\n            .match(/\".*?\"|[^ ]+/g) // extract words\n            .map(\n              (needle) => needle.replace(/\"(.*?)\"/, '$1') // strip away '\"'\n            )\n            .join('|') + // combine words\n          ')',\n        'ig'\n      );\n    } catch (error) {\n      return highlightedText;\n    }\n\n    const containsTagPattern = /(<.*?>)(.*)(<\\/.*?>)/gi;\n    const containsTagMatches = containsTagPattern.exec(haystackAlwaysString);\n\n    if (containsTagMatches) {\n      // tag exists in haystack\n      highlightedText =\n        containsTagMatches[1] +\n        containsTagMatches[2].replace(\n          searchPattern,\n          '<span class=\"gt-highlight-search\">$1</span>'\n        ) +\n        containsTagMatches[3];\n    } else {\n      highlightedText = haystackAlwaysString.replace(\n        searchPattern,\n        '<span class=\"gt-highlight-search\">$1</span>'\n      );\n    }\n\n    return highlightedText;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  EMPTY,\n  isObservable,\n  Observable,\n  of,\n  ReplaySubject,\n  Subject,\n} from 'rxjs';\nimport { TableConfig } from './models/table-config.interface';\nimport {\n  AsyncPipe,\n  KeyValue,\n  KeyValuePipe,\n  NgClass,\n  NgForOf,\n  NgIf,\n  NgTemplateOutlet,\n  SlicePipe,\n} from '@angular/common';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n  map,\n  shareReplay,\n  startWith,\n  switchMap,\n  take,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { TableColumn } from './models/table-column.interface';\nimport { Order } from './enums/order.enum';\nimport { calculate, chunk, search } from './utilities/utilities';\nimport { TableRow } from './models/table-row.interface';\nimport { TableSort } from './models/table-sort.interface';\nimport { TableMeta } from './models/table-meta.interface';\nimport {\n  GtRowClickEvent,\n  GtRowHoverEvent,\n} from './models/table-events.interface';\nimport { CapitalCasePipe } from './pipes/capital-case.pipe';\nimport { SortClassPipe } from './pipes/sort-class.pipe';\nimport { DashCasePipe } from './pipes/dash-case.pipe';\nimport { DynamicPipe } from './pipes/dynamic.pipe';\nimport { HighlightPipe } from './pipes/highlight.pipe';\n\n@Component({\n  selector: 'angular-generic-table',\n  templateUrl: './core.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    CapitalCasePipe,\n    KeyValuePipe,\n    SortClassPipe,\n    DashCasePipe,\n    AsyncPipe,\n    NgTemplateOutlet,\n    SlicePipe,\n    DynamicPipe,\n    HighlightPipe,\n    NgClass,\n    NgIf,\n    NgForOf,\n  ],\n})\nexport class CoreComponent {\n  @Input() set loading(isLoading: Observable<boolean> | boolean) {\n    this._loading$.next(isLoading);\n  }\n  @Input()\n  set page(page: number) {\n    this._currentPage$.next(page);\n  }\n\n  @Input()\n  set search(string: Observable<string> | string | null) {\n    this._searchBy$.next(string);\n  }\n\n  @Input()\n  set config(config: Observable<TableConfig<any>> | TableConfig<any>) {\n    this._tableConfig$.next(config);\n  }\n\n  @Input()\n  set data(data: Observable<Array<TableRow>> | Array<TableRow>) {\n    this._data$.next(data);\n  }\n\n  @Output() rowClick = new EventEmitter<GtRowClickEvent>();\n\n  _rowClick(row: TableRow, index: number, event: MouseEvent): void {\n    this.rowClick.emit({ row, index, event });\n  }\n\n  private _rowHover$ = new ReplaySubject<GtRowHoverEvent>(1);\n  @Output() rowHover = new EventEmitter<GtRowHoverEvent>();\n  rowHover$ = this._rowHover$.asObservable().pipe(\n    debounceTime(50),\n    distinctUntilChanged((p, q) => p.index === q.index),\n    tap((event) => this.rowHover.emit(event)),\n    shareReplay(1)\n  );\n\n  hoverRow(id: string): void;\n  hoverRow(index: number): void;\n  hoverRow(none: null): void;\n  hoverRow(arg: string | number | null): void {\n    if (typeof arg === 'number') {\n      this.data$\n        .pipe(\n          map((data) => data[arg]),\n          take(1)\n        )\n        .subscribe((row) => this._hoverRow(row, arg));\n    } else if (typeof arg === 'string') {\n      // TODO: implement hover by id\n    } else {\n      this._hoverRow(null, null);\n    }\n  }\n  _hoverRow(\n    row: TableRow | null,\n    index: number | null,\n    event?: MouseEvent\n  ): void {\n    this._rowHover$.next({ row, index, event });\n  }\n\n  get loading$(): Observable<boolean> {\n    return this._loading$.pipe(\n      startWith(false),\n      map((value) => (isObservable(value) ? value : of(value))),\n      switchMap((obs) => obs),\n      shareReplay(1)\n    );\n  }\n\n  private _loading$: ReplaySubject<Observable<boolean> | boolean> =\n    new ReplaySubject(1);\n  sortBy$: Subject<TableSort> = new Subject();\n  // tslint:disable-next-line:variable-name\n  private _sortBy: TableSort | undefined;\n\n  // tslint:disable-next-line:variable-name\n  private _searchBy$: ReplaySubject<Observable<string> | string | null> =\n    new ReplaySubject(1);\n  searchBy$: Observable<string | null> = this._searchBy$.pipe(\n    startWith(''),\n    map((value) => (isObservable(value) ? value : of(value))),\n    switchMap((obs) => obs),\n    shareReplay(1)\n  );\n\n  // tslint:disable-next-line:variable-name\n  private _tableConfig$: ReplaySubject<\n    TableConfig<any> | Observable<TableConfig<any>>\n  > = new ReplaySubject(1);\n  tableConfig$ = this._tableConfig$.pipe(\n    map((value) => (isObservable(value) ? value : of(value))),\n    switchMap((obs) => obs),\n    shareReplay(1)\n  );\n\n  private _data$: ReplaySubject<Array<TableRow> | Observable<Array<TableRow>>> =\n    new ReplaySubject(1);\n  data$: Observable<Array<TableRow>> = this._data$.pipe(\n    map((value) => (isObservable(value) ? value : of(value))),\n    switchMap((obs) => combineLatest([obs])),\n    withLatestFrom(this.tableConfig$),\n    map(([[data], config]) => {\n      // if columns or rows contains config for mapTo...\n      if (\n        (config.columns &&\n          !!Object.values(config.columns).find((column) => !!column.mapTo)) ||\n        (config.rows &&\n          !!Object.values(config.rows).find((column) => !!column.mapTo))\n      ) {\n        // ...map data to new keys on row...\n        const newData: TableRow[] = [];\n        for (let i = 0; i < data.length; i++) {\n          const row = data[i];\n          const newKeys = Object.entries(config.columns || config.rows || [])\n            .filter(([key, value]) => !!value.mapTo) // add keys for columns with mapTo config...\n            .reduce(\n              (previousValue, [key, value]) => ({\n                ...previousValue,\n                [key]: this.nestedValue(\n                  row,\n                  value.mapTo!.path,\n                  value.mapTo?.missingValue\n                ),\n              }),\n              {}\n            );\n          newData[i] = { ...row, ...newKeys };\n        }\n        data = newData;\n      }\n      return { data, config };\n    }),\n    switchMap((obs) =>\n      combineLatest([\n        of(obs),\n        this.sortBy$.pipe(startWith(EMPTY)),\n        this.searchBy$,\n      ])\n    ),\n    map(([table, sortBy, searchBy]) => {\n      // create a new array reference and sort new array (prevent mutating existing state)\n      table.data = [...table.data];\n      return !sortBy\n        ? searchBy\n          ? search(searchBy, false, table.data, table.config)\n          : table.data\n        : (searchBy\n            ? search(searchBy, false, table.data, table.config)\n            : table.data\n          )?.sort((a, b) => {\n            // TODO: improve logic\n            const typed = sortBy as TableSort;\n            return a[typed.sortBy] > b[typed.sortBy]\n              ? typed.sortByOrder === Order.ASC\n                ? 1\n                : -1\n              : b[typed.sortBy] > a[typed.sortBy]\n              ? typed.sortByOrder === Order.ASC\n                ? -1\n                : 1\n              : 0;\n          });\n    }),\n    shareReplay(1)\n  );\n\n  calculations$ = combineLatest([this.data$, this.tableConfig$]).pipe(\n    map(([data, config]) => calculate(data, config)),\n    shareReplay(1)\n  );\n\n  table$: Observable<TableMeta> = combineLatest([\n    this.data$,\n    this.tableConfig$,\n  ]).pipe(\n    map(([sorted, config]) => {\n      // if pagination is disabled...\n      if (!config.pagination || config.pagination.length === 0) {\n        // ...return unaltered array\n        return {\n          data: [sorted],\n          config,\n          info: { records: sorted.length, pageTotal: 1 },\n        };\n      }\n      // return record set\n      return {\n        data: chunk(sorted, +(config.pagination.length || 0)),\n        config,\n        info: {\n          records: sorted.length,\n          pageTotal: Math.ceil(\n            sorted.length / +(config.pagination.length || 0)\n          ),\n        },\n      };\n    }),\n    shareReplay(1)\n  );\n\n  private _currentPage$: BehaviorSubject<number> = new BehaviorSubject(0);\n  currentPage$ = combineLatest([this._currentPage$, this.table$]).pipe(\n    map(([page, table]: any) => {\n      // determine last page\n      const lastPage =\n        Math.ceil(\n          table.info.records /\n            (table.config?.pagination?.length || table.info.records)\n        ) - 1;\n      // determine max/min position\n      return +page < 0 ? 0 : +page > lastPage ? lastPage : +page;\n    }),\n    shareReplay(1)\n  );\n\n  colspan$ = this.tableConfig$.pipe(\n    switchMap((config) =>\n      config.columns\n        ? of(\n            Object.values(config.columns || config.rows || {}).filter(\n              (value) => value.hidden !== true\n            ).length\n          )\n        : this.data$.pipe(map((data) => data.length + 1))\n    ),\n    shareReplay(1)\n  );\n\n  footerColspan$ = this.tableConfig$.pipe(\n    map((config) => {\n      let colspan = 0;\n      Object.values(config?.footer?.columns || {}).forEach((calculations) => {\n        if (\n          Object.values(calculations).filter((value) => value !== false)\n            .length >= 0\n        ) {\n          colspan += 1;\n        }\n      }, {});\n      return colspan;\n    }),\n    shareReplay(1)\n  );\n\n  sort(property: string): void {\n    const newSortOrder =\n      this._sortBy?.sortBy !== property ||\n      this._sortBy?.sortByOrder === Order.DESC ||\n      !this._sortBy.sortByOrder\n        ? Order.ASC\n        : Order.DESC;\n    const newSortBy = {\n      sortBy: property,\n      sortByOrder: newSortOrder,\n    };\n    this.sortBy$.next(newSortBy);\n    this._sortBy = newSortBy;\n  }\n\n  columnOrder = (\n    a: KeyValue<string, TableColumn>,\n    b: KeyValue<string, TableColumn>\n  ): number => {\n    return (a.value.order || 0) - (b.value.order || 0);\n  };\n\n  nestedValue(\n    object: any,\n    mapTo: string,\n    missingValue: string | number | null = null\n  ): unknown {\n    const levels = mapTo.split('.');\n    return levels.reduce(\n      (previousValue, currentValue, index) =>\n        previousValue[currentValue] ||\n        (index === levels.length - 1 ? missingValue : {}),\n      object\n    );\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { TableRow } from '../models/table-row.interface';\nimport { NgIf, PercentPipe } from '@angular/common';\n\n@Component({\n  selector: 'gt-delta',\n  template: `<span\n    *ngIf=\"{\n      value:\n        index === 0\n          ? initialValue\n          : ((baseIndex === undefined\n              ? data[index - 1][key]\n              : data[baseIndex][key]) -\n              data[index][key]) /\n            -Math.abs(\n              baseIndex === undefined\n                ? data[index - 1][key]\n                : data[baseIndex][key]\n            )\n    } as delta\"\n    [class]=\"[\n      classes.span,\n      !delta.value || !Number.isFinite(delta.value)\n        ? null\n        : delta.value > 0\n        ? classes.positive\n        : classes.negative\n    ]\"\n    [class.gt-delta-positive]=\"delta.value > 0 && Number.isFinite(delta.value)\"\n    [class.gt-delta-negative]=\"delta.value < 0\"\n    >{{\n      Number.isFinite(delta.value)\n        ? (delta.value | percent)\n        : delta.value === initialValue\n        ? initialValue\n        : notApplicableValue\n    }}</span\n  >`,\n  styles: [\n    `\n      :host {\n        display: inline-block;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [PercentPipe, NgIf],\n})\nexport class GtDeltaComponent {\n  constructor() {}\n  Math = Math;\n  Number = Number;\n  @Input() data: Array<TableRow> = [];\n  @Input() index: number = 0;\n  @Input() baseIndex?: number;\n  @Input() classes = {\n    span: 'gt-delta',\n    positive: 'text-success',\n    negative: 'text-danger',\n  };\n  @Input() key: string = 'value';\n  @Input() notApplicableValue: string = 'n/a';\n  @Input() initialValue: string = '-';\n}\n","import { NgModule } from '@angular/core';\nimport { CoreComponent } from './core.component';\nimport { CommonModule } from '@angular/common';\nimport { SortClassPipe } from './pipes/sort-class.pipe';\nimport { DashCasePipe } from './pipes/dash-case.pipe';\nimport { HighlightPipe } from './pipes/highlight.pipe';\nimport { CapitalCasePipe } from './pipes/capital-case.pipe';\nimport { DynamicPipe } from './pipes/dynamic.pipe';\nimport { GtDeltaComponent } from './gt-delta/gt-delta.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CoreComponent,\n    SortClassPipe,\n    DashCasePipe,\n    HighlightPipe,\n    CapitalCasePipe,\n    CapitalCasePipe,\n    DynamicPipe,\n    GtDeltaComponent,\n  ],\n  exports: [CoreComponent, GtDeltaComponent],\n})\nexport class GenericTableCoreModule {}\n","export const SIMPLE_SNIPPETS = [\n  {\n    name: 'basic-table.component.ts',\n    code: `import { Component } from '@angular/core';\nimport { TableConfig } from '@angular-generic-table/core';\n\ninterface BasicData {\n  firstName: string;\n  lastName: string;\n  gender: 'male' | 'female';\n  favoriteFood: string;\n}\n\n@Component({\n  template: '<angular-generic-table [data]=\"data\" [config]=\"config\"></angular-generic-table>'\n})\nexport class SimpleComponent {\n  data: Array<BasicData> = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config: TableConfig<BasicData> = {\n    columns: {\n      firstName: {},\n      lastName: {},\n      gender: {},\n      favoriteFood: {},\n    },\n  };\n`,\n    language: 'typescript',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { BasicTableComponent } from './basic-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [BasicTableComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [BasicTableComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import { Component } from '@angular/core';\nimport { Story } from '@storybook/angular/types-6-0';\nimport { SIMPLE_SNIPPETS } from './simple.snippets';\nimport { TableConfig } from '@angular-generic-table/core';\ninterface BasicData {\n  firstName: string;\n  lastName: string;\n  gender: 'male' | 'female';\n  favoriteFood: string;\n}\n@Component({\n  template: `\n    <div class=\"overflow-auto\">\n      <angular-generic-table\n        [data]=\"data\"\n        [config]=\"config\"\n      ></angular-generic-table>\n    </div>\n    <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n  `,\n  styles: [],\n})\nexport class SimpleComponent {\n  data: Array<BasicData> = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config: TableConfig<BasicData> = {\n    columns: {\n      firstName: {},\n      lastName: {},\n      gender: {},\n      favoriteFood: {},\n    },\n  };\n\n  SNIPPETS = SIMPLE_SNIPPETS;\n}\n\nexport const Simple: Story<SimpleComponent> = (args: SimpleComponent) => ({\n  props: args,\n  component: SimpleComponent,\n});\n","export const MOBILE_LAYOUT_SNIPPETS = [\n  {\n    name: 'mobile-layout.component.ts',\n    code: `import {Component, Pipe, PipeTransform, TemplateRef, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {TableColumn, TableConfig, TableRow} from \"@angular-generic-table/core\";\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {map} from \"rxjs/operators\";\n\n@Pipe({\n  name: 'genderPipe',\n})\nexport class GenderPipe implements PipeTransform {\n  transform(gender: 'male' | 'female'): string {\n  return gender === 'male' ? '👨' : '👩';\n  }\n}\n\n@Component({\n  selector: 'docs-mobile-layout',\n  template: \\`\n    <div class=\"d-flex justify-content-end mb-1 align-items-center\">\n      {{clicked}} <button class=\"btn btn-link d-sm-none \" (click)=\"toggleLayout()\">{{(mobileLayout$ | async)? 'Desktop ' : 'Mobile '}} layout</button>\n    </div>\n    <div [class.overflow-auto]=\"(mobileLayout$ | async) === false\">\n      <angular-generic-table [data]=\"data\" [config]=\"config$\"></angular-generic-table>\n    </div>\n    <ng-template #actions let-row=\"row\" let-col=\"col\" let-index=\"index\">\n      <button class=\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\" (click)=\"clickAction(row, col, index)\">Click me!</button>\n    </ng-template>\n  \\`,\n  styles: [\\`\n    .table th {\n      white-space: nowrap;\n    }\n  \\`],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MobileLayoutComponent {\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  clicked = '';\n\n  mobileLayout$ = new BehaviorSubject(true);\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config$: Observable<TableConfig> = this.mobileLayout$.pipe(\n    map(mobileLayout => ({\n      mobileLayout,\n      columns: {\n        firstName: {\n          mobileHeader: true,\n          sortable: true\n        },\n        lastName: {\n          mobileHeader: true,\n          sortable: true\n        },\n        gender: {\n          mobileHeader: true,\n          transform: {\n            pipe: GenderPipe\n          }\n        },\n        favoriteFood: {\n          mobileHeader: true\n        },\n        action: {\n          mobileHeader: false,\n          header: false,\n          templateRef: this.actions,\n        },\n      },\n    }))\n  );\n\n  toggleLayout = (): void => {\n    this.mobileLayout$.next(!this.mobileLayout$.getValue());\n  }\n  clickAction(row: TableRow, column: { key: string; value: TableColumn }, index: number): void {\n    console.log('clicked row:', row, 'col:', column);\n    this.clicked = \\`Clicked row number: \\${index}\\`;\n  }\n}`,\n    language: 'typescript',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { MobileLayoutComponent } from './mobile-layout.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [MobileLayoutComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [MobileLayoutComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import {\n  Component,\n  Pipe,\n  PipeTransform,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Story } from '@storybook/angular/types-6-0';\nimport {\n  TableColumn,\n  TableConfig,\n  TableRow,\n} from '@angular-generic-table/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MOBILE_LAYOUT_SNIPPETS } from './mobileLayout.snippets';\n\n@Pipe({\n  name: 'genderPipe',\n})\nexport class GenderPipe implements PipeTransform {\n  transform(gender: 'male' | 'female'): string {\n    return gender === 'male' ? '👨' : '👩';\n  }\n}\n\n@Component({\n  selector: 'docs-mobile-layout',\n  template: `\n    <div class=\"d-flex justify-content-end mb-1 align-items-center\">\n      {{ clicked }}\n      <button class=\"btn btn-link d-sm-none \" (click)=\"toggleLayout()\">\n        {{ (mobileLayout$ | async) ? 'Desktop ' : 'Mobile ' }} layout\n      </button>\n    </div>\n    <div [class.overflow-auto]=\"(mobileLayout$ | async) === false\">\n      <angular-generic-table\n        [data]=\"data\"\n        [config]=\"config$\"\n      ></angular-generic-table>\n    </div>\n    <ng-template #actions let-row=\"row\" let-col=\"col\" let-index=\"index\">\n      <button\n        class=\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\"\n        (click)=\"clickAction(row, col, index)\"\n      >\n        Click me!\n      </button>\n    </ng-template>\n    <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n  `,\n  styles: [\n    `\n      .table th {\n        white-space: nowrap;\n      }\n    `,\n  ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MobileLayoutComponent {\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  clicked = '';\n\n  mobileLayout$ = new BehaviorSubject(true);\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config$: Observable<TableConfig> = this.mobileLayout$.pipe(\n    map((mobileLayout) => ({\n      mobileLayout,\n      columns: {\n        firstName: {\n          mobileHeader: true,\n          sortable: true,\n        },\n        lastName: {\n          mobileHeader: true,\n          sortable: true,\n        },\n        gender: {\n          mobileHeader: true,\n          transform: {\n            pipe: GenderPipe,\n          },\n        },\n        favoriteFood: {\n          mobileHeader: true,\n        },\n        action: {\n          mobileHeader: false,\n          header: false,\n          templateRef: this.actions,\n        },\n      },\n    }))\n  );\n\n  SNIPPETS = MOBILE_LAYOUT_SNIPPETS;\n\n  toggleLayout = (): void => {\n    this.mobileLayout$.next(!this.mobileLayout$.getValue());\n  };\n  clickAction(\n    row: TableRow,\n    column: { key: string; value: TableColumn },\n    index: number\n  ): void {\n    console.log('clicked row:', row, 'col:', column);\n    this.clicked = `Clicked row number: ${index}`;\n  }\n}\n\nexport const Mobile: Story<MobileLayoutComponent> = (\n  args: MobileLayoutComponent\n) => ({\n  props: args,\n  component: MobileLayoutComponent,\n});\n","export const ADVANCED_DOCS = [\n  {\n    name: 'advanced.component.html',\n    code: `<div class=\"row gx-2 gy-3 mb-3\">\n  <div class=\"col-12 col-sm-auto\">\n    <button class=\"btn btn-primary w-100\" (click)=\"addData()\">Add random data</button>\n  </div>\n  <div class=\"col-12 col-sm-auto\">\n    <button class=\"btn btn-danger w-100\" (click)=\"removeData()\">Remove data</button>\n  </div>\n  <div class=\"col-12 col-sm-auto\">\n    <button class=\"btn btn-secondary w-100\" (click)=\"simulateLoad()\">Load</button>\n  </div>\n</div>\n<form [formGroup]=\"paginationForm\">\n  <div class=\"row\">\n    <div class=\"form-group col-12 col-sm-auto\">\n      <label for=\"length_input\">Length</label>\n      <input id=\"length_input\" formControlName=\"length\" type=\"number\" class=\"form-control\">\n    </div>\n    <div class=\"form-group col-12 col-sm-auto\">\n      <label for=\"search_input\">Search</label>\n      <input id=\"search_input\" formControlName=\"search\" type=\"text\" class=\"form-control\">\n    </div>\n  </div>\n</form>\n<div class=\"mx-n3 mx-sm-0\">\n  <angular-generic-table [data]=\"data$\" [config]=\"tableConfig$\" [page]=\"(currentPage$ | async)!\" [search]=\"search$\" [loading]=\"loading$\" #table>\n    <div class=\"table-loading gt-skeleton-loader\"></div>\n    <div class=\"table-no-data alert alert-info mt-3\">\n      Table is empty\n    </div>\n  </angular-generic-table>\n</div>\n<div class=\"row justify-content-between justify-content-sm-center align-items-center mt-3\" *ngIf=\"{current: (currentPage$ | async) || 0,total: (table.table$ | async)?.info?.pageTotal || 1\n} as pagination\">\n  <div class=\"col-auto\">\n    <button class=\"btn btn-primary\" (click)=\"prev()\" [disabled]=\"pagination.current === 0\">Prev</button>\n  </div>\n  <div class=\"col-auto\">\n    <button class=\"btn btn-primary\" (click)=\"next()\" [disabled]=\"pagination.total -1 === pagination.current\">Next</button>\n  </div>\n  <div class=\"col-auto\">Current page: {{pagination.current +1}}</div>\n  <div class=\"col-auto\">Total pages: {{pagination.total}}</div>\n  <div class=\"col-auto\">\n    Records: {{(data$ | async).length}}\n  </div>\n  <div class=\"col-auto\">\n    {{clicked}}\n  </div>\n</div>\n<ng-template #actions let-row=\"row\" let-col=\"col\" let-index=\"index\">\n  <button class=\"btn btn-outline-primary btn-sm my-sm-n3\" (click)=\"clickAction(row, col, index)\">Click me!</button>\n</ng-template>\n<ng-template #color let-row=\"row\" let-col=\"col\">\n  <div [style.background]=\"row[col.key]\" style=\"width: 1.5rem; height: 1.5rem; border-radius: 50%\"></div>\n</ng-template>`,\n    language: 'xml',\n  },\n  {\n    name: 'advanced.component.ts',\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\nimport { FormBuilder } from '@angular/forms';\nimport { TableColumn, TableConfig, TableRow } from '@angular-generic-table/core';\nimport { withLatestFrom } from 'rxjs/operators';\n\n@Component({\n  templateUrl: './advanced.component.html',\n})\nexport class AdvancedComponent implements OnInit {\n  get currentPage$(): Observable<number> {\n    return this._currentPage$.asObservable();\n  }\n\n  set currentPage(value: number) {\n    this._currentPage$.next(value);\n  }\n  constructor(private fb: FormBuilder) {}\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n  paginationForm = this.fb.group({\n    length: [10],\n    search: [''],\n  });\n  search$ = this.paginationForm.get('search')?.valueChanges as Observable<string>;\n  loading$ = new BehaviorSubject(true);\n  data$: BehaviorSubject<any> = new BehaviorSubject([\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteColor: '#26BFAF',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteColor: '#0f0',\n      favoriteFood: 'Pizza',\n    },\n  ]);\n\n  private _currentPage$ = new BehaviorSubject(0);\n\n  clicked: string = '';\n  maleFirstNames = ['Peter', 'Clark', 'Ruben', 'John', 'Jack', 'Roscoe'];\n  femaleFirstNames = ['Mary Jane', 'Kim', 'Sarah', 'Michelle', 'Ann'];\n  lastNames = ['Andersson', 'Smith', 'Parker', 'Kent', 'Rogers', 'Lane', 'Jackson'];\n  foods = ['Pizza', 'Pasta', 'Hamburger', 'Pancakes', 'Tacos', 'Lasagna', 'Meatloaf'];\n  colors = ['#33d60b', '#dcafff', '#3fc9ff', '#ff1600', '#5238b1', '#fff'];\n\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\n\n  addData(): void {\n    this.data$.next([...this.data$.getValue(), this.randomRecord()]);\n  }\n\n  removeData(): void {\n    this.data$.next([]);\n  }\n\n  simulateLoad(): void {\n    this.loading$.next(true);\n    // set loading state to false after 2 seconds\n    setTimeout(() => this.loading$.next(false), 2000);\n  }\n\n  clickAction(row: TableRow, column: { key: string; value: TableColumn }, index: number): void {\n    console.log('clicked row:', row, 'col:', column);\n    this.clicked = \\`clicked row number: \\${index}\\`;\n  }\n\n  randomRecord(): TableRow {\n    const random = Math.floor(Math.random() * 2);\n    const newRecord = {\n      firstName: random\n        ? this.maleFirstNames[Math.floor(Math.random() * this.maleFirstNames.length)]\n        : this.femaleFirstNames[Math.floor(Math.random() * this.femaleFirstNames.length)],\n      lastName: this.lastNames[Math.floor(Math.random() * this.lastNames.length)],\n      gender: random ? 'male' : 'female',\n      favoriteColor: this.colors[Math.floor(Math.random() * this.colors.length)],\n      favoriteFood: this.foods[Math.floor(Math.random() * this.foods.length)],\n    };\n    console.log('added new random record:', newRecord);\n\n    return newRecord;\n  }\n\n  next = () => {\n    this.currentPage = this._currentPage$.value + 1;\n  };\n  prev = () => {\n    this.currentPage = this._currentPage$.value - 1;\n  };\n\n  ngOnInit(): void {\n    this.simulateLoad();\n    this.paginationForm\n      .get('length')\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\n      .subscribe(([length, config]) => {\n        length = +length;\n        this.tableConfig$.next({\n          ...config,\n          pagination: { ...config.pagination, length },\n        });\n      });\n    this.tableConfig$.next({\n      class: 'table table-mobile text-nowrap mb-0',\n      columns: {\n        firstName: {\n          header: 'First name',\n          mobileHeader: true,\n          sortable: true,\n          order: 0,\n        },\n        lastName: {\n          header: 'Last name',\n          mobileHeader: true,\n          hidden: false,\n          sortable: true,\n        },\n        gender: {\n          mobileHeader: 'Sex',\n          sortable: true,\n          order: 1,\n        },\n        favoriteColor: {\n          header: 'Favorite color',\n          mobileHeader: true,\n          templateRef: this.color,\n          sortable: false,\n          order: 2,\n          search: false,\n          class: 'custom-class',\n        },\n        favoriteFood: {\n          mobileHeader: true,\n          header: 'Favorite food',\n          hidden: false,\n          sortable: true,\n          order: 0,\n        },\n        action: {\n          mobileHeader: false,\n          header: false,\n          templateRef: this.actions,\n          order: 6,\n        },\n      },\n      pagination: {\n        length: this.paginationForm.get('length')?.value || 0,\n      },\n      footer: {\n        columns: {\n          gender: {\n            count: (data, key) => {\n              let men = 0;\n              let women = 0;\n              for (let i = 0; i < data.length; i++) {\n                if (data[i][key] === 'female') {\n                  women++;\n                } else if (data[i][key] === 'male') {\n                  men++;\n                }\n              }\n              return \\`♂ \\${men} ♀ \\${women}\\`;\n            },\n          },\n          favoriteColor: {},\n          action: { count: (data, key) => \\`Total: \\${data.length}\\` },\n        },\n      },\n    });\n  }\n}`,\n    language: 'typescript',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AdvancedComponent } from './advanced.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [AdvancedComponent],\n  imports: [BrowserModule, ReactiveFormsModule, GenericTableCoreModule],\n  bootstrap: [AdvancedComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\nimport { UntypedFormBuilder } from '@angular/forms';\nimport {\n  TableConfig,\n  TableRow,\n  TableColumn,\n} from '@angular-generic-table/core';\nimport { withLatestFrom } from 'rxjs/operators';\nimport { Story } from '@storybook/angular/types-6-0';\nimport { ADVANCED_DOCS } from './advanced.snippets';\n\n@Component({\n  selector: 'docs-advanced',\n  templateUrl: './advanced.component.html',\n  styles: [],\n})\nexport class AdvancedComponent implements OnInit {\n  get currentPage$(): Observable<number> {\n    return this._currentPage$.asObservable();\n  }\n\n  set currentPage(value: number) {\n    this._currentPage$.next(value);\n  }\n  constructor(private fb: UntypedFormBuilder) {}\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n  paginationForm = this.fb.group({\n    length: [10],\n    search: [''],\n  });\n  search$ = this.paginationForm.get('search')\n    ?.valueChanges as Observable<string>;\n  loading$ = new BehaviorSubject(true);\n  data$: BehaviorSubject<any> = new BehaviorSubject([\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteColor: '#26BFAF',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteColor: '#0f0',\n      favoriteFood: 'Pizza',\n    },\n  ]);\n\n  private _currentPage$ = new BehaviorSubject(0);\n\n  clicked: string = '';\n  maleFirstNames = ['Peter', 'Clark', 'Ruben', 'John', 'Jack', 'Roscoe'];\n  femaleFirstNames = ['Mary Jane', 'Kim', 'Sarah', 'Michelle', 'Ann'];\n  lastNames = [\n    'Andersson',\n    'Smith',\n    'Parker',\n    'Kent',\n    'Rogers',\n    'Lane',\n    'Jackson',\n  ];\n  foods = [\n    'Pizza',\n    'Pasta',\n    'Hamburger',\n    'Pancakes',\n    'Tacos',\n    'Lasagna',\n    'Meatloaf',\n  ];\n  colors = ['#33d60b', '#dcafff', '#3fc9ff', '#ff1600', '#5238b1', '#fff'];\n\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\n  SNIPPETS = ADVANCED_DOCS;\n\n  addData(): void {\n    this.data$.next([...this.data$.getValue(), this.randomRecord()]);\n  }\n\n  removeData(): void {\n    this.data$.next([]);\n  }\n\n  simulateLoad(): void {\n    this.loading$.next(true);\n    // set loading state to false after 2 seconds\n    setTimeout(() => this.loading$.next(false), 2000);\n  }\n\n  clickAction(\n    row: TableRow,\n    column: { key: string; value: TableColumn },\n    index: number\n  ): void {\n    console.log('clicked row:', row, 'col:', column);\n    this.clicked = `clicked row number: ${index}`;\n  }\n\n  randomRecord(): TableRow {\n    const random = Math.floor(Math.random() * 2);\n    const newRecord = {\n      firstName: random\n        ? this.maleFirstNames[\n            Math.floor(Math.random() * this.maleFirstNames.length)\n          ]\n        : this.femaleFirstNames[\n            Math.floor(Math.random() * this.femaleFirstNames.length)\n          ],\n      lastName:\n        this.lastNames[Math.floor(Math.random() * this.lastNames.length)],\n      gender: random ? 'male' : 'female',\n      favoriteColor:\n        this.colors[Math.floor(Math.random() * this.colors.length)],\n      favoriteFood: this.foods[Math.floor(Math.random() * this.foods.length)],\n    };\n    console.log('added new random record:', newRecord);\n\n    return newRecord;\n  }\n\n  next = () => {\n    this.currentPage = this._currentPage$.value + 1;\n  };\n  prev = () => {\n    this.currentPage = this._currentPage$.value - 1;\n  };\n\n  ngOnInit(): void {\n    this.simulateLoad();\n    this.paginationForm\n      .get('length')\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\n      .subscribe(([length, config]) => {\n        length = +length;\n        this.tableConfig$.next({\n          ...config,\n          pagination: { ...config.pagination, length },\n        });\n      });\n    this.tableConfig$.next({\n      class: 'table text-nowrap mb-0',\n      mobileLayout: true,\n      columns: {\n        firstName: {\n          header: 'First name',\n          mobileHeader: true,\n          sortable: true,\n          order: 0,\n        },\n        lastName: {\n          header: 'Last name',\n          mobileHeader: true,\n          hidden: false,\n          sortable: true,\n        },\n        gender: {\n          mobileHeader: 'Sex',\n          sortable: true,\n          order: 1,\n        },\n        favoriteColor: {\n          header: 'Favorite color',\n          mobileHeader: true,\n          templateRef: this.color,\n          sortable: false,\n          order: 2,\n          search: false,\n          class: 'custom-class',\n        },\n        favoriteFood: {\n          mobileHeader: true,\n          header: 'Favorite food',\n          hidden: false,\n          sortable: true,\n          order: 0,\n        },\n        action: {\n          mobileHeader: false,\n          header: false,\n          templateRef: this.actions,\n          order: 6,\n          class: 'py-1 text-end',\n        },\n      },\n      pagination: {\n        length: this.paginationForm.get('length')?.value || 0,\n      },\n      footer: {\n        columns: {\n          gender: {\n            count: (data, key) => {\n              let men = 0;\n              let women = 0;\n              for (let i = 0; i < data.length; i++) {\n                if (data[i][key] === 'female') {\n                  women++;\n                } else if (data[i][key] === 'male') {\n                  men++;\n                }\n              }\n              return `♂ ${men} ♀ ${women}`;\n            },\n          },\n          favoriteColor: {},\n          action: { count: (data, key) => `Total: ${data.length}` },\n        },\n      },\n    });\n  }\n}\n\nexport const Advanced: Story<AdvancedComponent> = (\n  args: AdvancedComponent\n) => ({\n  props: args,\n  component: AdvancedComponent,\n});\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Story } from '@storybook/angular/types-6-0';\nimport hljs from 'highlight.js/lib/core';\nimport { HighlightResult } from 'highlight.js';\n\nimport typescript from 'highlight.js/lib/languages/typescript';\nimport xml from 'highlight.js/lib/languages/xml';\nimport scss from 'highlight.js/lib/languages/scss';\n\nhljs.registerLanguage('typescript', typescript);\nhljs.registerLanguage('scss', scss);\nhljs.registerLanguage('xml', xml);\n\n@Component({\n  selector: 'docs-tabs',\n  template: `\n    <ul class=\"nav nav-tabs mt-4 flex-nowrap text-nowrap overflow-auto\">\n      <li class=\"nav-item\" *ngFor=\"let item of content; let i = index\">\n        <button\n          class=\"nav-link btn-link\"\n          [class.active]=\"activeIndex === i\"\n          (click)=\"view(i)\"\n        >\n          {{ item.name }}\n        </button>\n      </li>\n    </ul>\n    <ng-container *ngIf=\"activeContent\">\n      <pre><code [innerHTML]=\"activeContent.value\" class=\"{{'language-' + activeContent.language}}\"></code></pre>\n    </ng-container>\n  `,\n  styleUrls: ['./tabs.component.scss'],\n})\nexport class TabsComponent implements OnInit {\n  get content(): any {\n    return this._content;\n  }\n\n  @Input() set content(value: any) {\n    this._content = value;\n  }\n  constructor() {}\n  activeIndex = 0;\n  activeContent: HighlightResult | undefined;\n\n  private _content: Array<{}> = [];\n  ngOnInit(): void {\n    this.activeContent = hljs.highlight(this.content[this.activeIndex].code, {\n      language: this.content[this.activeIndex].language,\n    });\n  }\n\n  view(index: number): void {\n    this.activeIndex = index;\n    this.activeContent = hljs.highlight(this.content[index].code, {\n      language: this.content[index].language,\n    });\n  }\n}\n\nexport const Tabs: Story<TabsComponent> = (args: TabsComponent) => ({\n  props: args,\n  component: TabsComponent,\n});\n","export const CUSTOM_TEMPLATES_DOCS = [\n  {\n    name: 'custom-templates.component.ts',\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { TableColumn, TableConfig, TableRow } from '@angular-generic-table/core';\nimport { ReplaySubject } from 'rxjs';\n\n@Component({\n  selector: 'custom-templates',\n  templateUrl: \\`./custom-templates.component.html\\`\n})\nexport class CustomTemplatesComponent implements OnInit {\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n  clicked = '';\n\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteColor: '#26BFAF',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteColor: '#0f0',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config$: ReplaySubject<TableConfig> = new ReplaySubject(1);\n  ngOnInit(): void {\n    this.config$.next({\n      columns: {\n        firstName: {},\n        lastName: {},\n        gender: {},\n        favoriteColor: {\n          templateRef: this.color,\n        },\n        favoriteFood: {},\n        action: {\n          templateRef: this.actions,\n        },\n      },\n    });\n  }\n  clickAction(row: TableRow, column: { key: string; value: TableColumn }, index: number): void {\n    console.log('clicked row:', row, 'col:', column);\n    this.clicked = \\`clicked row number: \\${index}\\`;\n  }\n}`,\n    language: 'typescript',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { CustomTemplatesComponent } from './custom-templates-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [CustomTemplatesComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [CustomTemplatesComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n  {\n    name: 'custom-templates.component.html',\n    code: `<angular-generic-table [data]=\"data\" [config]=\"config$\"></angular-generic-table>\n<ng-template #actions let-row=\"row\" let-col=\"col\" let-index=\"index\">\n <button class=\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\" (click)=\"clickAction(row, col, index)\">Click me!</button>\n</ng-template>\n<ng-template #color let-row=\"row\" let-col=\"col\">\n <div [style.background]=\"row[col.key]\" style=\"width: 1.5rem; height: 1.5rem; border-radius: 50%\"></div>\n</ng-template>\n{{ clicked }}`,\n    language: 'xml',\n  },\n];\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { Story } from '@storybook/angular/types-6-0';\nimport {\n  TableConfig,\n  TableRow,\n  TableColumn,\n} from '@angular-generic-table/core';\nimport { ReplaySubject } from 'rxjs';\nimport { CUSTOM_TEMPLATES_DOCS } from './custom-templates.snippets';\n\n@Component({\n  selector: 'docs-custom-templates',\n  template: `\n    <div class=\"overflow-auto\">\n      <angular-generic-table\n        [data]=\"data\"\n        [config]=\"config$\"\n      ></angular-generic-table>\n    </div>\n    <ng-template #actions let-row=\"row\" let-col=\"col\" let-index=\"index\">\n      <button\n        class=\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\"\n        (click)=\"clickAction(row, col, index)\"\n      >\n        Click me!\n      </button>\n    </ng-template>\n    <ng-template #color let-row=\"row\" let-col=\"col\">\n      <div\n        [style.background]=\"row[col.key]\"\n        style=\"width: 1.5rem; height: 1.5rem; border-radius: 50%\"\n      ></div>\n    </ng-template>\n    {{ clicked }}\n    <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n  `,\n})\nexport class CustomTemplatesComponent implements OnInit {\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n  clicked = '';\n\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteColor: '#26BFAF',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteColor: '#0f0',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config$: ReplaySubject<TableConfig> = new ReplaySubject(1);\n\n  SNIPPETS = CUSTOM_TEMPLATES_DOCS;\n  ngOnInit(): void {\n    this.config$.next({\n      columns: {\n        firstName: {},\n        lastName: {},\n        gender: {},\n        favoriteColor: {\n          templateRef: this.color,\n        },\n        favoriteFood: {},\n        action: {\n          templateRef: this.actions,\n        },\n      },\n    });\n  }\n  clickAction(\n    row: TableRow,\n    column: { key: string; value: TableColumn },\n    index: number\n  ): void {\n    console.log('clicked row:', row, 'col:', column);\n    this.clicked = `clicked row number: ${index}`;\n  }\n}\n\nexport const CustomTemplates: Story<CustomTemplatesComponent> = (\n  args: CustomTemplatesComponent\n) => ({\n  props: args,\n  component: CustomTemplatesComponent,\n});\n","export const ADVANCED_DOCS = [\n  {\n    name: 'pagination.component.html',\n    code: `<form [formGroup]=\"paginationForm\">\n  <div class=\"row gy-3\">\n    <div class=\"form-group col-12 col-sm-auto\">\n      <label for=\"length_input\">Length</label>\n      <input id=\"length_input\" formControlName=\"length\" type=\"number\" class=\"form-control\">\n    </div>\n    <div class=\"form-group col-12 col-sm-auto\">\n      <label for=\"search_input\">Search</label>\n      <input id=\"search_input\" formControlName=\"search\" type=\"text\" class=\"form-control\">\n    </div>\n  </div>\n</form>\n<div class=\"mx-n3 mx-sm-0 my-3 overflow-auto\">\n  <angular-generic-table [data]=\"data$\" [config]=\"tableConfig$\" [search]=\"search$\" [loading]=\"loading$\" #table>\n    <div class=\"table-loading gt-skeleton-loader\"></div>\n    <div class=\"table-no-data alert alert-info mt-3\">\n      Table is empty\n    </div>\n  </angular-generic-table>\n</div>\n<angular-generic-table-pagination [table]=\"table\">\n</angular-generic-table-pagination>`,\n    language: 'xml',\n  },\n  {\n    name: 'pagination.component.ts',\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\nimport { FormBuilder } from '@angular/forms';\nimport { TableConfig } from '@angular-generic-table/core';\nimport { pluck, tap, withLatestFrom } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'docs-pagination',\n  templateUrl: './pagination.component.html',\n  styles: [],\n})\nexport class PaginationComponent implements OnInit {\n  constructor(private fb: FormBuilder, private http: HttpClient) {}\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n  paginationForm = this.fb.group({\n    length: [10],\n    search: [''],\n  });\n  search$ = this.paginationForm.get('search')?.valueChanges as Observable<string>;\n  loading$ = new BehaviorSubject(true);\n  data$: Observable<any> = this.http.get('https://private-730c61-generictable.apiary-mock.com/data').pipe(\n    pluck('data'),\n    tap((_) => this.loading$.next(false))\n  );\n\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\n\n  ngOnInit(): void {\n    this.paginationForm\n      .get('length')\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\n      .subscribe(([length, config]) => {\n        length = +length;\n        this.tableConfig$.next({\n          ...config,\n          pagination: { ...config.pagination, length },\n        });\n      });\n    this.tableConfig$.next({\n      class: 'table text-nowrap',\n      columns: {\n        first_name: {\n          sortable: true,\n        },\n        last_name: {\n          sortable: true,\n        },\n        gender: {\n          sortable: true,\n        },\n        birthday: {\n          sortable: true,\n          class: 'text-end',\n          transform: {\n            pipe: DatePipe,\n            args: ['longDate'],\n          },\n        },\n      },\n      pagination: {\n        length: this.paginationForm.get('length')?.value || 0,\n      },\n    });\n  }\n}`,\n    language: 'typescript',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { PaginationComponent } from './pagination.component';\nimport { GenericTableCoreModule, GenericTablePaginationModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [PaginationComponent],\n  imports: [\n    BrowserModule,\n    GenericTableCoreModule,\n    GenericTablePaginationModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  bootstrap: [PaginationComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\nimport { UntypedFormBuilder } from '@angular/forms';\nimport { TableConfig } from '@angular-generic-table/core';\nimport { pluck, tap, withLatestFrom } from 'rxjs/operators';\nimport { Story } from '@storybook/angular/types-6-0';\nimport { ADVANCED_DOCS } from './pagination.snippets';\nimport { HttpClient } from '@angular/common/http';\nimport { DatePipe, formatDate } from '@angular/common';\n\n@Component({\n  selector: 'docs-pagination',\n  templateUrl: './pagination.component.html',\n  styles: [],\n})\nexport class PaginationComponent implements OnInit {\n  constructor(private fb: UntypedFormBuilder, private http: HttpClient) {}\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n  paginationForm = this.fb.group({\n    length: [10],\n    search: [''],\n  });\n  search$ = this.paginationForm.get('search')\n    ?.valueChanges as Observable<string>;\n  loading$ = new BehaviorSubject(true);\n  data$: Observable<any> = this.http\n    .get('https://private-730c61-generictable.apiary-mock.com/data')\n    .pipe(\n      pluck('data'),\n      tap((_) => this.loading$.next(false))\n    );\n\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\n  SNIPPETS = ADVANCED_DOCS;\n\n  ngOnInit(): void {\n    this.paginationForm\n      .get('length')\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\n      .subscribe(([length, config]) => {\n        length = +length;\n        this.tableConfig$.next({\n          ...config,\n          pagination: { ...config.pagination, length },\n        });\n      });\n    this.tableConfig$.next({\n      class: 'table text-nowrap',\n      columns: {\n        first_name: {\n          sortable: true,\n        },\n        last_name: {\n          sortable: true,\n        },\n        gender: {\n          sortable: true,\n        },\n        birthday: {\n          sortable: true,\n          class: 'text-end justify-content-end',\n          search: (row, column) => formatDate(row[column], 'longDate', 'en'),\n          transform: {\n            pipe: DatePipe,\n            args: ['longDate'],\n          },\n        },\n      },\n      pagination: {\n        length: this.paginationForm.get('length')?.value || 0,\n      },\n    });\n  }\n}\n\nexport const Pagination: Story<PaginationComponent> = (\n  args: PaginationComponent\n) => ({\n  props: args,\n  component: PaginationComponent,\n});\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { combineLatest, ReplaySubject } from 'rxjs';\nimport { map, pluck, switchMap } from 'rxjs/operators';\nimport { CoreComponent } from '../core.component';\nimport {\n  GtPaginationAriaLabels,\n  GtPaginationClasses,\n} from '../models/gt-pagination';\nimport { AsyncPipe, NgForOf, NgIf } from '@angular/common';\n\n@Component({\n  selector: 'angular-generic-table-pagination',\n  templateUrl: './pagination.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [AsyncPipe, NgIf, NgForOf],\n})\nexport class PaginationComponent {\n  get paginationLength(): number {\n    return this._paginationLength;\n  }\n\n  @Input() set paginationLength(value: number) {\n    this._paginationLength = +value;\n  }\n  get classes(): GtPaginationClasses {\n    return this._classes;\n  }\n\n  @Input() set classes(value: GtPaginationClasses) {\n    this._classes = value;\n  }\n  get ariaLabels(): GtPaginationAriaLabels {\n    return this._ariaLabels;\n  }\n\n  @Input() set ariaLabels(value: GtPaginationAriaLabels) {\n    this._ariaLabels = value;\n  }\n  get table(): CoreComponent {\n    return <CoreComponent>this._table;\n  }\n  @Input() set table(value: CoreComponent) {\n    this._table = value;\n    this.table$.next(value);\n  }\n\n  table$: ReplaySubject<CoreComponent> = new ReplaySubject(1);\n  private _table: CoreComponent | undefined;\n  private _ariaLabels: GtPaginationAriaLabels = {\n    nav: 'Table pagination',\n    button: 'Go to page ',\n  };\n  private _classes: GtPaginationClasses = {\n    ul: 'pagination',\n    li: 'page-item',\n    button: 'page-link',\n  };\n  private _paginationLength: number = 5;\n  pagination$ = this.table$.pipe(\n    switchMap((core) =>\n      combineLatest([core?.table$.pipe(pluck('info')), core?.currentPage$])\n    ),\n    map(([info, currentPage]) => this.generateList(info.pageTotal, currentPage))\n  );\n\n  generateList(pages: number, currentPosition: number): Array<number> {\n    const middle = Math.floor(this.paginationLength / 2);\n    const length =\n      pages < this.paginationLength ? pages : this.paginationLength;\n\n    return Array.from({ length }, (_, i) => {\n      if (i === 0) {\n        return 1;\n      } else if (pages < this.paginationLength) {\n        return i + 1;\n      } else if (i + 1 === length) {\n        return pages;\n      } else if (currentPosition > middle && currentPosition < pages - middle) {\n        return i + currentPosition - (middle - 1);\n      } else if (\n        currentPosition > middle &&\n        currentPosition < pages - (middle - 1)\n      ) {\n        return i + currentPosition - middle;\n      } else if (\n        currentPosition > middle &&\n        currentPosition === pages - (middle - 1)\n      ) {\n        return i + currentPosition - (middle + 1);\n      } else if (currentPosition > middle && currentPosition === pages - 1) {\n        return i + currentPosition - (middle + 2);\n      } else {\n        return i + 1;\n      }\n    });\n  }\n\n  goto(page: number): void {\n    if (this.table) {\n      this.table.page = page - 1;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PaginationComponent } from './pagination.component';\n\n@NgModule({\n  imports: [CommonModule, PaginationComponent],\n  exports: [PaginationComponent],\n})\nexport class GenericTablePaginationModule {}\n","export const HORIZONTAL_TABLE_SNIPPETS = [\n  {\n    name: 'horizontal-table.component.ts',\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { GtDeltaComponent, TableConfig } from '@angular-generic-table/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'docs-horizontal',\n  templateUrl: './horizontal-table.component.html',\n  styles: [],\n})\nexport class TransposeComponent implements OnInit {\n  @ViewChild('feelings', { static: true }) feelings:\n    | TemplateRef<any>\n    | undefined;\n  @ViewChild('delta', { static: true }) delta: TemplateRef<GtDeltaComponent> | undefined;\n  @ViewChild('deltaIndex', { static: true }) deltaIndex:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  loading$ = new BehaviorSubject(false);\n  config: TableConfig = {};\n  data: any = [];\n\n  ngOnInit(): void {\n    this.config = {\n      stickyHeaders: {\n        row: true,\n      },\n      mobileLayout: true,\n      rows: {\n        year: {\n          class: 'text-end',\n          header: false\n        },\n        value: {\n          class: 'text-end'\n        },\n        delta: {\n          header: 'Delta %',\n          templateRef: this.delta,\n          class: 'text-end'\n        },\n        deltaIndex: {\n          header: 'Since inception %',\n          templateRef: this.deltaIndex,\n          class: 'text-end'\n        },\n        feeling: {\n          templateRef: this.feelings,\n          class: 'text-end'\n        },\n      },\n    };\n    this.load();\n  }\n  simulateLoad(): void {\n    this.loading$.next(true);\n    // set loading state to false after 2 seconds\n    setTimeout(() => this.loading$.next(false), 2000);\n  }\n  empty(): void {\n    this.data = [];\n  }\n  load(): void {\n    this.data = [\n      {\n        year: '2017',\n        value: 50,\n        feeling: 'neutral'\n      },\n      {\n        year: '2018',\n        value: 75,\n        feeling: 'positive'\n      },\n      {\n        year: '2019',\n        value: 100,\n        feeling: 'thrilled'\n      },\n      {\n        year: '2020',\n        value: 250,\n        feeling: 'thrilled'\n      },\n      {\n        year: '2021',\n        value: 50,\n        feeling: 'negative'\n      }\n    ];\n  }\n}\n`,\n    language: 'typescript',\n  },\n  {\n    name: 'horizontal-table.component.html',\n    code: `<button class=\"btn btn-outline-primary\" (click)=\"simulateLoad()\">Simulate load</button>\n<button class=\"btn btn-outline-danger mx-3\" (click)=\"empty()\">Empty</button>\n<button class=\"btn btn-outline-primary\" (click)=\"load()\">Reset</button>\n<div class=\"overflow-auto\">\n  <angular-generic-table\n    [data]=\"data\"\n    [config]=\"config\"\n    [loading]=\"loading$\"\n  >\n    <div class=\"table-loading gt-skeleton-loader\"></div>\n    <div class=\"table-no-data alert alert-info mt-3\">Table is empty</div>\n  </angular-generic-table>\n</div>\n<ng-template #feelings let-row=\"row\" let-col=\"col\">\n  <div [ngSwitch]=\"row[col.key]\">\n    <ng-container *ngSwitchCase=\"'thrilled'\">😀</ng-container>\n    <ng-container *ngSwitchCase=\"'positive'\">🙂</ng-container>\n    <ng-container *ngSwitchCase=\"'neutral'\">😐</ng-container>\n    <ng-container *ngSwitchCase=\"'negative'\">😭</ng-container>\n  </div>\n</ng-template>\n<ng-template #delta let-data=\"data\" let-index=\"index\">\n  <gt-delta [index]=\"index\" [data]=\"data\"></gt-delta>\n</ng-template>\n<ng-template #deltaIndex let-data=\"data\" let-index=\"index\">\n  <gt-delta [index]=\"index\" [baseIndex]=\"0\" [data]=\"data\"></gt-delta>\n</ng-template>`,\n    language: 'xml',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HorizontalTableComponent } from './horizontal-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [HorizontalTableComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [HorizontalTableComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { Story } from '@storybook/angular/types-6-0';\nimport { HORIZONTAL_TABLE_SNIPPETS } from './horizontal-table.snippets';\nimport { GtDeltaComponent, TableConfig } from '@angular-generic-table/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'docs-horizontal-table',\n  template: `\n    <button class=\"btn btn-outline-primary\" (click)=\"simulateLoad()\">\n      Simulate load\n    </button>\n    <button class=\"btn btn-outline-danger mx-3\" (click)=\"empty()\">Empty</button>\n    <button class=\"btn btn-outline-primary\" (click)=\"load()\">Reset</button>\n    <div class=\"overflow-auto\">\n      <angular-generic-table\n        [data]=\"data\"\n        [config]=\"config\"\n        [loading]=\"loading$\"\n      >\n        <div class=\"table-loading gt-skeleton-loader\"></div>\n        <div class=\"table-no-data alert alert-info mt-3\">Table is empty</div>\n      </angular-generic-table>\n    </div>\n    <ng-template #feelings let-row=\"row\" let-col=\"col\">\n      <div [ngSwitch]=\"row[col.key]\">\n        <ng-container *ngSwitchCase=\"'thrilled'\">😀</ng-container>\n        <ng-container *ngSwitchCase=\"'positive'\">🙂</ng-container>\n        <ng-container *ngSwitchCase=\"'neutral'\">😐</ng-container>\n        <ng-container *ngSwitchCase=\"'negative'\">😭</ng-container>\n      </div>\n    </ng-template>\n    <ng-template #delta let-data=\"data\" let-index=\"index\">\n      <gt-delta [index]=\"index\" [data]=\"data\"></gt-delta>\n    </ng-template>\n    <ng-template #deltaIndex let-data=\"data\" let-index=\"index\">\n      <gt-delta [index]=\"index\" [baseIndex]=\"0\" [data]=\"data\"></gt-delta>\n    </ng-template>\n    <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n  `,\n  styles: [],\n})\nexport class HorizontalTableComponent implements OnInit {\n  @ViewChild('feelings', { static: true }) feelings:\n    | TemplateRef<any>\n    | undefined;\n  @ViewChild('delta', { static: true }) delta:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  @ViewChild('deltaIndex', { static: true }) deltaIndex:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  loading$ = new BehaviorSubject(false);\n  config: TableConfig = {};\n  data: any = [];\n\n  ngOnInit(): void {\n    this.config = {\n      stickyHeaders: {\n        row: true,\n      },\n      mobileLayout: true,\n      rows: {\n        year: {\n          class: 'text-end',\n          header: false,\n        },\n        value: {\n          class: 'text-end',\n        },\n        delta: {\n          header: 'Delta %',\n          templateRef: this.delta,\n          class: 'text-end',\n        },\n        deltaIndex: {\n          header: 'Since inception %',\n          templateRef: this.deltaIndex,\n          class: 'text-end',\n        },\n        feeling: {\n          templateRef: this.feelings,\n          class: 'text-end',\n        },\n      },\n    };\n    this.load();\n  }\n  simulateLoad(): void {\n    this.loading$.next(true);\n    // set loading state to false after 2 seconds\n    setTimeout(() => this.loading$.next(false), 2000);\n  }\n  empty(): void {\n    this.data = [];\n  }\n  load(): void {\n    this.data = [\n      {\n        year: '2017',\n        value: 50,\n        feeling: 'neutral',\n      },\n      {\n        year: '2018',\n        value: 75,\n        feeling: 'positive',\n      },\n      {\n        year: '2019',\n        value: 100,\n        feeling: 'thrilled',\n      },\n      {\n        year: '2020',\n        value: 250,\n        feeling: 'thrilled',\n      },\n      {\n        year: '2021',\n        value: 50,\n        feeling: 'negative',\n      },\n    ];\n  }\n\n  SNIPPETS = HORIZONTAL_TABLE_SNIPPETS;\n}\n\nexport const Horizontal: Story<HorizontalTableComponent> = (\n  args: HorizontalTableComponent\n) => ({\n  props: args,\n  component: HorizontalTableComponent,\n});\n","export const NESTED_SNIPPETS = [\n  {\n    name: 'nested-data.component.ts',\n    code: `import {Component, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {TableConfig, TableRows} from \"@angular-generic-table/core\";\n\ninterface NestedData {\n  name: {\n    first: string;\n    last: string;\n  };\n  data: {\n    details?: {\n      gender: 'male' | 'female';\n      favoriteFood: 'Pasta' | 'Pizza';\n    };\n  };\n}\n\ninterface Data {\n  firstName: string;\n  lastName: string;\n  gender: 'male' | 'female';\n  favoriteFood: 'Pasta' | 'Pizza';\n  missing: string;\n}\n@Component({\n  selector: 'nested-data',\n  template: \\`\n    <div class=\"row gy-3\">\n      <div class=\"col col-sm-auto\">\n        <button class=\"btn btn-outline-primary mb-3\" (click)=\"loadData()\">\n          Load other data\n        </button>\n      </div>\n      <div class=\"col col-sm-auto\">\n        <button class=\"btn btn-outline-primary mb-3\" (click)=\"resetData()\">\n          Reset\n        </button>\n      </div>\n    </div>\n    <angular-generic-table [data]=\"data\" [config]=\"config\"></angular-generic-table>\n    <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n    <ng-template #gender let-row=\"row\" let-col=\"col\">\n      <div [ngSwitch]=\"row[col.key]\">\n        <ng-container *ngSwitchCase=\"'male'\">♂️</ng-container>\n        <ng-container *ngSwitchCase=\"'female'\">♀️</ng-container>\n      </div>\n    </ng-template>\n  \\`,\n  styles: [],\n})\nexport class NestedDataComponent implements OnInit {\n  @ViewChild('gender', { static: true }) gender: TemplateRef<any> | undefined;\n\n  config: TableConfig<Data> = {};\n  data: Array<NestedData> = [];\n  ngOnInit(): void {\n    this.resetData();\n    this.config = {\n      columns: {\n        firstName: {\n          sortable: true,\n          mapTo: { path: 'name.first' },\n        },\n        lastName: {\n          mapTo: { path: 'name.last' },\n        },\n        gender: {\n          mapTo: { path: 'data.details.gender' },\n          templateRef: this.gender,\n        },\n        favoriteFood: {\n          mapTo: { path: 'data.details.favoriteFood', missingValue: 'n/a' },\n        },\n        missing: {\n          mapTo: { path: 'data.missingKey.noMatch', missingValue: 'n/a' },\n        },\n      },\n    };\n  }\n\n  resetData() {\n    this.data = [\n      {\n        name: {\n          first: 'Peter',\n          last: 'Parker',\n        },\n        data: {\n          details: {\n            gender: 'male',\n            favoriteFood: 'Pasta',\n          },\n        },\n      },\n      {\n        name: {\n          first: 'Mary Jane',\n          last: 'Watson',\n        },\n        data: {\n          details: {\n            gender: 'female',\n            favoriteFood: 'Pizza',\n          },\n        },\n      },\n    ];\n  }\n\n  loadData(): void {\n    this.data = [\n      {\n        name: {\n          first: 'John',\n          last: 'Doe',\n        },\n        data: {\n          details: {\n            gender: 'male',\n            favoriteFood: 'Pasta',\n          },\n        },\n      },\n      {\n        name: {\n          first: 'Jane',\n          last: 'Doe',\n        },\n        data: {\n          details: {\n            gender: 'female',\n            favoriteFood: 'Pizza',\n          },\n        },\n      },\n      {\n        name: {\n          first: 'Foo',\n          last: 'Bar',\n        },\n        data: {},\n      },\n    ];\n  }\n}`,\n    language: 'typescript',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { NestedDataComponent } from './nested-data.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [NestedDataComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [NestedDataComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import { NESTED_SNIPPETS } from './nested.snippets';\nimport { Story } from '@storybook/angular/types-6-0';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { TableConfig } from '@angular-generic-table/core';\ninterface NestedData {\n  name: {\n    first: string;\n    last: string;\n  };\n  data: {\n    details?: {\n      gender: 'male' | 'female';\n      favoriteFood: 'Pasta' | 'Pizza';\n    };\n  };\n}\n\ninterface Data {\n  firstName: string;\n  lastName: string;\n  gender: 'male' | 'female';\n  favoriteFood: 'Pasta' | 'Pizza';\n  missing: string;\n}\n@Component({\n  selector: 'nested-data',\n  template: `\n    <div class=\"row gy-3\">\n      <div class=\"col col-sm-auto\">\n        <button class=\"btn btn-outline-primary mb-3\" (click)=\"loadData()\">\n          Load other data\n        </button>\n      </div>\n      <div class=\"col col-sm-auto\">\n        <button class=\"btn btn-outline-primary mb-3\" (click)=\"resetData()\">\n          Reset\n        </button>\n      </div>\n    </div>\n    <div class=\"overflow-auto\">\n      <angular-generic-table\n        [data]=\"data\"\n        [config]=\"config\"\n      ></angular-generic-table>\n    </div>\n    <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n    <ng-template #gender let-row=\"row\" let-col=\"col\">\n      <div [ngSwitch]=\"row[col.key]\">\n        <ng-container *ngSwitchCase=\"'male'\">♂️</ng-container>\n        <ng-container *ngSwitchCase=\"'female'\">♀️</ng-container>\n      </div>\n    </ng-template>\n  `,\n  styles: [],\n})\nexport class NestedDataComponent implements OnInit {\n  @ViewChild('gender', { static: true }) gender: TemplateRef<any> | undefined;\n\n  config: TableConfig<Data> = {};\n  data: Array<NestedData> = [];\n  ngOnInit(): void {\n    this.resetData();\n    this.config = {\n      columns: {\n        firstName: {\n          sortable: true,\n          mapTo: { path: 'name.first' },\n        },\n        lastName: {\n          mapTo: { path: 'name.last' },\n        },\n        gender: {\n          mapTo: { path: 'data.details.gender' },\n          templateRef: this.gender,\n        },\n        favoriteFood: {\n          mapTo: { path: 'data.details.favoriteFood', missingValue: 'n/a' },\n        },\n        missing: {\n          mapTo: { path: 'data.missingKey.noMatch', missingValue: 'n/a' },\n        },\n      },\n    };\n  }\n\n  resetData() {\n    this.data = [\n      {\n        name: {\n          first: 'Peter',\n          last: 'Parker',\n        },\n        data: {\n          details: {\n            gender: 'male',\n            favoriteFood: 'Pasta',\n          },\n        },\n      },\n      {\n        name: {\n          first: 'Mary Jane',\n          last: 'Watson',\n        },\n        data: {\n          details: {\n            gender: 'female',\n            favoriteFood: 'Pizza',\n          },\n        },\n      },\n    ];\n  }\n\n  loadData(): void {\n    this.data = [\n      {\n        name: {\n          first: 'John',\n          last: 'Doe',\n        },\n        data: {\n          details: {\n            gender: 'male',\n            favoriteFood: 'Pasta',\n          },\n        },\n      },\n      {\n        name: {\n          first: 'Jane',\n          last: 'Doe',\n        },\n        data: {\n          details: {\n            gender: 'female',\n            favoriteFood: 'Pizza',\n          },\n        },\n      },\n      {\n        name: {\n          first: 'Foo',\n          last: 'Bar',\n        },\n        data: {},\n      },\n    ];\n  }\n\n  SNIPPETS = NESTED_SNIPPETS;\n}\n\nexport const Nested: Story<NestedDataComponent> = (\n  args: NestedDataComponent\n) => ({\n  props: args,\n  component: NestedDataComponent,\n});\n","export const TRANSPOSE_SNIPPETS = [\n  {\n    name: 'transpose.component.ts',\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { TableConfig, GtDeltaComponent } from '@angular-generic-table/core';\nimport { FormBuilder } from '@angular/forms';\nimport { withLatestFrom } from 'rxjs/operators';\n\ninterface RawData {\n  year: string;\n  value: number;\n}\ninterface YearData extends RawData {\n  delta: number;\n  deltaIndex: number;\n  combined: number;\n}\n\n@Component({\n  selector: 'docs-transpose',\n  templateUrl: './transpose.component.html',\n  styles: []\n})\nexport class TransposeComponent implements OnInit {\n  @ViewChild('delta', { static: true }) delta:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  @ViewChild('deltaIndex', { static: true }) deltaIndex:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  @ViewChild('combined', { static: true }) combined:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  loading$ = new BehaviorSubject(false);\n  reactiveForm = this.fb.group({\n    length: [10],\n    search: [''],\n  });\n  search$ = this.reactiveForm.get('search')?.valueChanges as Observable<string>;\n  tableConfig$: BehaviorSubject<TableConfig<YearData>> = new BehaviorSubject<\n    TableConfig<YearData>\n  >({});\n  data: Array<RawData> = [];\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.transpose();\n    this.load();\n    this.reactiveForm\n      .get('length')\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\n      .subscribe(([length, config]) => {\n        length = +length;\n        this.tableConfig$.next({\n          ...config,\n          pagination: { ...config.pagination, length },\n        });\n      });\n  }\n\n  simulateLoad(): void {\n    this.loading$.next(true);\n    // set loading state to false after 2 seconds\n    setTimeout(() => this.loading$.next(false), 2000);\n  }\n  empty(): void {\n    this.data = [];\n  }\n  load(): void {\n    this.data = [\n      {\n        year: '2010',\n        value: 15,\n      },\n      {\n        year: '2011',\n        value: 30,\n      },\n      {\n        year: '2012',\n        value: 25,\n      },\n      {\n        year: '2013',\n        value: 0,\n      },\n      {\n        year: '2014',\n        value: 40,\n      },\n      {\n        year: '2015',\n        value: 60,\n      },\n      {\n        year: '2016',\n        value: -5,\n      },\n      {\n        year: '2018',\n        value: 75,\n      },\n      {\n        year: '2019',\n        value: 100,\n      },\n      {\n        year: '2020',\n        value: 250,\n      },\n      {\n        year: '2021',\n        value: 50,\n      },\n      {\n        year: '2022',\n        value: 60,\n      },\n    ];\n  }\n  transpose(): void {\n    if (this.tableConfig$.value.columns) {\n      this.tableConfig$.next({\n        stickyHeaders: {\n          row: true,\n          column: true,\n        },\n        rows: {\n          year: {\n            sortable: true,\n            header: false,\n            class: 'text-end',\n          },\n          value: {\n            class: 'text-end',\n          },\n          delta: {\n            header: 'Delta %',\n            templateRef: this.delta,\n            class: 'text-end',\n          },\n          deltaIndex: {\n            header: 'Since inception %',\n            templateRef: this.deltaIndex,\n            class: 'text-end',\n          },\n          combined: {\n            header: 'Value with change',\n            templateRef: this.combined,\n            class: 'text-end text-nowrap',\n          },\n        },\n      });\n    } else {\n      this.tableConfig$.next({\n        stickyHeaders: {\n          row: true,\n          column: true,\n        },\n        columns: {\n          year: {\n            sortable: true,\n          },\n          value: {\n            class: 'text-end',\n          },\n          delta: {\n            header: 'Delta %',\n            templateRef: this.delta,\n            class: 'text-end',\n          },\n          deltaIndex: {\n            header: 'Since inception %',\n            templateRef: this.deltaIndex,\n            class: 'text-end',\n          },\n          combined: {\n            header: 'Value with change',\n            templateRef: this.combined,\n            class: 'text-end text-nowrap',\n          },\n        },\n        pagination: { length: this.reactiveForm.get('length')?.value },\n      });\n    }\n  }\n}\n`,\n    language: 'typescript',\n  },\n  {\n    name: 'horizontal-table.component.html',\n    code: `<form [formGroup]=\"reactiveForm\">\n  <div class=\"row gy-3 gx-3 align-items-end mb-3\">\n    <div class=\"form-group col-6 col-sm-auto\">\n      <label for=\"length_input\">Number of rows</label>\n      <input\n        id=\"length_input\"\n        formControlName=\"length\"\n        type=\"number\"\n        class=\"form-control\"\n      />\n    </div>\n    <div class=\"form-group col-6 col-sm-auto\">\n      <label for=\"search_input\">Search</label>\n      <input\n        id=\"search_input\"\n        formControlName=\"search\"\n        type=\"text\"\n        class=\"form-control\"\n      />\n    </div>\n    <div class=\"col-auto\">\n      <button\n        class=\"btn btn-outline-primary w-100\"\n        (click)=\"simulateLoad()\"\n      >\n        Simulate load\n      </button>\n    </div>\n    <div class=\"col col-sm-auto\">\n      <button class=\"btn btn-outline-danger w-100\" (click)=\"empty()\">\n        Empty\n      </button>\n    </div>\n    <div class=\"col col-sm-auto\">\n      <button class=\"btn btn-outline-primary w-100\" (click)=\"load()\">\n        Reset\n      </button>\n    </div>\n    <div class=\"col col-sm-auto\">\n      <button class=\"btn btn-outline-primary w-100\" (click)=\"transpose()\">\n        Transpose\n      </button>\n    </div>\n  </div>\n  <div class=\"overflow-auto\">\n    <angular-generic-table\n      #table\n      [data]=\"data\"\n      [config]=\"tableConfig$\"\n      [loading]=\"loading$\"\n      [search]=\"search$\"\n    >\n      <div class=\"table-loading gt-skeleton-loader\"></div>\n      <div class=\"table-no-data alert alert-info mt-3\">Table is empty</div>\n    </angular-generic-table>\n  </div>\n  <angular-generic-table-pagination [table]=\"table\">\n  </angular-generic-table-pagination>\n  <ng-template #delta let-index=\"index\" let-data=\"data\">\n    <gt-delta [index]=\"index\" [data]=\"data\"></gt-delta>\n  </ng-template>\n  <ng-template #deltaIndex let-index=\"index\" let-data=\"data\">\n    <gt-delta [index]=\"index\" [data]=\"data\" [baseIndex]=\"0\"></gt-delta>\n  </ng-template>\n  <ng-template\n    #combined\n    let-index=\"index\"\n    let-data=\"data\"\n    let-row=\"row\"\n    let-col=\"col\"\n  >\n    {{ row.value }}\n    <ng-container *ngIf=\"index > 0\">\n      (<gt-delta [index]=\"index\" [data]=\"data\"></gt-delta>)\n    </ng-container>\n  </ng-template>\n</form>`,\n    language: 'xml',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HorizontalTableComponent } from './horizontal-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [HorizontalTableComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [HorizontalTableComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { TableConfig, GtDeltaComponent } from '@angular-generic-table/core';\nimport { UntypedFormBuilder } from '@angular/forms';\nimport { withLatestFrom } from 'rxjs/operators';\nimport { Story } from '@storybook/angular/types-6-0';\nimport { TRANSPOSE_SNIPPETS } from './transpose.snippets';\ninterface RawData {\n  year: string;\n  value: number;\n}\ninterface YearData extends RawData {\n  delta: number;\n  deltaIndex: number;\n  combined: number;\n}\n@Component({\n  selector: 'docs-transpose',\n  template: `\n    <form [formGroup]=\"reactiveForm\">\n      <div class=\"row gy-3 gx-3 align-items-end mb-3\">\n        <div class=\"form-group col-6 col-sm-auto\">\n          <label for=\"length_input\">Number of rows</label>\n          <input\n            id=\"length_input\"\n            formControlName=\"length\"\n            type=\"number\"\n            class=\"form-control\"\n          />\n        </div>\n        <div class=\"form-group col-6 col-sm-auto\">\n          <label for=\"search_input\">Search</label>\n          <input\n            id=\"search_input\"\n            formControlName=\"search\"\n            type=\"text\"\n            class=\"form-control\"\n          />\n        </div>\n        <div class=\"col-auto\">\n          <button\n            class=\"btn btn-outline-primary w-100\"\n            (click)=\"simulateLoad()\"\n          >\n            Simulate load\n          </button>\n        </div>\n        <div class=\"col col-sm-auto\">\n          <button class=\"btn btn-outline-danger w-100\" (click)=\"empty()\">\n            Empty\n          </button>\n        </div>\n        <div class=\"col col-sm-auto\">\n          <button class=\"btn btn-outline-primary w-100\" (click)=\"load()\">\n            Reset\n          </button>\n        </div>\n        <div class=\"col col-sm-auto\">\n          <button class=\"btn btn-outline-primary w-100\" (click)=\"transpose()\">\n            Transpose\n          </button>\n        </div>\n      </div>\n      <div class=\"overflow-auto\">\n        <angular-generic-table\n          #table\n          [data]=\"data\"\n          [config]=\"tableConfig$\"\n          [loading]=\"loading$\"\n          [search]=\"search$\"\n        >\n          <div class=\"table-loading gt-skeleton-loader\"></div>\n          <div class=\"table-no-data alert alert-info mt-3\">Table is empty</div>\n        </angular-generic-table>\n      </div>\n      <angular-generic-table-pagination [table]=\"table\">\n      </angular-generic-table-pagination>\n      <ng-template #delta let-index=\"index\" let-data=\"data\">\n        <gt-delta [index]=\"index\" [data]=\"data\"></gt-delta>\n      </ng-template>\n      <ng-template #deltaIndex let-index=\"index\" let-data=\"data\">\n        <gt-delta [index]=\"index\" [data]=\"data\" [baseIndex]=\"0\"></gt-delta>\n      </ng-template>\n      <ng-template\n        #combined\n        let-index=\"index\"\n        let-data=\"data\"\n        let-row=\"row\"\n        let-col=\"col\"\n      >\n        {{ row.value }}\n        <ng-container *ngIf=\"index > 0\">\n          (<gt-delta [index]=\"index\" [data]=\"data\"></gt-delta>)\n        </ng-container>\n      </ng-template>\n      <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n    </form>\n  `,\n  styles: [],\n})\nexport class TransposeComponent implements OnInit {\n  @ViewChild('delta', { static: true }) delta:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  @ViewChild('deltaIndex', { static: true }) deltaIndex:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  @ViewChild('combined', { static: true }) combined:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  loading$ = new BehaviorSubject(false);\n  reactiveForm = this.fb.group({\n    length: [10],\n    search: [''],\n  });\n  search$ = this.reactiveForm.get('search')?.valueChanges as Observable<string>;\n  tableConfig$: BehaviorSubject<TableConfig<YearData>> = new BehaviorSubject<\n    TableConfig<YearData>\n  >({});\n  data: Array<RawData> = [];\n\n  constructor(private fb: UntypedFormBuilder) {}\n\n  ngOnInit(): void {\n    this.transpose();\n    this.load();\n    this.reactiveForm\n      .get('length')\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\n      .subscribe(([length, config]) => {\n        length = +length;\n        this.tableConfig$.next({\n          ...config,\n          pagination: { ...config.pagination, length },\n        });\n      });\n  }\n\n  simulateLoad(): void {\n    this.loading$.next(true);\n    // set loading state to false after 2 seconds\n    setTimeout(() => this.loading$.next(false), 2000);\n  }\n  empty(): void {\n    this.data = [];\n  }\n  load(): void {\n    this.data = [\n      {\n        year: '2010',\n        value: 15,\n      },\n      {\n        year: '2011',\n        value: 30,\n      },\n      {\n        year: '2012',\n        value: 25,\n      },\n      {\n        year: '2013',\n        value: 0,\n      },\n      {\n        year: '2014',\n        value: 40,\n      },\n      {\n        year: '2015',\n        value: 60,\n      },\n      {\n        year: '2016',\n        value: -5,\n      },\n      {\n        year: '2018',\n        value: 75,\n      },\n      {\n        year: '2019',\n        value: 100,\n      },\n      {\n        year: '2020',\n        value: 250,\n      },\n      {\n        year: '2021',\n        value: 50,\n      },\n      {\n        year: '2022',\n        value: 60,\n      },\n    ];\n  }\n  transpose(): void {\n    if (this.tableConfig$.value.columns) {\n      this.tableConfig$.next({\n        stickyHeaders: {\n          row: true,\n          column: true,\n        },\n        rows: {\n          year: {\n            sortable: true,\n            header: false,\n            class: 'text-end',\n          },\n          value: {\n            class: 'text-end',\n          },\n          delta: {\n            header: 'Delta %',\n            templateRef: this.delta,\n            class: 'text-end',\n          },\n          deltaIndex: {\n            header: 'Since inception %',\n            templateRef: this.deltaIndex,\n            class: 'text-end',\n          },\n          combined: {\n            header: 'Value with change',\n            templateRef: this.combined,\n            class: 'text-end text-nowrap',\n          },\n        },\n      });\n    } else {\n      this.tableConfig$.next({\n        stickyHeaders: {\n          row: true,\n          column: true,\n        },\n        columns: {\n          year: {\n            sortable: true,\n          },\n          value: {\n            class: 'text-end',\n          },\n          delta: {\n            header: 'Delta %',\n            templateRef: this.delta,\n            class: 'text-end',\n          },\n          deltaIndex: {\n            header: 'Since inception %',\n            templateRef: this.deltaIndex,\n            class: 'text-end',\n          },\n          combined: {\n            header: 'Value with change',\n            templateRef: this.combined,\n            class: 'text-end text-nowrap',\n          },\n        },\n        pagination: { length: this.reactiveForm.get('length')?.value },\n      });\n    }\n  }\n  SNIPPETS = TRANSPOSE_SNIPPETS;\n}\n\nexport const Transpose: Story<TransposeComponent> = (\n  args: TransposeComponent\n) => ({\n  props: args,\n  component: TransposeComponent,\n});\n","export const ROW_HOVER_CLICK_SNIPPETS = [\n  {\n    name: 'row-hover-click.component.ts',\n    code: `import { Component } from '@angular/core';\nimport { GtRowClickEvent, GtRowHoverEvent } from '@angular-generic-table/core';\n\n\n@Component({\n  selector: 'row-hover-click-table',\n  template: '<div class=\"overflow-auto\">\n      <button class=\"btn btn-secondary me-3\" (click)=\"tableRef.hoverRow(1)\">\n        Set hover state to second row\n      </button>\n      <button class=\"btn btn-secondary\" (click)=\"tableRef.hoverRow(null)\">\n        Remove hover state\n      </button>\n      <angular-generic-table\n        [data]=\"data\"\n        [config]=\"config\"\n        (rowClick)=\"onRowClick($event)\"\n        (rowHover)=\"onRowHover($event)\"\n        #tableRef\n      ></angular-generic-table>\n    </div>',\n  styles: [\n    \\`\n      :host ::ng-deep .gt-hover {\n        background-color: var(--bs-highlight-bg);\n      }\n    \\`,\n  ],\n})\nexport class RowHoverClickComponent {\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config = {\n    columns: {\n      firstName: {},\n      lastName: {},\n      gender: {},\n      favoriteFood: {},\n    },\n    rowClick: true,\n    rowHover: true,\n  };\n\n  onRowClick(event: GtRowClickEvent) {\n    console.log('row clicked', event);\n  }\n  onRowHover(event: GtRowHoverEvent) {\n    console.log('row hovered', event);\n  }\n`,\n    language: 'typescript',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { RowHoverClickTableComponent } from './events-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [RowHoverClickTableComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [RowHoverClickTableComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import { Component } from '@angular/core';\nimport { Story } from '@storybook/angular/types-6-0';\nimport { ROW_HOVER_CLICK_SNIPPETS } from './row-hower-click.snippets';\nimport { GtRowClickEvent, GtRowHoverEvent } from '@angular-generic-table/core';\n\n@Component({\n  selector: 'docs-row-hover-click',\n  template: `\n    <div class=\"overflow-auto\">\n      <button class=\"btn btn-secondary me-3\" (click)=\"tableRef.hoverRow(1)\">\n        Set hover state to second row\n      </button>\n      <button class=\"btn btn-secondary\" (click)=\"tableRef.hoverRow(null)\">\n        Remove hover state\n      </button>\n      <angular-generic-table\n        [data]=\"data\"\n        [config]=\"config\"\n        (rowClick)=\"onRowClick($event)\"\n        (rowHover)=\"onRowHover($event)\"\n        #tableRef\n      ></angular-generic-table>\n    </div>\n    <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n  `,\n  styles: [\n    `\n      :host ::ng-deep .gt-hover {\n        background-color: var(--bs-highlight-bg);\n      }\n    `,\n  ],\n})\nexport class RowHoverClickComponent {\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config = {\n    columns: {\n      firstName: {},\n      lastName: {},\n      gender: {},\n      favoriteFood: {},\n    },\n    rowClick: true,\n    rowHover: true,\n  };\n\n  onRowClick(event: GtRowClickEvent) {\n    console.log('row clicked', event);\n  }\n  onRowHover(event: GtRowHoverEvent) {\n    console.log('row hovered', event);\n  }\n\n  SNIPPETS = ROW_HOVER_CLICK_SNIPPETS;\n}\n\nexport const RowHoverClick: Story<RowHoverClickComponent> = (\n  args: RowHoverClickComponent\n) => ({\n  props: args,\n  component: RowHoverClickComponent,\n});\n","export const SIMPLE_SNIPPETS = [\n  {\n    name: 'basic-table.component.ts',\n    code: `import { Component } from '@angular/core';\nimport { TableConfig, TableRow } from '@angular-generic-table/core';\nimport { DecimalPipe } from '@angular/common';\n\n@Component({\n  template: \\`\n    <div class=\"overflow-auto\">\n      <angular-generic-table [data]=\"data\" [config]=\"config\">\n      </angular-generic-table>\n    </div>\n  \\`,\n})\nexport class FooterComponent {\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n      age: 27,\n      weight: 85.457,\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n      age: 25,\n      weight: 60.123,\n    },\n  ];\n  config: TableConfig = {\n    columns: {\n      firstName: {},\n      lastName: {},\n      gender: {},\n      favoriteFood: {\n        class: 'text-end flex-end',\n      },\n      age: {\n        class: 'text-end',\n      },\n      weight: {\n        class: 'text-end',\n        transform: {\n          pipe: DecimalPipe,\n          args: ['1.0-2'],\n        },\n      },\n    },\n    footer: {\n      headers: {\n        sum: 'Total',\n        numberOfWomen: 'Number of women',\n        numberOfMen: 'Number of men',\n        min: true,\n        max: true,\n        avg: true,\n        count: true,\n        static: true,\n        first: true,\n      },\n      rowOrder: [\n        'first',\n        'numberOfWomen',\n        'numberOfMen',\n        'min',\n        'max',\n        'sum',\n        'avg',\n        'count',\n      ],\n      columns: {\n        firstName: {},\n        lastName: {\n          static: 'n/a',\n        },\n        gender: {\n          numberOfWomen: (data: Array<TableRow>, key) => {\n            let count = 0;\n            for (let i = 0; i < data.length; i++) {\n              if (data[i][key] === 'female') {\n                count++;\n              }\n            }\n            return count;\n          },\n          numberOfMen: (data: Array<TableRow>, key) => {\n            let count = 0;\n            for (let i = 0; i < data.length; i++) {\n              if (data[i][key] === 'male') {\n                count++;\n              }\n            }\n            return count;\n          },\n        },\n        favoriteFood: {\n          first: (data: Array<TableRow>, key) => data[0][key],\n        },\n        age: {\n          sum: true,\n          avg: true,\n          count: true,\n          max: true,\n          min: true,\n        },\n        weight: {\n          sum: true,\n          avg: true,\n          min: true,\n        },\n      },\n    },\n  };\n}`,\n    language: 'typescript',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { BasicTableComponent } from './basic-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [BasicTableComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [BasicTableComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import { Component } from '@angular/core';\nimport { Story } from '@storybook/angular/types-6-0';\nimport { SIMPLE_SNIPPETS } from './simple.snippets';\nimport { TableConfig, TableRow } from '@angular-generic-table/core';\nimport { DecimalPipe } from '@angular/common';\n\n@Component({\n  selector: 'docs-footer',\n  template: `\n    <div class=\"overflow-auto\">\n      <angular-generic-table [data]=\"data\" [config]=\"config\">\n      </angular-generic-table>\n    </div>\n    <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n  `,\n})\nexport class FooterComponent {\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n      age: 27,\n      weight: 85.457,\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n      age: 25,\n      weight: 60.123,\n    },\n  ];\n  config: TableConfig = {\n    columns: {\n      firstName: {},\n      lastName: {},\n      gender: {},\n      favoriteFood: {\n        class: 'text-end flex-end',\n      },\n      age: {\n        class: 'text-end',\n      },\n      weight: {\n        class: 'text-end',\n        transform: {\n          pipe: DecimalPipe,\n          args: ['1.0-2'],\n        },\n      },\n    },\n    footer: {\n      headers: {\n        sum: 'Total',\n        numberOfWomen: 'Number of women',\n        numberOfMen: 'Number of men',\n        min: true,\n        max: true,\n        avg: true,\n        count: true,\n        static: true,\n        first: true,\n      },\n      rowOrder: [\n        'first',\n        'numberOfWomen',\n        'numberOfMen',\n        'min',\n        'max',\n        'sum',\n        'avg',\n        'count',\n      ],\n      columns: {\n        firstName: {},\n        lastName: {\n          static: 'n/a',\n        },\n        gender: {\n          numberOfWomen: (data: Array<TableRow>, key) => {\n            let count = 0;\n            for (let i = 0; i < data.length; i++) {\n              if (data[i][key] === 'female') {\n                count++;\n              }\n            }\n            return count;\n          },\n          numberOfMen: (data: Array<TableRow>, key) => {\n            let count = 0;\n            for (let i = 0; i < data.length; i++) {\n              if (data[i][key] === 'male') {\n                count++;\n              }\n            }\n            return count;\n          },\n        },\n        favoriteFood: {\n          first: (data: Array<TableRow>, key) => data[0][key],\n        },\n        age: {\n          sum: true,\n          avg: true,\n          count: true,\n          max: true,\n          min: true,\n        },\n        weight: {\n          sum: true,\n          avg: true,\n          min: true,\n        },\n      },\n    },\n  };\n\n  SNIPPETS = SIMPLE_SNIPPETS;\n}\n\nexport const Footer: Story<FooterComponent> = (args: FooterComponent) => ({\n  props: args,\n  component: FooterComponent,\n});\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Story } from '@storybook/addon-docs';\nimport {moduleMetadata} from \"@storybook/angular\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {CommonModule} from \"@angular/common\";\nimport {GenericTableCoreModule} from \"../../../core/src/lib/core.module\";\nimport {Simple, SimpleComponent} from \"../app/examples/simple/simple.component\";\nimport {Mobile, MobileLayoutComponent} from \"../app/examples/mobile-layout/mobile-layout.component\";\nimport {Advanced, AdvancedComponent} from \"../app/examples/advanced/advanced.component\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {TabsComponent} from \"../app/components/tabs/tabs.component\";\nimport {CustomTemplates, CustomTemplatesComponent} from \"../app/examples/custom-templates/custom-templates.component\";\nimport {Pagination, PaginationComponent} from \"../app/examples/pagination/pagination.component\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {GenericTablePaginationModule} from \"../../../core/src/lib/pagination/pagination.module\";\nimport {Horizontal, HorizontalTableComponent} from \"../app/examples/horizontal-table/horizontal-table.component\";\nimport {Nested, NestedDataComponent} from \"../app/examples/nested-data/nested-data.component\";\nimport {Transpose} from '../app/examples/transpose/transpose.component';\nimport { RowHoverClick, RowHoverClickComponent } from '../app/examples/row-hover-click/row-hover-click.component';\nimport { Footer, FooterComponent } from '../app/examples/footer/footer.component';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst Preview = makeShortcode(\"Preview\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Meta title=\"Examples\" decorators={[moduleMetadata({\n      declarations: [CustomTemplatesComponent, SimpleComponent, AdvancedComponent, PaginationComponent, HorizontalTableComponent, TabsComponent, MobileLayoutComponent, NestedDataComponent, RowHoverClickComponent, FooterComponent],\n      imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n    })]} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h1>\n    <h2 {...{\n      \"id\": \"basic-table\"\n    }}>{`Basic table`}</h2>\n    <p>{`Pass `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`config`}</inlineCode>{` to table to generate a table. The example below uses the minimal configuration needed to generate a table with static data.`}</p>\n    <Story name=\"Basic table\" args={{\n      data: [{\n        firstName: 'Mark',\n        lastName: 'Parker',\n        gender: 'male',\n        favoriteFood: 'Pasta'\n      }, {\n        firstName: 'Mary Jane',\n        lastName: 'Watson',\n        gender: 'female',\n        favoriteFood: 'Pizza'\n      }]\n    }} mdxType=\"Story\">\n  {Simple.bind({})}\n    </Story>\n    <h2 {...{\n      \"id\": \"nested-data-table\"\n    }}>{`Nested data table`}</h2>\n    <p>{`Generic table can generate tables based on nested JSON structures, just use `}<inlineCode parentName=\"p\">{`mapTo`}</inlineCode>{` option and pass string path to object value as `}<inlineCode parentName=\"p\">{`path`}</inlineCode>{` and optionally a `}<inlineCode parentName=\"p\">{`missingValue`}</inlineCode>{` value which will be used if key is undefined.`}</p>\n    <Story name=\"Nested data\" args={{\n      data: [{\n        name: {\n          first: 'Peter',\n          last: 'Parker'\n        },\n        data: {\n          details: {\n            gender: 'male',\n            favoriteFood: 'Pasta'\n          }\n        }\n      }, {\n        name: {\n          first: 'Mary Jane',\n          last: 'Watson'\n        },\n        data: {\n          details: {\n            gender: 'female',\n            favoriteFood: 'Pizza'\n          }\n        }\n      }]\n    }} mdxType=\"Story\">\n  {Nested.bind({})}\n    </Story>\n    <h2 {...{\n      \"id\": \"table-footer\"\n    }}>{`Table footer`}</h2>\n    <p>{`Use the footer config option to display accumulations like totals, count, min, max etc. or any other content for that matter in the footer of the table. Pass your own data or accumulator function or use the ones provided by Generic Table.`}</p>\n    <strong>Footer config</strong>\n    <p>{`The footer config has the following options which are described more in detail below.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"footer\": {\n    \"headers\"?: {\n      [key: 'sum'|'avg'|'count'|'max'|'min'|string]: string|boolean;\n    };\n    \"columns\"?: {\n      [key: string]: {\n        [key: 'sum'|'avg'|'count'|'max'|'min'|string]: boolean|number|string|Function;\n      };\n    };\n    \"rowOrder\"?: Array<'sum'|'avg'|'count'|'max'|'min'|string>;\n    \"emptyContent\"?: string;\n  };\n`}</code></pre>\n    <strong>Footer config options</strong>\n    <Preview mdxSource=\"%0A%3Cdiv%20class=%22overflow-auto%22%3E%0A%20%20%20%20%3Ctable%3E%0A%20%20%20%20%20%20%3Cthead%3E%0A%20%20%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%20%20%3Cth%3EOption%3C/th%3E%0A%20%20%20%20%20%20%20%20%3Cth%3EDescription%3C/th%3E%0A%20%20%20%20%20%20%3C/tr%3E%0A%20%20%20%20%20%20%3C/thead%3E%0A%20%20%20%20%20%20%3Ctbody%3E%0A%20%20%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%20%20%3Ctd%3E%3Ccode%3Eheaders%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%20%20%3Ctd%3EKey%20value%20pairs%20for%20headers,%20each%20key%20corresponds%20to%20name%20of%20accumulator.%3C/td%3E%0A%20%20%20%20%20%20%3C/tr%3E%0A%20%20%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%20%20%3Ctd%3E%3Ccode%3Ecolumns%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%20%20%3Ctd%3EKey%20value%20pairs%20with%20columns%20that%20should%20display%20content/accumulations.%20Specify%20which%20accumulator%20to%20use%20%3Ccode%3Emin%3C/code%3E,%20%3Ccode%3Emax%3C/code%3E,%20%3Ccode%3Eavg%3C/code%3E,%20%3Ccode%3Ecount%3C/code%3E,%20%3Ccode%3Esum%3C/code%3E%20or%20define%20your%20own%20one%20or%20add%20fixed%20content%20to%20display.%20%3C/td%3E%0A%20%20%20%20%20%20%3C/tr%3E%0A%20%20%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%20%20%3Ctd%3E%3Ccode%3ErowOrder%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%20%20%3Ctd%3ERow%20order%20for%20accumulators.%3C/td%3E%0A%20%20%20%20%20%20%3C/tr%3E%0A%20%20%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%20%20%3Ctd%3E%3Ccode%3EemptyContent%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%20%20%3Ctd%3EContent%20to%20display%20when%20accumulation%20is%20undefined%20or%20null%20for%20a%20field.%3C/td%3E%0A%20%20%20%20%20%20%3C/tr%3E%0A%20%20%20%20%20%20%3C/tbody%3E%0A%20%20%20%20%3C/table%3E%0A%20%20%3C/div%3E%0A\" mdxType=\"Preview\">\n  <div class=\"overflow-auto\">\n    <table>\n      <thead>\n      <tr>\n        <th>Option</th>\n        <th>Description</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr>\n        <td><code>headers</code></td>\n        <td>Key value pairs for headers, each key corresponds to name of accumulator.</td>\n      </tr>\n      <tr>\n        <td><code>columns</code></td>\n        <td>Key value pairs with columns that should display content/accumulations. Specify which accumulator to use <code>min</code>, <code>max</code>, <code>avg</code>, <code>count</code>, <code>sum</code> or define your own one or add fixed content to display. </td>\n      </tr>\n      <tr>\n        <td><code>rowOrder</code></td>\n        <td>Row order for accumulators.</td>\n      </tr>\n      <tr>\n        <td><code>emptyContent</code></td>\n        <td>Content to display when accumulation is undefined or null for a field.</td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n    </Preview>\n    <strong>Example config</strong>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"footer\": {\n  \"headers\": {\n    \"customFn\": \"Custom\",\n    \"min\": true,\n  },\n  \"columns\": {\n    \"foo\": {\n      \"min\": true,\n      \"max\": true,\n      \"customFn\": (data: Array<TableRow>, key: string) => ...,\n    }\n  },\n  \"rowOrder\": [\"min\", \"max\", \"customFn\"],\n}\n`}</code></pre>\n    <strong>Example</strong><br />\nTake a look at the <a href=\"./?path=/docs/examples--advanced\">Advanced example</a> to view another configuration.\n    <br />\n    <br />\n    <Story name=\"Table footer\" args={{\n      data: [{\n        firstName: 'Peter',\n        lastName: 'Parker',\n        gender: 'male',\n        favoriteFood: 'Pasta',\n        age: 27,\n        weight: 85.457\n      }, {\n        firstName: 'Mary Jane',\n        lastName: 'Watson',\n        gender: 'female',\n        favoriteFood: 'Pizza',\n        age: 25,\n        weight: 60.123\n      }]\n    }} mdxType=\"Story\">\n  {Footer.bind({})}\n    </Story>\n    <h2 {...{\n      \"id\": \"custom-templates\"\n    }}>{`Custom templates`}</h2>\n    <p>{`Define custom templates and assign them to different columns using the `}<inlineCode parentName=\"p\">{`templateRef`}</inlineCode>{` property when declaring `}<inlineCode parentName=\"p\">{`columns`}</inlineCode>{` in `}<inlineCode parentName=\"p\">{`config`}</inlineCode>{`.`}</p>\n    <Story name=\"Custom templates\" args={{\n      data: [{\n        firstName: 'Peter',\n        lastName: 'Parker',\n        gender: 'male',\n        favoriteColor: '#26BFAF',\n        favoriteFood: 'Pasta'\n      }, {\n        firstName: 'Mary Jane',\n        lastName: 'Watson',\n        gender: 'female',\n        favoriteColor: '#0f0',\n        favoriteFood: 'Pizza'\n      }]\n    }} mdxType=\"Story\">\n  {CustomTemplates.bind({})}\n    </Story>\n    <h2 {...{\n      \"id\": \"advanced-example\"\n    }}>{`Advanced example`}</h2>\n    <p>{`Example showcasing:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Row sort`}</li>\n      <li parentName=\"ul\">{`Loading state`}</li>\n      <li parentName=\"ul\">{`Empty state`}</li>\n      <li parentName=\"ul\">{`Global search`}</li>\n      <li parentName=\"ul\">{`Mobile table layout with sticky header (resize viewport to < 576px to view example)`}</li>\n      <li parentName=\"ul\">{`Custom pagination`}</li>\n      <li parentName=\"ul\">{`Add/remove data`}</li>\n      <li parentName=\"ul\">{`Custom templates`}</li>\n    </ul>\n    <Story name=\"Advanced\" args={{\n      data: [{\n        firstName: 'Peter',\n        lastName: 'Parker',\n        gender: 'male',\n        favoriteColor: '#26BFAF',\n        favoriteFood: 'Pasta'\n      }, {\n        firstName: 'Mary Jane',\n        lastName: 'Watson',\n        gender: 'female',\n        favoriteColor: '#0f0',\n        favoriteFood: 'Pizza'\n      }]\n    }} mdxType=\"Story\">\n  {Advanced.bind({})}\n    </Story>\n    <h2 {...{\n      \"id\": \"pagination-example\"\n    }}>{`Pagination example`}</h2>\n    <p>{`What would a table be without pagination? To simplify things for you, Angular Generic Table provides a basic pagination component. Just pass a reference to the table like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-markup\"\n      }}>{`<angular-generic-table #tableRef\" .../>\n<angular-generic-table-pagination [table]=\"tableRef\"/>\n`}</code></pre>\n    <Preview mdxSource=\"%0A%3Cdiv%20class=%22overflow-auto%22%3E%0A%20%20%3Ctable%3E%0A%20%20%20%20%3Cthead%3E%0A%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%3Cth%3E@Input%3C/th%3E%0A%20%20%20%20%20%20%3Cth%3EDescription%3C/th%3E%0A%20%20%20%20%20%20%3Cth%3EType%3C/th%3E%0A%20%20%20%20%20%20%3Cth%3EDefault%3C/th%3E%0A%20%20%20%20%3C/tr%3E%0A%20%20%20%20%3C/thead%3E%0A%20%20%20%20%3Ctbody%3E%0A%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3Etable%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3ETable%20connected%20to%20the%20pagination%20control.%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3ETable%20component%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3En/a%3C/code%3E%3C/td%3E%0A%20%20%20%20%3C/tr%3E%0A%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3EpaginationLength%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3ENumber%20of%20pagination%20buttons%20to%20show.%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3Enumber%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3E5%3C/code%3E%3C/td%3E%0A%20%20%20%20%3C/tr%3E%0A%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3Eclasses%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3EClasses%20for%20pagination%20elements.%20Pass%20an%20object%20with%20key%20values,%20where%20key%20is%20element%20and%20value%20is%20classes%20to%20be%20applied.%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3EGtPaginationClasses%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3E&#123;%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20&nbsp;nav:%20null,%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20&nbsp;ul:%20'pagination',%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20&nbsp;li:%20'page-item',%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20&nbsp;button:%20'page-link'%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20&#125;%0A%20%20%20%20%20%20%3C/code%3E%3C/td%3E%0A%20%20%20%20%3C/tr%3E%0A%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3EariaLabels%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3EAria%20labels%20for%20pagination%20elements.%20Pass%20an%20object%20with%20key%20values,%20where%20key%20is%20element%20and%20value%20is%20aria%20label%20to%20use.%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3EGtPaginationAriaLabels%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3E%0A%20%20%20%20%20%20%20%20&#123;%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20&nbsp;nav:%20'Table%20navigation',%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20&nbsp;button:%20'Go%20to%20page%20'%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20&#125;%0A%20%20%20%20%20%20%3C/code%3E%3C/td%3E%0A%20%20%20%20%3C/tr%3E%0A%20%20%20%20%3C/tbody%3E%0A%20%20%3C/table%3E%0A%20%20%3C/div%3E%0A\" mdxType=\"Preview\">\n  <div class=\"overflow-auto\">\n  <table>\n    <thead>\n    <tr>\n      <th>@Input</th>\n      <th>Description</th>\n      <th>Type</th>\n      <th>Default</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr>\n      <td><code>table</code></td>\n      <td>Table connected to the pagination control.</td>\n      <td>Table component</td>\n      <td><code>n/a</code></td>\n    </tr>\n    <tr>\n      <td><code>paginationLength</code></td>\n      <td>Number of pagination buttons to show.</td>\n      <td><code>number</code></td>\n      <td><code>5</code></td>\n    </tr>\n    <tr>\n      <td><code>classes</code></td>\n      <td>Classes for pagination elements. Pass an object with key values, where key is element and value is classes to be applied.</td>\n      <td><code>GtPaginationClasses</code></td>\n      <td><code>&#123;<br />\n        &nbsp;nav: null,<br />\n        &nbsp;ul: 'pagination',<br />\n        &nbsp;li: 'page-item',<br />\n        &nbsp;button: 'page-link'<br />\n        &#125;\n      </code></td>\n    </tr>\n    <tr>\n      <td><code>ariaLabels</code></td>\n      <td>Aria labels for pagination elements. Pass an object with key values, where key is element and value is aria label to use.</td>\n      <td><code>GtPaginationAriaLabels</code></td>\n      <td><code>\n        &#123;<br />\n        &nbsp;nav: 'Table navigation',<br />\n        &nbsp;button: 'Go to page '<br />\n        &#125;\n      </code></td>\n    </tr>\n    </tbody>\n  </table>\n  </div>\n    </Preview>\n    <h3 {...{\n      \"id\": \"import-module\"\n    }}>{`Import module`}</h3>\n    <p>{`In order to use the pagination component provided by angular generic table, you need to import it.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { GenericTableCoreModule, GenericTablePaginationModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [...],\n  imports: [\n    ...\n    GenericTableCoreModule,\n    GenericTablePaginationModule\n  ],\n  exports: [\n    GenericTableCoreModule,\n    GenericTablePaginationModule\n  ]\n})\nexport class SharedModule {}\n`}</code></pre>\n    <Story name=\"Pagination\" mdxType=\"Story\">\n  {Pagination.bind({})}\n    </Story>\n    <h2 {...{\n      \"id\": \"row-click-and-hover\"\n    }}>{`Row click and hover`}</h2>\n    <p>{`Set `}<inlineCode parentName=\"p\">{`rowClick`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`rowHover`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` in `}<inlineCode parentName=\"p\">{`config`}</inlineCode>{` to enable row click and hover events which can be used to trigger actions when rows are clicked or hovered. These events are emitted and declared using `}<inlineCode parentName=\"p\">{`@Output rowClick`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`@Output() rowHover`}</inlineCode>{`. It's also possible to set hover state on a row using `}<inlineCode parentName=\"p\">{`rowHover`}</inlineCode>{` method on the table component (currently it takes a row index as argument), pass null to remove hover state. The later might come in handy when you want to highlight something in the table based on an external source like a chart etc. Note that you should use css if you're only interested in styling the row on row hover, no need to listen to events or set hover state to do that.`}</p>\n    <Story name=\"Row click/hover\" mdxType=\"Story\">\n  {RowHoverClick.bind({})}\n    </Story>\n    <h2 {...{\n      \"id\": \"horizontal-example\"\n    }}>{`Horizontal example`}</h2>\n    <p>{`Declare `}<inlineCode parentName=\"p\">{`rows`}</inlineCode>{` instead of `}<inlineCode parentName=\"p\">{`columns`}</inlineCode>{` to get a horizontal table where records are added as columns instead of rows. The example below freezes the first column by setting `}<inlineCode parentName=\"p\">{`stickyHeaders.row`}</inlineCode>{` to true, it also uses `}<inlineCode parentName=\"p\">{`<gt-delta>`}</inlineCode>{` which is a helper component to display the delta between two values (by default it compares against previous row or column).`}</p>\n    <Story name=\"Horizontal table\" mdxType=\"Story\">\n  {Horizontal.bind({})}\n    </Story>\n    <h3 {...{\n      \"id\": \"transpose-table-flip-layout\"\n    }}>{`Transpose table (flip layout)`}</h3>\n    <p>{`Here's a similar example with `}<code>{`search`}</code>{` and `}<code>{`pagination`}</code>{`, that let the user switch from row-layout to column-layout.`}</p>\n    <Story name=\"Transpose table\" mdxType=\"Story\">\n  {Transpose.bind({})}\n    </Story>\n    <h2 {...{\n      \"id\": \"toggle-mobile-layout\"\n    }}>{`Toggle mobile layout`}</h2>\n    <p>{`Use mobile layout for table by setting `}<inlineCode parentName=\"p\">{`mobileLayout`}</inlineCode>{` config option to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` for table (or by adding class `}<inlineCode parentName=\"p\">{`.table-mobile`}</inlineCode>{` to table). Using config option is the preferred way as it will not only add the correct styling but also hide mobile headers automatically when option changes. Generic table uses CSS to create an layout optimized for mobiles, i.e the markup stays the same and it's still use table elements for rendering. Resize the window or view the example below on a small screen to checkout the mobile version as well as the ability toggle to desktop layout.`}</p>\n    <h3 {...{\n      \"id\": \"set-breakpoint-for-mobile-layout\"\n    }}>{`Set breakpoint for mobile layout`}</h3>\n    <p>{`Since Generic table relies solely on CSS and media queries to accomplish the mobile layout, it's just a matter of declaring a breakpoint using `}<inlineCode parentName=\"p\">{`SCSS`}</inlineCode>{`. Override the default value of `}<inlineCode parentName=\"p\">{`576px`}</inlineCode>{`\n(bootstrap breakpoint for small screens), by passing a new value for `}<inlineCode parentName=\"p\">{`$mobile-style-max-width`}</inlineCode>{` like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`@use '@angular-generic-table/core/scss' as generic-table-styles with (\n  $mobile-style-max-width: 375px\n);\n@include generic-table-styles.styles();\n`}</code></pre>\n    <Story name=\"Toggle mobile layout\" mdxType=\"Story\">\n  {Mobile.bind({})}\n    </Story>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const basicTable = Simple.bind({});\nbasicTable.storyName = 'Basic table';\nbasicTable.args = {\n  data: [{\n    firstName: 'Mark',\n    lastName: 'Parker',\n    gender: 'male',\n    favoriteFood: 'Pasta'\n  }, {\n    firstName: 'Mary Jane',\n    lastName: 'Watson',\n    gender: 'female',\n    favoriteFood: 'Pizza'\n  }]\n};\nbasicTable.parameters = { storySource: { source: 'Simple.bind({})' } };\n\nexport const nestedData = Nested.bind({});\nnestedData.storyName = 'Nested data';\nnestedData.args = {\n  data: [{\n    name: {\n      first: 'Peter',\n      last: 'Parker'\n    },\n    data: {\n      details: {\n        gender: 'male',\n        favoriteFood: 'Pasta'\n      }\n    }\n  }, {\n    name: {\n      first: 'Mary Jane',\n      last: 'Watson'\n    },\n    data: {\n      details: {\n        gender: 'female',\n        favoriteFood: 'Pizza'\n      }\n    }\n  }]\n};\nnestedData.parameters = { storySource: { source: 'Nested.bind({})' } };\n\nexport const tableFooter = Footer.bind({});\ntableFooter.storyName = 'Table footer';\ntableFooter.args = {\n  data: [{\n    firstName: 'Peter',\n    lastName: 'Parker',\n    gender: 'male',\n    favoriteFood: 'Pasta',\n    age: 27,\n    weight: 85.457\n  }, {\n    firstName: 'Mary Jane',\n    lastName: 'Watson',\n    gender: 'female',\n    favoriteFood: 'Pizza',\n    age: 25,\n    weight: 60.123\n  }]\n};\ntableFooter.parameters = { storySource: { source: 'Footer.bind({})' } };\n\nexport const customTemplates = CustomTemplates.bind({});\ncustomTemplates.storyName = 'Custom templates';\ncustomTemplates.args = {\n  data: [{\n    firstName: 'Peter',\n    lastName: 'Parker',\n    gender: 'male',\n    favoriteColor: '#26BFAF',\n    favoriteFood: 'Pasta'\n  }, {\n    firstName: 'Mary Jane',\n    lastName: 'Watson',\n    gender: 'female',\n    favoriteColor: '#0f0',\n    favoriteFood: 'Pizza'\n  }]\n};\ncustomTemplates.parameters = { storySource: { source: 'CustomTemplates.bind({})' } };\n\nexport const advanced = Advanced.bind({});\nadvanced.storyName = 'Advanced';\nadvanced.args = {\n  data: [{\n    firstName: 'Peter',\n    lastName: 'Parker',\n    gender: 'male',\n    favoriteColor: '#26BFAF',\n    favoriteFood: 'Pasta'\n  }, {\n    firstName: 'Mary Jane',\n    lastName: 'Watson',\n    gender: 'female',\n    favoriteColor: '#0f0',\n    favoriteFood: 'Pizza'\n  }]\n};\nadvanced.parameters = { storySource: { source: 'Advanced.bind({})' } };\n\nexport const pagination = Pagination.bind({});\npagination.storyName = 'Pagination';\npagination.parameters = { storySource: { source: 'Pagination.bind({})' } };\n\nexport const rowClickHover = RowHoverClick.bind({});\nrowClickHover.storyName = 'Row click/hover';\nrowClickHover.parameters = { storySource: { source: 'RowHoverClick.bind({})' } };\n\nexport const horizontalTable = Horizontal.bind({});\nhorizontalTable.storyName = 'Horizontal table';\nhorizontalTable.parameters = { storySource: { source: 'Horizontal.bind({})' } };\n\nexport const transposeTable = Transpose.bind({});\ntransposeTable.storyName = 'Transpose table';\ntransposeTable.parameters = { storySource: { source: 'Transpose.bind({})' } };\n\nexport const toggleMobileLayout = Mobile.bind({});\ntoggleMobileLayout.storyName = 'Toggle mobile layout';\ntoggleMobileLayout.parameters = { storySource: { source: 'Mobile.bind({})' } };\n\nconst componentMeta = { title: 'Examples', decorators: [moduleMetadata({\n  declarations: [CustomTemplatesComponent, SimpleComponent, AdvancedComponent, PaginationComponent, HorizontalTableComponent, TabsComponent, MobileLayoutComponent, NestedDataComponent, RowHoverClickComponent, FooterComponent],\n  imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n})], includeStories: [\"basicTable\",\"nestedData\",\"tableFooter\",\"customTemplates\",\"advanced\",\"pagination\",\"rowClickHover\",\"horizontalTable\",\"transposeTable\",\"toggleMobileLayout\"],  };\n\nconst mdxStoryNameToKey = {\"Basic table\":\"basicTable\",\"Nested data\":\"nestedData\",\"Table footer\":\"tableFooter\",\"Custom templates\":\"customTemplates\",\"Advanced\":\"advanced\",\"Pagination\":\"pagination\",\"Row click/hover\":\"rowClickHover\",\"Horizontal table\":\"horizontalTable\",\"Transpose table\":\"transposeTable\",\"Toggle mobile layout\":\"toggleMobileLayout\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"./projects/docs/src/stories sync recursive ^\\\\.(?:(?:^%7C\\\\/%7C(?:(?:(?%21(?:^%7C\\\\/)\\\\.).)*?)\\\\/)(?%21\\\\.)(?=.)[^/]*?\\\\.stories\\\\.(js%7Cjsx%7Cts%7Ctsx))$\";\nmodule.exports = webpackEmptyContext;","var map = {\n\t\"./Introduction.stories.mdx\": \"./projects/docs/src/stories/Introduction.stories.mdx\",\n\t\"./Table.stories.mdx\": \"./projects/docs/src/stories/Table.stories.mdx\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./projects/docs/src/stories sync recursive ^\\\\.(?:(?:^%7C\\\\/%7C(?:(?:(?%21(?:^%7C\\\\/)\\\\.).)*?)\\\\/)(?%21\\\\.)(?=.)[^/]*?\\\\.stories\\\\.mdx)$\";","\"use strict\";\n\nvar _frameworkImportPath = require(\"@storybook/angular\");\n\n/* eslint-disable import/no-unresolved */\n(0, _frameworkImportPath.configure)([require.context('./projects/docs/src/stories', true, /^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.mdx)$/),require.context('./projects/docs/src/stories', true, /^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(js|jsx|ts|tsx))$/)], module, false);"],"names":["setCompodocJson","docJson","parameters","actions","argTypesRegex","controls","matchers","color","date","docs","inlineStories","themes","default","clearable","list","name","class","onChange","theme","document","body","setAttribute","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_defineProperty","obj","key","value","defineProperty","configurable","writable","config","forEach","addArgs","addArgTypes","decorator","addDecorator","loader","addLoader","addParameters","_objectSpread","target","i","arguments","length","source","getOwnPropertyDescriptors","defineProperties","enhancer","addArgTypesEnhancer","addArgsEnhancer","setGlobalRender","v","console","log","layoutProps","MDXContent","components","props","mdxType","title","parentName","isMDXComponent","__page","Error","docsOnly","componentMeta","includeStories","mdxStoryNameToKey","page","mdxComponentAnnotations","Order","dashed","capitalize","chunk","search","s","replace","m","toLowerCase","charAt","toUpperCase","slice","trim","array","chunkSize","CHUNK","len","text","caseSensitive","data","columns","searchColumns","hidden","FILTERED","row","match","entries","indexOf","reduce","acc","index","CapitalCasePipe","transform","Pipe","standalone","SortClassPipe","selection","property","aria","sortBy","sortByOrder","DashCasePipe","DynamicPipe","constructor","injector","requiredPipe","pipeArgs","Injector","parent","this","providers","provide","get","HighlightPipe","searchTerm","haystackAlwaysString","searchPattern","highlightedText","RegExp","map","needle","join","error","containsTagMatches","exec","CoreComponent","rowClick","EventEmitter","_rowHover$","ReplaySubject","rowHover","rowHover$","asObservable","pipe","debounceTime","distinctUntilChanged","p","q","tap","event","emit","shareReplay","_loading$","sortBy$","Subject","_searchBy$","searchBy$","startWith","isObservable","of","switchMap","obs","_tableConfig$","tableConfig$","_data$","data$","combineLatest","withLatestFrom","values","find","column","mapTo","rows","newData","newKeys","previousValue","nestedValue","path","missingValue","E","table","searchBy","sort","a","b","typed","ASC","calculations$","CALCULATIONS","COLUMN_CALCULATIONS","CALCULATED","footer","columnName","calculations","calculation","sum","undefined","max","min","avg","count","calculated","rowOrder","calculatedColumnsCount","calculate","table$","sorted","pagination","info","records","pageTotal","Math","ceil","_currentPage$","BehaviorSubject","currentPage$","lastPage","colspan$","footerColspan$","colspan","columnOrder","order","loading","isLoading","next","string","_rowClick","hoverRow","arg","take","subscribe","_hoverRow","loading$","newSortBy","_sortBy","DESC","levels","split","currentValue","Input","Output","Component","selector","template","changeDetection","ChangeDetectionStrategy","imports","GtDeltaComponent","Number","classes","span","positive","negative","notApplicableValue","initialValue","GenericTableCoreModule","NgModule","exports","SIMPLE_SNIPPETS","code","language","SimpleComponent","firstName","lastName","gender","favoriteFood","SNIPPETS","Simple","args","component","MOBILE_LAYOUT_SNIPPETS","GenderPipe","MobileLayoutComponent","clicked","mobileLayout$","config$","mobileLayout","mobileHeader","sortable","action","header","templateRef","toggleLayout","getValue","clickAction","ViewChild","static","encapsulation","ViewEncapsulation","Mobile","ADVANCED_DOCS","AdvancedComponent","fb","paginationForm","group","search$","valueChanges","favoriteColor","maleFirstNames","femaleFirstNames","lastNames","foods","colors","currentPage","prev","addData","randomRecord","removeData","simulateLoad","setTimeout","random","floor","newRecord","ngOnInit","men","women","Advanced","typescript","scss","xml","TabsComponent","activeIndex","_content","content","activeContent","view","CUSTOM_TEMPLATES_DOCS","CustomTemplatesComponent","CustomTemplates","PaginationComponent","http","pluck","_","first_name","last_name","birthday","Pagination","_ariaLabels","nav","button","_classes","ul","li","_paginationLength","pagination$","core","generateList","paginationLength","ariaLabels","_table","pages","currentPosition","middle","Array","from","goto","GenericTablePaginationModule","HORIZONTAL_TABLE_SNIPPETS","HorizontalTableComponent","stickyHeaders","year","delta","deltaIndex","feeling","feelings","load","empty","Horizontal","NESTED_SNIPPETS","NestedDataComponent","resetData","missing","first","last","details","loadData","Nested","TRANSPOSE_SNIPPETS","TransposeComponent","reactiveForm","transpose","combined","Transpose","ROW_HOVER_CLICK_SNIPPETS","RowHoverClickComponent","onRowClick","onRowHover","RowHoverClick","FooterComponent","age","weight","headers","numberOfWomen","numberOfMen","Footer","Preview","makeShortcode","MDXDefaultShortcode","warn","decorators","moduleMetadata","declarations","BrowserModule","CommonModule","ReactiveFormsModule","HttpClientModule","bind","mdxSource","href","basicTable","storyName","storySource","nestedData","tableFooter","customTemplates","advanced","rowClickHover","horizontalTable","transposeTable","toggleMobileLayout","webpackEmptyContext","req","e","resolve","id","module","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","require","configure"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}