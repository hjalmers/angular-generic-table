(self.webpackChunkangular_generic_table=self.webpackChunkangular_generic_table||[]).push([[179],{"./projects/core/src/lib/core.module.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{h:()=>GenericTableCoreModule});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");var ReplaySubject=__webpack_require__("./node_modules/rxjs/_esm2015/internal/ReplaySubject.js"),BehaviorSubject=__webpack_require__("./node_modules/rxjs/_esm2015/internal/BehaviorSubject.js"),isObservable=__webpack_require__("./node_modules/rxjs/_esm2015/internal/util/isObservable.js"),of=__webpack_require__("./node_modules/rxjs/_esm2015/internal/observable/of.js"),combineLatest=__webpack_require__("./node_modules/rxjs/_esm2015/internal/observable/combineLatest.js"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),debounceTime=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/debounceTime.js"),distinctUntilChanged=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/distinctUntilChanged.js"),tap=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/tap.js"),shareReplay=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/shareReplay.js"),startWith=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/startWith.js"),map=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/map.js"),switchMap=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/switchMap.js"),withLatestFrom=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/withLatestFrom.js"),take=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/take.js");let dashed,capitalize,chunk,search;dashed=s=>s.replace(/[A-Z]/g,(m=>"-"+m.toLowerCase())),capitalize=s=>(s.charAt(0).toUpperCase()+s.slice(1)).replace(/_/g," ").replace(/([A-Z][a-z]+)/g," $1").replace(/([A-Z]{2,})/g," $1").replace(/\s{2,}/g," ").trim(),chunk=(array,chunkSize)=>{if(chunkSize<0)throw new Error("Invalid chunk size");if(0===chunkSize&&!chunkSize)return[array];const CHUNK=[];for(let i=0,len=array.length;i<len;i+=chunkSize)CHUNK.push(array.slice(i,i+chunkSize));return CHUNK},search=(text,caseSensitive,data,config)=>{if(config.columns){const searchColumns=Object.keys(config.columns).filter((key=>config.columns&&!config.columns[key]?.hidden&&!1!==config.columns[key]?.search)),FILTERED=[];for(let i=0;i<data.length;i++){const row=data[i],match=-1!==Object.entries(row).filter((([key,value])=>-1!==searchColumns.indexOf(key))).reduce(((acc,[key,value],index)=>{const search=config?.columns[key]?.search;return"function"==typeof search&&(value=search(row,key,value)),acc+(0===index?"":" ? ")+(caseSensitive?value+"":(value+"").toLowerCase())}),"").indexOf(caseSensitive?text:text.toLowerCase());match&&(FILTERED[FILTERED.length]=row)}return FILTERED}return data};const sortOnMultipleKeys=keys=>{const order=keys.map((key=>"desc"===key.order?-1:1));return(a,b)=>{for(let i=0;i<keys.length;i++){const o=keys[i].key;if(a[o]>b[o])return order[i];if(a[o]<b[o])return-order[i]}return 0}};let CapitalCasePipe=class CapitalCasePipe{transform(s){return capitalize(s)}};CapitalCasePipe=(0,tslib_es6.gn)([(0,core.Pipe)({name:"capitalCase",standalone:!0})],CapitalCasePipe);let SortClassPipe=class SortClassPipe{transform(sortOrder,key,context="class"){const sortIndex=sortOrder?sortOrder.findIndex((s=>s.key===key)):-1;return"aria"===context?-1!==sortIndex&&sortOrder?`${sortOrder[sortIndex].order}ending`:null:"class"===context?-1!==sortIndex&&sortOrder?`gt-sort-${sortOrder[sortIndex].order}`:"":sortOrder&&1===sortOrder?.length||sortIndex<0?null:sortIndex+1+""}};SortClassPipe=(0,tslib_es6.gn)([(0,core.Pipe)({name:"sortClass",standalone:!0})],SortClassPipe);let DashCasePipe=class DashCasePipe{transform(s){return dashed(s)}};var _class;DashCasePipe=(0,tslib_es6.gn)([(0,core.Pipe)({name:"dashCase",standalone:!0})],DashCasePipe);let DynamicPipe=((_class=class DynamicPipe{constructor(injector){this.injector=injector}transform(value,requiredPipe,pipeArgs){return core.Injector.create({name:"DynamicPipe",parent:this.injector,providers:[{provide:requiredPipe}]}).get(requiredPipe).transform(value,...pipeArgs||[])}}).ctorParameters=()=>[{type:core.Injector}],_class);DynamicPipe=(0,tslib_es6.gn)([(0,core.Pipe)({name:"dynamicPipe",standalone:!0})],DynamicPipe);let HighlightPipe=class HighlightPipe{transform(text,searchTerm){if(!searchTerm)return text;const haystackAlwaysString=text+"";let searchPattern,highlightedText=haystackAlwaysString;try{searchPattern=new RegExp("("+searchTerm.toLowerCase().match(/".*?"|[^ ]+/g).map((needle=>needle.replace(/"(.*?)"/,"$1"))).join("|")+")","ig")}catch(error){return highlightedText}const containsTagMatches=/(<.*?>)(.*)(<\/.*?>)/gi.exec(haystackAlwaysString);return highlightedText=containsTagMatches?containsTagMatches[1]+containsTagMatches[2].replace(searchPattern,'<span class="gt-highlight-search">$1</span>')+containsTagMatches[3]:haystackAlwaysString.replace(searchPattern,'<span class="gt-highlight-search">$1</span>'),highlightedText}};var core_component_class;HighlightPipe=(0,tslib_es6.gn)([(0,core.Pipe)({name:"highlight",standalone:!0})],HighlightPipe);let CoreComponent=((core_component_class=class CoreComponent{constructor(){this.rowClick=new core.EventEmitter,this.sortOrderChange=new core.EventEmitter,this._rowHover$=new ReplaySubject.t(1),this.rowHover=new core.EventEmitter,this.columnSort=new core.EventEmitter,this.rowHover$=this._rowHover$.asObservable().pipe((0,debounceTime.b)(50),(0,distinctUntilChanged.x)(((p,q)=>p.index===q.index)),(0,tap.b)((event=>this.rowHover.emit(event))),(0,shareReplay.d)(1)),this._loading$=new ReplaySubject.t(1),this._sortOrder$=new BehaviorSubject.X([]),this._searchBy$=new ReplaySubject.t(1),this.searchBy$=this._searchBy$.pipe((0,startWith.O)(""),(0,map.U)((value=>(0,isObservable.b)(value)?value:(0,of.of)(value))),(0,switchMap.w)((obs=>obs)),(0,shareReplay.d)(1)),this._tableConfig$=new BehaviorSubject.X({}),this.tableConfig$=this._tableConfig$.pipe((0,map.U)((value=>(0,isObservable.b)(value)?value:(0,of.of)(value))),(0,switchMap.w)((obs=>obs)),(0,shareReplay.d)(1)),this._data$=new ReplaySubject.t(1),this.data$=this._data$.pipe((0,map.U)((value=>(0,isObservable.b)(value)?value:(0,of.of)(value))),(0,switchMap.w)((obs=>(0,combineLatest.aj)([obs]))),(0,withLatestFrom.M)(this.tableConfig$),(0,map.U)((([[data],config])=>{if(config.columns&&Object.values(config.columns).find((column=>!!column.mapTo))||config.rows&&Object.values(config.rows).find((column=>!!column.mapTo))){const newData=[];for(let i=0;i<data.length;i++){const row=data[i],newKeys=Object.entries(config.columns||config.rows||[]).filter((([key,value])=>!!value.mapTo)).reduce(((previousValue,[key,value])=>({...previousValue,[key]:this.nestedValue(row,value.mapTo.path,value.mapTo?.missingValue)})),{});newData[i]={...row,...newKeys}}data=newData}return{data,config}})),(0,switchMap.w)((obs=>(0,combineLatest.aj)([(0,of.of)(obs),this.sortOrder$,this.searchBy$]))),(0,map.U)((([table,sortBy,searchBy])=>(table.data=[...table.data],!sortBy.length||table.config?.disableTableSort?searchBy?search(searchBy,!1,table.data,table.config):table.data:searchBy?search(searchBy,!1,table.data,table.config)?.sort(sortOnMultipleKeys(sortBy)):table.data?.sort(sortOnMultipleKeys(sortBy))))),(0,shareReplay.d)(1)),this.calculations$=(0,combineLatest.aj)([this.data$,this.tableConfig$]).pipe((0,map.U)((([data,config])=>((data,config)=>{const CALCULATIONS={},COLUMN_CALCULATIONS={};let CALCULATED=Object.entries(config.footer?.columns||{}).filter((([columnName,calculations])=>Object.values(calculations||{}).filter((value=>!1!==value)).length>=0)).reduce(((acc,[columnName,calculations],index)=>(acc[columnName]=Object.entries(calculations||{}).filter((([calculation,value])=>!1!==value)).reduce(((acc,[calculation,value])=>(COLUMN_CALCULATIONS[columnName]?COLUMN_CALCULATIONS[columnName].push(calculation):!0===value&&(COLUMN_CALCULATIONS[columnName]=[calculation]),CALCULATIONS[calculation]=!0,"function"==typeof value&&(value=value(data,columnName)),acc[calculation]=!0===value?0:value,acc)),{}),acc)),{});if(Object.keys(CALCULATED).length>0){for(let i=0;i<data.length;i++)Object.entries(COLUMN_CALCULATIONS).forEach((([column,calculations])=>{calculations.indexOf("sum")>-1&&(CALCULATED[column].sum+=data[i][column]),calculations.indexOf("avg")>-1&&-1===calculations.indexOf("sum")&&(void 0===CALCULATED[column].sum&&(CALCULATED[column].sum=0),CALCULATED[column].sum+=data[i][column]),calculations.indexOf("max")>-1&&(!CALCULATED[column].max||+data[i][column]>CALCULATED[column].max)&&(CALCULATED[column].max=+data[i][column]),calculations.indexOf("min")>-1&&(!CALCULATED[column].min||+data[i][column]<CALCULATED[column].min)&&(CALCULATED[column].min=+data[i][column])}));Object.entries(COLUMN_CALCULATIONS).forEach((([column,calculations])=>{-1!==calculations.indexOf("avg")&&(CALCULATED[column].avg=CALCULATED[column]?.sum/data.length,-1===calculations.indexOf("sum")&&CALCULATED[column].sum&&delete CALCULATED[column].sum),-1!==calculations.indexOf("count")&&(CALCULATED[column].count=data.length)}))}return{calculated:CALCULATED,calculations:Object.keys(CALCULATIONS).sort(((a,b)=>(config.footer?.rowOrder?.indexOf(a)||0)-(config.footer?.rowOrder?.indexOf(b)||0))),calculatedColumnsCount:Object.keys(CALCULATED).length||0}})(data,config))),(0,shareReplay.d)(1)),this.table$=(0,combineLatest.aj)([this.data$,this.tableConfig$]).pipe((0,map.U)((([sorted,config])=>config.pagination&&0!==config.pagination.length?{data:chunk(sorted,+(config.pagination.length||0)),config,info:{records:sorted.length,pageTotal:Math.ceil(sorted.length/+(config.pagination.length||0))}}:{data:[sorted],config,info:{records:sorted.length,pageTotal:1}})),(0,shareReplay.d)(1)),this._currentPage$=new BehaviorSubject.X(0),this.currentPage$=(0,combineLatest.aj)([this._currentPage$,this.table$]).pipe((0,map.U)((([page,table])=>{const lastPage=Math.ceil(table.info.records/(table.config?.pagination?.length||table.info.records))-1;return+page<0?0:+page>lastPage?lastPage:+page})),(0,shareReplay.d)(1)),this.colspan$=this.tableConfig$.pipe((0,switchMap.w)((config=>config.columns?(0,of.of)(Object.values(config.columns||config.rows||{}).filter((value=>!0!==value.hidden)).length):this.data$.pipe((0,map.U)((data=>data.length+1))))),(0,shareReplay.d)(1)),this.footerColspan$=this.tableConfig$.pipe((0,map.U)((config=>{let colspan=0;return Object.values(config?.footer?.columns||{}).forEach((calculations=>{Object.values(calculations).filter((value=>!1!==value)).length>=0&&(colspan+=1)}),{}),colspan})),(0,shareReplay.d)(1)),this.columnOrder=(a,b)=>(a.value.order||0)-(b.value.order||0)}get sortOrder$(){return this._sortOrder$.asObservable()}set loading(isLoading){this._loading$.next(isLoading)}set page(page){this._currentPage$.next(page)}set search(string){this._searchBy$.next(string)}set config(config){this._tableConfig$.next(config)}set data(data){this._data$.next(data)}set sortOrder(sortConfig){JSON.stringify(sortConfig)!==JSON.stringify(this._sortOrder$.value)&&(this.sortOrderChange.emit(sortConfig),this._sortOrder$.next(sortConfig))}_rowClick(row,index,event){this.rowClick.emit({row,index,event})}hoverRow(arg){"number"==typeof arg?this.data$.pipe((0,map.U)((data=>data[arg])),(0,take.q)(1)).subscribe((row=>this._hoverRow(row,arg))):"string"==typeof arg||this._hoverRow(null,null)}_hoverRow(row,index,event){this._rowHover$.next({row,index,event})}get loading$(){return this._loading$.pipe((0,startWith.O)(!1),(0,map.U)((value=>(0,isObservable.b)(value)?value:(0,of.of)(value))),(0,switchMap.w)((obs=>obs)),(0,shareReplay.d)(1))}sortByKey(key,$event){const shiftKey=$event?.shiftKey,currentOrder=this._sortOrder$.value;let sortOrder="asc",newOrder=[];if(shiftKey){const existingSortPosition=currentOrder.findIndex((value=>value.key===key));if(-1===existingSortPosition)newOrder=[...currentOrder,{key,order:"asc"}];else{sortOrder=currentOrder[existingSortPosition].order;const newSortOrder="asc"===sortOrder?"desc":"asc";newOrder=[...currentOrder],newOrder[existingSortPosition]={...newOrder[existingSortPosition],order:newSortOrder}}}else if(currentOrder.length>0){const existingSortPosition=currentOrder.findIndex((value=>value.key===key));if(-1===existingSortPosition)newOrder=[{key,order:"asc"}];else{sortOrder=currentOrder[existingSortPosition].order;newOrder=[{key,order:"asc"===sortOrder?"desc":"asc"}]}}else newOrder=[{key,order:sortOrder}];const sortEvent={key,order:sortOrder,currentSortOrder:newOrder};$event&&(sortEvent.event=$event),this.columnSort.emit(sortEvent),this.sortOrder=newOrder}nestedValue(object,mapTo,missingValue=null){const levels=mapTo.split(".");return levels.reduce(((previousValue,currentValue,index)=>previousValue[currentValue]||(index===levels.length-1?missingValue:{})),object)}}).propDecorators={loading:[{type:core.Input}],page:[{type:core.Input}],search:[{type:core.Input}],config:[{type:core.Input}],data:[{type:core.Input}],sortOrder:[{type:core.Input}],rowClick:[{type:core.Output}],sortOrderChange:[{type:core.Output,args:["sortOrderChange"]}],rowHover:[{type:core.Output}],columnSort:[{type:core.Output}]},core_component_class);CoreComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"angular-generic-table",template:'<table\n  [ngClass]="(tableConfig$ | async)?.class || \'table\'"\n  [class.table-mobile]="(tableConfig$ | async)?.mobileLayout"\n  [class.table-horizontal]="(tableConfig$ | async)?.rows"\n  [class.table-loading]="loading$ | async"\n  [class.gt-sticky-row-header]="\n    (tableConfig$ | async)?.stickyHeaders?.row && (tableConfig$ | async)?.rows\n  "\n  [class.gt-sticky-column-header]="\n    (tableConfig$ | async)?.stickyHeaders?.column\n  "\n  [attr.aria-busy]="(loading$ | async) === true ? true : null"\n>\n  <thead>\n    <tr\n      *ngIf="{\n        config: (tableConfig$ | async)!,\n        isLoading: loading$ | async\n      } as table"\n    >\n      <ng-container\n        *ngFor="let column of table.config?.columns | keyvalue: columnOrder"\n      >\n        <th\n          *ngIf="!column.value?.hidden"\n          ngClass="{{ (column.key | dashCase) + \'-column\' }} {{\n            column.value.class\n          }}"\n          [class.disabled]="table.isLoading"\n          [attr.aria-sort]="sortOrder$ | async | sortClass: column.key:\'aria\'"\n          [class.gt-sortable]="true"\n          scope="col"\n        >\n          <button\n            *ngIf="column.value?.sortable"\n            [attr.data-sort-order]="\n              sortOrder$ | async | sortClass: column.key:\'order\'\n            "\n            class="gt-sort"\n            (click)="\n              table.isLoading ||\n                !column.value.sortable ||\n                sortByKey(column.key, $event)\n            "\n          >\n            <span *ngIf="column.value?.header !== false">{{\n              column.value.header || column.key | capitalCase\n            }}</span>\n          </button>\n          <span\n            *ngIf="!column.value?.sortable && column.value?.header !== false"\n            >{{ column.value.header || column.key | capitalCase }}</span\n          >\n        </th>\n      </ng-container>\n      <ng-container\n        *ngIf="\n          ((table?.config?.rows | keyvalue: columnOrder) || [])[0] as headerRow\n        "\n      >\n        <th\n          class="row-header"\n          [attr.aria-sort]="\n            sortOrder$ | async | sortClass: headerRow.key:\'aria\'\n          "\n          ngClass="{{ headerRow.value.sortable ? \'sort \' : \'\' }} {{\n            sortOrder$ | async | sortClass: headerRow.key\n          }} {{ (headerRow.key | dashCase) + \'-column\' }}"\n          (click)="\n            table.isLoading ||\n              !headerRow.value.sortable ||\n              sortByKey(headerRow.key, $event)\n          "\n          scope="col"\n        >\n          <ng-container *ngIf="headerRow?.value?.header !== false">{{\n            headerRow?.value?.header || headerRow.key | capitalCase\n          }}</ng-container>\n        </th>\n        <th\n          *ngFor="let column of ((table$ | async)?.data || [])[0]"\n          ngClass="{{ headerRow.value.class }}"\n        >\n          <ng-container\n            [ngTemplateOutlet]="\n              (table.config.rows || {})[headerRow.key].templateRef\n                ? templateRef\n                : (table.config.rows || {})[headerRow.key].transform\n                ? transformData\n                : rawData\n            "\n            [ngTemplateOutletContext]="{\n              row: column,\n              column: headerRow,\n              transform: (table.config.rows || {})[headerRow.key].transform,\n              templateRef: (table.config.rows || {})[headerRow.key].templateRef,\n              index: 0\n            }"\n          >\n          </ng-container>\n        </th>\n      </ng-container>\n    </tr>\n  </thead>\n  <tbody *ngIf="loading$ | async; else tableContent">\n    <tr>\n      <td class="p-0" [colSpan]="colspan$ | async">\n        <ng-content select=".table-loading"></ng-content>\n      </td>\n    </tr>\n  </tbody>\n  <tfoot *ngIf="(table$ | async)! as table">\n    <ng-container *ngIf="table.data.length > 0 && !(loading$ | async)">\n      <ng-container *ngIf="(calculations$ | async)! as calculations">\n        <tr\n          *ngFor="let calculation of calculations.calculations; let i = index"\n        >\n          <ng-container\n            *ngIf="{\n              showHeader: (colspan$ | async) !== (footerColspan$ | async)\n            } as footerRow"\n          >\n            <th\n              *ngIf="footerRow.showHeader"\n              [colSpan]="\n                ((colspan$ | async) || 0) - ((footerColspan$ | async) || 0)\n              "\n              scope="row"\n            >\n              <ng-container\n                *ngIf="table.config?.footer?.headers?.[calculation] as showHeader"\n                >{{showHeader === true ? (calculation | capitalCase): table.config.footer?.headers?.[calculation]}}\n              </ng-container>\n            </th>\n            <ng-container\n              *ngFor="\n                let column of table.config?.columns | keyvalue: columnOrder\n              "\n            >\n              <td\n                *ngIf="\n                  !column.value?.hidden && calculations.calculated[column.key]\n                "\n                ngClass="{{ (column.key | dashCase) + \'-column\' }} {{\n                  column.value.class\n                }}"\n                [attr.data-header]="\n                  !footerRow.showHeader && table.config.footer?.headers?.[calculation]\n                    ? table.config.footer?.headers?.[calculation] === true ? (calculation | capitalCase) : table.config.footer?.headers?.[calculation]\n                    : null\n                "\n                [attr.data-label]="\n                  table.config.mobileLayout && column.value.mobileHeader\n                    ? column.value.mobileHeader !== true\n                      ? column.value.mobileHeader\n                      : (column.value.header || column.key | capitalCase)\n                    : null\n                "\n                [class.gt-no-content]="\n                  !calculations.calculated[column.key][calculation]\n                "\n              >\n                <ng-container\n                  [ngTemplateOutlet]="\n                    (table.config.columns || {})[column.key].templateRef\n                      ? templateRef\n                      : (table.config.columns || {})[column.key].transform\n                      ? transformFooter\n                      : rawFooter\n                  "\n                  [ngTemplateOutletContext]="{\n                    value: calculations.calculated[column.key][calculation],\n                    row: calculations.calculated[column.key],\n                    column: calculation,\n                    templateRef: (table.config.columns || {})[column.key]\n                      .templateRef,\n                    transform: (table.config.columns || {})[column.key]\n                      .transform\n                  }"\n                ></ng-container>\n              </td>\n            </ng-container>\n          </ng-container>\n        </tr>\n      </ng-container>\n    </ng-container>\n  </tfoot>\n</table>\n<ng-template #tableContent>\n  <ng-container *ngIf="(table$ | async)! as table">\n    <tbody *ngIf="(table!.data![0] || table!.data!).length > 0; else noData">\n      <ng-container *ngIf="table.config.columns">\n        <tr\n          *ngFor="\n            let row of table!.data![(currentPage$ | async) || 0];\n            let i = index\n          "\n          [attr.id]="\'tableRow_\' + i"\n          (click)="table?.config?.rowClick && _rowClick(row, i, $event)"\n          (mouseover)="table?.config?.rowHover && _hoverRow(row, i, $event)"\n          (mouseout)="table?.config?.rowHover && _hoverRow(null, null, $event)"\n          [class.gt-hover]="(rowHover$ | async)?.index === i"\n        >\n          <ng-container\n            *ngFor="let column of table.config?.columns | keyvalue: columnOrder"\n          >\n            <td\n              *ngIf="!column.value?.hidden"\n              ngClass="{{ (column.key | dashCase) + \'-column\' }} {{\n                column.value.class\n              }}"\n              [attr.data-label]="\n                table.config.mobileLayout && column.value.mobileHeader\n                  ? column.value.mobileHeader !== true\n                    ? column.value.mobileHeader\n                    : (column.value.header || column.key | capitalCase)\n                  : null\n              "\n            >\n              <ng-container\n                [ngTemplateOutlet]="\n                  (searchBy$ | async) &&\n                  !(table.config.columns || {})[column.key].templateRef\n                    ? highlighted\n                    : (table.config.columns || {})[column.key].templateRef\n                    ? templateRef\n                    : (table.config.columns || {})[column.key].transform\n                    ? transformData\n                    : rawData\n                "\n                [ngTemplateOutletContext]="{\n                  row: row,\n                  column: column,\n                  search: (searchBy$ | async),\n                  transform: (table.config.columns || {})[column.key].transform,\n                  templateRef: (table.config.columns || {})[column.key]\n                    .templateRef,\n                  index: i,\n                  data: table.data[(currentPage$ | async) || 0]\n                }"\n              ></ng-container>\n            </td>\n          </ng-container>\n        </tr>\n      </ng-container>\n      <ng-container *ngIf="table.config.rows">\n        <ng-container\n          *ngFor="\n            let row of table?.config?.rows | keyvalue: columnOrder | slice: 1;\n            let i = index\n          "\n        >\n          <tr\n            *ngIf="!row.value?.hidden"\n            [attr.id]="\'tableRow_\' + i"\n            ngClass="{{ (row.key | dashCase) + \'-row\' }}"\n            (click)="table?.config?.rowClick && _rowClick(row, i, $event)"\n            (mouseover)="table?.config?.rowHover && _hoverRow(row, i, $event)"\n            (mouseout)="\n              table?.config?.rowHover && _hoverRow(null, null, $event)\n            "\n            [class.gt-hover]="(rowHover$ | async)?.index === i"\n          >\n            <th class="row-header" scope="row">\n              {{ row.value.header || row.key | capitalCase }}\n            </th>\n            <td\n              *ngFor="let column of (table?.data || [])[0]; let y = index"\n              ngClass="{{ row.value.class }}"\n            >\n              <ng-container\n                [ngTemplateOutlet]="\n                  (table.config.rows || {})[row.key].templateRef\n                    ? templateRef\n                    : (table.config.rows || {})[row.key].transform\n                    ? transformData\n                    : rawData\n                "\n                [ngTemplateOutletContext]="{\n                  row: column,\n                  column: row,\n                  transform: (table.config.rows || {})[row.key].transform,\n                  templateRef: (table.config.rows || {})[row.key].templateRef,\n                  index: table.config.rows ? y : i,\n                  data: table.data[(currentPage$ | async) || 0]\n                }"\n              >\n              </ng-container>\n            </td>\n          </tr>\n        </ng-container>\n      </ng-container>\n    </tbody>\n  </ng-container>\n</ng-template>\n<ng-template #noData>\n  <tbody>\n    <tr>\n      <td class="p-0" [colSpan]="colspan$ | async">\n        <ng-content select=".table-no-data"></ng-content>\n      </td>\n    </tr>\n  </tbody>\n</ng-template>\n<ng-template\n  #highlighted\n  let-row="row"\n  let-column="column"\n  let-search="search"\n  let-transform="transform"\n>\n  <div\n    *ngIf="!transform"\n    [innerHTML]="row[column.key] | highlight: search"\n  ></div>\n  <div\n    *ngIf="transform"\n    [innerHTML]="\n      row[column.key]\n        | dynamicPipe: transform.pipe:transform?.args\n        | highlight: search\n    "\n  ></div>\n</ng-template>\n<ng-template #rawData let-row="row" let-column="column">\n  {{ row[column.key] }}\n</ng-template>\n<ng-template\n  #transformData\n  let-row="row"\n  let-column="column"\n  let-transform="transform"\n  let-data="data"\n>\n  {{ row[column.key] | dynamicPipe: transform.pipe:transform?.args }}\n</ng-template>\n<ng-template #transformFooter let-value="value" let-transform="transform">\n  {{\n    (value | dynamicPipe: transform.pipe:transform?.args) ||\n      (tableConfig$ | async)?.footer?.emptyContent\n  }}\n</ng-template>\n<ng-template #rawFooter let-value="value">\n  {{ value || (tableConfig$ | async)?.footer?.emptyContent }}\n</ng-template>\n<ng-template\n  #templateRef\n  let-row="row"\n  let-column="column"\n  let-index="index"\n  let-templateRef="templateRef"\n  let-data="data"\n>\n  <ng-container\n    [ngTemplateOutlet]="templateRef"\n    [ngTemplateOutletContext]="{\n      row: row,\n      col: column,\n      index: index,\n      data: data\n    }"\n  ></ng-container>\n</ng-template>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,standalone:!0,imports:[CapitalCasePipe,common.Nd,SortClassPipe,DashCasePipe,common.Ov,common.tP,common.OU,DynamicPipe,HighlightPipe,common.mk,common.O5,common.sg]})],CoreComponent);var gt_delta_component_class,gt_delta_component=__webpack_require__("./projects/core/src/lib/gt-delta/gt-delta.component.ts.css?ngResource!=!./node_modules/@ngtools/webpack/src/loaders/inline-resource.js?data=CiAgICAgIDpob3N0IHsKICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICAgIH0KICAgIA%3D%3D!./projects/core/src/lib/gt-delta/gt-delta.component.ts"),gt_delta_component_default=__webpack_require__.n(gt_delta_component);let GtDeltaComponent=((gt_delta_component_class=class GtDeltaComponent{get value(){return this._value}set value(value){this._value=value}get deltaTemplate(){return this._deltaTemplate}constructor(){this.Math=Math,this.Number=Number,this.data=[],this.index=0,this.classes={span:"gt-delta",positive:"text-success",negative:"text-danger"},this.key="value",this.notApplicableValue=null,this.initialValue=null}set deltaTemplate(deltaTemplate){this._deltaTemplate=deltaTemplate}ngOnChanges(changes){if(!changes.data.currentValue)return;const data=changes.data?.currentValue,index=changes.index?.currentValue||this.index,baseIndex=changes.baseIndex?.currentValue,key=changes.key?.currentValue||this.key,initialValue=changes.initialValue?.currentValue||this.initialValue,deltaValue=0===index?initialValue:data[index][key]-(void 0===baseIndex?data[index-1][key]:data[baseIndex][key]),baseValue=0===index?1:void 0===baseIndex?data[index-1][key]:data[baseIndex][key],relative=0===index?initialValue:Math.sign(deltaValue)*Math.abs(deltaValue/baseValue);this.value={relative:Number.isFinite(relative)?relative:0===index?initialValue:changes.notApplicableValue?.currentValue||this.notApplicableValue,absolute:deltaValue}}}).ctorParameters=()=>[],gt_delta_component_class.propDecorators={deltaTemplate:[{type:core.Input}],data:[{type:core.Input}],index:[{type:core.Input}],baseIndex:[{type:core.Input}],classes:[{type:core.Input}],key:[{type:core.Input}],notApplicableValue:[{type:core.Input}],initialValue:[{type:core.Input}]},gt_delta_component_class);GtDeltaComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"gt-delta",template:'<span\n      *ngIf="value as delta"\n      [class]="[\n        classes.span,\n        delta.absolute > 0\n          ? classes.positive\n          : delta.absolute < 0\n          ? classes.negative\n          : null\n      ]"\n      [class.gt-delta-positive]="delta.absolute > 0"\n      [class.gt-delta-negative]="delta.absolute < 0"\n      ><ng-container\n        *ngTemplateOutlet="deltaTemplate || defaultTemplate; context: { delta }"\n      ></ng-container>\n    </span>\n    <ng-template #defaultTemplate let-delta="delta">\n      <span *ngIf="delta.relative">{{\n        delta.relative | percent: \'1.0-2\'\n      }}</span>\n    </ng-template>',changeDetection:core.ChangeDetectionStrategy.OnPush,standalone:!0,imports:[common.Zx,common.O5,common.tP],styles:[gt_delta_component_default()]})],GtDeltaComponent);let GenericTableCoreModule=class GenericTableCoreModule{};GenericTableCoreModule=(0,tslib_es6.gn)([(0,core.NgModule)({imports:[common.ez,CoreComponent,SortClassPipe,DashCasePipe,HighlightPipe,CapitalCasePipe,CapitalCasePipe,DynamicPipe,GtDeltaComponent],exports:[CoreComponent,GtDeltaComponent]})],GenericTableCoreModule)},"./projects/core/src/lib/pagination/pagination.module.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{i:()=>GenericTablePaginationModule});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs");var _class,ReplaySubject=__webpack_require__("./node_modules/rxjs/_esm2015/internal/ReplaySubject.js"),combineLatest=__webpack_require__("./node_modules/rxjs/_esm2015/internal/observable/combineLatest.js"),switchMap=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/switchMap.js"),pluck=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/pluck.js"),map=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/map.js");let PaginationComponent=(_class=class PaginationComponent{constructor(){this.table$=new ReplaySubject.t(1),this._ariaLabels={nav:"Table pagination",button:"Go to page "},this._classes={ul:"pagination",li:"page-item",button:"page-link"},this._paginationLength=5,this.pagination$=this.table$.pipe((0,switchMap.w)((core=>(0,combineLatest.aj)([core?.table$.pipe((0,pluck.j)("info")),core?.currentPage$]))),(0,map.U)((([info,currentPage])=>this.generateList(info.pageTotal,currentPage))))}get paginationLength(){return this._paginationLength}set paginationLength(value){this._paginationLength=+value}get classes(){return this._classes}set classes(value){this._classes=value}get ariaLabels(){return this._ariaLabels}set ariaLabels(value){this._ariaLabels=value}get table(){return this._table}set table(value){this._table=value,this.table$.next(value)}generateList(pages,currentPosition){const middle=Math.floor(this.paginationLength/2),length=pages<this.paginationLength?pages:this.paginationLength;return Array.from({length},((_,i)=>0===i?1:pages<this.paginationLength?i+1:i+1===length?pages:currentPosition>middle&&currentPosition<pages-middle?i+currentPosition-(middle-1):currentPosition>middle&&currentPosition<pages-(middle-1)?i+currentPosition-middle:currentPosition>middle&&currentPosition===pages-(middle-1)?i+currentPosition-(middle+1):currentPosition>middle&&currentPosition===pages-1?i+currentPosition-(middle+2):i+1))}goto(page){this.table&&(this.table.page=page-1)}},_class.propDecorators={paginationLength:[{type:core.Input}],classes:[{type:core.Input}],ariaLabels:[{type:core.Input}],table:[{type:core.Input}]},_class);PaginationComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"angular-generic-table-pagination",template:'<ng-container\n  *ngIf="{\n    links: pagination$ | async,\n    currentPosition: table?.currentPage$ | async\n  } as pagination"\n>\n  <nav\n    *ngIf="pagination.links && pagination.links.length > 1"\n    role="navigation"\n    [attr.aria-label]="ariaLabels.nav"\n    class="gt-pagination"\n    [class]="classes.nav"\n  >\n    <ul [class]="classes.ul">\n      <ng-container\n        *ngFor="\n          let position of pagination!.links;\n          let i = index;\n          let last = last\n        "\n      >\n        <li\n          [class]="classes.li"\n          [class.active]="position === (pagination!.currentPosition || 0) + 1"\n        >\n          <button\n            [class]="classes.button"\n            [attr.aria-label]="ariaLabels.button + position"\n            (click)="goto(position)"\n          >\n            {{ position }}\n          </button>\n        </li>\n        <li\n          [class]="classes.li"\n          class="gt-ellipsis"\n          *ngIf="position + 1 !== pagination!.links![i + 1] && !last"\n        >\n          <button [class]="classes.button" disabled tabindex="-1"></button>\n        </li>\n      </ng-container>\n    </ul>\n  </nav>\n</ng-container>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,standalone:!0,imports:[common.Ov,common.O5,common.sg]})],PaginationComponent);let GenericTablePaginationModule=class GenericTablePaginationModule{};GenericTablePaginationModule=(0,tslib_es6.gn)([(0,core.NgModule)({imports:[common.ez,PaginationComponent],exports:[PaginationComponent]})],GenericTablePaginationModule)},"./projects/docs/src/app/components/tabs/tabs.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{n:()=>TabsComponent});var _class,tslib__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_tabs_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./projects/docs/src/app/components/tabs/tabs.component.scss?ngResource"),_tabs_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_tabs_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_0__),_angular_core__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),highlight_js_lib_core__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/highlight.js/es/core.js"),highlight_js_lib_languages_typescript__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/highlight.js/es/languages/typescript.js"),highlight_js_lib_languages_xml__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/highlight.js/es/languages/xml.js"),highlight_js_lib_languages_scss__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/highlight.js/es/languages/scss.js");highlight_js_lib_core__WEBPACK_IMPORTED_MODULE_4__.Z.registerLanguage("typescript",highlight_js_lib_languages_typescript__WEBPACK_IMPORTED_MODULE_1__.Z),highlight_js_lib_core__WEBPACK_IMPORTED_MODULE_4__.Z.registerLanguage("scss",highlight_js_lib_languages_scss__WEBPACK_IMPORTED_MODULE_3__.Z),highlight_js_lib_core__WEBPACK_IMPORTED_MODULE_4__.Z.registerLanguage("xml",highlight_js_lib_languages_xml__WEBPACK_IMPORTED_MODULE_2__.Z);let TabsComponent=((_class=class TabsComponent{get content(){return this._content}set content(value){this._content=value}constructor(){this.activeIndex=0,this._content=[]}ngOnInit(){this.activeContent=highlight_js_lib_core__WEBPACK_IMPORTED_MODULE_4__.Z.highlight(this.content[this.activeIndex].code,{language:this.content[this.activeIndex].language})}view(index){this.activeIndex=index,this.activeContent=highlight_js_lib_core__WEBPACK_IMPORTED_MODULE_4__.Z.highlight(this.content[index].code,{language:this.content[index].language})}}).ctorParameters=()=>[],_class.propDecorators={content:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_5__.Input}]},_class);TabsComponent=(0,tslib__WEBPACK_IMPORTED_MODULE_6__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Component)({selector:"docs-tabs",template:'\n    <ul class="nav nav-tabs mt-4 flex-nowrap text-nowrap overflow-auto">\n      <li class="nav-item" *ngFor="let item of content; let i = index">\n        <button\n          class="nav-link btn-link"\n          [class.active]="activeIndex === i"\n          (click)="view(i)"\n        >\n          {{ item.name }}\n        </button>\n      </li>\n    </ul>\n    <ng-container *ngIf="activeContent">\n      <pre><code [innerHTML]="activeContent.value" class="{{\'language-\' + activeContent.language}}"></code></pre>\n    </ng-container>\n  ',styles:[_tabs_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_0___default()]})],TabsComponent)},"./projects/docs/src/polyfills.ts":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__("./node_modules/zone.js/fesm2015/zone.js")},"./.storybook/preview.js-generated-config-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,{__namedExportsOrder:()=>__namedExportsOrder,parameters:()=>parameters});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-properties.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");var ClientApi=__webpack_require__("./node_modules/@storybook/client-api/dist/esm/ClientApi.js"),angular=__webpack_require__("./node_modules/@storybook/addon-docs/angular/index.js");const documentation_namespaceObject=JSON.parse('{"pipes":[{"name":"CapitalCasePipe","id":"pipe-CapitalCasePipe-96bcb6bce70367e79731d26c84db241c4ce18f66daf640a6451058a35df21a3999d4524db1320b735cb653807fedbf3940ac8eef02d517c60317af70f6e1aee0","file":"projects/core/src/lib/pipes/capital-case.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"s","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":9,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"s","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"ngname":"capitalCase","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\nimport { capitalize } from \'../utilities/utilities\';\\n\\n@Pipe({\\n  name: \'capitalCase\',\\n  standalone: true,\\n})\\nexport class CapitalCasePipe implements PipeTransform {\\n  transform(s: string): any {\\n    return capitalize(s);\\n  }\\n}\\n"},{"name":"DashCasePipe","id":"pipe-DashCasePipe-4b881ec0c37bd1d0b192e1ad42c2ec93254176a9668f8911bda81a7f576253351f74e50ba8ff7b5f1f01ce45403bb209952c139275916103a3d2ee5b47f15cbc","file":"projects/core/src/lib/pipes/dash-case.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"s","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":9,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"s","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"ngname":"dashCase","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\nimport { dashed } from \'../utilities/utilities\';\\n\\n@Pipe({\\n  name: \'dashCase\',\\n  standalone: true,\\n})\\nexport class DashCasePipe implements PipeTransform {\\n  transform(s: string): any {\\n    return dashed(s);\\n  }\\n}\\n"},{"name":"DynamicPipe","id":"pipe-DynamicPipe-9410f04590a5057e37c4936afcce2e30c5c79cb1a458c0cf34a9335ab0ccf3a07cdfa981c9a03c91e296b2b220211aa0f8bc4b5c95aa94343feb759183088c76","file":"projects/core/src/lib/pipes/dynamic.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""},{"name":"requiredPipe","type":"Type<any>","deprecated":false,"deprecationMessage":""},{"name":"pipeArgs","type":"any[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":10,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"requiredPipe","type":"Type<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"pipeArgs","type":"any[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"ngname":"dynamicPipe","sourceCode":"import { Injector, Pipe, PipeTransform, Type } from \'@angular/core\';\\n\\n@Pipe({\\n  name: \'dynamicPipe\',\\n  standalone: true,\\n})\\nexport class DynamicPipe implements PipeTransform {\\n  constructor(private injector: Injector) {}\\n\\n  transform(value: any, requiredPipe: Type<any>, pipeArgs: any[]): any {\\n    const injector = Injector.create({\\n      name: \'DynamicPipe\',\\n      parent: this.injector,\\n      providers: [{ provide: requiredPipe }],\\n    });\\n    const pipe = injector.get(requiredPipe);\\n    return pipe.transform(value, ...(pipeArgs || []));\\n  }\\n}\\n"},{"name":"GenderPipe","id":"pipe-GenderPipe-2ccdf200e7b7f3afa39e0e6fdca8c7ea0f53af37d1eb3722378cbcaba073ec2e8a214f10e4485e4464b0ea63b3d083009815564424e37fbd8206a83200f4ed92","file":"projects/docs/src/app/examples/mobile-layout/mobile-layout.component.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"gender","type":"\\"male\\" | \\"female\\"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"gender","type":"\\"male\\" | \\"female\\"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"ngname":"genderPipe","sourceCode":"import {\\n  Component,\\n  Pipe,\\n  PipeTransform,\\n  TemplateRef,\\n  ViewChild,\\n  ViewEncapsulation,\\n} from \'@angular/core\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport {\\n  TableColumn,\\n  TableConfig,\\n  TableRow,\\n} from \'@angular-generic-table/core\';\\nimport { BehaviorSubject, Observable } from \'rxjs\';\\nimport { map } from \'rxjs/operators\';\\nimport { MOBILE_LAYOUT_SNIPPETS } from \'./mobileLayout.snippets\';\\n\\n@Pipe({\\n  name: \'genderPipe\',\\n})\\nexport class GenderPipe implements PipeTransform {\\n  transform(gender: \'male\' | \'female\'): string {\\n    return gender === \'male\' ? \'👨\' : \'👩\';\\n  }\\n}\\n\\n@Component({\\n  selector: \'docs-mobile-layout\',\\n  template: `\\n    <div class=\\"d-flex justify-content-end mb-1 align-items-center\\">\\n      {{ clicked }}\\n      <button class=\\"btn btn-link d-sm-none \\" (click)=\\"toggleLayout()\\">\\n        {{ (mobileLayout$ | async) ? \'Desktop \' : \'Mobile \' }} layout\\n      </button>\\n    </div>\\n    <div [class.overflow-auto]=\\"(mobileLayout$ | async) === false\\">\\n      <angular-generic-table\\n        [data]=\\"data\\"\\n        [config]=\\"config$\\"\\n      ></angular-generic-table>\\n    </div>\\n    <ng-template #actions let-row=\\"row\\" let-col=\\"col\\" let-index=\\"index\\">\\n      <button\\n        class=\\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\\"\\n        (click)=\\"clickAction(row, col, index)\\"\\n      >\\n        Click me!\\n      </button>\\n    </ng-template>\\n    <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n  `,\\n  styles: [\\n    `\\n      .table th {\\n        white-space: nowrap;\\n      }\\n    `,\\n  ],\\n  encapsulation: ViewEncapsulation.None,\\n})\\nexport class MobileLayoutComponent {\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  clicked = \'\';\\n\\n  mobileLayout$ = new BehaviorSubject(true);\\n  data = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ];\\n  config$: Observable<TableConfig> = this.mobileLayout$.pipe(\\n    map((mobileLayout) => ({\\n      mobileLayout,\\n      columns: {\\n        firstName: {\\n          mobileHeader: true,\\n          sortable: true,\\n        },\\n        lastName: {\\n          mobileHeader: true,\\n          sortable: true,\\n        },\\n        gender: {\\n          mobileHeader: true,\\n          transform: {\\n            pipe: GenderPipe,\\n          },\\n        },\\n        favoriteFood: {\\n          mobileHeader: true,\\n        },\\n        action: {\\n          mobileHeader: false,\\n          header: false,\\n          templateRef: this.actions,\\n        },\\n      },\\n    }))\\n  );\\n\\n  SNIPPETS = MOBILE_LAYOUT_SNIPPETS;\\n\\n  toggleLayout = (): void => {\\n    this.mobileLayout$.next(!this.mobileLayout$.getValue());\\n  };\\n  clickAction(\\n    row: TableRow,\\n    column: { key: string; value: TableColumn },\\n    index: number\\n  ): void {\\n    console.log(\'clicked row:\', row, \'col:\', column);\\n    this.clicked = `Clicked row number: ${index}`;\\n  }\\n}\\n\\nexport const Mobile: Story<MobileLayoutComponent> = (\\n  args: MobileLayoutComponent\\n) => ({\\n  props: args,\\n  component: MobileLayoutComponent,\\n});\\n"},{"name":"HighlightPipe","id":"pipe-HighlightPipe-c640cfacbaa8ab6377ac6b98273c18898ed01e151a03e64d2dd508fe2a2c875a40c61302433bb02f3da110ed882e4562d989c211d8727ba88ce9576c7bbe2cc4","file":"projects/core/src/lib/pipes/highlight.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"text","type":"any","deprecated":false,"deprecationMessage":""},{"name":"searchTerm","type":"string | null","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":8,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"text","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"searchTerm","type":"string | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"ngname":"highlight","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\n\\n@Pipe({\\n  name: \'highlight\',\\n  standalone: true,\\n})\\nexport class HighlightPipe implements PipeTransform {\\n  transform(text: any, searchTerm: string | null): string {\\n    if (!searchTerm) {\\n      return text;\\n    }\\n    const haystackAlwaysString = text + \'\';\\n    let highlightedText = haystackAlwaysString; // fallback\\n\\n    let searchPattern;\\n    try {\\n      searchPattern = new RegExp(\\n        \'(\' +\\n          // @ts-ignore\\n          searchTerm\\n            .toLowerCase()\\n            .match(/\\".*?\\"|[^ ]+/g) // extract words\\n            .map(\\n              (needle) => needle.replace(/\\"(.*?)\\"/, \'$1\') // strip away \'\\"\'\\n            )\\n            .join(\'|\') + // combine words\\n          \')\',\\n        \'ig\'\\n      );\\n    } catch (error) {\\n      return highlightedText;\\n    }\\n\\n    const containsTagPattern = /(<.*?>)(.*)(<\\\\/.*?>)/gi;\\n    const containsTagMatches = containsTagPattern.exec(haystackAlwaysString);\\n\\n    if (containsTagMatches) {\\n      // tag exists in haystack\\n      highlightedText =\\n        containsTagMatches[1] +\\n        containsTagMatches[2].replace(\\n          searchPattern,\\n          \'<span class=\\"gt-highlight-search\\">$1</span>\'\\n        ) +\\n        containsTagMatches[3];\\n    } else {\\n      highlightedText = haystackAlwaysString.replace(\\n        searchPattern,\\n        \'<span class=\\"gt-highlight-search\\">$1</span>\'\\n      );\\n    }\\n\\n    return highlightedText;\\n  }\\n}\\n"},{"name":"SortClassPipe","id":"pipe-SortClassPipe-863827bcec157b80e5ad58b4ff87c5f6565a17557ffd0599b89ab1b91376e17b2adf6498974035e450cd05d0d86f4b953c02b4de5860733e761f4615c2e3b3e9","file":"projects/core/src/lib/pipes/sort-class.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"sortOrder","type":"GtSortOrder | null","deprecated":false,"deprecationMessage":""},{"name":"key","type":"string","deprecated":false,"deprecationMessage":""},{"name":"context","type":"\\"class\\" | \\"aria\\" | \\"order\\"","deprecated":false,"deprecationMessage":"","defaultValue":"\'class\'"}],"optional":false,"returnType":"string | null","typeParameters":[],"line":9,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"sortOrder","type":"GtSortOrder | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"key","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"context","type":"\\"class\\" | \\"aria\\" | \\"order\\"","deprecated":false,"deprecationMessage":"","defaultValue":"\'class\'","tagName":{"text":"param"}}]}],"ngname":"sortClass","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\nimport { GtSortOrder } from \'../models/table-sort.interface\';\\n\\n@Pipe({\\n  name: \'sortClass\',\\n  standalone: true,\\n})\\nexport class SortClassPipe implements PipeTransform {\\n  transform(\\n    sortOrder: GtSortOrder | null,\\n    key: string,\\n    context: \'class\' | \'aria\' | \'order\' = \'class\'\\n  ): string | null {\\n    const sortIndex = sortOrder\\n      ? sortOrder.findIndex((s) => s.key === key)\\n      : -1;\\n    if (context === \'aria\') {\\n      if (sortIndex === -1 || !sortOrder) {\\n        return null;\\n      } else {\\n        return `${sortOrder[sortIndex].order}ending`;\\n      }\\n    } else if (context === \'class\') {\\n      if (sortIndex === -1 || !sortOrder) {\\n        return \'\';\\n      } else {\\n        return `gt-sort-${sortOrder[sortIndex].order}`;\\n      }\\n    } else {\\n      return (sortOrder && sortOrder?.length === 1) || sortIndex < 0\\n        ? null\\n        : sortIndex + 1 + \'\';\\n    }\\n  }\\n}\\n"}],"interfaces":[{"name":"BasicData","id":"interface-BasicData-694868655a17d764ba2ea4b3cec45a1da4821c89b5e10705be2cdafe489383b24c58c393e0f3abb055c4a617c285a2b05722a166766c3f680803a92b574cf339","file":"projects/docs/src/app/examples/simple/simple.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Component } from \'@angular/core\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { SIMPLE_SNIPPETS } from \'./simple.snippets\';\\nimport { TableConfig } from \'@angular-generic-table/core\';\\ninterface BasicData {\\n  firstName: string;\\n  lastName: string;\\n  gender: \'male\' | \'female\';\\n  favoriteFood: string;\\n}\\n@Component({\\n  template: `\\n    <div class=\\"overflow-auto\\">\\n      <angular-generic-table\\n        [data]=\\"data\\"\\n        [config]=\\"config\\"\\n      ></angular-generic-table>\\n    </div>\\n    <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n  `,\\n  styles: [],\\n})\\nexport class SimpleComponent {\\n  data: Array<BasicData> = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ];\\n  config: TableConfig<BasicData> = {\\n    class: \'table table-striped table-bordered\',\\n    columns: {\\n      firstName: {},\\n      lastName: {},\\n      gender: {},\\n      favoriteFood: {},\\n    },\\n  };\\n\\n  SNIPPETS = SIMPLE_SNIPPETS;\\n}\\n\\nexport const Simple: Story<SimpleComponent> = (args: SimpleComponent) => ({\\n  props: args,\\n  component: SimpleComponent,\\n});\\n","properties":[{"name":"favoriteFood","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":9},{"name":"firstName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6},{"name":"gender","deprecated":false,"deprecationMessage":"","type":"\\"male\\" | \\"female\\"","optional":false,"description":"","line":8},{"name":"lastName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":7}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"CalcFunc","id":"interface-CalcFunc-9d7d31de0e62a8c41a418f3df63c9524673816d262c4cfcdf8a253c65a17aa4944e83c465e6eda12511b1d9fdc68afd78f3813c272611cc45c82ddcecde20d18","file":"projects/core/src/lib/models/table-config.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { TableColumn } from \'./table-column.interface\';\\nimport { TableRow } from \'./table-row.interface\';\\n\\nexport interface TableConfig<R = TableRow> {\\n  /** Disable sorting of table data, useful when sorting is handled externally e.g. server-side pagination. Table will still use sortOrder to visually show how the data is sorted. <p>**Default:** `false`</p> */\\n  disableTableSort?: boolean;\\n  /** Allows for a more mobile friendly layout by displaying columns as rows instead. This is accomplished with css by adding `table-mobile` class to table element and adding column headers as data labels to each row. <p>**Default:** `false`</p>*/\\n  mobileLayout?: boolean;\\n  /** Make row and/or column headers sticky by adding `gt-sticky-row-header` and `gt-sticky-column-header` to table to alter table behaviour using css. Please note that in order for headers to be sticky, table can\'t be placed inside element with overflow set to auto. <p>**Default:** `{row:false, column:false}`</p>*/\\n  stickyHeaders?: {\\n    row?: boolean;\\n    column?: boolean;\\n  };\\n  /** Add one or more CSS classes to the table element e.g. `table table-striped table-bordered`. <p>**Default:** `table`</p>*/\\n\\n  class?: string;\\n  rows?: {\\n    [Property in keyof R]: TableColumn<R>;\\n  };\\n  columns?: {\\n    [Property in keyof R]: TableColumn<R>;\\n  };\\n  pagination?: {\\n    length?: number;\\n  };\\n  rowClick?: boolean;\\n  rowHover?: boolean;\\n  footer?: {\\n    headers?: {\\n      [key: FooterCalculation | string]: string | boolean;\\n    };\\n    columns?: {\\n      [Property in keyof R]: Partial<TableFooterColumn<R>>;\\n    };\\n    rowOrder?: Array<keyof R | FooterCalculation>;\\n    emptyContent?: string;\\n  };\\n}\\n\\ninterface TableFooterColumn<R> {\\n  [key: FooterCalculation | string]: boolean | number | string | CalcFunc<R>;\\n}\\ninterface CalcFunc<R> {\\n  (data: Array<R>, key: keyof R): number | string;\\n}\\ntype FooterCalculation = \'sum\' | \'avg\' | \'count\' | \'max\' | \'min\';\\n","properties":[{"id":"call-declaration-9d7d31de0e62a8c41a418f3df63c9524673816d262c4cfcdf8a253c65a17aa4944e83c465e6eda12511b1d9fdc68afd78f3813c272611cc45c82ddcecde20d18","args":[{"name":"data","type":"Array<R>","deprecated":false,"deprecationMessage":""},{"name":"key","type":"","deprecated":false,"deprecationMessage":""}],"returnType":"number | string","line":43,"deprecated":false,"deprecationMessage":""}],"indexSignatures":[],"kind":173,"methods":[]},{"name":"Data","id":"interface-Data-04a1d485521dad8971455ab5319b9f61d0a1d60bd1e65141e5361e4e4c86e61215cc9827e2cc5f02aafd2b325c567aafdc84afe04ea907618fd71567987b3421","file":"projects/docs/src/app/examples/nested-data/nested-data.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { NESTED_SNIPPETS } from \'./nested.snippets\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { TableConfig } from \'@angular-generic-table/core\';\\ninterface NestedData {\\n  name: {\\n    first: string;\\n    last: string;\\n  };\\n  data: {\\n    details?: {\\n      gender: \'male\' | \'female\';\\n      favoriteFood: \'Pasta\' | \'Pizza\';\\n    };\\n  };\\n}\\n\\ninterface Data {\\n  firstName: string;\\n  lastName: string;\\n  gender: \'male\' | \'female\';\\n  favoriteFood: \'Pasta\' | \'Pizza\';\\n  missing: string;\\n}\\n@Component({\\n  selector: \'nested-data\',\\n  template: `\\n    <div class=\\"row gy-3\\">\\n      <div class=\\"col col-sm-auto\\">\\n        <button class=\\"btn btn-outline-primary mb-3\\" (click)=\\"loadData()\\">\\n          Load other data\\n        </button>\\n      </div>\\n      <div class=\\"col col-sm-auto\\">\\n        <button class=\\"btn btn-outline-primary mb-3\\" (click)=\\"resetData()\\">\\n          Reset\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\"overflow-auto\\">\\n      <angular-generic-table\\n        [data]=\\"data\\"\\n        [config]=\\"config\\"\\n      ></angular-generic-table>\\n    </div>\\n    <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n    <ng-template #gender let-row=\\"row\\" let-col=\\"col\\">\\n      <div [ngSwitch]=\\"row[col.key]\\">\\n        <ng-container *ngSwitchCase=\\"\'male\'\\">♂️</ng-container>\\n        <ng-container *ngSwitchCase=\\"\'female\'\\">♀️</ng-container>\\n      </div>\\n    </ng-template>\\n  `,\\n  styles: [],\\n})\\nexport class NestedDataComponent implements OnInit {\\n  @ViewChild(\'gender\', { static: true }) gender: TemplateRef<any> | undefined;\\n\\n  config: TableConfig<Data> = {};\\n  data: Array<NestedData> = [];\\n  ngOnInit(): void {\\n    this.resetData();\\n    this.config = {\\n      columns: {\\n        firstName: {\\n          sortable: true,\\n          mapTo: { path: \'name.first\' },\\n        },\\n        lastName: {\\n          sortable: true,\\n          mapTo: { path: \'name.last\' },\\n        },\\n        gender: {\\n          mapTo: { path: \'data.details.gender\' },\\n          templateRef: this.gender,\\n        },\\n        favoriteFood: {\\n          sortable: true,\\n          mapTo: { path: \'data.details.favoriteFood\', missingValue: \'n/a\' },\\n        },\\n        missing: {\\n          mapTo: { path: \'data.missingKey.noMatch\', missingValue: \'n/a\' },\\n        },\\n      },\\n    };\\n  }\\n\\n  resetData() {\\n    this.data = [\\n      {\\n        name: {\\n          first: \'Peter\',\\n          last: \'Parker\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'male\',\\n            favoriteFood: \'Pasta\',\\n          },\\n        },\\n      },\\n      {\\n        name: {\\n          first: \'Mary Jane\',\\n          last: \'Watson\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'female\',\\n            favoriteFood: \'Pizza\',\\n          },\\n        },\\n      },\\n    ];\\n  }\\n\\n  loadData(): void {\\n    this.data = [\\n      {\\n        name: {\\n          first: \'John\',\\n          last: \'Doe\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'male\',\\n            favoriteFood: \'Pasta\',\\n          },\\n        },\\n      },\\n      {\\n        name: {\\n          first: \'Jane\',\\n          last: \'Doe\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'female\',\\n            favoriteFood: \'Pizza\',\\n          },\\n        },\\n      },\\n      {\\n        name: {\\n          first: \'Foo\',\\n          last: \'Bar\',\\n        },\\n        data: {},\\n      },\\n    ];\\n  }\\n\\n  SNIPPETS = NESTED_SNIPPETS;\\n}\\n\\nexport const Nested: Story<NestedDataComponent> = (\\n  args: NestedDataComponent\\n) => ({\\n  props: args,\\n  component: NestedDataComponent,\\n});\\n","properties":[{"name":"favoriteFood","deprecated":false,"deprecationMessage":"","type":"\\"Pasta\\" | \\"Pizza\\"","optional":false,"description":"","line":22},{"name":"firstName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":19},{"name":"gender","deprecated":false,"deprecationMessage":"","type":"\\"male\\" | \\"female\\"","optional":false,"description":"","line":21},{"name":"lastName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":20},{"name":"missing","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":23}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"GtDelta","id":"interface-GtDelta-d8eaa54ebedc2786bbacacc9d40879c45252ff3cfeba6048488dcc628854c5f69f0ffd5a78d21d33b244eb515886c66a7b92a11a818dd7b7cf160b4dc6fce7a6","file":"projects/core/src/lib/gt-delta/gt-delta.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import {\\n  ChangeDetectionStrategy,\\n  Component,\\n  Input,\\n  OnChanges,\\n  SimpleChanges,\\n  TemplateRef,\\n} from \'@angular/core\';\\nimport { TableRow } from \'../models/table-row.interface\';\\nimport { NgIf, NgTemplateOutlet, PercentPipe } from \'@angular/common\';\\n\\nexport interface GtDelta {\\n  relative: number | string;\\n  absolute: number;\\n}\\n@Component({\\n  selector: \'gt-delta\',\\n  template: `<span\\n      *ngIf=\\"value as delta\\"\\n      [class]=\\"[\\n        classes.span,\\n        delta.absolute > 0\\n          ? classes.positive\\n          : delta.absolute < 0\\n          ? classes.negative\\n          : null\\n      ]\\"\\n      [class.gt-delta-positive]=\\"delta.absolute > 0\\"\\n      [class.gt-delta-negative]=\\"delta.absolute < 0\\"\\n      ><ng-container\\n        *ngTemplateOutlet=\\"deltaTemplate || defaultTemplate; context: { delta }\\"\\n      ></ng-container>\\n    </span>\\n    <ng-template #defaultTemplate let-delta=\\"delta\\">\\n      <span *ngIf=\\"delta.relative\\">{{\\n        delta.relative | percent: \'1.0-2\'\\n      }}</span>\\n    </ng-template>`,\\n  styles: [\\n    `\\n      :host {\\n        display: inline-block;\\n      }\\n    `,\\n  ],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  standalone: true,\\n  imports: [PercentPipe, NgIf, NgTemplateOutlet],\\n})\\nexport class GtDeltaComponent implements OnChanges {\\n  get value() {\\n    return this._value;\\n  }\\n\\n  set value(value) {\\n    this._value = value;\\n  }\\n  get deltaTemplate(): TemplateRef<any> {\\n    return this._deltaTemplate;\\n  }\\n  constructor() {}\\n  @Input() set deltaTemplate(deltaTemplate: TemplateRef<any>) {\\n    this._deltaTemplate = deltaTemplate;\\n  }\\n  Math = Math;\\n  Number = Number;\\n  @Input() data: Array<TableRow> = [];\\n  @Input() index: number = 0;\\n  @Input() baseIndex?: number;\\n  @Input() classes = {\\n    span: \'gt-delta\',\\n    positive: \'text-success\',\\n    negative: \'text-danger\',\\n  };\\n  @Input() key: string = \'value\';\\n  @Input() notApplicableValue: string | null = null;\\n  @Input() initialValue: string | number | null = null;\\n  private _value?: GtDelta;\\n  private _deltaTemplate?: any;\\n  ngOnChanges(changes: SimpleChanges): void {\\n    if (!changes.data.currentValue) {\\n      return;\\n    }\\n    const data = changes.data?.currentValue;\\n    const index = changes.index?.currentValue || this.index;\\n    const baseIndex = changes.baseIndex?.currentValue;\\n    const key = changes.key?.currentValue || this.key;\\n    const initialValue =\\n      changes.initialValue?.currentValue || this.initialValue;\\n\\n    const deltaValue =\\n      index === 0\\n        ? initialValue\\n        : data[index][key] -\\n          (baseIndex === undefined\\n            ? data[index - 1][key]\\n            : data[baseIndex][key]);\\n    const baseValue =\\n      index === 0\\n        ? 1\\n        : baseIndex === undefined\\n        ? data[index - 1][key]\\n        : data[baseIndex][key];\\n\\n    const relative =\\n      index === 0\\n        ? initialValue\\n        : Math.sign(deltaValue) * Math.abs(deltaValue / baseValue);\\n\\n    this.value = {\\n      relative: Number.isFinite(relative)\\n        ? relative\\n        : index === 0\\n        ? initialValue\\n        : changes.notApplicableValue?.currentValue || this.notApplicableValue,\\n      absolute: deltaValue,\\n    };\\n  }\\n}\\n","properties":[{"name":"absolute","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":14},{"name":"relative","deprecated":false,"deprecationMessage":"","type":"number | string","optional":false,"description":"","line":13}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"GtPaginationAriaLabels","id":"interface-GtPaginationAriaLabels-b61886aff7ec6266e2fecc3c4d070bf12d450c8547655bfc4fd7bd41551f50cc5f3a7db5503444c874878cd722de11168ea1d52dcd9ec8bb741183c7431eda7c","file":"projects/core/src/lib/models/gt-pagination.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface GtPaginationClasses {\\n  nav?: string;\\n  ul?: string;\\n  li?: string;\\n  button?: string;\\n}\\n\\nexport interface GtPaginationAriaLabels {\\n  nav: string;\\n  button: string;\\n}\\n","properties":[{"name":"button","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":10},{"name":"nav","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":9}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"GtPaginationClasses","id":"interface-GtPaginationClasses-b61886aff7ec6266e2fecc3c4d070bf12d450c8547655bfc4fd7bd41551f50cc5f3a7db5503444c874878cd722de11168ea1d52dcd9ec8bb741183c7431eda7c","file":"projects/core/src/lib/models/gt-pagination.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface GtPaginationClasses {\\n  nav?: string;\\n  ul?: string;\\n  li?: string;\\n  button?: string;\\n}\\n\\nexport interface GtPaginationAriaLabels {\\n  nav: string;\\n  button: string;\\n}\\n","properties":[{"name":"button","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":5},{"name":"li","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":4},{"name":"nav","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":2},{"name":"ul","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":3}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"GtRowClickEvent","id":"interface-GtRowClickEvent-0656578d501d96d91fef7aee813bb583aaa267a45dc431382305ac287a14599f4974bd8996e7dae0a457ae087bb406600faa624047f2980d0366ffd91e0d3d87","file":"projects/core/src/lib/models/table-events.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { TableRow } from \'./table-row.interface\';\\nimport { GtOrder, GtSortOrder } from \'./table-sort.interface\';\\n\\nexport interface GtRowClickEvent<R = TableRow> {\\n  row: R;\\n  index: number;\\n  event: MouseEvent;\\n}\\n\\nexport interface GtRowHoverEvent<R = TableRow> {\\n  row: R | null;\\n  index: number | null;\\n  event?: MouseEvent;\\n}\\n\\nexport interface GtSortEvent<R = TableRow> {\\n  key: keyof R;\\n  order: GtOrder;\\n  currentSortOrder: GtSortOrder<R>;\\n  event?: MouseEvent;\\n}\\n","properties":[{"name":"event","deprecated":false,"deprecationMessage":"","type":"MouseEvent","optional":false,"description":"","line":7},{"name":"index","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":6},{"name":"row","deprecated":false,"deprecationMessage":"","type":"R","optional":false,"description":"","line":5}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"GtRowHoverEvent","id":"interface-GtRowHoverEvent-0656578d501d96d91fef7aee813bb583aaa267a45dc431382305ac287a14599f4974bd8996e7dae0a457ae087bb406600faa624047f2980d0366ffd91e0d3d87","file":"projects/core/src/lib/models/table-events.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { TableRow } from \'./table-row.interface\';\\nimport { GtOrder, GtSortOrder } from \'./table-sort.interface\';\\n\\nexport interface GtRowClickEvent<R = TableRow> {\\n  row: R;\\n  index: number;\\n  event: MouseEvent;\\n}\\n\\nexport interface GtRowHoverEvent<R = TableRow> {\\n  row: R | null;\\n  index: number | null;\\n  event?: MouseEvent;\\n}\\n\\nexport interface GtSortEvent<R = TableRow> {\\n  key: keyof R;\\n  order: GtOrder;\\n  currentSortOrder: GtSortOrder<R>;\\n  event?: MouseEvent;\\n}\\n","properties":[{"name":"event","deprecated":false,"deprecationMessage":"","type":"MouseEvent","optional":true,"description":"","line":13},{"name":"index","deprecated":false,"deprecationMessage":"","type":"number | null","optional":false,"description":"","line":12},{"name":"row","deprecated":false,"deprecationMessage":"","type":"R | null","optional":false,"description":"","line":11}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"GtSortConfig","id":"interface-GtSortConfig-5ebf8d79dde996f6f1b846feb6f5a9d53bf8e9f71148b865d03bc29797c0d564d6ee23f47f5cbbfcd943834b7b67e01e5653790f1e63dda88407e78dbdeb4895","file":"projects/core/src/lib/models/table-sort.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { TableRow } from \'./table-row.interface\';\\n\\nexport type GtSortOrder<R = TableRow> = Array<GtSortConfig<R>>;\\nexport interface GtSortConfig<R = {}> {\\n  key: keyof R;\\n  order: GtOrder;\\n}\\n\\nexport type GtOrder = \'asc\' | \'desc\';\\n","properties":[{"name":"key","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":5},{"name":"order","deprecated":false,"deprecationMessage":"","type":"GtOrder","optional":false,"description":"","line":6}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"GtSortEvent","id":"interface-GtSortEvent-0656578d501d96d91fef7aee813bb583aaa267a45dc431382305ac287a14599f4974bd8996e7dae0a457ae087bb406600faa624047f2980d0366ffd91e0d3d87","file":"projects/core/src/lib/models/table-events.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { TableRow } from \'./table-row.interface\';\\nimport { GtOrder, GtSortOrder } from \'./table-sort.interface\';\\n\\nexport interface GtRowClickEvent<R = TableRow> {\\n  row: R;\\n  index: number;\\n  event: MouseEvent;\\n}\\n\\nexport interface GtRowHoverEvent<R = TableRow> {\\n  row: R | null;\\n  index: number | null;\\n  event?: MouseEvent;\\n}\\n\\nexport interface GtSortEvent<R = TableRow> {\\n  key: keyof R;\\n  order: GtOrder;\\n  currentSortOrder: GtSortOrder<R>;\\n  event?: MouseEvent;\\n}\\n","properties":[{"name":"currentSortOrder","deprecated":false,"deprecationMessage":"","type":"GtSortOrder<R>","optional":false,"description":"","line":19},{"name":"event","deprecated":false,"deprecationMessage":"","type":"MouseEvent","optional":true,"description":"","line":20},{"name":"key","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17},{"name":"order","deprecated":false,"deprecationMessage":"","type":"GtOrder","optional":false,"description":"","line":18}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"NestedData","id":"interface-NestedData-04a1d485521dad8971455ab5319b9f61d0a1d60bd1e65141e5361e4e4c86e61215cc9827e2cc5f02aafd2b325c567aafdc84afe04ea907618fd71567987b3421","file":"projects/docs/src/app/examples/nested-data/nested-data.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { NESTED_SNIPPETS } from \'./nested.snippets\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { TableConfig } from \'@angular-generic-table/core\';\\ninterface NestedData {\\n  name: {\\n    first: string;\\n    last: string;\\n  };\\n  data: {\\n    details?: {\\n      gender: \'male\' | \'female\';\\n      favoriteFood: \'Pasta\' | \'Pizza\';\\n    };\\n  };\\n}\\n\\ninterface Data {\\n  firstName: string;\\n  lastName: string;\\n  gender: \'male\' | \'female\';\\n  favoriteFood: \'Pasta\' | \'Pizza\';\\n  missing: string;\\n}\\n@Component({\\n  selector: \'nested-data\',\\n  template: `\\n    <div class=\\"row gy-3\\">\\n      <div class=\\"col col-sm-auto\\">\\n        <button class=\\"btn btn-outline-primary mb-3\\" (click)=\\"loadData()\\">\\n          Load other data\\n        </button>\\n      </div>\\n      <div class=\\"col col-sm-auto\\">\\n        <button class=\\"btn btn-outline-primary mb-3\\" (click)=\\"resetData()\\">\\n          Reset\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\"overflow-auto\\">\\n      <angular-generic-table\\n        [data]=\\"data\\"\\n        [config]=\\"config\\"\\n      ></angular-generic-table>\\n    </div>\\n    <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n    <ng-template #gender let-row=\\"row\\" let-col=\\"col\\">\\n      <div [ngSwitch]=\\"row[col.key]\\">\\n        <ng-container *ngSwitchCase=\\"\'male\'\\">♂️</ng-container>\\n        <ng-container *ngSwitchCase=\\"\'female\'\\">♀️</ng-container>\\n      </div>\\n    </ng-template>\\n  `,\\n  styles: [],\\n})\\nexport class NestedDataComponent implements OnInit {\\n  @ViewChild(\'gender\', { static: true }) gender: TemplateRef<any> | undefined;\\n\\n  config: TableConfig<Data> = {};\\n  data: Array<NestedData> = [];\\n  ngOnInit(): void {\\n    this.resetData();\\n    this.config = {\\n      columns: {\\n        firstName: {\\n          sortable: true,\\n          mapTo: { path: \'name.first\' },\\n        },\\n        lastName: {\\n          sortable: true,\\n          mapTo: { path: \'name.last\' },\\n        },\\n        gender: {\\n          mapTo: { path: \'data.details.gender\' },\\n          templateRef: this.gender,\\n        },\\n        favoriteFood: {\\n          sortable: true,\\n          mapTo: { path: \'data.details.favoriteFood\', missingValue: \'n/a\' },\\n        },\\n        missing: {\\n          mapTo: { path: \'data.missingKey.noMatch\', missingValue: \'n/a\' },\\n        },\\n      },\\n    };\\n  }\\n\\n  resetData() {\\n    this.data = [\\n      {\\n        name: {\\n          first: \'Peter\',\\n          last: \'Parker\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'male\',\\n            favoriteFood: \'Pasta\',\\n          },\\n        },\\n      },\\n      {\\n        name: {\\n          first: \'Mary Jane\',\\n          last: \'Watson\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'female\',\\n            favoriteFood: \'Pizza\',\\n          },\\n        },\\n      },\\n    ];\\n  }\\n\\n  loadData(): void {\\n    this.data = [\\n      {\\n        name: {\\n          first: \'John\',\\n          last: \'Doe\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'male\',\\n            favoriteFood: \'Pasta\',\\n          },\\n        },\\n      },\\n      {\\n        name: {\\n          first: \'Jane\',\\n          last: \'Doe\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'female\',\\n            favoriteFood: \'Pizza\',\\n          },\\n        },\\n      },\\n      {\\n        name: {\\n          first: \'Foo\',\\n          last: \'Bar\',\\n        },\\n        data: {},\\n      },\\n    ];\\n  }\\n\\n  SNIPPETS = NESTED_SNIPPETS;\\n}\\n\\nexport const Nested: Story<NestedDataComponent> = (\\n  args: NestedDataComponent\\n) => ({\\n  props: args,\\n  component: NestedDataComponent,\\n});\\n","properties":[{"name":"data","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":10},{"name":"name","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":6}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"RawData","id":"interface-RawData-0a5c0cb27d235dfe9659a36988e8f66a453ff89ad5e286c1c983f66beb2ec0e2a4b9694bf4c3ff2f652e68001624f00f6630abc1e58f843290dac6f691044c0c","file":"projects/docs/src/app/examples/transpose/transpose.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { BehaviorSubject, Observable } from \'rxjs\';\\nimport { TableConfig, GtDeltaComponent } from \'@angular-generic-table/core\';\\nimport { UntypedFormBuilder } from \'@angular/forms\';\\nimport { withLatestFrom } from \'rxjs/operators\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { TRANSPOSE_SNIPPETS } from \'./transpose.snippets\';\\ninterface RawData {\\n  year: string;\\n  value: number;\\n}\\ninterface YearData extends RawData {\\n  delta: number;\\n  deltaIndex: number;\\n  combined: number;\\n  deltaAbsolute: number;\\n}\\n@Component({\\n  selector: \'docs-transpose\',\\n  template: `\\n    <form [formGroup]=\\"reactiveForm\\">\\n      <div class=\\"row gy-3 gx-3 align-items-end mb-3\\">\\n        <div class=\\"form-group col-6 col-sm-auto\\">\\n          <label for=\\"length_input\\">Number of rows</label>\\n          <input\\n            id=\\"length_input\\"\\n            formControlName=\\"length\\"\\n            type=\\"number\\"\\n            class=\\"form-control\\"\\n          />\\n        </div>\\n        <div class=\\"form-group col-6 col-sm-auto\\">\\n          <label for=\\"search_input\\">Search</label>\\n          <input\\n            id=\\"search_input\\"\\n            formControlName=\\"search\\"\\n            type=\\"text\\"\\n            class=\\"form-control\\"\\n          />\\n        </div>\\n        <div class=\\"col-auto\\">\\n          <button\\n            class=\\"btn btn-outline-primary w-100\\"\\n            (click)=\\"simulateLoad()\\"\\n          >\\n            Simulate load\\n          </button>\\n        </div>\\n        <div class=\\"col col-sm-auto\\">\\n          <button class=\\"btn btn-outline-danger w-100\\" (click)=\\"empty()\\">\\n            Empty\\n          </button>\\n        </div>\\n        <div class=\\"col col-sm-auto\\">\\n          <button class=\\"btn btn-outline-primary w-100\\" (click)=\\"load()\\">\\n            Reset\\n          </button>\\n        </div>\\n        <div class=\\"col col-sm-auto\\">\\n          <button class=\\"btn btn-outline-primary w-100\\" (click)=\\"transpose()\\">\\n            Transpose\\n          </button>\\n        </div>\\n      </div>\\n      <div class=\\"overflow-auto\\">\\n        <angular-generic-table\\n          #table\\n          [data]=\\"data\\"\\n          [config]=\\"tableConfig$\\"\\n          [loading]=\\"loading$\\"\\n          [search]=\\"search$\\"\\n        >\\n          <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n          <div class=\\"table-no-data alert alert-info mt-3\\">Table is empty</div>\\n        </angular-generic-table>\\n      </div>\\n      <angular-generic-table-pagination [table]=\\"table\\">\\n      </angular-generic-table-pagination>\\n      <ng-template #delta let-index=\\"index\\" let-data=\\"data\\">\\n        <gt-delta [index]=\\"index\\" [data]=\\"data\\"></gt-delta>\\n      </ng-template>\\n      <ng-template #deltaAbsolute let-index=\\"index\\" let-data=\\"data\\">\\n        <gt-delta\\n          [index]=\\"index\\"\\n          [data]=\\"data\\"\\n          [deltaTemplate]=\\"deltaTemplate\\"\\n        ></gt-delta>\\n      </ng-template>\\n      <ng-template #deltaIndex let-index=\\"index\\" let-data=\\"data\\">\\n        <gt-delta [index]=\\"index\\" [data]=\\"data\\" [baseIndex]=\\"0\\"></gt-delta>\\n      </ng-template>\\n      <ng-template\\n        #combined\\n        let-index=\\"index\\"\\n        let-data=\\"data\\"\\n        let-row=\\"row\\"\\n        let-col=\\"col\\"\\n      >\\n        {{ row.value }}\\n        <ng-container *ngIf=\\"index > 0\\">\\n          <gt-delta [index]=\\"index\\" [data]=\\"data\\"></gt-delta>\\n        </ng-container>\\n      </ng-template>\\n      <ng-template #deltaTemplate let-delta=\\"delta\\">\\n        <span>{{ delta.absolute }}</span></ng-template\\n      >\\n      <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n    </form>\\n  `,\\n  styles: [],\\n})\\nexport class TransposeComponent implements OnInit {\\n  @ViewChild(\'delta\', { static: true }) delta:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  @ViewChild(\'deltaAbsolute\', { static: true }) deltaAbsolute:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  @ViewChild(\'deltaIndex\', { static: true }) deltaIndex:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  @ViewChild(\'combined\', { static: true }) combined:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  loading$ = new BehaviorSubject(false);\\n  reactiveForm = this.fb.group({\\n    length: [10],\\n    search: [\'\'],\\n  });\\n  search$ = this.reactiveForm.get(\'search\')?.valueChanges as Observable<string>;\\n  tableConfig$: BehaviorSubject<TableConfig<YearData>> = new BehaviorSubject<\\n    TableConfig<YearData>\\n  >({});\\n  data: Array<RawData> = [];\\n\\n  constructor(private fb: UntypedFormBuilder) {}\\n\\n  ngOnInit(): void {\\n    this.transpose();\\n    this.load();\\n    this.reactiveForm\\n      .get(\'length\')\\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\\n      .subscribe(([length, config]) => {\\n        length = +length;\\n        this.tableConfig$.next({\\n          ...config,\\n          pagination: { ...config.pagination, length },\\n        });\\n      });\\n  }\\n\\n  simulateLoad(): void {\\n    this.loading$.next(true);\\n    // set loading state to false after 2 seconds\\n    setTimeout(() => this.loading$.next(false), 2000);\\n  }\\n  empty(): void {\\n    this.data = [];\\n  }\\n  load(): void {\\n    this.data = [\\n      {\\n        year: \'2010\',\\n        value: 15,\\n      },\\n      {\\n        year: \'2011\',\\n        value: 30,\\n      },\\n      {\\n        year: \'2012\',\\n        value: 25,\\n      },\\n      {\\n        year: \'2013\',\\n        value: 0,\\n      },\\n      {\\n        year: \'2014\',\\n        value: 40,\\n      },\\n      {\\n        year: \'2015\',\\n        value: 0,\\n      },\\n      {\\n        year: \'2016\',\\n        value: -5,\\n      },\\n      {\\n        year: \'2018\',\\n        value: 75,\\n      },\\n      {\\n        year: \'2019\',\\n        value: 100,\\n      },\\n      {\\n        year: \'2020\',\\n        value: 250,\\n      },\\n      {\\n        year: \'2021\',\\n        value: 50,\\n      },\\n      {\\n        year: \'2022\',\\n        value: 60,\\n      },\\n    ];\\n  }\\n  transpose(): void {\\n    if (this.tableConfig$.value.columns) {\\n      this.tableConfig$.next({\\n        stickyHeaders: {\\n          row: true,\\n          column: true,\\n        },\\n        rows: {\\n          year: {\\n            sortable: true,\\n            header: false,\\n            class: \'text-end\',\\n          },\\n          value: {\\n            class: \'text-end\',\\n          },\\n          delta: {\\n            header: \'Delta %\',\\n            templateRef: this.delta,\\n            class: \'text-end\',\\n          },\\n          deltaIndex: {\\n            header: \'Since inception %\',\\n            templateRef: this.deltaIndex,\\n            class: \'text-end\',\\n          },\\n          deltaAbsolute: {\\n            header: \'Delta\',\\n            templateRef: this.deltaAbsolute,\\n            class: \'text-end\',\\n          },\\n          combined: {\\n            header: \'Value with change\',\\n            templateRef: this.combined,\\n            class: \'text-end text-nowrap\',\\n          },\\n        },\\n      });\\n    } else {\\n      this.tableConfig$.next({\\n        stickyHeaders: {\\n          row: true,\\n          column: true,\\n        },\\n        columns: {\\n          year: {\\n            sortable: true,\\n          },\\n          value: {\\n            class: \'text-end\',\\n          },\\n          delta: {\\n            header: \'Delta %\',\\n            templateRef: this.delta,\\n            class: \'text-end\',\\n          },\\n          deltaIndex: {\\n            header: \'Since inception %\',\\n            templateRef: this.deltaIndex,\\n            class: \'text-end\',\\n          },\\n          deltaAbsolute: {\\n            header: \'Delta\',\\n            templateRef: this.deltaAbsolute,\\n            class: \'text-end\',\\n          },\\n          combined: {\\n            header: \'Value with change\',\\n            templateRef: this.combined,\\n            class: \'text-end text-nowrap\',\\n          },\\n        },\\n        pagination: { length: this.reactiveForm.get(\'length\')?.value },\\n      });\\n    }\\n  }\\n  SNIPPETS = TRANSPOSE_SNIPPETS;\\n}\\n\\nexport const Transpose: Story<TransposeComponent> = (\\n  args: TransposeComponent\\n) => ({\\n  props: args,\\n  component: TransposeComponent,\\n});\\n","properties":[{"name":"value","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":10},{"name":"year","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":9}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"SortingData","id":"interface-SortingData-4ef62adeec6897b8e534c6091a292d9ae7fd533c6079340b6b9edf96420c885a8d8a92be14944773a784a876cca1d3299a6e8762760799e0958f49349cb5bd9a","file":"projects/docs/src/app/examples/sorting/sorting.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Component } from \'@angular/core\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { SIMPLE_SNIPPETS } from \'./sorting.snippets\';\\nimport {\\n  GtSortEvent,\\n  GtSortOrder,\\n  TableConfig,\\n} from \'@angular-generic-table/core\';\\nimport { DatePipe } from \'@angular/common\';\\n\\ninterface SortingData {\\n  firstName: string;\\n  lastName: string;\\n  gender: \'male\' | \'female\';\\n  favoriteFood: string;\\n  birthdate: number;\\n}\\n@Component({\\n  template: `\\n    <div class=\\"overflow-auto\\">\\n      <angular-generic-table\\n        #table\\n        [data]=\\"data\\"\\n        [config]=\\"config\\"\\n        [(sortOrder)]=\\"sortOrder\\"\\n        (columnSort)=\\"logSortChange($event)\\"\\n      ></angular-generic-table>\\n    </div>\\n    <div class=\\"row mb-3 gy-3\\">\\n      <div class=\\"col-12 col-sm-auto\\">\\n        <button\\n          class=\\"btn btn-primary w-100\\"\\n          (click)=\\"table.sortByKey(\'firstName\', $event)\\"\\n        >\\n          Sort on first name\\n        </button>\\n      </div>\\n      <div class=\\"col-12 col-sm-auto\\">\\n        <button class=\\"btn btn-primary w-100\\" (click)=\\"resetSort()\\">\\n          Reset sorting\\n        </button>\\n      </div>\\n    </div>\\n    <strong>Current sort order</strong>\\n    <p>\\n      <code>\\n        {{ sortOrder | json }}\\n      </code>\\n    </p>\\n    <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n  `,\\n  styles: [],\\n})\\nexport class SortingComponent {\\n  initialSortOrder: GtSortOrder<SortingData> = [\\n    { key: \'birthdate\', order: \'asc\' },\\n    { key: \'gender\', order: \'asc\' },\\n    { key: \'firstName\', order: \'desc\' },\\n  ];\\n  sortOrder: GtSortOrder<SortingData> = this.initialSortOrder;\\n  data: Array<SortingData> = [\\n    {\\n      firstName: \'John\',\\n      lastName: \'Doe\',\\n      gender: \'male\',\\n      favoriteFood: \'pizza\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Jane\',\\n      lastName: \'Smith\',\\n      gender: \'female\',\\n      favoriteFood: \'sushi\',\\n      birthdate: 803404800000,\\n    },\\n    {\\n      firstName: \'Bob\',\\n      lastName: \'Johnson\',\\n      gender: \'male\',\\n      favoriteFood: \'burgers\',\\n      birthdate: 649345600000,\\n    },\\n    {\\n      firstName: \'Emily\',\\n      lastName: \'Williams\',\\n      gender: \'female\',\\n      favoriteFood: \'chicken\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Michael\',\\n      lastName: \'Jones\',\\n      gender: \'male\',\\n      favoriteFood: \'steak\',\\n      birthdate: 803404800000,\\n    },\\n    {\\n      firstName: \'Matthew\',\\n      lastName: \'Brown\',\\n      gender: \'male\',\\n      favoriteFood: \'seafood\',\\n      birthdate: 649345600000,\\n    },\\n    {\\n      firstName: \'Jessica\',\\n      lastName: \'Miller\',\\n      gender: \'female\',\\n      favoriteFood: \'salad\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Jacob\',\\n      lastName: \'Moore\',\\n      gender: \'male\',\\n      favoriteFood: \'pasta\',\\n      birthdate: 803404800000,\\n    },\\n    {\\n      firstName: \'Nicholas\',\\n      lastName: \'Taylor\',\\n      gender: \'male\',\\n      favoriteFood: \'soup\',\\n      birthdate: 649345600000,\\n    },\\n    {\\n      firstName: \'Ashley\',\\n      lastName: \'Anderson\',\\n      gender: \'female\',\\n      favoriteFood: \'tacos\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Brandon\',\\n      lastName: \'Thomas\',\\n      gender: \'male\',\\n      favoriteFood: \'nachos\',\\n      birthdate: 803404800000,\\n    },\\n  ];\\n  config: TableConfig<SortingData> = {\\n    columns: {\\n      firstName: {\\n        sortable: true,\\n      },\\n      lastName: {\\n        sortable: true,\\n      },\\n      gender: {\\n        sortable: true,\\n      },\\n      favoriteFood: {\\n        sortable: true,\\n      },\\n      birthdate: {\\n        sortable: true,\\n        transform: {\\n          pipe: DatePipe,\\n        },\\n      },\\n    },\\n  };\\n\\n  logSortChange(sortEvent: GtSortEvent<SortingData>) {\\n    console.log(sortEvent);\\n  }\\n\\n  resetSort() {\\n    this.sortOrder = this.initialSortOrder;\\n  }\\n\\n  SNIPPETS = SIMPLE_SNIPPETS;\\n}\\n\\nexport const Sorting: Story<SortingComponent> = (args: SortingComponent) => ({\\n  props: args,\\n  component: SortingComponent,\\n});\\n","properties":[{"name":"birthdate","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":16},{"name":"favoriteFood","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":15},{"name":"firstName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":12},{"name":"gender","deprecated":false,"deprecationMessage":"","type":"\\"male\\" | \\"female\\"","optional":false,"description":"","line":14},{"name":"lastName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":13}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"TableColumn","id":"interface-TableColumn-953ad06f9a505d8a3bc23bf8b041124803f2f420df138001d72f681df6ad23eb54e307a24cf377dfcd0319f22d8c55b2b25dbeb468be7f9b181977039888b69b","file":"projects/core/src/lib/models/table-column.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { TemplateRef } from \'@angular/core\';\\nimport { TableRow } from \'./table-row.interface\';\\nexport interface TableColumn<R = TableRow> {\\n  header?: string | false;\\n  mobileHeader?: string | boolean;\\n  hidden?: boolean;\\n  sortable?: boolean;\\n  order?: number;\\n  search?: boolean | SearchFunction<R>;\\n  templateRef?: TemplateRef<any>;\\n  transform?: {\\n    pipe: any;\\n    args?: Array<any>;\\n  };\\n  class?: string;\\n  mapTo?: {\\n    path: string;\\n    missingValue?: string | number;\\n  };\\n}\\n\\nexport type SearchFunction<R = TableRow> = (\\n  row: R,\\n  column: keyof R,\\n  value: typeof row[keyof R]\\n) => string;\\n","properties":[{"name":"class","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":15},{"name":"header","deprecated":false,"deprecationMessage":"","type":"string | ","optional":true,"description":"","line":4},{"name":"hidden","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":6},{"name":"mapTo","deprecated":false,"deprecationMessage":"","type":"literal type","optional":true,"description":"","line":16},{"name":"mobileHeader","deprecated":false,"deprecationMessage":"","type":"string | boolean","optional":true,"description":"","line":5},{"name":"order","deprecated":false,"deprecationMessage":"","type":"number","optional":true,"description":"","line":8},{"name":"search","deprecated":false,"deprecationMessage":"","type":"boolean | SearchFunction<R>","optional":true,"description":"","line":9},{"name":"sortable","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":7},{"name":"templateRef","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":true,"description":"","line":10},{"name":"transform","deprecated":false,"deprecationMessage":"","type":"literal type","optional":true,"description":"","line":11}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"TableConfig","id":"interface-TableConfig-9d7d31de0e62a8c41a418f3df63c9524673816d262c4cfcdf8a253c65a17aa4944e83c465e6eda12511b1d9fdc68afd78f3813c272611cc45c82ddcecde20d18","file":"projects/core/src/lib/models/table-config.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { TableColumn } from \'./table-column.interface\';\\nimport { TableRow } from \'./table-row.interface\';\\n\\nexport interface TableConfig<R = TableRow> {\\n  /** Disable sorting of table data, useful when sorting is handled externally e.g. server-side pagination. Table will still use sortOrder to visually show how the data is sorted. <p>**Default:** `false`</p> */\\n  disableTableSort?: boolean;\\n  /** Allows for a more mobile friendly layout by displaying columns as rows instead. This is accomplished with css by adding `table-mobile` class to table element and adding column headers as data labels to each row. <p>**Default:** `false`</p>*/\\n  mobileLayout?: boolean;\\n  /** Make row and/or column headers sticky by adding `gt-sticky-row-header` and `gt-sticky-column-header` to table to alter table behaviour using css. Please note that in order for headers to be sticky, table can\'t be placed inside element with overflow set to auto. <p>**Default:** `{row:false, column:false}`</p>*/\\n  stickyHeaders?: {\\n    row?: boolean;\\n    column?: boolean;\\n  };\\n  /** Add one or more CSS classes to the table element e.g. `table table-striped table-bordered`. <p>**Default:** `table`</p>*/\\n\\n  class?: string;\\n  rows?: {\\n    [Property in keyof R]: TableColumn<R>;\\n  };\\n  columns?: {\\n    [Property in keyof R]: TableColumn<R>;\\n  };\\n  pagination?: {\\n    length?: number;\\n  };\\n  rowClick?: boolean;\\n  rowHover?: boolean;\\n  footer?: {\\n    headers?: {\\n      [key: FooterCalculation | string]: string | boolean;\\n    };\\n    columns?: {\\n      [Property in keyof R]: Partial<TableFooterColumn<R>>;\\n    };\\n    rowOrder?: Array<keyof R | FooterCalculation>;\\n    emptyContent?: string;\\n  };\\n}\\n\\ninterface TableFooterColumn<R> {\\n  [key: FooterCalculation | string]: boolean | number | string | CalcFunc<R>;\\n}\\ninterface CalcFunc<R> {\\n  (data: Array<R>, key: keyof R): number | string;\\n}\\ntype FooterCalculation = \'sum\' | \'avg\' | \'count\' | \'max\' | \'min\';\\n","properties":[{"name":"class","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>Add one or more CSS classes to the table element e.g. <code>table table-striped table-bordered</code>. <p><strong>Default:</strong> <code>table</code></p></p>\\n","line":16,"rawdescription":"\\nAdd one or more CSS classes to the table element e.g. `table table-striped table-bordered`. <p>**Default:** `table`</p>"},{"name":"columns","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":20},{"name":"disableTableSort","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"<p>Disable sorting of table data, useful when sorting is handled externally e.g. server-side pagination. Table will still use sortOrder to visually show how the data is sorted. <p><strong>Default:</strong> <code>false</code></p></p>\\n","line":6,"rawdescription":"\\nDisable sorting of table data, useful when sorting is handled externally e.g. server-side pagination. Table will still use sortOrder to visually show how the data is sorted. <p>**Default:** `false`</p>"},{"name":"footer","deprecated":false,"deprecationMessage":"","type":"literal type","optional":true,"description":"","line":28},{"name":"mobileLayout","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"<p>Allows for a more mobile friendly layout by displaying columns as rows instead. This is accomplished with css by adding <code>table-mobile</code> class to table element and adding column headers as data labels to each row. <p><strong>Default:</strong> <code>false</code></p></p>\\n","line":8,"rawdescription":"\\nAllows for a more mobile friendly layout by displaying columns as rows instead. This is accomplished with css by adding `table-mobile` class to table element and adding column headers as data labels to each row. <p>**Default:** `false`</p>"},{"name":"pagination","deprecated":false,"deprecationMessage":"","type":"literal type","optional":true,"description":"","line":23},{"name":"rowClick","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":26},{"name":"rowHover","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":27},{"name":"rows","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":17},{"name":"stickyHeaders","deprecated":false,"deprecationMessage":"","type":"literal type","optional":true,"description":"<p>Make row and/or column headers sticky by adding <code>gt-sticky-row-header</code> and <code>gt-sticky-column-header</code> to table to alter table behaviour using css. Please note that in order for headers to be sticky, table can&#39;t be placed inside element with overflow set to auto. <p><strong>Default:</strong> <code>{row:false, column:false}</code></p></p>\\n","line":10,"rawdescription":"\\nMake row and/or column headers sticky by adding `gt-sticky-row-header` and `gt-sticky-column-header` to table to alter table behaviour using css. Please note that in order for headers to be sticky, table can\'t be placed inside element with overflow set to auto. <p>**Default:** `{row:false, column:false}`</p>"}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"TableFooterColumn","id":"interface-TableFooterColumn-9d7d31de0e62a8c41a418f3df63c9524673816d262c4cfcdf8a253c65a17aa4944e83c465e6eda12511b1d9fdc68afd78f3813c272611cc45c82ddcecde20d18","file":"projects/core/src/lib/models/table-config.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { TableColumn } from \'./table-column.interface\';\\nimport { TableRow } from \'./table-row.interface\';\\n\\nexport interface TableConfig<R = TableRow> {\\n  /** Disable sorting of table data, useful when sorting is handled externally e.g. server-side pagination. Table will still use sortOrder to visually show how the data is sorted. <p>**Default:** `false`</p> */\\n  disableTableSort?: boolean;\\n  /** Allows for a more mobile friendly layout by displaying columns as rows instead. This is accomplished with css by adding `table-mobile` class to table element and adding column headers as data labels to each row. <p>**Default:** `false`</p>*/\\n  mobileLayout?: boolean;\\n  /** Make row and/or column headers sticky by adding `gt-sticky-row-header` and `gt-sticky-column-header` to table to alter table behaviour using css. Please note that in order for headers to be sticky, table can\'t be placed inside element with overflow set to auto. <p>**Default:** `{row:false, column:false}`</p>*/\\n  stickyHeaders?: {\\n    row?: boolean;\\n    column?: boolean;\\n  };\\n  /** Add one or more CSS classes to the table element e.g. `table table-striped table-bordered`. <p>**Default:** `table`</p>*/\\n\\n  class?: string;\\n  rows?: {\\n    [Property in keyof R]: TableColumn<R>;\\n  };\\n  columns?: {\\n    [Property in keyof R]: TableColumn<R>;\\n  };\\n  pagination?: {\\n    length?: number;\\n  };\\n  rowClick?: boolean;\\n  rowHover?: boolean;\\n  footer?: {\\n    headers?: {\\n      [key: FooterCalculation | string]: string | boolean;\\n    };\\n    columns?: {\\n      [Property in keyof R]: Partial<TableFooterColumn<R>>;\\n    };\\n    rowOrder?: Array<keyof R | FooterCalculation>;\\n    emptyContent?: string;\\n  };\\n}\\n\\ninterface TableFooterColumn<R> {\\n  [key: FooterCalculation | string]: boolean | number | string | CalcFunc<R>;\\n}\\ninterface CalcFunc<R> {\\n  (data: Array<R>, key: keyof R): number | string;\\n}\\ntype FooterCalculation = \'sum\' | \'avg\' | \'count\' | \'max\' | \'min\';\\n","properties":[],"indexSignatures":[{"id":"index-declaration-9d7d31de0e62a8c41a418f3df63c9524673816d262c4cfcdf8a253c65a17aa4944e83c465e6eda12511b1d9fdc68afd78f3813c272611cc45c82ddcecde20d18","args":[{"name":"key","type":"FooterCalculation | string","deprecated":false,"deprecationMessage":""}],"returnType":"boolean | number | string | CalcFunc","line":40,"deprecated":false,"deprecationMessage":""}],"kind":175,"methods":[]},{"name":"TableInfo","id":"interface-TableInfo-6b1b72be98a831f69f5fb615ba9bce270844e042f1c233b8d6116e3a67db393e5aeab683c9838ab223a42c0bdb3baa1ac8c8eae29fa61a7ba14deff9ec606634","file":"projects/core/src/lib/models/table-info.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface TableInfo {\\n  records: number;\\n  pageTotal: number;\\n}\\n","properties":[{"name":"pageTotal","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":3},{"name":"records","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":2}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"TableMeta","id":"interface-TableMeta-4eb01c0282b0d791a921b064593674d0a5cd30a4bde5800964a3d874c1b57b29d65b965af3dcc9d628c5f33e25672e33cbfbf8d7d5a59794a3de8db4b7b5c650","file":"projects/core/src/lib/models/table-meta.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { TableRow } from \'./table-row.interface\';\\nimport { TableConfig } from \'./table-config.interface\';\\nimport { TableInfo } from \'./table-info.interface\';\\n\\nexport interface TableMeta<R = TableRow> {\\n  data: Array<Array<R>>;\\n  config: TableConfig<R>;\\n  info: TableInfo;\\n}\\n","properties":[{"name":"config","deprecated":false,"deprecationMessage":"","type":"TableConfig<R>","optional":false,"description":"","line":7},{"name":"data","deprecated":false,"deprecationMessage":"","type":"Array<Array<R>>","optional":false,"description":"","line":6},{"name":"info","deprecated":false,"deprecationMessage":"","type":"TableInfo","optional":false,"description":"","line":8}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"TableRow","id":"interface-TableRow-07d21ec216ac57aa3afd8511561789b13f17014fba23877c3fda056b25bda6bde814bdcd393d3473308be3b792d18b564e884730fc400a69e39f2ff6da42d0ff","file":"projects/core/src/lib/models/table-row.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface TableRow {\\n  [key: string]: number | string | boolean | any;\\n}\\n","properties":[],"indexSignatures":[{"id":"index-declaration-07d21ec216ac57aa3afd8511561789b13f17014fba23877c3fda056b25bda6bde814bdcd393d3473308be3b792d18b564e884730fc400a69e39f2ff6da42d0ff","args":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"number | string | boolean | any","line":1,"deprecated":false,"deprecationMessage":""}],"kind":175,"methods":[]},{"name":"YearData","id":"interface-YearData-0a5c0cb27d235dfe9659a36988e8f66a453ff89ad5e286c1c983f66beb2ec0e2a4b9694bf4c3ff2f652e68001624f00f6630abc1e58f843290dac6f691044c0c","file":"projects/docs/src/app/examples/transpose/transpose.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { BehaviorSubject, Observable } from \'rxjs\';\\nimport { TableConfig, GtDeltaComponent } from \'@angular-generic-table/core\';\\nimport { UntypedFormBuilder } from \'@angular/forms\';\\nimport { withLatestFrom } from \'rxjs/operators\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { TRANSPOSE_SNIPPETS } from \'./transpose.snippets\';\\ninterface RawData {\\n  year: string;\\n  value: number;\\n}\\ninterface YearData extends RawData {\\n  delta: number;\\n  deltaIndex: number;\\n  combined: number;\\n  deltaAbsolute: number;\\n}\\n@Component({\\n  selector: \'docs-transpose\',\\n  template: `\\n    <form [formGroup]=\\"reactiveForm\\">\\n      <div class=\\"row gy-3 gx-3 align-items-end mb-3\\">\\n        <div class=\\"form-group col-6 col-sm-auto\\">\\n          <label for=\\"length_input\\">Number of rows</label>\\n          <input\\n            id=\\"length_input\\"\\n            formControlName=\\"length\\"\\n            type=\\"number\\"\\n            class=\\"form-control\\"\\n          />\\n        </div>\\n        <div class=\\"form-group col-6 col-sm-auto\\">\\n          <label for=\\"search_input\\">Search</label>\\n          <input\\n            id=\\"search_input\\"\\n            formControlName=\\"search\\"\\n            type=\\"text\\"\\n            class=\\"form-control\\"\\n          />\\n        </div>\\n        <div class=\\"col-auto\\">\\n          <button\\n            class=\\"btn btn-outline-primary w-100\\"\\n            (click)=\\"simulateLoad()\\"\\n          >\\n            Simulate load\\n          </button>\\n        </div>\\n        <div class=\\"col col-sm-auto\\">\\n          <button class=\\"btn btn-outline-danger w-100\\" (click)=\\"empty()\\">\\n            Empty\\n          </button>\\n        </div>\\n        <div class=\\"col col-sm-auto\\">\\n          <button class=\\"btn btn-outline-primary w-100\\" (click)=\\"load()\\">\\n            Reset\\n          </button>\\n        </div>\\n        <div class=\\"col col-sm-auto\\">\\n          <button class=\\"btn btn-outline-primary w-100\\" (click)=\\"transpose()\\">\\n            Transpose\\n          </button>\\n        </div>\\n      </div>\\n      <div class=\\"overflow-auto\\">\\n        <angular-generic-table\\n          #table\\n          [data]=\\"data\\"\\n          [config]=\\"tableConfig$\\"\\n          [loading]=\\"loading$\\"\\n          [search]=\\"search$\\"\\n        >\\n          <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n          <div class=\\"table-no-data alert alert-info mt-3\\">Table is empty</div>\\n        </angular-generic-table>\\n      </div>\\n      <angular-generic-table-pagination [table]=\\"table\\">\\n      </angular-generic-table-pagination>\\n      <ng-template #delta let-index=\\"index\\" let-data=\\"data\\">\\n        <gt-delta [index]=\\"index\\" [data]=\\"data\\"></gt-delta>\\n      </ng-template>\\n      <ng-template #deltaAbsolute let-index=\\"index\\" let-data=\\"data\\">\\n        <gt-delta\\n          [index]=\\"index\\"\\n          [data]=\\"data\\"\\n          [deltaTemplate]=\\"deltaTemplate\\"\\n        ></gt-delta>\\n      </ng-template>\\n      <ng-template #deltaIndex let-index=\\"index\\" let-data=\\"data\\">\\n        <gt-delta [index]=\\"index\\" [data]=\\"data\\" [baseIndex]=\\"0\\"></gt-delta>\\n      </ng-template>\\n      <ng-template\\n        #combined\\n        let-index=\\"index\\"\\n        let-data=\\"data\\"\\n        let-row=\\"row\\"\\n        let-col=\\"col\\"\\n      >\\n        {{ row.value }}\\n        <ng-container *ngIf=\\"index > 0\\">\\n          <gt-delta [index]=\\"index\\" [data]=\\"data\\"></gt-delta>\\n        </ng-container>\\n      </ng-template>\\n      <ng-template #deltaTemplate let-delta=\\"delta\\">\\n        <span>{{ delta.absolute }}</span></ng-template\\n      >\\n      <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n    </form>\\n  `,\\n  styles: [],\\n})\\nexport class TransposeComponent implements OnInit {\\n  @ViewChild(\'delta\', { static: true }) delta:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  @ViewChild(\'deltaAbsolute\', { static: true }) deltaAbsolute:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  @ViewChild(\'deltaIndex\', { static: true }) deltaIndex:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  @ViewChild(\'combined\', { static: true }) combined:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  loading$ = new BehaviorSubject(false);\\n  reactiveForm = this.fb.group({\\n    length: [10],\\n    search: [\'\'],\\n  });\\n  search$ = this.reactiveForm.get(\'search\')?.valueChanges as Observable<string>;\\n  tableConfig$: BehaviorSubject<TableConfig<YearData>> = new BehaviorSubject<\\n    TableConfig<YearData>\\n  >({});\\n  data: Array<RawData> = [];\\n\\n  constructor(private fb: UntypedFormBuilder) {}\\n\\n  ngOnInit(): void {\\n    this.transpose();\\n    this.load();\\n    this.reactiveForm\\n      .get(\'length\')\\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\\n      .subscribe(([length, config]) => {\\n        length = +length;\\n        this.tableConfig$.next({\\n          ...config,\\n          pagination: { ...config.pagination, length },\\n        });\\n      });\\n  }\\n\\n  simulateLoad(): void {\\n    this.loading$.next(true);\\n    // set loading state to false after 2 seconds\\n    setTimeout(() => this.loading$.next(false), 2000);\\n  }\\n  empty(): void {\\n    this.data = [];\\n  }\\n  load(): void {\\n    this.data = [\\n      {\\n        year: \'2010\',\\n        value: 15,\\n      },\\n      {\\n        year: \'2011\',\\n        value: 30,\\n      },\\n      {\\n        year: \'2012\',\\n        value: 25,\\n      },\\n      {\\n        year: \'2013\',\\n        value: 0,\\n      },\\n      {\\n        year: \'2014\',\\n        value: 40,\\n      },\\n      {\\n        year: \'2015\',\\n        value: 0,\\n      },\\n      {\\n        year: \'2016\',\\n        value: -5,\\n      },\\n      {\\n        year: \'2018\',\\n        value: 75,\\n      },\\n      {\\n        year: \'2019\',\\n        value: 100,\\n      },\\n      {\\n        year: \'2020\',\\n        value: 250,\\n      },\\n      {\\n        year: \'2021\',\\n        value: 50,\\n      },\\n      {\\n        year: \'2022\',\\n        value: 60,\\n      },\\n    ];\\n  }\\n  transpose(): void {\\n    if (this.tableConfig$.value.columns) {\\n      this.tableConfig$.next({\\n        stickyHeaders: {\\n          row: true,\\n          column: true,\\n        },\\n        rows: {\\n          year: {\\n            sortable: true,\\n            header: false,\\n            class: \'text-end\',\\n          },\\n          value: {\\n            class: \'text-end\',\\n          },\\n          delta: {\\n            header: \'Delta %\',\\n            templateRef: this.delta,\\n            class: \'text-end\',\\n          },\\n          deltaIndex: {\\n            header: \'Since inception %\',\\n            templateRef: this.deltaIndex,\\n            class: \'text-end\',\\n          },\\n          deltaAbsolute: {\\n            header: \'Delta\',\\n            templateRef: this.deltaAbsolute,\\n            class: \'text-end\',\\n          },\\n          combined: {\\n            header: \'Value with change\',\\n            templateRef: this.combined,\\n            class: \'text-end text-nowrap\',\\n          },\\n        },\\n      });\\n    } else {\\n      this.tableConfig$.next({\\n        stickyHeaders: {\\n          row: true,\\n          column: true,\\n        },\\n        columns: {\\n          year: {\\n            sortable: true,\\n          },\\n          value: {\\n            class: \'text-end\',\\n          },\\n          delta: {\\n            header: \'Delta %\',\\n            templateRef: this.delta,\\n            class: \'text-end\',\\n          },\\n          deltaIndex: {\\n            header: \'Since inception %\',\\n            templateRef: this.deltaIndex,\\n            class: \'text-end\',\\n          },\\n          deltaAbsolute: {\\n            header: \'Delta\',\\n            templateRef: this.deltaAbsolute,\\n            class: \'text-end\',\\n          },\\n          combined: {\\n            header: \'Value with change\',\\n            templateRef: this.combined,\\n            class: \'text-end text-nowrap\',\\n          },\\n        },\\n        pagination: { length: this.reactiveForm.get(\'length\')?.value },\\n      });\\n    }\\n  }\\n  SNIPPETS = TRANSPOSE_SNIPPETS;\\n}\\n\\nexport const Transpose: Story<TransposeComponent> = (\\n  args: TransposeComponent\\n) => ({\\n  props: args,\\n  component: TransposeComponent,\\n});\\n","properties":[{"name":"combined","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":15},{"name":"delta","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":13},{"name":"deltaAbsolute","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":16},{"name":"deltaIndex","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":14}],"indexSignatures":[],"kind":165,"methods":[],"extends":"RawData"}],"injectables":[{"name":"CoreService","id":"injectable-CoreService-aa6c97a9fa8aaeb04ef59acbab00bca3734e79841c357f3bf212f24c045414c295ec1cd3b16188e237ce977a4ffec26961195586d7de5f10277a1cb0f8bf2896","file":"projects/core/src/lib/core.service.ts","properties":[],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\n\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class CoreService {\\n  constructor() {}\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":6},"type":"injectable"}],"guards":[],"interceptors":[],"classes":[],"directives":[],"components":[{"name":"AdvancedComponent","id":"component-AdvancedComponent-aa3269c27116d9775410b813026ef7f46afe20737bff31b59f1148e8e8ef63f474a692e0e2ad763ef3955321c6793e379b240d9c293e2ab2242fb840c4421dd8","file":"projects/docs/src/app/examples/advanced/advanced.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"docs-advanced","styleUrls":[],"styles":[],"templateUrl":["./advanced.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"_currentPage$","defaultValue":"new BehaviorSubject(0)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":53,"modifierKind":[121]},{"name":"actions","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any> | undefined","optional":false,"description":"","line":27,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'actions\', {static: true}"}]},{"name":"clicked","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":55},{"name":"color","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any> | undefined","optional":false,"description":"","line":28,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'color\', {static: true}"}]},{"name":"colors","defaultValue":"[\'#33d60b\', \'#dcafff\', \'#3fc9ff\', \'#ff1600\', \'#5238b1\', \'#fff\']","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":76},{"name":"data$","defaultValue":"new BehaviorSubject([\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteColor: \'#26BFAF\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteColor: \'#0f0\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ])","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<any>","optional":false,"description":"","line":36},{"name":"femaleFirstNames","defaultValue":"[\'Mary Jane\', \'Kim\', \'Sarah\', \'Michelle\', \'Ann\']","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":57},{"name":"foods","defaultValue":"[\\n    \'Pizza\',\\n    \'Pasta\',\\n    \'Hamburger\',\\n    \'Pancakes\',\\n    \'Tacos\',\\n    \'Lasagna\',\\n    \'Meatloaf\',\\n  ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":67},{"name":"lastNames","defaultValue":"[\\n    \'Andersson\',\\n    \'Smith\',\\n    \'Parker\',\\n    \'Kent\',\\n    \'Rogers\',\\n    \'Lane\',\\n    \'Jackson\',\\n  ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":58},{"name":"loading$","defaultValue":"new BehaviorSubject(true)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":35},{"name":"maleFirstNames","defaultValue":"[\'Peter\', \'Clark\', \'Ruben\', \'John\', \'Jack\', \'Roscoe\']","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":56},{"name":"next","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":126},{"name":"paginationForm","defaultValue":"this.fb.group({\\n    length: [10],\\n    search: [\'\'],\\n  })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":29},{"name":"prev","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":129},{"name":"search$","defaultValue":"this.paginationForm.get(\'search\')\\n    ?.valueChanges as Observable<string>","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":33},{"name":"SNIPPETS","defaultValue":"ADVANCED_DOCS","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":79},{"name":"tableConfig$","defaultValue":"new ReplaySubject(1)","deprecated":false,"deprecationMessage":"","type":"ReplaySubject<TableConfig>","optional":false,"description":"","line":78}],"methodsClass":[{"name":"addData","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":81,"deprecated":false,"deprecationMessage":""},{"name":"clickAction","args":[{"name":"row","type":"TableRow","deprecated":false,"deprecationMessage":""},{"name":"column","type":"literal type","deprecated":false,"deprecationMessage":""},{"name":"index","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":95,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"row","type":"TableRow","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"column","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":133,"deprecated":false,"deprecationMessage":""},{"name":"randomRecord","args":[],"optional":false,"returnType":"TableRow","typeParameters":[],"line":104,"deprecated":false,"deprecationMessage":""},{"name":"removeData","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":85,"deprecated":false,"deprecationMessage":""},{"name":"simulateLoad","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":89,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { BehaviorSubject, Observable, ReplaySubject } from \'rxjs\';\\nimport { UntypedFormBuilder } from \'@angular/forms\';\\nimport {\\n  TableConfig,\\n  TableRow,\\n  TableColumn,\\n} from \'@angular-generic-table/core\';\\nimport { withLatestFrom } from \'rxjs/operators\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { ADVANCED_DOCS } from \'./advanced.snippets\';\\n\\n@Component({\\n  selector: \'docs-advanced\',\\n  templateUrl: \'./advanced.component.html\',\\n  styles: [],\\n})\\nexport class AdvancedComponent implements OnInit {\\n  get currentPage$(): Observable<number> {\\n    return this._currentPage$.asObservable();\\n  }\\n\\n  set currentPage(value: number) {\\n    this._currentPage$.next(value);\\n  }\\n  constructor(private fb: UntypedFormBuilder) {}\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  @ViewChild(\'color\', { static: true }) color: TemplateRef<any> | undefined;\\n  paginationForm = this.fb.group({\\n    length: [10],\\n    search: [\'\'],\\n  });\\n  search$ = this.paginationForm.get(\'search\')\\n    ?.valueChanges as Observable<string>;\\n  loading$ = new BehaviorSubject(true);\\n  data$: BehaviorSubject<any> = new BehaviorSubject([\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteColor: \'#26BFAF\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteColor: \'#0f0\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ]);\\n\\n  private _currentPage$ = new BehaviorSubject(0);\\n\\n  clicked: string = \'\';\\n  maleFirstNames = [\'Peter\', \'Clark\', \'Ruben\', \'John\', \'Jack\', \'Roscoe\'];\\n  femaleFirstNames = [\'Mary Jane\', \'Kim\', \'Sarah\', \'Michelle\', \'Ann\'];\\n  lastNames = [\\n    \'Andersson\',\\n    \'Smith\',\\n    \'Parker\',\\n    \'Kent\',\\n    \'Rogers\',\\n    \'Lane\',\\n    \'Jackson\',\\n  ];\\n  foods = [\\n    \'Pizza\',\\n    \'Pasta\',\\n    \'Hamburger\',\\n    \'Pancakes\',\\n    \'Tacos\',\\n    \'Lasagna\',\\n    \'Meatloaf\',\\n  ];\\n  colors = [\'#33d60b\', \'#dcafff\', \'#3fc9ff\', \'#ff1600\', \'#5238b1\', \'#fff\'];\\n\\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\\n  SNIPPETS = ADVANCED_DOCS;\\n\\n  addData(): void {\\n    this.data$.next([...this.data$.getValue(), this.randomRecord()]);\\n  }\\n\\n  removeData(): void {\\n    this.data$.next([]);\\n  }\\n\\n  simulateLoad(): void {\\n    this.loading$.next(true);\\n    // set loading state to false after 2 seconds\\n    setTimeout(() => this.loading$.next(false), 2000);\\n  }\\n\\n  clickAction(\\n    row: TableRow,\\n    column: { key: string; value: TableColumn },\\n    index: number\\n  ): void {\\n    console.log(\'clicked row:\', row, \'col:\', column);\\n    this.clicked = `clicked row number: ${index}`;\\n  }\\n\\n  randomRecord(): TableRow {\\n    const random = Math.floor(Math.random() * 2);\\n    const newRecord = {\\n      firstName: random\\n        ? this.maleFirstNames[\\n            Math.floor(Math.random() * this.maleFirstNames.length)\\n          ]\\n        : this.femaleFirstNames[\\n            Math.floor(Math.random() * this.femaleFirstNames.length)\\n          ],\\n      lastName:\\n        this.lastNames[Math.floor(Math.random() * this.lastNames.length)],\\n      gender: random ? \'male\' : \'female\',\\n      favoriteColor:\\n        this.colors[Math.floor(Math.random() * this.colors.length)],\\n      favoriteFood: this.foods[Math.floor(Math.random() * this.foods.length)],\\n    };\\n    console.log(\'added new random record:\', newRecord);\\n\\n    return newRecord;\\n  }\\n\\n  next = () => {\\n    this.currentPage = this._currentPage$.value + 1;\\n  };\\n  prev = () => {\\n    this.currentPage = this._currentPage$.value - 1;\\n  };\\n\\n  ngOnInit(): void {\\n    this.simulateLoad();\\n    this.paginationForm\\n      .get(\'length\')\\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\\n      .subscribe(([length, config]) => {\\n        length = +length;\\n        this.tableConfig$.next({\\n          ...config,\\n          pagination: { ...config.pagination, length },\\n        });\\n      });\\n    this.tableConfig$.next({\\n      class: \'table text-nowrap mb-0\',\\n      mobileLayout: true,\\n      columns: {\\n        firstName: {\\n          header: \'First name\',\\n          mobileHeader: true,\\n          sortable: true,\\n          order: 0,\\n        },\\n        lastName: {\\n          header: \'Last name\',\\n          mobileHeader: true,\\n          hidden: false,\\n          sortable: true,\\n        },\\n        gender: {\\n          mobileHeader: \'Sex\',\\n          sortable: true,\\n          order: 1,\\n        },\\n        favoriteColor: {\\n          header: \'Favorite color\',\\n          mobileHeader: true,\\n          templateRef: this.color,\\n          sortable: false,\\n          order: 2,\\n          search: false,\\n          class: \'custom-class\',\\n        },\\n        favoriteFood: {\\n          mobileHeader: true,\\n          header: \'Favorite food\',\\n          hidden: false,\\n          sortable: true,\\n          order: 0,\\n        },\\n        action: {\\n          mobileHeader: false,\\n          header: false,\\n          templateRef: this.actions,\\n          order: 6,\\n          class: \'py-1 text-end\',\\n        },\\n      },\\n      pagination: {\\n        length: this.paginationForm.get(\'length\')?.value || 0,\\n      },\\n      footer: {\\n        columns: {\\n          gender: {\\n            count: (data, key) => {\\n              let men = 0;\\n              let women = 0;\\n              for (let i = 0; i < data.length; i++) {\\n                if (data[i][key] === \'female\') {\\n                  women++;\\n                } else if (data[i][key] === \'male\') {\\n                  men++;\\n                }\\n              }\\n              return `♂ ${men} ♀ ${women}`;\\n            },\\n          },\\n          favoriteColor: {},\\n          action: { count: (data, key) => `Total: ${data.length}` },\\n        },\\n      },\\n    });\\n  }\\n}\\n\\nexport const Advanced: Story<AdvancedComponent> = (\\n  args: AdvancedComponent\\n) => ({\\n  props: args,\\n  component: AdvancedComponent,\\n});\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"fb","type":"UntypedFormBuilder","deprecated":false,"deprecationMessage":""}],"line":25,"jsdoctags":[{"name":"fb","type":"UntypedFormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"accessors":{"currentPage$":{"name":"currentPage$","getSignature":{"name":"currentPage$","type":"","returnType":"Observable<number>","line":19}},"currentPage":{"name":"currentPage","setSignature":{"name":"currentPage","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":23,"jsdoctags":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}},"templateData":"<div class=\\"row mb-3 gy-3 gx-2\\">\\n  <div class=\\"col-12 col-sm-auto\\">\\n    <button class=\\"btn btn-primary w-100\\" (click)=\\"addData()\\">\\n      Add random data\\n    </button>\\n  </div>\\n  <div class=\\"col-12 col-sm-auto\\">\\n    <button class=\\"btn btn-danger w-100\\" (click)=\\"removeData()\\">\\n      Remove data\\n    </button>\\n  </div>\\n  <div class=\\"col-12 col-sm-auto\\">\\n    <button class=\\"btn btn-secondary w-100\\" (click)=\\"simulateLoad()\\">\\n      Load\\n    </button>\\n  </div>\\n</div>\\n<form [formGroup]=\\"paginationForm\\">\\n  <div class=\\"row gy-3\\">\\n    <div class=\\"form-group col-6 col-sm-auto\\">\\n      <label for=\\"length_input\\">Length</label>\\n      <input\\n        id=\\"length_input\\"\\n        formControlName=\\"length\\"\\n        type=\\"number\\"\\n        class=\\"form-control\\"\\n      />\\n    </div>\\n    <div class=\\"form-group col-6 col-sm-auto\\">\\n      <label for=\\"search_input\\">Search</label>\\n      <input\\n        id=\\"search_input\\"\\n        formControlName=\\"search\\"\\n        type=\\"text\\"\\n        class=\\"form-control\\"\\n      />\\n    </div>\\n  </div>\\n</form>\\n<div class=\\"overflow-scroll mt-3 pb-3\\">\\n  <angular-generic-table\\n    [data]=\\"data$\\"\\n    [config]=\\"tableConfig$\\"\\n    [page]=\\"(currentPage$ | async)!\\"\\n    [search]=\\"search$\\"\\n    [loading]=\\"loading$\\"\\n    #table\\n  >\\n    <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n    <div class=\\"table-no-data alert alert-info mt-3\\">Table is empty</div>\\n  </angular-generic-table>\\n</div>\\n<div\\n  class=\\"row justify-content-center align-items-center gy-3\\"\\n  *ngIf=\\"{\\n    current: (currentPage$ | async) || 0,\\n    total: (table.table$ | async)?.info?.pageTotal || 1\\n  } as pagination\\"\\n>\\n  <div class=\\"col-6 col-sm-auto\\">\\n    <button\\n      class=\\"btn btn-primary w-100\\"\\n      (click)=\\"prev()\\"\\n      [disabled]=\\"pagination.current === 0\\"\\n    >\\n      Prev\\n    </button>\\n  </div>\\n  <div class=\\"col-6 col-sm-auto\\">\\n    <button\\n      class=\\"btn btn-primary w-100\\"\\n      (click)=\\"next()\\"\\n      [disabled]=\\"pagination.total - 1 === pagination.current\\"\\n    >\\n      Next\\n    </button>\\n  </div>\\n  <div class=\\"col-auto\\">Current page: {{ pagination.current + 1 }}</div>\\n  <div class=\\"col-auto\\">Total pages: {{ pagination.total }}</div>\\n  <div class=\\"col-auto\\">Records: {{ (data$ | async).length }}</div>\\n  <div class=\\"col-auto\\">\\n    {{ clicked }}\\n  </div>\\n</div>\\n<ng-template #actions let-row=\\"row\\" let-col=\\"col\\" let-index=\\"index\\">\\n  <button\\n    *ngIf=\\"index !== undefined\\"\\n    class=\\"btn btn-outline-primary btn-sm\\"\\n    (click)=\\"clickAction(row, col, index)\\"\\n  >\\n    Click me!\\n  </button>\\n</ng-template>\\n<ng-template #color let-row=\\"row\\" let-col=\\"col\\">\\n  <div\\n    [style.background]=\\"row[col.key]\\"\\n    style=\\"width: 1.5rem; height: 1.5rem; border-radius: 50%\\"\\n  ></div>\\n</ng-template>\\n<docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n"},{"name":"AppComponent","id":"component-AppComponent-10170bf38e7dc2a28616cbfea1fc809395e11fb867221ff3cc76f91c523536e289f58bad5c2d985eea4d0e94f9cfc9c26585652e9dabc71c53493779779285bb","file":"projects/docs/src/app/app.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-root","styleUrls":["./app.component.scss"],"styles":[],"templateUrl":["./app.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"_currentPage$","defaultValue":"new BehaviorSubject(0)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":48,"modifierKind":[121]},{"name":"actions","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any> | undefined","optional":false,"description":"","line":23,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'actions\', {static: true}"}]},{"name":"clicked","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":50},{"name":"color","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any> | undefined","optional":false,"description":"","line":24,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'color\', {static: true}"}]},{"name":"colors","defaultValue":"[\'#33d60b\', \'#dcafff\', \'#3fc9ff\', \'#ff1600\', \'#5238b1\', \'#fff\']","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":55},{"name":"data$","defaultValue":"new BehaviorSubject([\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteColor: \'#26BFAF\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteColor: \'#0f0\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ])","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<any>","optional":false,"description":"","line":31},{"name":"femaleFirstNames","defaultValue":"[\'Mary Jane\', \'Kim\', \'Sarah\', \'Michelle\', \'Ann\']","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":52},{"name":"foods","defaultValue":"[\'Pizza\', \'Pasta\', \'Hamburger\', \'Pancakes\', \'Tacos\', \'Lasagna\', \'Meatloaf\']","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":54},{"name":"lastNames","defaultValue":"[\'Andersson\', \'Smith\', \'Parker\', \'Kent\', \'Rogers\', \'Lane\', \'Jackson\']","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":53},{"name":"loading$","defaultValue":"new BehaviorSubject(true)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":30},{"name":"maleFirstNames","defaultValue":"[\'Peter\', \'Clark\', \'Ruben\', \'John\', \'Jack\', \'Roscoe\']","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":51},{"name":"next","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":94},{"name":"paginationForm","defaultValue":"this.fb.group({\\n    length: [10],\\n    search: [\'\'],\\n  })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":25},{"name":"prev","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":97},{"name":"search$","defaultValue":"this.paginationForm.get(\'search\')!.valueChanges","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":29},{"name":"tableConfig$","defaultValue":"new ReplaySubject(1)","deprecated":false,"deprecationMessage":"","type":"ReplaySubject<TableConfig>","optional":false,"description":"","line":57}],"methodsClass":[{"name":"addData","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":""},{"name":"clickAction","args":[{"name":"row","type":"TableRow","deprecated":false,"deprecationMessage":""},{"name":"column","type":"literal type","deprecated":false,"deprecationMessage":""},{"name":"index","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"row","type":"TableRow","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"column","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":101,"deprecated":false,"deprecationMessage":""},{"name":"randomRecord","args":[],"optional":false,"returnType":"TableRow","typeParameters":[],"line":78,"deprecated":false,"deprecationMessage":""},{"name":"removeData","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":""},{"name":"simulateLoad","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":67,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { BehaviorSubject, Observable, ReplaySubject } from \'rxjs\';\\nimport { UntypedFormBuilder } from \'@angular/forms\';\\nimport { TableConfig, TableRow, TableColumn } from \'@angular-generic-table/core\';\\nimport { withLatestFrom } from \'rxjs/operators\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\n\\n@Component({\\n  selector: \'app-root\',\\n  templateUrl: \'./app.component.html\',\\n  styleUrls: [\'./app.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class AppComponent implements OnInit {\\n  get currentPage$(): Observable<number> {\\n    return this._currentPage$.asObservable();\\n  }\\n\\n  set currentPage(value: number) {\\n    this._currentPage$.next(value);\\n  }\\n  constructor(private fb: UntypedFormBuilder) {}\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  @ViewChild(\'color\', { static: true }) color: TemplateRef<any> | undefined;\\n  paginationForm = this.fb.group({\\n    length: [10],\\n    search: [\'\'],\\n  });\\n  search$ = this.paginationForm.get(\'search\')!.valueChanges;\\n  loading$ = new BehaviorSubject(true);\\n  data$: BehaviorSubject<any> = new BehaviorSubject([\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteColor: \'#26BFAF\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteColor: \'#0f0\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ]);\\n\\n  private _currentPage$ = new BehaviorSubject(0);\\n\\n  clicked: string = \'\';\\n  maleFirstNames = [\'Peter\', \'Clark\', \'Ruben\', \'John\', \'Jack\', \'Roscoe\'];\\n  femaleFirstNames = [\'Mary Jane\', \'Kim\', \'Sarah\', \'Michelle\', \'Ann\'];\\n  lastNames = [\'Andersson\', \'Smith\', \'Parker\', \'Kent\', \'Rogers\', \'Lane\', \'Jackson\'];\\n  foods = [\'Pizza\', \'Pasta\', \'Hamburger\', \'Pancakes\', \'Tacos\', \'Lasagna\', \'Meatloaf\'];\\n  colors = [\'#33d60b\', \'#dcafff\', \'#3fc9ff\', \'#ff1600\', \'#5238b1\', \'#fff\'];\\n\\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\\n\\n  addData(): void {\\n    this.data$.next([...this.data$.getValue(), this.randomRecord()]);\\n  }\\n\\n  removeData(): void {\\n    this.data$.next([]);\\n  }\\n\\n  simulateLoad(): void {\\n    this.loading$.next(true);\\n    // set loading state to false after 2 seconds\\n    setTimeout(() => this.loading$.next(false), 2000);\\n  }\\n\\n  clickAction(row: TableRow, column: { key: string; value: TableColumn }, index: number): void {\\n    console.log(\'clicked row:\', row, \'col:\', column);\\n    this.clicked = `clicked row number: ${index}`;\\n  }\\n\\n  randomRecord(): TableRow {\\n    const random = Math.floor(Math.random() * 2);\\n    const newRecord = {\\n      firstName: random\\n        ? this.maleFirstNames[Math.floor(Math.random() * this.maleFirstNames.length)]\\n        : this.femaleFirstNames[Math.floor(Math.random() * this.femaleFirstNames.length)],\\n      lastName: this.lastNames[Math.floor(Math.random() * this.lastNames.length)],\\n      gender: random ? \'male\' : \'female\',\\n      favoriteColor: this.colors[Math.floor(Math.random() * this.colors.length)],\\n      favoriteFood: this.foods[Math.floor(Math.random() * this.foods.length)],\\n    };\\n    console.log(\'added new random record:\', newRecord);\\n\\n    return newRecord;\\n  }\\n\\n  next = () => {\\n    this.currentPage = this._currentPage$.value + 1;\\n  };\\n  prev = () => {\\n    this.currentPage = this._currentPage$.value - 1;\\n  };\\n\\n  ngOnInit(): void {\\n    this.simulateLoad();\\n    this.paginationForm\\n      .get(\'length\')\\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\\n      .subscribe(([length, config]) => {\\n        length = +length;\\n        this.tableConfig$.next({\\n          ...config,\\n          pagination: { ...config.pagination, length },\\n        });\\n      });\\n    this.tableConfig$.next({\\n      class: \'table table-mobile text-nowrap mb-0\',\\n      columns: {\\n        firstName: {\\n          header: \'First name\',\\n          mobileHeader: true,\\n          sortable: true,\\n          order: 0,\\n        },\\n        lastName: {\\n          header: \'Last name\',\\n          mobileHeader: true,\\n          hidden: false,\\n          sortable: true,\\n        },\\n        gender: {\\n          header: \'Gender\',\\n          mobileHeader: \'Sex\',\\n          sortable: true,\\n          order: 1,\\n        },\\n        favoriteColor: {\\n          header: \'Favorite color\',\\n          mobileHeader: true,\\n          templateRef: this.color,\\n          sortable: false,\\n          order: 2,\\n          search: false,\\n          class: \'custom-class\',\\n        },\\n        favoriteFood: {\\n          mobileHeader: true,\\n          header: \'Favorite food\',\\n          hidden: false,\\n          sortable: true,\\n          order: 0,\\n        },\\n        action: {\\n          mobileHeader: false,\\n          header: \'Action\',\\n          templateRef: this.actions,\\n          order: 6,\\n        },\\n      },\\n      pagination: {\\n        length: this.paginationForm.get(\'length\')?.value || 0,\\n      },\\n    });\\n  }\\n}\\n\\nexport const Advanced: Story<AppComponent> = (args: AppComponent) => ({\\n  props: args,\\n  component: AppComponent,\\n});\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./app.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"fb","type":"UntypedFormBuilder","deprecated":false,"deprecationMessage":""}],"line":21,"jsdoctags":[{"name":"fb","type":"UntypedFormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"accessors":{"currentPage$":{"name":"currentPage$","getSignature":{"name":"currentPage$","type":"","returnType":"Observable<number>","line":15}},"currentPage":{"name":"currentPage","setSignature":{"name":"currentPage","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":19,"jsdoctags":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}},"templateData":"\x3c!--<div class=\\"card mt-3\\">\\n  <h4 class=\\"card-header\\">Table</h4>\\n  <div class=\\"card-body\\">\\n    <div class=\\"row mb-3\\">\\n      <div class=\\"col col-sm-auto\\">\\n        <button class=\\"btn btn-primary w-100\\" (click)=\\"addData()\\">Add random data</button>\\n      </div>\\n      <div class=\\"col col-sm-auto\\">\\n        <button class=\\"btn btn-danger w-100\\" (click)=\\"removeData()\\">Remove data</button>\\n      </div>\\n      <div class=\\"col col-sm-auto\\">\\n        <button class=\\"btn btn-secondary w-100\\" (click)=\\"simulateLoad()\\">Load</button>\\n      </div>\\n    </div>\\n    <form [formGroup]=\\"paginationForm\\">\\n      <div class=\\"row\\">\\n        <div class=\\"form-group col-12 col-sm-auto\\">\\n          <label for=\\"length_input\\">Length</label>\\n          <input id=\\"length_input\\" formControlName=\\"length\\" type=\\"number\\" class=\\"form-control\\">\\n        </div>\\n        <div class=\\"form-group col-12 col-sm-auto\\">\\n          <label for=\\"search_input\\">Search</label>\\n          <input id=\\"search_input\\" formControlName=\\"search\\" type=\\"text\\" class=\\"form-control\\">\\n        </div>\\n      </div>\\n    </form>\\n    <div class=\\"mx-n3 mx-sm-0\\">\\n    <angular-generic-table [data]=\\"data$\\" [config]=\\"tableConfig$\\" [page]=\\"currentPage$\\" [search]=\\"search$\\" [loading]=\\"loading$\\">\\n      <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n      <div class=\\"table-no-data alert alert-info mt-3\\">\\n        Table is empty\\n      </div>\\n    </angular-generic-table>\\n    </div>\\n    <div class=\\"row justify-content-between justify-content-sm-center align-items-center mt-3\\">\\n      <div class=\\"col-auto\\">\\n        <button class=\\"btn btn-primary\\" (click)=\\"prev()\\">Prev</button>\\n      </div>\\n      <div class=\\"col-auto\\">\\n        <button class=\\"btn btn-primary\\" (click)=\\"next()\\">Next</button>\\n      </div>\\n      <div class=\\"col-auto\\">Current page: {{currentPage$ | async}}</div>\\n      <div class=\\"col-auto\\">\\n        Records: {{(data$ | async).length}}\\n      </div>\\n      <div class=\\"col-auto\\">\\n        {{clicked}}\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<ng-template #actions let-row=\\"row\\" let-col=\\"col\\" let-index=\\"index\\">\\n  <button class=\\"btn btn-outline-primary btn-sm my-sm-n3\\" (click)=\\"clickAction(row, col, index)\\">Click me!</button>\\n</ng-template>\\n<ng-template #color let-row=\\"row\\" let-col=\\"col\\">\\n  <div [style.background]=\\"row[col.key]\\" style=\\"width: 1.5rem; height: 1.5rem; border-radius: 50%\\"></div>\\n</ng-template>\\n--\x3e\\n<div class=\\"card mt-3 mx-sm-3\\">\\n  <h4 class=\\"card-header\\">Example</h4>\\n  <div class=\\"card-body\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n"},{"name":"CoreComponent","id":"component-CoreComponent-815f8acc422218bf91535914c6529b5e6db63342ea473f5ec7ee7ae3058f292a17106507576e20640ad0acb97ac136a1e3fb376d176261d3a08e0629b5ee374c","file":"projects/core/src/lib/core.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"angular-generic-table","styleUrls":[],"styles":[],"templateUrl":["./core.component.html"],"viewProviders":[],"inputsClass":[{"name":"config","deprecated":false,"deprecationMessage":"","line":98,"type":"Observable | TableConfig","decorators":[]},{"name":"data","deprecated":false,"deprecationMessage":"","line":103,"type":"Observable | Array","decorators":[]},{"name":"loading","deprecated":false,"deprecationMessage":"","line":84,"type":"Observable | boolean","decorators":[]},{"name":"page","deprecated":false,"deprecationMessage":"","line":88,"type":"number","decorators":[]},{"name":"search","deprecated":false,"deprecationMessage":"","line":93,"type":"Observable | string | null","decorators":[]},{"name":"sortOrder","deprecated":false,"deprecationMessage":"","line":107,"type":"GtSortOrder<any>","decorators":[]}],"outputsClass":[{"name":"columnSort","defaultValue":"new EventEmitter<GtSortEvent>()","deprecated":false,"deprecationMessage":"","line":125,"type":"EventEmitter"},{"name":"rowClick","defaultValue":"new EventEmitter<GtRowClickEvent>()","deprecated":false,"deprecationMessage":"","line":114,"type":"EventEmitter"},{"name":"rowHover","defaultValue":"new EventEmitter<GtRowHoverEvent>()","deprecated":false,"deprecationMessage":"","line":124,"type":"EventEmitter"},{"name":"sortOrderChange","defaultValue":"new EventEmitter<\\n    GtSortOrder<TableRow>\\n  >()","deprecated":false,"deprecationMessage":"","line":115,"type":"EventEmitter"}],"propertiesClass":[{"name":"_currentPage$","defaultValue":"new BehaviorSubject(0)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<number>","optional":false,"description":"","line":280,"modifierKind":[121]},{"name":"_data$","defaultValue":"new ReplaySubject(1)","deprecated":false,"deprecationMessage":"","type":"ReplaySubject<Array | Observable>","optional":false,"description":"","line":190,"modifierKind":[121]},{"name":"_loading$","defaultValue":"new ReplaySubject(1)","deprecated":false,"deprecationMessage":"","type":"ReplaySubject<Observable | boolean>","optional":false,"description":"","line":167,"modifierKind":[121]},{"name":"_rowHover$","defaultValue":"new ReplaySubject<GtRowHoverEvent>(1)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":123,"modifierKind":[121]},{"name":"_searchBy$","defaultValue":"new ReplaySubject(1)","deprecated":false,"deprecationMessage":"","type":"ReplaySubject<Observable | string | null>","optional":false,"description":"","line":171,"modifierKind":[121]},{"name":"_sortOrder$","defaultValue":"new BehaviorSubject<GtSortOrder>([])","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<GtSortOrder>","optional":false,"description":"","line":169,"modifierKind":[121]},{"name":"_tableConfig$","defaultValue":"new BehaviorSubject({})","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<TableConfig | Observable>","optional":false,"description":"","line":181,"modifierKind":[121]},{"name":"calculations$","defaultValue":"combineLatest([this.data$, this.tableConfig$]).pipe(\\n    map(([data, config]) => calculate(data, config)),\\n    shareReplay(1)\\n  )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":246},{"name":"colspan$","defaultValue":"this.tableConfig$.pipe(\\n    switchMap((config) =>\\n      config.columns\\n        ? of(\\n            Object.values(config.columns || config.rows || {}).filter(\\n              (value) => value.hidden !== true\\n            ).length\\n          )\\n        : this.data$.pipe(map((data) => data.length + 1))\\n    ),\\n    shareReplay(1)\\n  )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":295},{"name":"columnOrder","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":390},{"name":"currentPage$","defaultValue":"combineLatest([this._currentPage$, this.table$]).pipe(\\n    map(([page, table]: any) => {\\n      // determine last page\\n      const lastPage =\\n        Math.ceil(\\n          table.info.records /\\n            (table.config?.pagination?.length || table.info.records)\\n        ) - 1;\\n      // determine max/min position\\n      return +page < 0 ? 0 : +page > lastPage ? lastPage : +page;\\n    }),\\n    shareReplay(1)\\n  )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":281},{"name":"data$","defaultValue":"this._data$.pipe(\\n    map((value) => (isObservable(value) ? value : of(value))),\\n    switchMap((obs) => combineLatest([obs])),\\n    withLatestFrom(this.tableConfig$),\\n    map(([[data], config]) => {\\n      // if columns or rows contains config for mapTo...\\n      if (\\n        (config.columns &&\\n          !!Object.values(config.columns).find((column) => !!column.mapTo)) ||\\n        (config.rows &&\\n          !!Object.values(config.rows).find((column) => !!column.mapTo))\\n      ) {\\n        // ...map data to new keys on row...\\n        const newData: TableRow[] = [];\\n        for (let i = 0; i < data.length; i++) {\\n          const row = data[i];\\n          const newKeys = Object.entries(config.columns || config.rows || [])\\n            .filter(([key, value]) => !!value.mapTo) // add keys for columns with mapTo config...\\n            .reduce(\\n              (previousValue, [key, value]) => ({\\n                ...previousValue,\\n                [key]: this.nestedValue(\\n                  row,\\n                  value.mapTo!.path,\\n                  value.mapTo?.missingValue\\n                ),\\n              }),\\n              {}\\n            );\\n          newData[i] = { ...row, ...newKeys };\\n        }\\n        data = newData;\\n      }\\n      return { data, config };\\n    }),\\n    switchMap((obs) =>\\n      combineLatest([of(obs), this.sortOrder$, this.searchBy$])\\n    ),\\n    map(([table, sortBy, searchBy]) => {\\n      // create a new array reference and sort new array (prevent mutating existing state)\\n      table.data = [...table.data];\\n      return !sortBy.length || table.config?.disableTableSort\\n        ? searchBy\\n          ? search(searchBy, false, table.data, table.config)\\n          : table.data\\n        : searchBy\\n        ? search(searchBy, false, table.data, table.config)?.sort(\\n            sortOnMultipleKeys(sortBy)\\n          )\\n        : table.data?.sort(sortOnMultipleKeys(sortBy));\\n    }),\\n    shareReplay(1)\\n  )","deprecated":false,"deprecationMessage":"","type":"Observable<Array<TableRow>>","optional":false,"description":"","line":192},{"name":"footerColspan$","defaultValue":"this.tableConfig$.pipe(\\n    map((config) => {\\n      let colspan = 0;\\n      Object.values(config?.footer?.columns || {}).forEach((calculations) => {\\n        if (\\n          Object.values(calculations).filter((value) => value !== false)\\n            .length >= 0\\n        ) {\\n          colspan += 1;\\n        }\\n      }, {});\\n      return colspan;\\n    }),\\n    shareReplay(1)\\n  )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":308},{"name":"rowHover$","defaultValue":"this._rowHover$.asObservable().pipe(\\n    debounceTime(50),\\n    distinctUntilChanged((p, q) => p.index === q.index),\\n    tap((event) => this.rowHover.emit(event)),\\n    shareReplay(1)\\n  )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":126},{"name":"searchBy$","defaultValue":"this._searchBy$.pipe(\\n    startWith(\'\'),\\n    map((value) => (isObservable(value) ? value : of(value))),\\n    switchMap((obs) => obs),\\n    shareReplay(1)\\n  )","deprecated":false,"deprecationMessage":"","type":"Observable<string | null>","optional":false,"description":"","line":173},{"name":"table$","defaultValue":"combineLatest([\\n    this.data$,\\n    this.tableConfig$,\\n  ]).pipe(\\n    map(([sorted, config]) => {\\n      // if pagination is disabled...\\n      if (!config.pagination || config.pagination.length === 0) {\\n        // ...return unaltered array\\n        return {\\n          data: [sorted],\\n          config,\\n          info: { records: sorted.length, pageTotal: 1 },\\n        };\\n      }\\n      // return record set\\n      return {\\n        data: chunk(sorted, +(config.pagination.length || 0)),\\n        config,\\n        info: {\\n          records: sorted.length,\\n          pageTotal: Math.ceil(\\n            sorted.length / +(config.pagination.length || 0)\\n          ),\\n        },\\n      };\\n    }),\\n    shareReplay(1)\\n  )","deprecated":false,"deprecationMessage":"","type":"Observable<TableMeta>","optional":false,"description":"","line":251},{"name":"tableConfig$","defaultValue":"this._tableConfig$.pipe(\\n    map((value) => (isObservable(value) ? value : of(value))),\\n    switchMap((obs) => obs),\\n    shareReplay(1)\\n  )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":184}],"methodsClass":[{"name":"_hoverRow","args":[{"name":"row","type":"TableRow | null","deprecated":false,"deprecationMessage":""},{"name":"index","type":"number | null","deprecated":false,"deprecationMessage":""},{"name":"event","type":"MouseEvent","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":150,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"row","type":"TableRow | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"index","type":"number | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"event","type":"MouseEvent","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"_rowClick","args":[{"name":"row","type":"TableRow","deprecated":false,"deprecationMessage":""},{"name":"index","type":"number","deprecated":false,"deprecationMessage":""},{"name":"event","type":"MouseEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":119,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"row","type":"TableRow","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"event","type":"MouseEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"hoverRow","args":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":133,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"hoverRow","args":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":134,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"hoverRow","args":[{"name":"none","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":135,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"none","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"hoverRow","args":[{"name":"arg","type":"string | number | null","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":136,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"arg","type":"string | number | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"nestedValue","args":[{"name":"object","type":"any","deprecated":false,"deprecationMessage":""},{"name":"mapTo","type":"string","deprecated":false,"deprecationMessage":""},{"name":"missingValue","type":"string | number | null","deprecated":false,"deprecationMessage":"","defaultValue":"null"}],"optional":false,"returnType":"","typeParameters":[],"line":397,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"object","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mapTo","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"missingValue","type":"string | number | null","deprecated":false,"deprecationMessage":"","defaultValue":"null","tagName":{"text":"param"}}]},{"name":"sortByKey","args":[{"name":"key","type":"","deprecated":false,"deprecationMessage":""},{"name":"$event","type":"MouseEvent","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":328,"deprecated":false,"deprecationMessage":"","rawdescription":"\\nsortByKey - Sort by key in table row\\n","description":"<p>sortByKey - Sort by key in table row</p>\\n","jsdoctags":[{"name":{"pos":9145,"end":9148,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"key"},"type":"","deprecated":false,"deprecationMessage":"","tagName":{"pos":9139,"end":9144,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>key to sort by</li>\\n</ul>\\n"},{"name":{"pos":9194,"end":9200,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"$event"},"type":"MouseEvent","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":9172,"end":9177,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>Mouse event triggering sort, if shift key is pressed sort key will be added to already present sort keys</li>\\n</ul>\\n","typeExpression":{"pos":9178,"end":9192,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":307,"type":{"pos":9179,"end":9190,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":177,"typeName":{"pos":9179,"end":9190,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"MouseEvent"}}}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  ChangeDetectionStrategy,\\n  Component,\\n  EventEmitter,\\n  Input,\\n  Output,\\n} from \'@angular/core\';\\nimport {\\n  BehaviorSubject,\\n  combineLatest,\\n  isObservable,\\n  Observable,\\n  of,\\n  ReplaySubject,\\n} from \'rxjs\';\\nimport { TableConfig } from \'./models/table-config.interface\';\\nimport {\\n  AsyncPipe,\\n  KeyValue,\\n  KeyValuePipe,\\n  NgClass,\\n  NgForOf,\\n  NgIf,\\n  NgTemplateOutlet,\\n  SlicePipe,\\n} from \'@angular/common\';\\nimport {\\n  debounceTime,\\n  distinctUntilChanged,\\n  map,\\n  shareReplay,\\n  startWith,\\n  switchMap,\\n  take,\\n  tap,\\n  withLatestFrom,\\n} from \'rxjs/operators\';\\nimport { TableColumn } from \'./models/table-column.interface\';\\nimport {\\n  calculate,\\n  chunk,\\n  search,\\n  sortOnMultipleKeys,\\n} from \'./utilities/utilities\';\\nimport { TableRow } from \'./models/table-row.interface\';\\nimport { GtOrder, GtSortOrder } from \'./models/table-sort.interface\';\\nimport { TableMeta } from \'./models/table-meta.interface\';\\nimport {\\n  GtRowClickEvent,\\n  GtRowHoverEvent,\\n  GtSortEvent,\\n} from \'./models/table-events.interface\';\\nimport { CapitalCasePipe } from \'./pipes/capital-case.pipe\';\\nimport { SortClassPipe } from \'./pipes/sort-class.pipe\';\\nimport { DashCasePipe } from \'./pipes/dash-case.pipe\';\\nimport { DynamicPipe } from \'./pipes/dynamic.pipe\';\\nimport { HighlightPipe } from \'./pipes/highlight.pipe\';\\n\\n@Component({\\n  selector: \'angular-generic-table\',\\n  templateUrl: \'./core.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  standalone: true,\\n  imports: [\\n    CapitalCasePipe,\\n    KeyValuePipe,\\n    SortClassPipe,\\n    DashCasePipe,\\n    AsyncPipe,\\n    NgTemplateOutlet,\\n    SlicePipe,\\n    DynamicPipe,\\n    HighlightPipe,\\n    NgClass,\\n    NgIf,\\n    NgForOf,\\n  ],\\n})\\nexport class CoreComponent {\\n  get sortOrder$(): Observable<GtSortOrder> {\\n    return this._sortOrder$.asObservable();\\n  }\\n\\n  @Input() set loading(isLoading: Observable<boolean> | boolean) {\\n    this._loading$.next(isLoading);\\n  }\\n  @Input()\\n  set page(page: number) {\\n    this._currentPage$.next(page);\\n  }\\n\\n  @Input()\\n  set search(string: Observable<string> | string | null) {\\n    this._searchBy$.next(string);\\n  }\\n\\n  @Input()\\n  set config(config: Observable<TableConfig<any>> | TableConfig<any>) {\\n    this._tableConfig$.next(config);\\n  }\\n\\n  @Input()\\n  set data(data: Observable<Array<TableRow>> | Array<TableRow>) {\\n    this._data$.next(data);\\n  }\\n\\n  @Input() set sortOrder(sortConfig: GtSortOrder<any>) {\\n    if (JSON.stringify(sortConfig) !== JSON.stringify(this._sortOrder$.value)) {\\n      this.sortOrderChange.emit(sortConfig);\\n      this._sortOrder$.next(sortConfig);\\n    }\\n  }\\n\\n  @Output() rowClick = new EventEmitter<GtRowClickEvent>();\\n  @Output(\'sortOrderChange\') sortOrderChange = new EventEmitter<\\n    GtSortOrder<TableRow>\\n  >();\\n\\n  _rowClick(row: TableRow, index: number, event: MouseEvent): void {\\n    this.rowClick.emit({ row, index, event });\\n  }\\n\\n  private _rowHover$ = new ReplaySubject<GtRowHoverEvent>(1);\\n  @Output() rowHover = new EventEmitter<GtRowHoverEvent>();\\n  @Output() columnSort = new EventEmitter<GtSortEvent>();\\n  rowHover$ = this._rowHover$.asObservable().pipe(\\n    debounceTime(50),\\n    distinctUntilChanged((p, q) => p.index === q.index),\\n    tap((event) => this.rowHover.emit(event)),\\n    shareReplay(1)\\n  );\\n\\n  hoverRow(id: string): void;\\n  hoverRow(index: number): void;\\n  hoverRow(none: null): void;\\n  hoverRow(arg: string | number | null): void {\\n    if (typeof arg === \'number\') {\\n      this.data$\\n        .pipe(\\n          map((data) => data[arg]),\\n          take(1)\\n        )\\n        .subscribe((row) => this._hoverRow(row, arg));\\n    } else if (typeof arg === \'string\') {\\n      // TODO: implement hover by id\\n    } else {\\n      this._hoverRow(null, null);\\n    }\\n  }\\n  _hoverRow(\\n    row: TableRow | null,\\n    index: number | null,\\n    event?: MouseEvent\\n  ): void {\\n    this._rowHover$.next({ row, index, event });\\n  }\\n\\n  get loading$(): Observable<boolean> {\\n    return this._loading$.pipe(\\n      startWith(false),\\n      map((value) => (isObservable(value) ? value : of(value))),\\n      switchMap((obs) => obs),\\n      shareReplay(1)\\n    );\\n  }\\n\\n  private _loading$: ReplaySubject<Observable<boolean> | boolean> =\\n    new ReplaySubject(1);\\n  private _sortOrder$: BehaviorSubject<GtSortOrder> =\\n    new BehaviorSubject<GtSortOrder>([]);\\n  private _searchBy$: ReplaySubject<Observable<string> | string | null> =\\n    new ReplaySubject(1);\\n  searchBy$: Observable<string | null> = this._searchBy$.pipe(\\n    startWith(\'\'),\\n    map((value) => (isObservable(value) ? value : of(value))),\\n    switchMap((obs) => obs),\\n    shareReplay(1)\\n  );\\n\\n  // tslint:disable-next-line:variable-name\\n  private _tableConfig$: BehaviorSubject<\\n    TableConfig<any> | Observable<TableConfig<any>>\\n  > = new BehaviorSubject({});\\n  tableConfig$ = this._tableConfig$.pipe(\\n    map((value) => (isObservable(value) ? value : of(value))),\\n    switchMap((obs) => obs),\\n    shareReplay(1)\\n  );\\n\\n  private _data$: ReplaySubject<Array<TableRow> | Observable<Array<TableRow>>> =\\n    new ReplaySubject(1);\\n  data$: Observable<Array<TableRow>> = this._data$.pipe(\\n    map((value) => (isObservable(value) ? value : of(value))),\\n    switchMap((obs) => combineLatest([obs])),\\n    withLatestFrom(this.tableConfig$),\\n    map(([[data], config]) => {\\n      // if columns or rows contains config for mapTo...\\n      if (\\n        (config.columns &&\\n          !!Object.values(config.columns).find((column) => !!column.mapTo)) ||\\n        (config.rows &&\\n          !!Object.values(config.rows).find((column) => !!column.mapTo))\\n      ) {\\n        // ...map data to new keys on row...\\n        const newData: TableRow[] = [];\\n        for (let i = 0; i < data.length; i++) {\\n          const row = data[i];\\n          const newKeys = Object.entries(config.columns || config.rows || [])\\n            .filter(([key, value]) => !!value.mapTo) // add keys for columns with mapTo config...\\n            .reduce(\\n              (previousValue, [key, value]) => ({\\n                ...previousValue,\\n                [key]: this.nestedValue(\\n                  row,\\n                  value.mapTo!.path,\\n                  value.mapTo?.missingValue\\n                ),\\n              }),\\n              {}\\n            );\\n          newData[i] = { ...row, ...newKeys };\\n        }\\n        data = newData;\\n      }\\n      return { data, config };\\n    }),\\n    switchMap((obs) =>\\n      combineLatest([of(obs), this.sortOrder$, this.searchBy$])\\n    ),\\n    map(([table, sortBy, searchBy]) => {\\n      // create a new array reference and sort new array (prevent mutating existing state)\\n      table.data = [...table.data];\\n      return !sortBy.length || table.config?.disableTableSort\\n        ? searchBy\\n          ? search(searchBy, false, table.data, table.config)\\n          : table.data\\n        : searchBy\\n        ? search(searchBy, false, table.data, table.config)?.sort(\\n            sortOnMultipleKeys(sortBy)\\n          )\\n        : table.data?.sort(sortOnMultipleKeys(sortBy));\\n    }),\\n    shareReplay(1)\\n  );\\n\\n  calculations$ = combineLatest([this.data$, this.tableConfig$]).pipe(\\n    map(([data, config]) => calculate(data, config)),\\n    shareReplay(1)\\n  );\\n\\n  table$: Observable<TableMeta> = combineLatest([\\n    this.data$,\\n    this.tableConfig$,\\n  ]).pipe(\\n    map(([sorted, config]) => {\\n      // if pagination is disabled...\\n      if (!config.pagination || config.pagination.length === 0) {\\n        // ...return unaltered array\\n        return {\\n          data: [sorted],\\n          config,\\n          info: { records: sorted.length, pageTotal: 1 },\\n        };\\n      }\\n      // return record set\\n      return {\\n        data: chunk(sorted, +(config.pagination.length || 0)),\\n        config,\\n        info: {\\n          records: sorted.length,\\n          pageTotal: Math.ceil(\\n            sorted.length / +(config.pagination.length || 0)\\n          ),\\n        },\\n      };\\n    }),\\n    shareReplay(1)\\n  );\\n\\n  private _currentPage$: BehaviorSubject<number> = new BehaviorSubject(0);\\n  currentPage$ = combineLatest([this._currentPage$, this.table$]).pipe(\\n    map(([page, table]: any) => {\\n      // determine last page\\n      const lastPage =\\n        Math.ceil(\\n          table.info.records /\\n            (table.config?.pagination?.length || table.info.records)\\n        ) - 1;\\n      // determine max/min position\\n      return +page < 0 ? 0 : +page > lastPage ? lastPage : +page;\\n    }),\\n    shareReplay(1)\\n  );\\n\\n  colspan$ = this.tableConfig$.pipe(\\n    switchMap((config) =>\\n      config.columns\\n        ? of(\\n            Object.values(config.columns || config.rows || {}).filter(\\n              (value) => value.hidden !== true\\n            ).length\\n          )\\n        : this.data$.pipe(map((data) => data.length + 1))\\n    ),\\n    shareReplay(1)\\n  );\\n\\n  footerColspan$ = this.tableConfig$.pipe(\\n    map((config) => {\\n      let colspan = 0;\\n      Object.values(config?.footer?.columns || {}).forEach((calculations) => {\\n        if (\\n          Object.values(calculations).filter((value) => value !== false)\\n            .length >= 0\\n        ) {\\n          colspan += 1;\\n        }\\n      }, {});\\n      return colspan;\\n    }),\\n    shareReplay(1)\\n  );\\n\\n  /** sortByKey - Sort by key in table row\\n   * @param key - key to sort by\\n   * @param { MouseEvent } [$event] - Mouse event triggering sort, if shift key is pressed sort key will be added to already present sort keys\\n   */\\n  sortByKey(key: keyof TableRow, $event?: MouseEvent): void {\\n    const shiftKey = $event?.shiftKey;\\n    const currentOrder = this._sortOrder$.value;\\n    let sortOrder: GtOrder = \'asc\';\\n    let newOrder: GtSortOrder = [];\\n    // if shift key is pressed while sorting...\\n    if (shiftKey) {\\n      // ...check if key is already sorted\\n      const existingSortPosition = currentOrder.findIndex(\\n        (value) => value.key === key\\n      );\\n      if (existingSortPosition === -1) {\\n        // ...if key is not sorted, add it to the end of the sort order\\n        newOrder = [...currentOrder, { key, order: \'asc\' }];\\n      } else {\\n        // ...if key is already sorted, toggle sort order\\n        sortOrder = currentOrder[existingSortPosition].order;\\n        const newSortOrder = sortOrder === \'asc\' ? \'desc\' : \'asc\';\\n        newOrder = [...currentOrder];\\n        newOrder[existingSortPosition] = {\\n          ...newOrder[existingSortPosition],\\n          order: newSortOrder,\\n        };\\n      }\\n    } else {\\n      // ...else if shift key is not pressed...\\n      if (currentOrder.length > 0) {\\n        // ...check if key is already sorted\\n        const existingSortPosition = currentOrder.findIndex(\\n          (value) => value.key === key\\n        );\\n        // ...if key is already sorted, toggle sort order\\n        if (existingSortPosition === -1) {\\n          newOrder = [{ key, order: \'asc\' }];\\n        } else {\\n          sortOrder = currentOrder[existingSortPosition].order;\\n          const newSortOrder = sortOrder === \'asc\' ? \'desc\' : \'asc\';\\n          newOrder = [{ key, order: newSortOrder }];\\n        }\\n      } else {\\n        // ...if key is not sorted set sort order for key to ascending\\n        newOrder = [{ key, order: sortOrder }];\\n      }\\n    }\\n    // create sort event\\n    const sortEvent: GtSortEvent = {\\n      key,\\n      order: sortOrder,\\n      currentSortOrder: newOrder,\\n    };\\n\\n    // if event is passed to sort function...\\n    if ($event) {\\n      // ...emit it as well\\n      sortEvent.event = $event;\\n    }\\n    // emit sort event\\n    this.columnSort.emit(sortEvent);\\n    // update sort order\\n    this.sortOrder = newOrder;\\n  }\\n\\n  columnOrder = (\\n    a: KeyValue<string, TableColumn>,\\n    b: KeyValue<string, TableColumn>\\n  ): number => {\\n    return (a.value.order || 0) - (b.value.order || 0);\\n  };\\n\\n  nestedValue(\\n    object: any,\\n    mapTo: string,\\n    missingValue: string | number | null = null\\n  ): unknown {\\n    const levels = mapTo.split(\'.\');\\n    return levels.reduce(\\n      (previousValue, currentValue, index) =>\\n        previousValue[currentValue] ||\\n        (index === levels.length - 1 ? missingValue : {}),\\n      object\\n    );\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","accessors":{"sortOrder$":{"name":"sortOrder$","getSignature":{"name":"sortOrder$","type":"","returnType":"Observable<GtSortOrder>","line":80}},"loading":{"name":"loading","setSignature":{"name":"loading","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"isLoading","type":"Observable<boolean> | boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":84,"jsdoctags":[{"name":"isLoading","type":"Observable<boolean> | boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"page":{"name":"page","setSignature":{"name":"page","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"page","type":"number","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":88,"jsdoctags":[{"name":"page","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"search":{"name":"search","setSignature":{"name":"search","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"string","type":"Observable<string> | string | null","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":93,"jsdoctags":[{"name":"string","type":"Observable<string> | string | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"config":{"name":"config","setSignature":{"name":"config","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"config","type":"Observable<TableConfig<any>> | TableConfig<any>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":98,"jsdoctags":[{"name":"config","type":"Observable<TableConfig<any>> | TableConfig<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"data":{"name":"data","setSignature":{"name":"data","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"data","type":"Observable<Array<TableRow>> | Array<TableRow>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":103,"jsdoctags":[{"name":"data","type":"Observable<Array<TableRow>> | Array<TableRow>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"sortOrder":{"name":"sortOrder","setSignature":{"name":"sortOrder","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"sortConfig","type":"GtSortOrder<any>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":107,"jsdoctags":[{"name":"sortConfig","type":"GtSortOrder<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"loading$":{"name":"loading$","getSignature":{"name":"loading$","type":"","returnType":"Observable<boolean>","line":158}}},"templateData":"<table\\n  [ngClass]=\\"(tableConfig$ | async)?.class || \'table\'\\"\\n  [class.table-mobile]=\\"(tableConfig$ | async)?.mobileLayout\\"\\n  [class.table-horizontal]=\\"(tableConfig$ | async)?.rows\\"\\n  [class.table-loading]=\\"loading$ | async\\"\\n  [class.gt-sticky-row-header]=\\"\\n    (tableConfig$ | async)?.stickyHeaders?.row && (tableConfig$ | async)?.rows\\n  \\"\\n  [class.gt-sticky-column-header]=\\"\\n    (tableConfig$ | async)?.stickyHeaders?.column\\n  \\"\\n  [attr.aria-busy]=\\"(loading$ | async) === true ? true : null\\"\\n>\\n  <thead>\\n    <tr\\n      *ngIf=\\"{\\n        config: (tableConfig$ | async)!,\\n        isLoading: loading$ | async\\n      } as table\\"\\n    >\\n      <ng-container\\n        *ngFor=\\"let column of table.config?.columns | keyvalue: columnOrder\\"\\n      >\\n        <th\\n          *ngIf=\\"!column.value?.hidden\\"\\n          ngClass=\\"{{ (column.key | dashCase) + \'-column\' }} {{\\n            column.value.class\\n          }}\\"\\n          [class.disabled]=\\"table.isLoading\\"\\n          [attr.aria-sort]=\\"sortOrder$ | async | sortClass: column.key:\'aria\'\\"\\n          [class.gt-sortable]=\\"true\\"\\n          scope=\\"col\\"\\n        >\\n          <button\\n            *ngIf=\\"column.value?.sortable\\"\\n            [attr.data-sort-order]=\\"\\n              sortOrder$ | async | sortClass: column.key:\'order\'\\n            \\"\\n            class=\\"gt-sort\\"\\n            (click)=\\"\\n              table.isLoading ||\\n                !column.value.sortable ||\\n                sortByKey(column.key, $event)\\n            \\"\\n          >\\n            <span *ngIf=\\"column.value?.header !== false\\">{{\\n              column.value.header || column.key | capitalCase\\n            }}</span>\\n          </button>\\n          <span\\n            *ngIf=\\"!column.value?.sortable && column.value?.header !== false\\"\\n            >{{ column.value.header || column.key | capitalCase }}</span\\n          >\\n        </th>\\n      </ng-container>\\n      <ng-container\\n        *ngIf=\\"\\n          ((table?.config?.rows | keyvalue: columnOrder) || [])[0] as headerRow\\n        \\"\\n      >\\n        <th\\n          class=\\"row-header\\"\\n          [attr.aria-sort]=\\"\\n            sortOrder$ | async | sortClass: headerRow.key:\'aria\'\\n          \\"\\n          ngClass=\\"{{ headerRow.value.sortable ? \'sort \' : \'\' }} {{\\n            sortOrder$ | async | sortClass: headerRow.key\\n          }} {{ (headerRow.key | dashCase) + \'-column\' }}\\"\\n          (click)=\\"\\n            table.isLoading ||\\n              !headerRow.value.sortable ||\\n              sortByKey(headerRow.key, $event)\\n          \\"\\n          scope=\\"col\\"\\n        >\\n          <ng-container *ngIf=\\"headerRow?.value?.header !== false\\">{{\\n            headerRow?.value?.header || headerRow.key | capitalCase\\n          }}</ng-container>\\n        </th>\\n        <th\\n          *ngFor=\\"let column of ((table$ | async)?.data || [])[0]\\"\\n          ngClass=\\"{{ headerRow.value.class }}\\"\\n        >\\n          <ng-container\\n            [ngTemplateOutlet]=\\"\\n              (table.config.rows || {})[headerRow.key].templateRef\\n                ? templateRef\\n                : (table.config.rows || {})[headerRow.key].transform\\n                ? transformData\\n                : rawData\\n            \\"\\n            [ngTemplateOutletContext]=\\"{\\n              row: column,\\n              column: headerRow,\\n              transform: (table.config.rows || {})[headerRow.key].transform,\\n              templateRef: (table.config.rows || {})[headerRow.key].templateRef,\\n              index: 0\\n            }\\"\\n          >\\n          </ng-container>\\n        </th>\\n      </ng-container>\\n    </tr>\\n  </thead>\\n  <tbody *ngIf=\\"loading$ | async; else tableContent\\">\\n    <tr>\\n      <td class=\\"p-0\\" [colSpan]=\\"colspan$ | async\\">\\n        <ng-content select=\\".table-loading\\"></ng-content>\\n      </td>\\n    </tr>\\n  </tbody>\\n  <tfoot *ngIf=\\"(table$ | async)! as table\\">\\n    <ng-container *ngIf=\\"table.data.length > 0 && !(loading$ | async)\\">\\n      <ng-container *ngIf=\\"(calculations$ | async)! as calculations\\">\\n        <tr\\n          *ngFor=\\"let calculation of calculations.calculations; let i = index\\"\\n        >\\n          <ng-container\\n            *ngIf=\\"{\\n              showHeader: (colspan$ | async) !== (footerColspan$ | async)\\n            } as footerRow\\"\\n          >\\n            <th\\n              *ngIf=\\"footerRow.showHeader\\"\\n              [colSpan]=\\"\\n                ((colspan$ | async) || 0) - ((footerColspan$ | async) || 0)\\n              \\"\\n              scope=\\"row\\"\\n            >\\n              <ng-container\\n                *ngIf=\\"table.config?.footer?.headers?.[calculation] as showHeader\\"\\n                >{{showHeader === true ? (calculation | capitalCase): table.config.footer?.headers?.[calculation]}}\\n              </ng-container>\\n            </th>\\n            <ng-container\\n              *ngFor=\\"\\n                let column of table.config?.columns | keyvalue: columnOrder\\n              \\"\\n            >\\n              <td\\n                *ngIf=\\"\\n                  !column.value?.hidden && calculations.calculated[column.key]\\n                \\"\\n                ngClass=\\"{{ (column.key | dashCase) + \'-column\' }} {{\\n                  column.value.class\\n                }}\\"\\n                [attr.data-header]=\\"\\n                  !footerRow.showHeader && table.config.footer?.headers?.[calculation]\\n                    ? table.config.footer?.headers?.[calculation] === true ? (calculation | capitalCase) : table.config.footer?.headers?.[calculation]\\n                    : null\\n                \\"\\n                [attr.data-label]=\\"\\n                  table.config.mobileLayout && column.value.mobileHeader\\n                    ? column.value.mobileHeader !== true\\n                      ? column.value.mobileHeader\\n                      : (column.value.header || column.key | capitalCase)\\n                    : null\\n                \\"\\n                [class.gt-no-content]=\\"\\n                  !calculations.calculated[column.key][calculation]\\n                \\"\\n              >\\n                <ng-container\\n                  [ngTemplateOutlet]=\\"\\n                    (table.config.columns || {})[column.key].templateRef\\n                      ? templateRef\\n                      : (table.config.columns || {})[column.key].transform\\n                      ? transformFooter\\n                      : rawFooter\\n                  \\"\\n                  [ngTemplateOutletContext]=\\"{\\n                    value: calculations.calculated[column.key][calculation],\\n                    row: calculations.calculated[column.key],\\n                    column: calculation,\\n                    templateRef: (table.config.columns || {})[column.key]\\n                      .templateRef,\\n                    transform: (table.config.columns || {})[column.key]\\n                      .transform\\n                  }\\"\\n                ></ng-container>\\n              </td>\\n            </ng-container>\\n          </ng-container>\\n        </tr>\\n      </ng-container>\\n    </ng-container>\\n  </tfoot>\\n</table>\\n<ng-template #tableContent>\\n  <ng-container *ngIf=\\"(table$ | async)! as table\\">\\n    <tbody *ngIf=\\"(table!.data![0] || table!.data!).length > 0; else noData\\">\\n      <ng-container *ngIf=\\"table.config.columns\\">\\n        <tr\\n          *ngFor=\\"\\n            let row of table!.data![(currentPage$ | async) || 0];\\n            let i = index\\n          \\"\\n          [attr.id]=\\"\'tableRow_\' + i\\"\\n          (click)=\\"table?.config?.rowClick && _rowClick(row, i, $event)\\"\\n          (mouseover)=\\"table?.config?.rowHover && _hoverRow(row, i, $event)\\"\\n          (mouseout)=\\"table?.config?.rowHover && _hoverRow(null, null, $event)\\"\\n          [class.gt-hover]=\\"(rowHover$ | async)?.index === i\\"\\n        >\\n          <ng-container\\n            *ngFor=\\"let column of table.config?.columns | keyvalue: columnOrder\\"\\n          >\\n            <td\\n              *ngIf=\\"!column.value?.hidden\\"\\n              ngClass=\\"{{ (column.key | dashCase) + \'-column\' }} {{\\n                column.value.class\\n              }}\\"\\n              [attr.data-label]=\\"\\n                table.config.mobileLayout && column.value.mobileHeader\\n                  ? column.value.mobileHeader !== true\\n                    ? column.value.mobileHeader\\n                    : (column.value.header || column.key | capitalCase)\\n                  : null\\n              \\"\\n            >\\n              <ng-container\\n                [ngTemplateOutlet]=\\"\\n                  (searchBy$ | async) &&\\n                  !(table.config.columns || {})[column.key].templateRef\\n                    ? highlighted\\n                    : (table.config.columns || {})[column.key].templateRef\\n                    ? templateRef\\n                    : (table.config.columns || {})[column.key].transform\\n                    ? transformData\\n                    : rawData\\n                \\"\\n                [ngTemplateOutletContext]=\\"{\\n                  row: row,\\n                  column: column,\\n                  search: (searchBy$ | async),\\n                  transform: (table.config.columns || {})[column.key].transform,\\n                  templateRef: (table.config.columns || {})[column.key]\\n                    .templateRef,\\n                  index: i,\\n                  data: table.data[(currentPage$ | async) || 0]\\n                }\\"\\n              ></ng-container>\\n            </td>\\n          </ng-container>\\n        </tr>\\n      </ng-container>\\n      <ng-container *ngIf=\\"table.config.rows\\">\\n        <ng-container\\n          *ngFor=\\"\\n            let row of table?.config?.rows | keyvalue: columnOrder | slice: 1;\\n            let i = index\\n          \\"\\n        >\\n          <tr\\n            *ngIf=\\"!row.value?.hidden\\"\\n            [attr.id]=\\"\'tableRow_\' + i\\"\\n            ngClass=\\"{{ (row.key | dashCase) + \'-row\' }}\\"\\n            (click)=\\"table?.config?.rowClick && _rowClick(row, i, $event)\\"\\n            (mouseover)=\\"table?.config?.rowHover && _hoverRow(row, i, $event)\\"\\n            (mouseout)=\\"\\n              table?.config?.rowHover && _hoverRow(null, null, $event)\\n            \\"\\n            [class.gt-hover]=\\"(rowHover$ | async)?.index === i\\"\\n          >\\n            <th class=\\"row-header\\" scope=\\"row\\">\\n              {{ row.value.header || row.key | capitalCase }}\\n            </th>\\n            <td\\n              *ngFor=\\"let column of (table?.data || [])[0]; let y = index\\"\\n              ngClass=\\"{{ row.value.class }}\\"\\n            >\\n              <ng-container\\n                [ngTemplateOutlet]=\\"\\n                  (table.config.rows || {})[row.key].templateRef\\n                    ? templateRef\\n                    : (table.config.rows || {})[row.key].transform\\n                    ? transformData\\n                    : rawData\\n                \\"\\n                [ngTemplateOutletContext]=\\"{\\n                  row: column,\\n                  column: row,\\n                  transform: (table.config.rows || {})[row.key].transform,\\n                  templateRef: (table.config.rows || {})[row.key].templateRef,\\n                  index: table.config.rows ? y : i,\\n                  data: table.data[(currentPage$ | async) || 0]\\n                }\\"\\n              >\\n              </ng-container>\\n            </td>\\n          </tr>\\n        </ng-container>\\n      </ng-container>\\n    </tbody>\\n  </ng-container>\\n</ng-template>\\n<ng-template #noData>\\n  <tbody>\\n    <tr>\\n      <td class=\\"p-0\\" [colSpan]=\\"colspan$ | async\\">\\n        <ng-content select=\\".table-no-data\\"></ng-content>\\n      </td>\\n    </tr>\\n  </tbody>\\n</ng-template>\\n<ng-template\\n  #highlighted\\n  let-row=\\"row\\"\\n  let-column=\\"column\\"\\n  let-search=\\"search\\"\\n  let-transform=\\"transform\\"\\n>\\n  <div\\n    *ngIf=\\"!transform\\"\\n    [innerHTML]=\\"row[column.key] | highlight: search\\"\\n  ></div>\\n  <div\\n    *ngIf=\\"transform\\"\\n    [innerHTML]=\\"\\n      row[column.key]\\n        | dynamicPipe: transform.pipe:transform?.args\\n        | highlight: search\\n    \\"\\n  ></div>\\n</ng-template>\\n<ng-template #rawData let-row=\\"row\\" let-column=\\"column\\">\\n  {{ row[column.key] }}\\n</ng-template>\\n<ng-template\\n  #transformData\\n  let-row=\\"row\\"\\n  let-column=\\"column\\"\\n  let-transform=\\"transform\\"\\n  let-data=\\"data\\"\\n>\\n  {{ row[column.key] | dynamicPipe: transform.pipe:transform?.args }}\\n</ng-template>\\n<ng-template #transformFooter let-value=\\"value\\" let-transform=\\"transform\\">\\n  {{\\n    (value | dynamicPipe: transform.pipe:transform?.args) ||\\n      (tableConfig$ | async)?.footer?.emptyContent\\n  }}\\n</ng-template>\\n<ng-template #rawFooter let-value=\\"value\\">\\n  {{ value || (tableConfig$ | async)?.footer?.emptyContent }}\\n</ng-template>\\n<ng-template\\n  #templateRef\\n  let-row=\\"row\\"\\n  let-column=\\"column\\"\\n  let-index=\\"index\\"\\n  let-templateRef=\\"templateRef\\"\\n  let-data=\\"data\\"\\n>\\n  <ng-container\\n    [ngTemplateOutlet]=\\"templateRef\\"\\n    [ngTemplateOutletContext]=\\"{\\n      row: row,\\n      col: column,\\n      index: index,\\n      data: data\\n    }\\"\\n  ></ng-container>\\n</ng-template>\\n"},{"name":"CustomTemplatesComponent","id":"component-CustomTemplatesComponent-6cecf532b8a2e4c2eaf23ea4201513aedce4fd037994d2ffc381a761e281dfc1b925f4a7d1c7439b0d14f4d6ea855e4ddb4d7152151bee330f72ba15f3c570b3","file":"projects/docs/src/app/examples/custom-templates/custom-templates.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"docs-custom-templates","styleUrls":[],"styles":[],"template":"<div class=\\"overflow-auto\\">\\n  <angular-generic-table\\n    [data]=\\"data\\"\\n    [config]=\\"config$\\"\\n  ></angular-generic-table>\\n</div>\\n<ng-template #actions let-row=\\"row\\" let-col=\\"col\\" let-index=\\"index\\">\\n  <button\\n    class=\\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\\"\\n    (click)=\\"clickAction(row, col, index)\\"\\n  >\\n    Click me!\\n  </button>\\n</ng-template>\\n<ng-template #color let-row=\\"row\\" let-col=\\"col\\">\\n  <div\\n    [style.background]=\\"row[col.key]\\"\\n    style=\\"width: 1.5rem; height: 1.5rem; border-radius: 50%\\"\\n  ></div>\\n</ng-template>\\n{{ clicked }}\\n<docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"actions","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any> | undefined","optional":false,"description":"","line":39,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'actions\', {static: true}"}]},{"name":"clicked","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":41},{"name":"color","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any> | undefined","optional":false,"description":"","line":40,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'color\', {static: true}"}]},{"name":"config$","defaultValue":"new ReplaySubject(1)","deprecated":false,"deprecationMessage":"","type":"ReplaySubject<TableConfig>","optional":false,"description":"","line":59},{"name":"data","defaultValue":"[\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteColor: \'#26BFAF\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteColor: \'#0f0\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":43},{"name":"SNIPPETS","defaultValue":"CUSTOM_TEMPLATES_DOCS","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":61}],"methodsClass":[{"name":"clickAction","args":[{"name":"row","type":"TableRow","deprecated":false,"deprecationMessage":""},{"name":"column","type":"literal type","deprecated":false,"deprecationMessage":""},{"name":"index","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":78,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"row","type":"TableRow","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"column","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":62,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport {\\n  TableConfig,\\n  TableRow,\\n  TableColumn,\\n} from \'@angular-generic-table/core\';\\nimport { ReplaySubject } from \'rxjs\';\\nimport { CUSTOM_TEMPLATES_DOCS } from \'./custom-templates.snippets\';\\n\\n@Component({\\n  selector: \'docs-custom-templates\',\\n  template: `\\n    <div class=\\"overflow-auto\\">\\n      <angular-generic-table\\n        [data]=\\"data\\"\\n        [config]=\\"config$\\"\\n      ></angular-generic-table>\\n    </div>\\n    <ng-template #actions let-row=\\"row\\" let-col=\\"col\\" let-index=\\"index\\">\\n      <button\\n        class=\\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\\"\\n        (click)=\\"clickAction(row, col, index)\\"\\n      >\\n        Click me!\\n      </button>\\n    </ng-template>\\n    <ng-template #color let-row=\\"row\\" let-col=\\"col\\">\\n      <div\\n        [style.background]=\\"row[col.key]\\"\\n        style=\\"width: 1.5rem; height: 1.5rem; border-radius: 50%\\"\\n      ></div>\\n    </ng-template>\\n    {{ clicked }}\\n    <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n  `,\\n})\\nexport class CustomTemplatesComponent implements OnInit {\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  @ViewChild(\'color\', { static: true }) color: TemplateRef<any> | undefined;\\n  clicked = \'\';\\n\\n  data = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteColor: \'#26BFAF\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteColor: \'#0f0\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ];\\n  config$: ReplaySubject<TableConfig> = new ReplaySubject(1);\\n\\n  SNIPPETS = CUSTOM_TEMPLATES_DOCS;\\n  ngOnInit(): void {\\n    this.config$.next({\\n      columns: {\\n        firstName: {},\\n        lastName: {},\\n        gender: {},\\n        favoriteColor: {\\n          templateRef: this.color,\\n        },\\n        favoriteFood: {},\\n        action: {\\n          templateRef: this.actions,\\n        },\\n      },\\n    });\\n  }\\n  clickAction(\\n    row: TableRow,\\n    column: { key: string; value: TableColumn },\\n    index: number\\n  ): void {\\n    console.log(\'clicked row:\', row, \'col:\', column);\\n    this.clicked = `clicked row number: ${index}`;\\n  }\\n}\\n\\nexport const CustomTemplates: Story<CustomTemplatesComponent> = (\\n  args: CustomTemplatesComponent\\n) => ({\\n  props: args,\\n  component: CustomTemplatesComponent,\\n});\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","implements":["OnInit"]},{"name":"FooterComponent","id":"component-FooterComponent-279416f7fd88af719e98be071e896b679843031ad1befb1ea2fa6c30b81737e612c86b23d592062a444ee77c2b9919b5b94409e96ab92e90ac09b0d6ef4e1e92","file":"projects/docs/src/app/examples/footer/footer.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"docs-footer","styleUrls":[],"styles":[],"template":"<div class=\\"overflow-auto\\">\\n  <angular-generic-table [data]=\\"data\\" [config]=\\"config\\">\\n  </angular-generic-table>\\n</div>\\n<docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n<ng-template #heightTmplRef let-row=\\"row\\" let-col=\\"col\\">\\n  <ng-container *ngIf=\\"row[col.key || col] as height\\"\\n    >{{ height }} m\\n  </ng-container>\\n</ng-template>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"config","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"TableConfig","optional":false,"description":"","line":46},{"name":"data","defaultValue":"[\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n      age: 27,\\n      weight: 85.457,\\n      height: 1.85,\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n      age: 25,\\n      weight: 60.123,\\n      height: 1.65,\\n    },\\n  ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":26},{"name":"heightTmplRef","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any> | undefined","optional":false,"description":"","line":23,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'heightTmplRef\', {static: true}"}]},{"name":"SNIPPETS","defaultValue":"SIMPLE_SNIPPETS","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":155}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { SIMPLE_SNIPPETS } from \'./simple.snippets\';\\nimport { TableConfig, TableRow } from \'@angular-generic-table/core\';\\nimport { DecimalPipe } from \'@angular/common\';\\n\\n@Component({\\n  selector: \'docs-footer\',\\n  template: `\\n    <div class=\\"overflow-auto\\">\\n      <angular-generic-table [data]=\\"data\\" [config]=\\"config\\">\\n      </angular-generic-table>\\n    </div>\\n    <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n    <ng-template #heightTmplRef let-row=\\"row\\" let-col=\\"col\\">\\n      <ng-container *ngIf=\\"row[col.key || col] as height\\"\\n        >{{ height }} m\\n      </ng-container>\\n    </ng-template>\\n  `,\\n})\\nexport class FooterComponent implements OnInit {\\n  @ViewChild(\'heightTmplRef\', { static: true }) heightTmplRef:\\n    | TemplateRef<any>\\n    | undefined;\\n  data = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n      age: 27,\\n      weight: 85.457,\\n      height: 1.85,\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n      age: 25,\\n      weight: 60.123,\\n      height: 1.65,\\n    },\\n  ];\\n  config: TableConfig = {};\\n\\n  ngOnInit() {\\n    this.config = {\\n      mobileLayout: true,\\n      columns: {\\n        firstName: {\\n          mobileHeader: true,\\n        },\\n        lastName: {\\n          mobileHeader: true,\\n        },\\n        gender: {\\n          mobileHeader: true,\\n        },\\n        favoriteFood: {\\n          mobileHeader: true,\\n          class: \'text-end flex-end\',\\n        },\\n        age: {\\n          mobileHeader: true,\\n          class: \'text-end\',\\n        },\\n        weight: {\\n          mobileHeader: true,\\n          class: \'text-end\',\\n          transform: {\\n            pipe: DecimalPipe,\\n            args: [\'1.0-2\'],\\n          },\\n        },\\n        height: {\\n          mobileHeader: true,\\n          class: \'text-end\',\\n          templateRef: this.heightTmplRef,\\n        },\\n      },\\n      footer: {\\n        headers: {\\n          sum: \'Total\',\\n          numberOfWomen: \'Number of women\',\\n          numberOfMen: \'Number of men\',\\n          min: true,\\n          max: true,\\n          avg: true,\\n          count: true,\\n          static: true,\\n          first: true,\\n        },\\n        rowOrder: [\\n          \'first\',\\n          \'numberOfWomen\',\\n          \'numberOfMen\',\\n          \'min\',\\n          \'max\',\\n          \'sum\',\\n          \'avg\',\\n          \'count\',\\n        ],\\n        columns: {\\n          firstName: {},\\n          lastName: {\\n            static: \'n/a\',\\n          },\\n          gender: {\\n            numberOfWomen: (data: Array<TableRow>, key) => {\\n              let count = 0;\\n              for (let i = 0; i < data.length; i++) {\\n                if (data[i][key] === \'female\') {\\n                  count++;\\n                }\\n              }\\n              return count;\\n            },\\n            numberOfMen: (data: Array<TableRow>, key) => {\\n              let count = 0;\\n              for (let i = 0; i < data.length; i++) {\\n                if (data[i][key] === \'male\') {\\n                  count++;\\n                }\\n              }\\n              return count;\\n            },\\n          },\\n          favoriteFood: {\\n            first: (data: Array<TableRow>, key) => data[0][key],\\n          },\\n          age: {\\n            sum: true,\\n            avg: true,\\n            count: true,\\n            max: true,\\n            min: true,\\n          },\\n          weight: {\\n            sum: true,\\n            avg: true,\\n            min: true,\\n          },\\n          height: {\\n            avg: true,\\n            min: true,\\n            max: true,\\n          },\\n        },\\n      },\\n    };\\n  }\\n\\n  SNIPPETS = SIMPLE_SNIPPETS;\\n}\\n\\nexport const Footer: Story<FooterComponent> = (args: FooterComponent) => ({\\n  props: args,\\n  component: FooterComponent,\\n});\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","implements":["OnInit"]},{"name":"GtDeltaComponent","id":"component-GtDeltaComponent-d8eaa54ebedc2786bbacacc9d40879c45252ff3cfeba6048488dcc628854c5f69f0ffd5a78d21d33b244eb515886c66a7b92a11a818dd7b7cf160b4dc6fce7a6","file":"projects/core/src/lib/gt-delta/gt-delta.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"gt-delta","styleUrls":[],"styles":["\\n      :host {\\n        display: inline-block;\\n      }\\n    "],"template":"<span      *ngIf=\\"value as delta\\"\\n      [class]=\\"[\\n        classes.span,\\n        delta.absolute > 0\\n          ? classes.positive\\n          : delta.absolute < 0\\n          ? classes.negative\\n          : null\\n      ]\\"\\n      [class.gt-delta-positive]=\\"delta.absolute > 0\\"\\n      [class.gt-delta-negative]=\\"delta.absolute < 0\\"\\n      ><ng-container\\n        *ngTemplateOutlet=\\"deltaTemplate || defaultTemplate; context: { delta }\\"\\n      ></ng-container>\\n    </span>\\n    <ng-template #defaultTemplate let-delta=\\"delta\\">\\n      <span *ngIf=\\"delta.relative\\">{{\\n        delta.relative | percent: \'1.0-2\'\\n      }}</span>\\n    </ng-template>","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"baseIndex","deprecated":false,"deprecationMessage":"","line":69,"type":"number","decorators":[]},{"name":"classes","defaultValue":"{\\n    span: \'gt-delta\',\\n    positive: \'text-success\',\\n    negative: \'text-danger\',\\n  }","deprecated":false,"deprecationMessage":"","line":70,"type":"{ span: string; positive: string; negative: string; }","decorators":[]},{"name":"data","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":67,"type":"Array<TableRow>","decorators":[]},{"name":"deltaTemplate","deprecated":false,"deprecationMessage":"","line":62,"type":"TemplateRef<any>","decorators":[]},{"name":"index","defaultValue":"0","deprecated":false,"deprecationMessage":"","line":68,"type":"number","decorators":[]},{"name":"initialValue","defaultValue":"null","deprecated":false,"deprecationMessage":"","line":77,"type":"string | number | null","decorators":[]},{"name":"key","defaultValue":"\'value\'","deprecated":false,"deprecationMessage":"","line":75,"type":"string","decorators":[]},{"name":"notApplicableValue","defaultValue":"null","deprecated":false,"deprecationMessage":"","line":76,"type":"string | null","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"_deltaTemplate","deprecated":false,"deprecationMessage":"","type":"any","optional":true,"description":"","line":79,"modifierKind":[121]},{"name":"_value","deprecated":false,"deprecationMessage":"","type":"GtDelta","optional":true,"description":"","line":78,"modifierKind":[121]},{"name":"Math","defaultValue":"Math","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":65},{"name":"Number","defaultValue":"Number","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":66}],"methodsClass":[{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":80,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  ChangeDetectionStrategy,\\n  Component,\\n  Input,\\n  OnChanges,\\n  SimpleChanges,\\n  TemplateRef,\\n} from \'@angular/core\';\\nimport { TableRow } from \'../models/table-row.interface\';\\nimport { NgIf, NgTemplateOutlet, PercentPipe } from \'@angular/common\';\\n\\nexport interface GtDelta {\\n  relative: number | string;\\n  absolute: number;\\n}\\n@Component({\\n  selector: \'gt-delta\',\\n  template: `<span\\n      *ngIf=\\"value as delta\\"\\n      [class]=\\"[\\n        classes.span,\\n        delta.absolute > 0\\n          ? classes.positive\\n          : delta.absolute < 0\\n          ? classes.negative\\n          : null\\n      ]\\"\\n      [class.gt-delta-positive]=\\"delta.absolute > 0\\"\\n      [class.gt-delta-negative]=\\"delta.absolute < 0\\"\\n      ><ng-container\\n        *ngTemplateOutlet=\\"deltaTemplate || defaultTemplate; context: { delta }\\"\\n      ></ng-container>\\n    </span>\\n    <ng-template #defaultTemplate let-delta=\\"delta\\">\\n      <span *ngIf=\\"delta.relative\\">{{\\n        delta.relative | percent: \'1.0-2\'\\n      }}</span>\\n    </ng-template>`,\\n  styles: [\\n    `\\n      :host {\\n        display: inline-block;\\n      }\\n    `,\\n  ],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  standalone: true,\\n  imports: [PercentPipe, NgIf, NgTemplateOutlet],\\n})\\nexport class GtDeltaComponent implements OnChanges {\\n  get value() {\\n    return this._value;\\n  }\\n\\n  set value(value) {\\n    this._value = value;\\n  }\\n  get deltaTemplate(): TemplateRef<any> {\\n    return this._deltaTemplate;\\n  }\\n  constructor() {}\\n  @Input() set deltaTemplate(deltaTemplate: TemplateRef<any>) {\\n    this._deltaTemplate = deltaTemplate;\\n  }\\n  Math = Math;\\n  Number = Number;\\n  @Input() data: Array<TableRow> = [];\\n  @Input() index: number = 0;\\n  @Input() baseIndex?: number;\\n  @Input() classes = {\\n    span: \'gt-delta\',\\n    positive: \'text-success\',\\n    negative: \'text-danger\',\\n  };\\n  @Input() key: string = \'value\';\\n  @Input() notApplicableValue: string | null = null;\\n  @Input() initialValue: string | number | null = null;\\n  private _value?: GtDelta;\\n  private _deltaTemplate?: any;\\n  ngOnChanges(changes: SimpleChanges): void {\\n    if (!changes.data.currentValue) {\\n      return;\\n    }\\n    const data = changes.data?.currentValue;\\n    const index = changes.index?.currentValue || this.index;\\n    const baseIndex = changes.baseIndex?.currentValue;\\n    const key = changes.key?.currentValue || this.key;\\n    const initialValue =\\n      changes.initialValue?.currentValue || this.initialValue;\\n\\n    const deltaValue =\\n      index === 0\\n        ? initialValue\\n        : data[index][key] -\\n          (baseIndex === undefined\\n            ? data[index - 1][key]\\n            : data[baseIndex][key]);\\n    const baseValue =\\n      index === 0\\n        ? 1\\n        : baseIndex === undefined\\n        ? data[index - 1][key]\\n        : data[baseIndex][key];\\n\\n    const relative =\\n      index === 0\\n        ? initialValue\\n        : Math.sign(deltaValue) * Math.abs(deltaValue / baseValue);\\n\\n    this.value = {\\n      relative: Number.isFinite(relative)\\n        ? relative\\n        : index === 0\\n        ? initialValue\\n        : changes.notApplicableValue?.currentValue || this.notApplicableValue,\\n      absolute: deltaValue,\\n    };\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"\\n      :host {\\n        display: inline-block;\\n      }\\n    \\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":60},"implements":["OnChanges"],"accessors":{"value":{"name":"value","setSignature":{"name":"value","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":55,"jsdoctags":[{"name":"value","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"value","type":"","returnType":"","line":51}},"deltaTemplate":{"name":"deltaTemplate","setSignature":{"name":"deltaTemplate","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"deltaTemplate","type":"TemplateRef<any>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":62,"jsdoctags":[{"name":"deltaTemplate","type":"TemplateRef<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"deltaTemplate","type":"","returnType":"TemplateRef<any>","line":58}}}},{"name":"HorizontalTableComponent","id":"component-HorizontalTableComponent-60f5c580588de332c24651656ba6a0778ea28e728a0ea8ebf1a6e6d0cbae3fb3c52a03d8cf305be7481aa6c12c9cb657e6ccf4a10b2593d1f84ed922b434823c","file":"projects/docs/src/app/examples/horizontal-table/horizontal-table.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"docs-horizontal-table","styleUrls":[],"styles":[],"template":"<button class=\\"btn btn-outline-primary\\" (click)=\\"simulateLoad()\\">\\n  Simulate load\\n</button>\\n<button class=\\"btn btn-outline-danger mx-3\\" (click)=\\"empty()\\">Empty</button>\\n<button class=\\"btn btn-outline-primary\\" (click)=\\"load()\\">Reset</button>\\n<div class=\\"overflow-auto\\">\\n  <angular-generic-table\\n    [data]=\\"data\\"\\n    [config]=\\"config\\"\\n    [loading]=\\"loading$\\"\\n  >\\n    <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n    <div class=\\"table-no-data alert alert-info mt-3\\">Table is empty</div>\\n  </angular-generic-table>\\n</div>\\n<ng-template #feelings let-row=\\"row\\" let-col=\\"col\\">\\n  <div [ngSwitch]=\\"row[col.key]\\">\\n    <ng-container *ngSwitchCase=\\"\'thrilled\'\\">😀</ng-container>\\n    <ng-container *ngSwitchCase=\\"\'positive\'\\">🙂</ng-container>\\n    <ng-container *ngSwitchCase=\\"\'neutral\'\\">😐</ng-container>\\n    <ng-container *ngSwitchCase=\\"\'negative\'\\">😭</ng-container>\\n  </div>\\n</ng-template>\\n<ng-template #delta let-data=\\"data\\" let-index=\\"index\\">\\n  <gt-delta [index]=\\"index\\" [data]=\\"data\\"></gt-delta>\\n</ng-template>\\n<ng-template #deltaIndex let-data=\\"data\\" let-index=\\"index\\">\\n  <gt-delta [index]=\\"index\\" [baseIndex]=\\"0\\" [data]=\\"data\\"></gt-delta>\\n</ng-template>\\n<docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"config","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"TableConfig","optional":false,"description":"","line":54},{"name":"data","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":55},{"name":"delta","deprecated":false,"deprecationMessage":"","type":"TemplateRef<GtDeltaComponent> | undefined","optional":false,"description":"","line":47,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'delta\', {static: true}"}]},{"name":"deltaIndex","deprecated":false,"deprecationMessage":"","type":"TemplateRef<GtDeltaComponent> | undefined","optional":false,"description":"","line":50,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'deltaIndex\', {static: true}"}]},{"name":"feelings","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any> | undefined","optional":false,"description":"","line":44,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'feelings\', {static: true}"}]},{"name":"loading$","defaultValue":"new BehaviorSubject(false)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":53},{"name":"SNIPPETS","defaultValue":"HORIZONTAL_TABLE_SNIPPETS","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":127}],"methodsClass":[{"name":"empty","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":94,"deprecated":false,"deprecationMessage":""},{"name":"load","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":97,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":57,"deprecated":false,"deprecationMessage":""},{"name":"simulateLoad","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":89,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { HORIZONTAL_TABLE_SNIPPETS } from \'./horizontal-table.snippets\';\\nimport { GtDeltaComponent, TableConfig } from \'@angular-generic-table/core\';\\nimport { BehaviorSubject } from \'rxjs\';\\n\\n@Component({\\n  selector: \'docs-horizontal-table\',\\n  template: `\\n    <button class=\\"btn btn-outline-primary\\" (click)=\\"simulateLoad()\\">\\n      Simulate load\\n    </button>\\n    <button class=\\"btn btn-outline-danger mx-3\\" (click)=\\"empty()\\">Empty</button>\\n    <button class=\\"btn btn-outline-primary\\" (click)=\\"load()\\">Reset</button>\\n    <div class=\\"overflow-auto\\">\\n      <angular-generic-table\\n        [data]=\\"data\\"\\n        [config]=\\"config\\"\\n        [loading]=\\"loading$\\"\\n      >\\n        <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n        <div class=\\"table-no-data alert alert-info mt-3\\">Table is empty</div>\\n      </angular-generic-table>\\n    </div>\\n    <ng-template #feelings let-row=\\"row\\" let-col=\\"col\\">\\n      <div [ngSwitch]=\\"row[col.key]\\">\\n        <ng-container *ngSwitchCase=\\"\'thrilled\'\\">😀</ng-container>\\n        <ng-container *ngSwitchCase=\\"\'positive\'\\">🙂</ng-container>\\n        <ng-container *ngSwitchCase=\\"\'neutral\'\\">😐</ng-container>\\n        <ng-container *ngSwitchCase=\\"\'negative\'\\">😭</ng-container>\\n      </div>\\n    </ng-template>\\n    <ng-template #delta let-data=\\"data\\" let-index=\\"index\\">\\n      <gt-delta [index]=\\"index\\" [data]=\\"data\\"></gt-delta>\\n    </ng-template>\\n    <ng-template #deltaIndex let-data=\\"data\\" let-index=\\"index\\">\\n      <gt-delta [index]=\\"index\\" [baseIndex]=\\"0\\" [data]=\\"data\\"></gt-delta>\\n    </ng-template>\\n    <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n  `,\\n  styles: [],\\n})\\nexport class HorizontalTableComponent implements OnInit {\\n  @ViewChild(\'feelings\', { static: true }) feelings:\\n    | TemplateRef<any>\\n    | undefined;\\n  @ViewChild(\'delta\', { static: true }) delta:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  @ViewChild(\'deltaIndex\', { static: true }) deltaIndex:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  loading$ = new BehaviorSubject(false);\\n  config: TableConfig = {};\\n  data: any = [];\\n\\n  ngOnInit(): void {\\n    this.config = {\\n      stickyHeaders: {\\n        row: true,\\n      },\\n      mobileLayout: true,\\n      rows: {\\n        year: {\\n          class: \'text-end\',\\n          header: false,\\n        },\\n        value: {\\n          class: \'text-end\',\\n        },\\n        delta: {\\n          header: \'Delta %\',\\n          templateRef: this.delta,\\n          class: \'text-end\',\\n        },\\n        deltaIndex: {\\n          header: \'Since inception %\',\\n          templateRef: this.deltaIndex,\\n          class: \'text-end\',\\n        },\\n        feeling: {\\n          templateRef: this.feelings,\\n          class: \'text-end\',\\n        },\\n      },\\n    };\\n    this.load();\\n  }\\n  simulateLoad(): void {\\n    this.loading$.next(true);\\n    // set loading state to false after 2 seconds\\n    setTimeout(() => this.loading$.next(false), 2000);\\n  }\\n  empty(): void {\\n    this.data = [];\\n  }\\n  load(): void {\\n    this.data = [\\n      {\\n        year: \'2017\',\\n        value: 50,\\n        feeling: \'neutral\',\\n      },\\n      {\\n        year: \'2018\',\\n        value: 75,\\n        feeling: \'positive\',\\n      },\\n      {\\n        year: \'2019\',\\n        value: 100,\\n        feeling: \'thrilled\',\\n      },\\n      {\\n        year: \'2020\',\\n        value: 250,\\n        feeling: \'thrilled\',\\n      },\\n      {\\n        year: \'2021\',\\n        value: 50,\\n        feeling: \'negative\',\\n      },\\n    ];\\n  }\\n\\n  SNIPPETS = HORIZONTAL_TABLE_SNIPPETS;\\n}\\n\\nexport const Horizontal: Story<HorizontalTableComponent> = (\\n  args: HorizontalTableComponent\\n) => ({\\n  props: args,\\n  component: HorizontalTableComponent,\\n});\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","implements":["OnInit"]},{"name":"MobileLayoutComponent","id":"component-MobileLayoutComponent-2ccdf200e7b7f3afa39e0e6fdca8c7ea0f53af37d1eb3722378cbcaba073ec2e8a214f10e4485e4464b0ea63b3d083009815564424e37fbd8206a83200f4ed92","file":"projects/docs/src/app/examples/mobile-layout/mobile-layout.component.ts","encapsulation":["ViewEncapsulation.None"],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"docs-mobile-layout","styleUrls":[],"styles":["\\n      .table th {\\n        white-space: nowrap;\\n      }\\n    "],"template":"<div class=\\"d-flex justify-content-end mb-1 align-items-center\\">\\n  {{ clicked }}\\n  <button class=\\"btn btn-link d-sm-none \\" (click)=\\"toggleLayout()\\">\\n    {{ (mobileLayout$ | async) ? \'Desktop \' : \'Mobile \' }} layout\\n  </button>\\n</div>\\n<div [class.overflow-auto]=\\"(mobileLayout$ | async) === false\\">\\n  <angular-generic-table\\n    [data]=\\"data\\"\\n    [config]=\\"config$\\"\\n  ></angular-generic-table>\\n</div>\\n<ng-template #actions let-row=\\"row\\" let-col=\\"col\\" let-index=\\"index\\">\\n  <button\\n    class=\\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\\"\\n    (click)=\\"clickAction(row, col, index)\\"\\n  >\\n    Click me!\\n  </button>\\n</ng-template>\\n<docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"actions","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any> | undefined","optional":false,"description":"","line":63,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'actions\', {static: true}"}]},{"name":"clicked","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":64},{"name":"config$","defaultValue":"this.mobileLayout$.pipe(\\n    map((mobileLayout) => ({\\n      mobileLayout,\\n      columns: {\\n        firstName: {\\n          mobileHeader: true,\\n          sortable: true,\\n        },\\n        lastName: {\\n          mobileHeader: true,\\n          sortable: true,\\n        },\\n        gender: {\\n          mobileHeader: true,\\n          transform: {\\n            pipe: GenderPipe,\\n          },\\n        },\\n        favoriteFood: {\\n          mobileHeader: true,\\n        },\\n        action: {\\n          mobileHeader: false,\\n          header: false,\\n          templateRef: this.actions,\\n        },\\n      },\\n    }))\\n  )","deprecated":false,"deprecationMessage":"","type":"Observable<TableConfig>","optional":false,"description":"","line":81},{"name":"data","defaultValue":"[\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":67},{"name":"mobileLayout$","defaultValue":"new BehaviorSubject(true)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":66},{"name":"SNIPPETS","defaultValue":"MOBILE_LAYOUT_SNIPPETS","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":111},{"name":"toggleLayout","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":113}],"methodsClass":[{"name":"clickAction","args":[{"name":"row","type":"TableRow","deprecated":false,"deprecationMessage":""},{"name":"column","type":"literal type","deprecated":false,"deprecationMessage":""},{"name":"index","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":116,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"row","type":"TableRow","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"column","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  Component,\\n  Pipe,\\n  PipeTransform,\\n  TemplateRef,\\n  ViewChild,\\n  ViewEncapsulation,\\n} from \'@angular/core\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport {\\n  TableColumn,\\n  TableConfig,\\n  TableRow,\\n} from \'@angular-generic-table/core\';\\nimport { BehaviorSubject, Observable } from \'rxjs\';\\nimport { map } from \'rxjs/operators\';\\nimport { MOBILE_LAYOUT_SNIPPETS } from \'./mobileLayout.snippets\';\\n\\n@Pipe({\\n  name: \'genderPipe\',\\n})\\nexport class GenderPipe implements PipeTransform {\\n  transform(gender: \'male\' | \'female\'): string {\\n    return gender === \'male\' ? \'👨\' : \'👩\';\\n  }\\n}\\n\\n@Component({\\n  selector: \'docs-mobile-layout\',\\n  template: `\\n    <div class=\\"d-flex justify-content-end mb-1 align-items-center\\">\\n      {{ clicked }}\\n      <button class=\\"btn btn-link d-sm-none \\" (click)=\\"toggleLayout()\\">\\n        {{ (mobileLayout$ | async) ? \'Desktop \' : \'Mobile \' }} layout\\n      </button>\\n    </div>\\n    <div [class.overflow-auto]=\\"(mobileLayout$ | async) === false\\">\\n      <angular-generic-table\\n        [data]=\\"data\\"\\n        [config]=\\"config$\\"\\n      ></angular-generic-table>\\n    </div>\\n    <ng-template #actions let-row=\\"row\\" let-col=\\"col\\" let-index=\\"index\\">\\n      <button\\n        class=\\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\\"\\n        (click)=\\"clickAction(row, col, index)\\"\\n      >\\n        Click me!\\n      </button>\\n    </ng-template>\\n    <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n  `,\\n  styles: [\\n    `\\n      .table th {\\n        white-space: nowrap;\\n      }\\n    `,\\n  ],\\n  encapsulation: ViewEncapsulation.None,\\n})\\nexport class MobileLayoutComponent {\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  clicked = \'\';\\n\\n  mobileLayout$ = new BehaviorSubject(true);\\n  data = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ];\\n  config$: Observable<TableConfig> = this.mobileLayout$.pipe(\\n    map((mobileLayout) => ({\\n      mobileLayout,\\n      columns: {\\n        firstName: {\\n          mobileHeader: true,\\n          sortable: true,\\n        },\\n        lastName: {\\n          mobileHeader: true,\\n          sortable: true,\\n        },\\n        gender: {\\n          mobileHeader: true,\\n          transform: {\\n            pipe: GenderPipe,\\n          },\\n        },\\n        favoriteFood: {\\n          mobileHeader: true,\\n        },\\n        action: {\\n          mobileHeader: false,\\n          header: false,\\n          templateRef: this.actions,\\n        },\\n      },\\n    }))\\n  );\\n\\n  SNIPPETS = MOBILE_LAYOUT_SNIPPETS;\\n\\n  toggleLayout = (): void => {\\n    this.mobileLayout$.next(!this.mobileLayout$.getValue());\\n  };\\n  clickAction(\\n    row: TableRow,\\n    column: { key: string; value: TableColumn },\\n    index: number\\n  ): void {\\n    console.log(\'clicked row:\', row, \'col:\', column);\\n    this.clicked = `Clicked row number: ${index}`;\\n  }\\n}\\n\\nexport const Mobile: Story<MobileLayoutComponent> = (\\n  args: MobileLayoutComponent\\n) => ({\\n  props: args,\\n  component: MobileLayoutComponent,\\n});\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"\\n      .table th {\\n        white-space: nowrap;\\n      }\\n    \\n"},{"name":"NestedDataComponent","id":"component-NestedDataComponent-04a1d485521dad8971455ab5319b9f61d0a1d60bd1e65141e5361e4e4c86e61215cc9827e2cc5f02aafd2b325c567aafdc84afe04ea907618fd71567987b3421","file":"projects/docs/src/app/examples/nested-data/nested-data.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"nested-data","styleUrls":[],"styles":[],"template":"<div class=\\"row gy-3\\">\\n  <div class=\\"col col-sm-auto\\">\\n    <button class=\\"btn btn-outline-primary mb-3\\" (click)=\\"loadData()\\">\\n      Load other data\\n    </button>\\n  </div>\\n  <div class=\\"col col-sm-auto\\">\\n    <button class=\\"btn btn-outline-primary mb-3\\" (click)=\\"resetData()\\">\\n      Reset\\n    </button>\\n  </div>\\n</div>\\n<div class=\\"overflow-auto\\">\\n  <angular-generic-table\\n    [data]=\\"data\\"\\n    [config]=\\"config\\"\\n  ></angular-generic-table>\\n</div>\\n<docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n<ng-template #gender let-row=\\"row\\" let-col=\\"col\\">\\n  <div [ngSwitch]=\\"row[col.key]\\">\\n    <ng-container *ngSwitchCase=\\"\'male\'\\">♂️</ng-container>\\n    <ng-container *ngSwitchCase=\\"\'female\'\\">♀️</ng-container>\\n  </div>\\n</ng-template>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"config","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"TableConfig<Data>","optional":false,"description":"","line":59},{"name":"data","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<NestedData>","optional":false,"description":"","line":60},{"name":"gender","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any> | undefined","optional":false,"description":"","line":57,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'gender\', {static: true}"}]},{"name":"SNIPPETS","defaultValue":"NESTED_SNIPPETS","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":153}],"methodsClass":[{"name":"loadData","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":""},{"name":"resetData","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":88,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { NESTED_SNIPPETS } from \'./nested.snippets\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { TableConfig } from \'@angular-generic-table/core\';\\ninterface NestedData {\\n  name: {\\n    first: string;\\n    last: string;\\n  };\\n  data: {\\n    details?: {\\n      gender: \'male\' | \'female\';\\n      favoriteFood: \'Pasta\' | \'Pizza\';\\n    };\\n  };\\n}\\n\\ninterface Data {\\n  firstName: string;\\n  lastName: string;\\n  gender: \'male\' | \'female\';\\n  favoriteFood: \'Pasta\' | \'Pizza\';\\n  missing: string;\\n}\\n@Component({\\n  selector: \'nested-data\',\\n  template: `\\n    <div class=\\"row gy-3\\">\\n      <div class=\\"col col-sm-auto\\">\\n        <button class=\\"btn btn-outline-primary mb-3\\" (click)=\\"loadData()\\">\\n          Load other data\\n        </button>\\n      </div>\\n      <div class=\\"col col-sm-auto\\">\\n        <button class=\\"btn btn-outline-primary mb-3\\" (click)=\\"resetData()\\">\\n          Reset\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\"overflow-auto\\">\\n      <angular-generic-table\\n        [data]=\\"data\\"\\n        [config]=\\"config\\"\\n      ></angular-generic-table>\\n    </div>\\n    <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n    <ng-template #gender let-row=\\"row\\" let-col=\\"col\\">\\n      <div [ngSwitch]=\\"row[col.key]\\">\\n        <ng-container *ngSwitchCase=\\"\'male\'\\">♂️</ng-container>\\n        <ng-container *ngSwitchCase=\\"\'female\'\\">♀️</ng-container>\\n      </div>\\n    </ng-template>\\n  `,\\n  styles: [],\\n})\\nexport class NestedDataComponent implements OnInit {\\n  @ViewChild(\'gender\', { static: true }) gender: TemplateRef<any> | undefined;\\n\\n  config: TableConfig<Data> = {};\\n  data: Array<NestedData> = [];\\n  ngOnInit(): void {\\n    this.resetData();\\n    this.config = {\\n      columns: {\\n        firstName: {\\n          sortable: true,\\n          mapTo: { path: \'name.first\' },\\n        },\\n        lastName: {\\n          sortable: true,\\n          mapTo: { path: \'name.last\' },\\n        },\\n        gender: {\\n          mapTo: { path: \'data.details.gender\' },\\n          templateRef: this.gender,\\n        },\\n        favoriteFood: {\\n          sortable: true,\\n          mapTo: { path: \'data.details.favoriteFood\', missingValue: \'n/a\' },\\n        },\\n        missing: {\\n          mapTo: { path: \'data.missingKey.noMatch\', missingValue: \'n/a\' },\\n        },\\n      },\\n    };\\n  }\\n\\n  resetData() {\\n    this.data = [\\n      {\\n        name: {\\n          first: \'Peter\',\\n          last: \'Parker\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'male\',\\n            favoriteFood: \'Pasta\',\\n          },\\n        },\\n      },\\n      {\\n        name: {\\n          first: \'Mary Jane\',\\n          last: \'Watson\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'female\',\\n            favoriteFood: \'Pizza\',\\n          },\\n        },\\n      },\\n    ];\\n  }\\n\\n  loadData(): void {\\n    this.data = [\\n      {\\n        name: {\\n          first: \'John\',\\n          last: \'Doe\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'male\',\\n            favoriteFood: \'Pasta\',\\n          },\\n        },\\n      },\\n      {\\n        name: {\\n          first: \'Jane\',\\n          last: \'Doe\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'female\',\\n            favoriteFood: \'Pizza\',\\n          },\\n        },\\n      },\\n      {\\n        name: {\\n          first: \'Foo\',\\n          last: \'Bar\',\\n        },\\n        data: {},\\n      },\\n    ];\\n  }\\n\\n  SNIPPETS = NESTED_SNIPPETS;\\n}\\n\\nexport const Nested: Story<NestedDataComponent> = (\\n  args: NestedDataComponent\\n) => ({\\n  props: args,\\n  component: NestedDataComponent,\\n});\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","implements":["OnInit"]},{"name":"PaginationComponent","id":"component-PaginationComponent-ddd8b790bc9cbe58cd8e1526a2a77bdaac97a9a997d4c817f2a2187e1c2ad8bd1f7676584620d7a6b02c63f333082e5e9b05b547d39a6f40c34816e2c918fb96","file":"projects/core/src/lib/pagination/pagination.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"angular-generic-table-pagination","styleUrls":[],"styles":[],"templateUrl":["./pagination.component.html"],"viewProviders":[],"inputsClass":[{"name":"ariaLabels","deprecated":false,"deprecationMessage":"","line":37,"type":"GtPaginationAriaLabels","decorators":[]},{"name":"classes","deprecated":false,"deprecationMessage":"","line":30,"type":"GtPaginationClasses","decorators":[]},{"name":"paginationLength","deprecated":false,"deprecationMessage":"","line":23,"type":"number","decorators":[]},{"name":"table","deprecated":false,"deprecationMessage":"","line":43,"type":"CoreComponent","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"_ariaLabels","defaultValue":"{\\n    nav: \'Table pagination\',\\n    button: \'Go to page \',\\n  }","deprecated":false,"deprecationMessage":"","type":"GtPaginationAriaLabels","optional":false,"description":"","line":50,"modifierKind":[121]},{"name":"_classes","defaultValue":"{\\n    ul: \'pagination\',\\n    li: \'page-item\',\\n    button: \'page-link\',\\n  }","deprecated":false,"deprecationMessage":"","type":"GtPaginationClasses","optional":false,"description":"","line":54,"modifierKind":[121]},{"name":"_paginationLength","defaultValue":"5","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":59,"modifierKind":[121]},{"name":"_table","deprecated":false,"deprecationMessage":"","type":"CoreComponent | undefined","optional":false,"description":"","line":49,"modifierKind":[121]},{"name":"pagination$","defaultValue":"this.table$.pipe(\\n    switchMap((core) =>\\n      combineLatest([core?.table$.pipe(pluck(\'info\')), core?.currentPage$])\\n    ),\\n    map(([info, currentPage]) => this.generateList(info.pageTotal, currentPage))\\n  )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":60},{"name":"table$","defaultValue":"new ReplaySubject(1)","deprecated":false,"deprecationMessage":"","type":"ReplaySubject<CoreComponent>","optional":false,"description":"","line":48}],"methodsClass":[{"name":"generateList","args":[{"name":"pages","type":"number","deprecated":false,"deprecationMessage":""},{"name":"currentPosition","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Array<number>","typeParameters":[],"line":67,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"pages","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"currentPosition","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"goto","args":[{"name":"page","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":99,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"page","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\nimport { combineLatest, ReplaySubject } from \'rxjs\';\\nimport { map, pluck, switchMap } from \'rxjs/operators\';\\nimport { CoreComponent } from \'../core.component\';\\nimport {\\n  GtPaginationAriaLabels,\\n  GtPaginationClasses,\\n} from \'../models/gt-pagination\';\\nimport { AsyncPipe, NgForOf, NgIf } from \'@angular/common\';\\n\\n@Component({\\n  selector: \'angular-generic-table-pagination\',\\n  templateUrl: \'./pagination.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  standalone: true,\\n  imports: [AsyncPipe, NgIf, NgForOf],\\n})\\nexport class PaginationComponent {\\n  get paginationLength(): number {\\n    return this._paginationLength;\\n  }\\n\\n  @Input() set paginationLength(value: number) {\\n    this._paginationLength = +value;\\n  }\\n  get classes(): GtPaginationClasses {\\n    return this._classes;\\n  }\\n\\n  @Input() set classes(value: GtPaginationClasses) {\\n    this._classes = value;\\n  }\\n  get ariaLabels(): GtPaginationAriaLabels {\\n    return this._ariaLabels;\\n  }\\n\\n  @Input() set ariaLabels(value: GtPaginationAriaLabels) {\\n    this._ariaLabels = value;\\n  }\\n  get table(): CoreComponent {\\n    return <CoreComponent>this._table;\\n  }\\n  @Input() set table(value: CoreComponent) {\\n    this._table = value;\\n    this.table$.next(value);\\n  }\\n\\n  table$: ReplaySubject<CoreComponent> = new ReplaySubject(1);\\n  private _table: CoreComponent | undefined;\\n  private _ariaLabels: GtPaginationAriaLabels = {\\n    nav: \'Table pagination\',\\n    button: \'Go to page \',\\n  };\\n  private _classes: GtPaginationClasses = {\\n    ul: \'pagination\',\\n    li: \'page-item\',\\n    button: \'page-link\',\\n  };\\n  private _paginationLength: number = 5;\\n  pagination$ = this.table$.pipe(\\n    switchMap((core) =>\\n      combineLatest([core?.table$.pipe(pluck(\'info\')), core?.currentPage$])\\n    ),\\n    map(([info, currentPage]) => this.generateList(info.pageTotal, currentPage))\\n  );\\n\\n  generateList(pages: number, currentPosition: number): Array<number> {\\n    const middle = Math.floor(this.paginationLength / 2);\\n    const length =\\n      pages < this.paginationLength ? pages : this.paginationLength;\\n\\n    return Array.from({ length }, (_, i) => {\\n      if (i === 0) {\\n        return 1;\\n      } else if (pages < this.paginationLength) {\\n        return i + 1;\\n      } else if (i + 1 === length) {\\n        return pages;\\n      } else if (currentPosition > middle && currentPosition < pages - middle) {\\n        return i + currentPosition - (middle - 1);\\n      } else if (\\n        currentPosition > middle &&\\n        currentPosition < pages - (middle - 1)\\n      ) {\\n        return i + currentPosition - middle;\\n      } else if (\\n        currentPosition > middle &&\\n        currentPosition === pages - (middle - 1)\\n      ) {\\n        return i + currentPosition - (middle + 1);\\n      } else if (currentPosition > middle && currentPosition === pages - 1) {\\n        return i + currentPosition - (middle + 2);\\n      } else {\\n        return i + 1;\\n      }\\n    });\\n  }\\n\\n  goto(page: number): void {\\n    if (this.table) {\\n      this.table.page = page - 1;\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","accessors":{"paginationLength":{"name":"paginationLength","setSignature":{"name":"paginationLength","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":23,"jsdoctags":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"paginationLength","type":"number","returnType":"number","line":19}},"classes":{"name":"classes","setSignature":{"name":"classes","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"GtPaginationClasses","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":30,"jsdoctags":[{"name":"value","type":"GtPaginationClasses","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"classes","type":"","returnType":"GtPaginationClasses","line":26}},"ariaLabels":{"name":"ariaLabels","setSignature":{"name":"ariaLabels","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"GtPaginationAriaLabels","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":37,"jsdoctags":[{"name":"value","type":"GtPaginationAriaLabels","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"ariaLabels","type":"","returnType":"GtPaginationAriaLabels","line":33}},"table":{"name":"table","setSignature":{"name":"table","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"CoreComponent","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":43,"jsdoctags":[{"name":"value","type":"CoreComponent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"table","type":"","returnType":"CoreComponent","line":40}}},"templateData":"<ng-container\\n  *ngIf=\\"{\\n    links: pagination$ | async,\\n    currentPosition: table?.currentPage$ | async\\n  } as pagination\\"\\n>\\n  <nav\\n    *ngIf=\\"pagination.links && pagination.links.length > 1\\"\\n    role=\\"navigation\\"\\n    [attr.aria-label]=\\"ariaLabels.nav\\"\\n    class=\\"gt-pagination\\"\\n    [class]=\\"classes.nav\\"\\n  >\\n    <ul [class]=\\"classes.ul\\">\\n      <ng-container\\n        *ngFor=\\"\\n          let position of pagination!.links;\\n          let i = index;\\n          let last = last\\n        \\"\\n      >\\n        <li\\n          [class]=\\"classes.li\\"\\n          [class.active]=\\"position === (pagination!.currentPosition || 0) + 1\\"\\n        >\\n          <button\\n            [class]=\\"classes.button\\"\\n            [attr.aria-label]=\\"ariaLabels.button + position\\"\\n            (click)=\\"goto(position)\\"\\n          >\\n            {{ position }}\\n          </button>\\n        </li>\\n        <li\\n          [class]=\\"classes.li\\"\\n          class=\\"gt-ellipsis\\"\\n          *ngIf=\\"position + 1 !== pagination!.links![i + 1] && !last\\"\\n        >\\n          <button [class]=\\"classes.button\\" disabled tabindex=\\"-1\\"></button>\\n        </li>\\n      </ng-container>\\n    </ul>\\n  </nav>\\n</ng-container>\\n"},{"name":"PaginationComponent","id":"component-PaginationComponent-4e6e8e4d5250575d577b279ad5d214c85c8eaf92b8a54835f9917a7b8965dd6cb098c13a624394f0d651c0a53d664c04fa3c1a526c4b017fcd736d432b2f4c2c-1","file":"projects/docs/src/app/examples/pagination/pagination.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"docs-pagination","styleUrls":[],"styles":[],"templateUrl":["./pagination.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"actions","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any> | undefined","optional":false,"description":"","line":18,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'actions\', {static: true}"}]},{"name":"color","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any> | undefined","optional":false,"description":"","line":19,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'color\', {static: true}"}]},{"name":"data$","defaultValue":"this.http\\n    .get(\'https://private-730c61-generictable.apiary-mock.com/data\')\\n    .pipe(\\n      pluck(\'data\'),\\n      tap((_) => this.loading$.next(false))\\n    )","deprecated":false,"deprecationMessage":"","type":"Observable<any>","optional":false,"description":"","line":27},{"name":"loading$","defaultValue":"new BehaviorSubject(true)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":26},{"name":"paginationForm","defaultValue":"this.fb.group({\\n    length: [10],\\n    search: [\'\'],\\n  })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":20},{"name":"search$","defaultValue":"this.paginationForm.get(\'search\')\\n    ?.valueChanges as Observable<string>","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":24},{"name":"SNIPPETS","defaultValue":"ADVANCED_DOCS","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":35},{"name":"tableConfig$","defaultValue":"new ReplaySubject(1)","deprecated":false,"deprecationMessage":"","type":"ReplaySubject<TableConfig>","optional":false,"description":"","line":34}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { BehaviorSubject, Observable, ReplaySubject } from \'rxjs\';\\nimport { UntypedFormBuilder } from \'@angular/forms\';\\nimport { TableConfig } from \'@angular-generic-table/core\';\\nimport { pluck, tap, withLatestFrom } from \'rxjs/operators\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { ADVANCED_DOCS } from \'./pagination.snippets\';\\nimport { HttpClient } from \'@angular/common/http\';\\nimport { DatePipe, formatDate } from \'@angular/common\';\\n\\n@Component({\\n  selector: \'docs-pagination\',\\n  templateUrl: \'./pagination.component.html\',\\n  styles: [],\\n})\\nexport class PaginationComponent implements OnInit {\\n  constructor(private fb: UntypedFormBuilder, private http: HttpClient) {}\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  @ViewChild(\'color\', { static: true }) color: TemplateRef<any> | undefined;\\n  paginationForm = this.fb.group({\\n    length: [10],\\n    search: [\'\'],\\n  });\\n  search$ = this.paginationForm.get(\'search\')\\n    ?.valueChanges as Observable<string>;\\n  loading$ = new BehaviorSubject(true);\\n  data$: Observable<any> = this.http\\n    .get(\'https://private-730c61-generictable.apiary-mock.com/data\')\\n    .pipe(\\n      pluck(\'data\'),\\n      tap((_) => this.loading$.next(false))\\n    );\\n\\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\\n  SNIPPETS = ADVANCED_DOCS;\\n\\n  ngOnInit(): void {\\n    this.paginationForm\\n      .get(\'length\')\\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\\n      .subscribe(([length, config]) => {\\n        length = +length;\\n        this.tableConfig$.next({\\n          ...config,\\n          pagination: { ...config.pagination, length },\\n        });\\n      });\\n    this.tableConfig$.next({\\n      class: \'table text-nowrap\',\\n      columns: {\\n        first_name: {\\n          sortable: true,\\n        },\\n        last_name: {\\n          sortable: true,\\n        },\\n        gender: {\\n          sortable: true,\\n        },\\n        birthday: {\\n          sortable: true,\\n          class: \'text-end justify-content-end\',\\n          search: (row, column) => formatDate(row[column], \'longDate\', \'en\'),\\n          transform: {\\n            pipe: DatePipe,\\n            args: [\'longDate\'],\\n          },\\n        },\\n      },\\n      pagination: {\\n        length: this.paginationForm.get(\'length\')?.value || 0,\\n      },\\n    });\\n  }\\n}\\n\\nexport const Pagination: Story<PaginationComponent> = (\\n  args: PaginationComponent\\n) => ({\\n  props: args,\\n  component: PaginationComponent,\\n});\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"fb","type":"UntypedFormBuilder","deprecated":false,"deprecationMessage":""},{"name":"http","type":"HttpClient","deprecated":false,"deprecationMessage":""}],"line":16,"jsdoctags":[{"name":"fb","type":"UntypedFormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"http","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"isDuplicate":true,"duplicateId":1,"duplicateName":"PaginationComponent-1","templateData":"<form [formGroup]=\\"paginationForm\\">\\n  <div class=\\"row gy-3\\">\\n    <div class=\\"form-group col-12 col-sm-auto\\">\\n      <label for=\\"length_input\\">Number of rows</label>\\n      <input\\n        id=\\"length_input\\"\\n        formControlName=\\"length\\"\\n        type=\\"number\\"\\n        class=\\"form-control\\"\\n      />\\n    </div>\\n    <div class=\\"form-group col-12 col-sm-auto\\">\\n      <label for=\\"search_input\\">Search</label>\\n      <input\\n        id=\\"search_input\\"\\n        formControlName=\\"search\\"\\n        type=\\"text\\"\\n        class=\\"form-control\\"\\n      />\\n    </div>\\n  </div>\\n</form>\\n<div class=\\"mx-n3 mx-sm-0 my-3 overflow-auto\\">\\n  <angular-generic-table\\n    [data]=\\"data$\\"\\n    [config]=\\"tableConfig$\\"\\n    [search]=\\"search$\\"\\n    [loading]=\\"loading$\\"\\n    #table\\n  >\\n    <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n    <div class=\\"table-no-data alert alert-info mt-3\\">Table is empty</div>\\n  </angular-generic-table>\\n</div>\\n<angular-generic-table-pagination [table]=\\"table\\">\\n</angular-generic-table-pagination>\\n<docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n"},{"name":"RowHoverClickComponent","id":"component-RowHoverClickComponent-beb9b8dec41975ff90d50f380c6e17362cfd5b4552fec0fdee29c3ecc06b680d6faa8ff75047aa7b54a2c504620ff01361bc68adfc590672a41ae31490e7f48d","file":"projects/docs/src/app/examples/row-hover-click/row-hover-click.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"docs-row-hover-click","styleUrls":[],"styles":["\\n      :host ::ng-deep .gt-hover {\\n        background-color: var(--bs-highlight-bg);\\n      }\\n    "],"template":"<div class=\\"overflow-auto\\">\\n  <button class=\\"btn btn-secondary me-3\\" (click)=\\"tableRef.hoverRow(1)\\">\\n    Set hover state to second row\\n  </button>\\n  <button class=\\"btn btn-secondary\\" (click)=\\"tableRef.hoverRow(null)\\">\\n    Remove hover state\\n  </button>\\n  <angular-generic-table\\n    [data]=\\"data\\"\\n    [config]=\\"config\\"\\n    (rowClick)=\\"onRowClick($event)\\"\\n    (rowHover)=\\"onRowHover($event)\\"\\n    #tableRef\\n  ></angular-generic-table>\\n</div>\\n{{ clicked }}\\n<docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"clicked","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":36},{"name":"config","defaultValue":"{\\n    columns: {\\n      firstName: {},\\n      lastName: {},\\n      gender: {},\\n      favoriteFood: {},\\n    },\\n    rowClick: true,\\n    rowHover: true,\\n  }","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":51},{"name":"data","defaultValue":"[\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":37},{"name":"SNIPPETS","defaultValue":"ROW_HOVER_CLICK_SNIPPETS","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":70}],"methodsClass":[{"name":"onRowClick","args":[{"name":"event","type":"GtRowClickEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":62,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"GtRowClickEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onRowHover","args":[{"name":"event","type":"GtRowHoverEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":66,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"GtRowHoverEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { ROW_HOVER_CLICK_SNIPPETS } from \'./row-hower-click.snippets\';\\nimport { GtRowClickEvent, GtRowHoverEvent } from \'@angular-generic-table/core\';\\n\\n@Component({\\n  selector: \'docs-row-hover-click\',\\n  template: `\\n    <div class=\\"overflow-auto\\">\\n      <button class=\\"btn btn-secondary me-3\\" (click)=\\"tableRef.hoverRow(1)\\">\\n        Set hover state to second row\\n      </button>\\n      <button class=\\"btn btn-secondary\\" (click)=\\"tableRef.hoverRow(null)\\">\\n        Remove hover state\\n      </button>\\n      <angular-generic-table\\n        [data]=\\"data\\"\\n        [config]=\\"config\\"\\n        (rowClick)=\\"onRowClick($event)\\"\\n        (rowHover)=\\"onRowHover($event)\\"\\n        #tableRef\\n      ></angular-generic-table>\\n    </div>\\n    {{ clicked }}\\n    <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n  `,\\n  styles: [\\n    `\\n      :host ::ng-deep .gt-hover {\\n        background-color: var(--bs-highlight-bg);\\n      }\\n    `,\\n  ],\\n})\\nexport class RowHoverClickComponent {\\n  clicked = \'\';\\n  data = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ];\\n  config = {\\n    columns: {\\n      firstName: {},\\n      lastName: {},\\n      gender: {},\\n      favoriteFood: {},\\n    },\\n    rowClick: true,\\n    rowHover: true,\\n  };\\n\\n  onRowClick(event: GtRowClickEvent) {\\n    console.log(\'row clicked\', event);\\n    this.clicked = `clicked row number: ${event.index}`;\\n  }\\n  onRowHover(event: GtRowHoverEvent) {\\n    console.log(\'row hovered\', event);\\n  }\\n\\n  SNIPPETS = ROW_HOVER_CLICK_SNIPPETS;\\n}\\n\\nexport const RowHoverClick: Story<RowHoverClickComponent> = (\\n  args: RowHoverClickComponent\\n) => ({\\n  props: args,\\n  component: RowHoverClickComponent,\\n});\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"\\n      :host ::ng-deep .gt-hover {\\n        background-color: var(--bs-highlight-bg);\\n      }\\n    \\n"},{"name":"SimpleComponent","id":"component-SimpleComponent-694868655a17d764ba2ea4b3cec45a1da4821c89b5e10705be2cdafe489383b24c58c393e0f3abb055c4a617c285a2b05722a166766c3f680803a92b574cf339","file":"projects/docs/src/app/examples/simple/simple.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"styleUrls":[],"styles":[],"template":"<div class=\\"overflow-auto\\">\\n  <angular-generic-table\\n    [data]=\\"data\\"\\n    [config]=\\"config\\"\\n  ></angular-generic-table>\\n</div>\\n<docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"config","defaultValue":"{\\n    class: \'table table-striped table-bordered\',\\n    columns: {\\n      firstName: {},\\n      lastName: {},\\n      gender: {},\\n      favoriteFood: {},\\n    },\\n  }","deprecated":false,"deprecationMessage":"","type":"TableConfig<BasicData>","optional":false,"description":"","line":38},{"name":"data","defaultValue":"[\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ]","deprecated":false,"deprecationMessage":"","type":"Array<BasicData>","optional":false,"description":"","line":24},{"name":"SNIPPETS","defaultValue":"SIMPLE_SNIPPETS","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":48}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { SIMPLE_SNIPPETS } from \'./simple.snippets\';\\nimport { TableConfig } from \'@angular-generic-table/core\';\\ninterface BasicData {\\n  firstName: string;\\n  lastName: string;\\n  gender: \'male\' | \'female\';\\n  favoriteFood: string;\\n}\\n@Component({\\n  template: `\\n    <div class=\\"overflow-auto\\">\\n      <angular-generic-table\\n        [data]=\\"data\\"\\n        [config]=\\"config\\"\\n      ></angular-generic-table>\\n    </div>\\n    <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n  `,\\n  styles: [],\\n})\\nexport class SimpleComponent {\\n  data: Array<BasicData> = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ];\\n  config: TableConfig<BasicData> = {\\n    class: \'table table-striped table-bordered\',\\n    columns: {\\n      firstName: {},\\n      lastName: {},\\n      gender: {},\\n      favoriteFood: {},\\n    },\\n  };\\n\\n  SNIPPETS = SIMPLE_SNIPPETS;\\n}\\n\\nexport const Simple: Story<SimpleComponent> = (args: SimpleComponent) => ({\\n  props: args,\\n  component: SimpleComponent,\\n});\\n","assetsDirs":[],"styleUrlsData":"","stylesData":""},{"name":"SortingComponent","id":"component-SortingComponent-4ef62adeec6897b8e534c6091a292d9ae7fd533c6079340b6b9edf96420c885a8d8a92be14944773a784a876cca1d3299a6e8762760799e0958f49349cb5bd9a","file":"projects/docs/src/app/examples/sorting/sorting.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"styleUrls":[],"styles":[],"template":"<div class=\\"overflow-auto\\">\\n  <angular-generic-table\\n    #table\\n    [data]=\\"data\\"\\n    [config]=\\"config\\"\\n    [(sortOrder)]=\\"sortOrder\\"\\n    (columnSort)=\\"logSortChange($event)\\"\\n  ></angular-generic-table>\\n</div>\\n<div class=\\"row mb-3 gy-3\\">\\n  <div class=\\"col-12 col-sm-auto\\">\\n    <button\\n      class=\\"btn btn-primary w-100\\"\\n      (click)=\\"table.sortByKey(\'firstName\', $event)\\"\\n    >\\n      Sort on first name\\n    </button>\\n  </div>\\n  <div class=\\"col-12 col-sm-auto\\">\\n    <button class=\\"btn btn-primary w-100\\" (click)=\\"resetSort()\\">\\n      Reset sorting\\n    </button>\\n  </div>\\n</div>\\n<strong>Current sort order</strong>\\n<p>\\n  <code>\\n    {{ sortOrder | json }}\\n  </code>\\n</p>\\n<docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"config","defaultValue":"{\\n    columns: {\\n      firstName: {\\n        sortable: true,\\n      },\\n      lastName: {\\n        sortable: true,\\n      },\\n      gender: {\\n        sortable: true,\\n      },\\n      favoriteFood: {\\n        sortable: true,\\n      },\\n      birthdate: {\\n        sortable: true,\\n        transform: {\\n          pipe: DatePipe,\\n        },\\n      },\\n    },\\n  }","deprecated":false,"deprecationMessage":"","type":"TableConfig<SortingData>","optional":false,"description":"","line":140},{"name":"data","defaultValue":"[\\n    {\\n      firstName: \'John\',\\n      lastName: \'Doe\',\\n      gender: \'male\',\\n      favoriteFood: \'pizza\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Jane\',\\n      lastName: \'Smith\',\\n      gender: \'female\',\\n      favoriteFood: \'sushi\',\\n      birthdate: 803404800000,\\n    },\\n    {\\n      firstName: \'Bob\',\\n      lastName: \'Johnson\',\\n      gender: \'male\',\\n      favoriteFood: \'burgers\',\\n      birthdate: 649345600000,\\n    },\\n    {\\n      firstName: \'Emily\',\\n      lastName: \'Williams\',\\n      gender: \'female\',\\n      favoriteFood: \'chicken\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Michael\',\\n      lastName: \'Jones\',\\n      gender: \'male\',\\n      favoriteFood: \'steak\',\\n      birthdate: 803404800000,\\n    },\\n    {\\n      firstName: \'Matthew\',\\n      lastName: \'Brown\',\\n      gender: \'male\',\\n      favoriteFood: \'seafood\',\\n      birthdate: 649345600000,\\n    },\\n    {\\n      firstName: \'Jessica\',\\n      lastName: \'Miller\',\\n      gender: \'female\',\\n      favoriteFood: \'salad\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Jacob\',\\n      lastName: \'Moore\',\\n      gender: \'male\',\\n      favoriteFood: \'pasta\',\\n      birthdate: 803404800000,\\n    },\\n    {\\n      firstName: \'Nicholas\',\\n      lastName: \'Taylor\',\\n      gender: \'male\',\\n      favoriteFood: \'soup\',\\n      birthdate: 649345600000,\\n    },\\n    {\\n      firstName: \'Ashley\',\\n      lastName: \'Anderson\',\\n      gender: \'female\',\\n      favoriteFood: \'tacos\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Brandon\',\\n      lastName: \'Thomas\',\\n      gender: \'male\',\\n      favoriteFood: \'nachos\',\\n      birthdate: 803404800000,\\n    },\\n  ]","deprecated":false,"deprecationMessage":"","type":"Array<SortingData>","optional":false,"description":"","line":61},{"name":"initialSortOrder","defaultValue":"[\\n    { key: \'birthdate\', order: \'asc\' },\\n    { key: \'gender\', order: \'asc\' },\\n    { key: \'firstName\', order: \'desc\' },\\n  ]","deprecated":false,"deprecationMessage":"","type":"GtSortOrder<SortingData>","optional":false,"description":"","line":55},{"name":"SNIPPETS","defaultValue":"SIMPLE_SNIPPETS","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":171},{"name":"sortOrder","defaultValue":"this.initialSortOrder","deprecated":false,"deprecationMessage":"","type":"GtSortOrder<SortingData>","optional":false,"description":"","line":60}],"methodsClass":[{"name":"logSortChange","args":[{"name":"sortEvent","type":"GtSortEvent<SortingData>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"sortEvent","type":"GtSortEvent<SortingData>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"resetSort","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":167,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { SIMPLE_SNIPPETS } from \'./sorting.snippets\';\\nimport {\\n  GtSortEvent,\\n  GtSortOrder,\\n  TableConfig,\\n} from \'@angular-generic-table/core\';\\nimport { DatePipe } from \'@angular/common\';\\n\\ninterface SortingData {\\n  firstName: string;\\n  lastName: string;\\n  gender: \'male\' | \'female\';\\n  favoriteFood: string;\\n  birthdate: number;\\n}\\n@Component({\\n  template: `\\n    <div class=\\"overflow-auto\\">\\n      <angular-generic-table\\n        #table\\n        [data]=\\"data\\"\\n        [config]=\\"config\\"\\n        [(sortOrder)]=\\"sortOrder\\"\\n        (columnSort)=\\"logSortChange($event)\\"\\n      ></angular-generic-table>\\n    </div>\\n    <div class=\\"row mb-3 gy-3\\">\\n      <div class=\\"col-12 col-sm-auto\\">\\n        <button\\n          class=\\"btn btn-primary w-100\\"\\n          (click)=\\"table.sortByKey(\'firstName\', $event)\\"\\n        >\\n          Sort on first name\\n        </button>\\n      </div>\\n      <div class=\\"col-12 col-sm-auto\\">\\n        <button class=\\"btn btn-primary w-100\\" (click)=\\"resetSort()\\">\\n          Reset sorting\\n        </button>\\n      </div>\\n    </div>\\n    <strong>Current sort order</strong>\\n    <p>\\n      <code>\\n        {{ sortOrder | json }}\\n      </code>\\n    </p>\\n    <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n  `,\\n  styles: [],\\n})\\nexport class SortingComponent {\\n  initialSortOrder: GtSortOrder<SortingData> = [\\n    { key: \'birthdate\', order: \'asc\' },\\n    { key: \'gender\', order: \'asc\' },\\n    { key: \'firstName\', order: \'desc\' },\\n  ];\\n  sortOrder: GtSortOrder<SortingData> = this.initialSortOrder;\\n  data: Array<SortingData> = [\\n    {\\n      firstName: \'John\',\\n      lastName: \'Doe\',\\n      gender: \'male\',\\n      favoriteFood: \'pizza\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Jane\',\\n      lastName: \'Smith\',\\n      gender: \'female\',\\n      favoriteFood: \'sushi\',\\n      birthdate: 803404800000,\\n    },\\n    {\\n      firstName: \'Bob\',\\n      lastName: \'Johnson\',\\n      gender: \'male\',\\n      favoriteFood: \'burgers\',\\n      birthdate: 649345600000,\\n    },\\n    {\\n      firstName: \'Emily\',\\n      lastName: \'Williams\',\\n      gender: \'female\',\\n      favoriteFood: \'chicken\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Michael\',\\n      lastName: \'Jones\',\\n      gender: \'male\',\\n      favoriteFood: \'steak\',\\n      birthdate: 803404800000,\\n    },\\n    {\\n      firstName: \'Matthew\',\\n      lastName: \'Brown\',\\n      gender: \'male\',\\n      favoriteFood: \'seafood\',\\n      birthdate: 649345600000,\\n    },\\n    {\\n      firstName: \'Jessica\',\\n      lastName: \'Miller\',\\n      gender: \'female\',\\n      favoriteFood: \'salad\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Jacob\',\\n      lastName: \'Moore\',\\n      gender: \'male\',\\n      favoriteFood: \'pasta\',\\n      birthdate: 803404800000,\\n    },\\n    {\\n      firstName: \'Nicholas\',\\n      lastName: \'Taylor\',\\n      gender: \'male\',\\n      favoriteFood: \'soup\',\\n      birthdate: 649345600000,\\n    },\\n    {\\n      firstName: \'Ashley\',\\n      lastName: \'Anderson\',\\n      gender: \'female\',\\n      favoriteFood: \'tacos\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Brandon\',\\n      lastName: \'Thomas\',\\n      gender: \'male\',\\n      favoriteFood: \'nachos\',\\n      birthdate: 803404800000,\\n    },\\n  ];\\n  config: TableConfig<SortingData> = {\\n    columns: {\\n      firstName: {\\n        sortable: true,\\n      },\\n      lastName: {\\n        sortable: true,\\n      },\\n      gender: {\\n        sortable: true,\\n      },\\n      favoriteFood: {\\n        sortable: true,\\n      },\\n      birthdate: {\\n        sortable: true,\\n        transform: {\\n          pipe: DatePipe,\\n        },\\n      },\\n    },\\n  };\\n\\n  logSortChange(sortEvent: GtSortEvent<SortingData>) {\\n    console.log(sortEvent);\\n  }\\n\\n  resetSort() {\\n    this.sortOrder = this.initialSortOrder;\\n  }\\n\\n  SNIPPETS = SIMPLE_SNIPPETS;\\n}\\n\\nexport const Sorting: Story<SortingComponent> = (args: SortingComponent) => ({\\n  props: args,\\n  component: SortingComponent,\\n});\\n","assetsDirs":[],"styleUrlsData":"","stylesData":""},{"name":"TabsComponent","id":"component-TabsComponent-f6bd67f3efe786dedf8f39eb7495d332aa5eaefc16371ad8b578183423f6c6d6a24d7b992db44340ec002b0793a82c88ec1012d01f427926860296f820d8ac5e","file":"projects/docs/src/app/components/tabs/tabs.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"docs-tabs","styleUrls":["./tabs.component.scss"],"styles":[],"template":"<ul class=\\"nav nav-tabs mt-4 flex-nowrap text-nowrap overflow-auto\\">\\n  <li class=\\"nav-item\\" *ngFor=\\"let item of content; let i = index\\">\\n    <button\\n      class=\\"nav-link btn-link\\"\\n      [class.active]=\\"activeIndex === i\\"\\n      (click)=\\"view(i)\\"\\n    >\\n      {{ item.name }}\\n    </button>\\n  </li>\\n</ul>\\n<ng-container *ngIf=\\"activeContent\\">\\n  <pre><code [innerHTML]=\\"activeContent.value\\" class=\\"{{\'language-\' + activeContent.language}}\\"></code></pre>\\n</ng-container>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"content","deprecated":false,"deprecationMessage":"","line":39,"type":"any","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"_content","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<literal type>","optional":false,"description":"","line":46,"modifierKind":[121]},{"name":"activeContent","deprecated":false,"deprecationMessage":"","type":"HighlightResult | undefined","optional":false,"description":"","line":44},{"name":"activeIndex","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":43}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":""},{"name":"view","args":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":53,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport hljs from \'highlight.js/lib/core\';\\nimport { HighlightResult } from \'highlight.js\';\\n\\nimport typescript from \'highlight.js/lib/languages/typescript\';\\nimport xml from \'highlight.js/lib/languages/xml\';\\nimport scss from \'highlight.js/lib/languages/scss\';\\n\\nhljs.registerLanguage(\'typescript\', typescript);\\nhljs.registerLanguage(\'scss\', scss);\\nhljs.registerLanguage(\'xml\', xml);\\n\\n@Component({\\n  selector: \'docs-tabs\',\\n  template: `\\n    <ul class=\\"nav nav-tabs mt-4 flex-nowrap text-nowrap overflow-auto\\">\\n      <li class=\\"nav-item\\" *ngFor=\\"let item of content; let i = index\\">\\n        <button\\n          class=\\"nav-link btn-link\\"\\n          [class.active]=\\"activeIndex === i\\"\\n          (click)=\\"view(i)\\"\\n        >\\n          {{ item.name }}\\n        </button>\\n      </li>\\n    </ul>\\n    <ng-container *ngIf=\\"activeContent\\">\\n      <pre><code [innerHTML]=\\"activeContent.value\\" class=\\"{{\'language-\' + activeContent.language}}\\"></code></pre>\\n    </ng-container>\\n  `,\\n  styleUrls: [\'./tabs.component.scss\'],\\n})\\nexport class TabsComponent implements OnInit {\\n  get content(): any {\\n    return this._content;\\n  }\\n\\n  @Input() set content(value: any) {\\n    this._content = value;\\n  }\\n  constructor() {}\\n  activeIndex = 0;\\n  activeContent: HighlightResult | undefined;\\n\\n  private _content: Array<{}> = [];\\n  ngOnInit(): void {\\n    this.activeContent = hljs.highlight(this.content[this.activeIndex].code, {\\n      language: this.content[this.activeIndex].language,\\n    });\\n  }\\n\\n  view(index: number): void {\\n    this.activeIndex = index;\\n    this.activeContent = hljs.highlight(this.content[index].code, {\\n      language: this.content[index].language,\\n    });\\n  }\\n}\\n\\nexport const Tabs: Story<TabsComponent> = (args: TabsComponent) => ({\\n  props: args,\\n  component: TabsComponent,\\n});\\n","assetsDirs":[],"styleUrlsData":[{"data":"pre {\\n  background-image: linear-gradient(0deg, #f8f8f8 25%, #ffffff 25%, #ffffff 50%, #f8f8f8 50%, #f8f8f8 75%, #ffffff 75%, #ffffff 100%);\\n  background-size: 84.00px 84.00px;\\n  padding: 21px 1rem;\\n}\\nul {\\n  &::-webkit-scrollbar {\\n    display: none;\\n  }\\n  -ms-overflow-style: none; /* IE and Edge */\\n  scrollbar-width: none; /* Firefox */\\n}\\n","styleUrl":"./tabs.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":41},"implements":["OnInit"],"accessors":{"content":{"name":"content","setSignature":{"name":"content","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":39,"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"content","type":"any","returnType":"any","line":35}}}},{"name":"TransposeComponent","id":"component-TransposeComponent-0a5c0cb27d235dfe9659a36988e8f66a453ff89ad5e286c1c983f66beb2ec0e2a4b9694bf4c3ff2f652e68001624f00f6630abc1e58f843290dac6f691044c0c","file":"projects/docs/src/app/examples/transpose/transpose.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"docs-transpose","styleUrls":[],"styles":[],"template":"<form [formGroup]=\\"reactiveForm\\">\\n  <div class=\\"row gy-3 gx-3 align-items-end mb-3\\">\\n    <div class=\\"form-group col-6 col-sm-auto\\">\\n      <label for=\\"length_input\\">Number of rows</label>\\n      <input\\n        id=\\"length_input\\"\\n        formControlName=\\"length\\"\\n        type=\\"number\\"\\n        class=\\"form-control\\"\\n      />\\n    </div>\\n    <div class=\\"form-group col-6 col-sm-auto\\">\\n      <label for=\\"search_input\\">Search</label>\\n      <input\\n        id=\\"search_input\\"\\n        formControlName=\\"search\\"\\n        type=\\"text\\"\\n        class=\\"form-control\\"\\n      />\\n    </div>\\n    <div class=\\"col-auto\\">\\n      <button\\n        class=\\"btn btn-outline-primary w-100\\"\\n        (click)=\\"simulateLoad()\\"\\n      >\\n        Simulate load\\n      </button>\\n    </div>\\n    <div class=\\"col col-sm-auto\\">\\n      <button class=\\"btn btn-outline-danger w-100\\" (click)=\\"empty()\\">\\n        Empty\\n      </button>\\n    </div>\\n    <div class=\\"col col-sm-auto\\">\\n      <button class=\\"btn btn-outline-primary w-100\\" (click)=\\"load()\\">\\n        Reset\\n      </button>\\n    </div>\\n    <div class=\\"col col-sm-auto\\">\\n      <button class=\\"btn btn-outline-primary w-100\\" (click)=\\"transpose()\\">\\n        Transpose\\n      </button>\\n    </div>\\n  </div>\\n  <div class=\\"overflow-auto\\">\\n    <angular-generic-table\\n      #table\\n      [data]=\\"data\\"\\n      [config]=\\"tableConfig$\\"\\n      [loading]=\\"loading$\\"\\n      [search]=\\"search$\\"\\n    >\\n      <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n      <div class=\\"table-no-data alert alert-info mt-3\\">Table is empty</div>\\n    </angular-generic-table>\\n  </div>\\n  <angular-generic-table-pagination [table]=\\"table\\">\\n  </angular-generic-table-pagination>\\n  <ng-template #delta let-index=\\"index\\" let-data=\\"data\\">\\n    <gt-delta [index]=\\"index\\" [data]=\\"data\\"></gt-delta>\\n  </ng-template>\\n  <ng-template #deltaAbsolute let-index=\\"index\\" let-data=\\"data\\">\\n    <gt-delta\\n      [index]=\\"index\\"\\n      [data]=\\"data\\"\\n      [deltaTemplate]=\\"deltaTemplate\\"\\n    ></gt-delta>\\n  </ng-template>\\n  <ng-template #deltaIndex let-index=\\"index\\" let-data=\\"data\\">\\n    <gt-delta [index]=\\"index\\" [data]=\\"data\\" [baseIndex]=\\"0\\"></gt-delta>\\n  </ng-template>\\n  <ng-template\\n    #combined\\n    let-index=\\"index\\"\\n    let-data=\\"data\\"\\n    let-row=\\"row\\"\\n    let-col=\\"col\\"\\n  >\\n    {{ row.value }}\\n    <ng-container *ngIf=\\"index > 0\\">\\n      <gt-delta [index]=\\"index\\" [data]=\\"data\\"></gt-delta>\\n    </ng-container>\\n  </ng-template>\\n  <ng-template #deltaTemplate let-delta=\\"delta\\">\\n    <span>{{ delta.absolute }}</span></ng-template\\n  >\\n  <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n</form>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"combined","deprecated":false,"deprecationMessage":"","type":"TemplateRef<GtDeltaComponent> | undefined","optional":false,"description":"","line":122,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'combined\', {static: true}"}]},{"name":"data","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<RawData>","optional":false,"description":"","line":134},{"name":"delta","deprecated":false,"deprecationMessage":"","type":"TemplateRef<GtDeltaComponent> | undefined","optional":false,"description":"","line":113,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'delta\', {static: true}"}]},{"name":"deltaAbsolute","deprecated":false,"deprecationMessage":"","type":"TemplateRef<GtDeltaComponent> | undefined","optional":false,"description":"","line":116,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'deltaAbsolute\', {static: true}"}]},{"name":"deltaIndex","deprecated":false,"deprecationMessage":"","type":"TemplateRef<GtDeltaComponent> | undefined","optional":false,"description":"","line":119,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'deltaIndex\', {static: true}"}]},{"name":"loading$","defaultValue":"new BehaviorSubject(false)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":125},{"name":"reactiveForm","defaultValue":"this.fb.group({\\n    length: [10],\\n    search: [\'\'],\\n  })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":126},{"name":"search$","defaultValue":"this.reactiveForm.get(\'search\')?.valueChanges as Observable<string>","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":130},{"name":"SNIPPETS","defaultValue":"TRANSPOSE_SNIPPETS","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":289},{"name":"tableConfig$","defaultValue":"new BehaviorSubject<\\n    TableConfig<YearData>\\n  >({})","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<TableConfig<YearData>>","optional":false,"description":"","line":131}],"methodsClass":[{"name":"empty","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":158,"deprecated":false,"deprecationMessage":""},{"name":"load","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":161,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":138,"deprecated":false,"deprecationMessage":""},{"name":"simulateLoad","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":153,"deprecated":false,"deprecationMessage":""},{"name":"transpose","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":213,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { BehaviorSubject, Observable } from \'rxjs\';\\nimport { TableConfig, GtDeltaComponent } from \'@angular-generic-table/core\';\\nimport { UntypedFormBuilder } from \'@angular/forms\';\\nimport { withLatestFrom } from \'rxjs/operators\';\\nimport { Story } from \'@storybook/angular/types-6-0\';\\nimport { TRANSPOSE_SNIPPETS } from \'./transpose.snippets\';\\ninterface RawData {\\n  year: string;\\n  value: number;\\n}\\ninterface YearData extends RawData {\\n  delta: number;\\n  deltaIndex: number;\\n  combined: number;\\n  deltaAbsolute: number;\\n}\\n@Component({\\n  selector: \'docs-transpose\',\\n  template: `\\n    <form [formGroup]=\\"reactiveForm\\">\\n      <div class=\\"row gy-3 gx-3 align-items-end mb-3\\">\\n        <div class=\\"form-group col-6 col-sm-auto\\">\\n          <label for=\\"length_input\\">Number of rows</label>\\n          <input\\n            id=\\"length_input\\"\\n            formControlName=\\"length\\"\\n            type=\\"number\\"\\n            class=\\"form-control\\"\\n          />\\n        </div>\\n        <div class=\\"form-group col-6 col-sm-auto\\">\\n          <label for=\\"search_input\\">Search</label>\\n          <input\\n            id=\\"search_input\\"\\n            formControlName=\\"search\\"\\n            type=\\"text\\"\\n            class=\\"form-control\\"\\n          />\\n        </div>\\n        <div class=\\"col-auto\\">\\n          <button\\n            class=\\"btn btn-outline-primary w-100\\"\\n            (click)=\\"simulateLoad()\\"\\n          >\\n            Simulate load\\n          </button>\\n        </div>\\n        <div class=\\"col col-sm-auto\\">\\n          <button class=\\"btn btn-outline-danger w-100\\" (click)=\\"empty()\\">\\n            Empty\\n          </button>\\n        </div>\\n        <div class=\\"col col-sm-auto\\">\\n          <button class=\\"btn btn-outline-primary w-100\\" (click)=\\"load()\\">\\n            Reset\\n          </button>\\n        </div>\\n        <div class=\\"col col-sm-auto\\">\\n          <button class=\\"btn btn-outline-primary w-100\\" (click)=\\"transpose()\\">\\n            Transpose\\n          </button>\\n        </div>\\n      </div>\\n      <div class=\\"overflow-auto\\">\\n        <angular-generic-table\\n          #table\\n          [data]=\\"data\\"\\n          [config]=\\"tableConfig$\\"\\n          [loading]=\\"loading$\\"\\n          [search]=\\"search$\\"\\n        >\\n          <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n          <div class=\\"table-no-data alert alert-info mt-3\\">Table is empty</div>\\n        </angular-generic-table>\\n      </div>\\n      <angular-generic-table-pagination [table]=\\"table\\">\\n      </angular-generic-table-pagination>\\n      <ng-template #delta let-index=\\"index\\" let-data=\\"data\\">\\n        <gt-delta [index]=\\"index\\" [data]=\\"data\\"></gt-delta>\\n      </ng-template>\\n      <ng-template #deltaAbsolute let-index=\\"index\\" let-data=\\"data\\">\\n        <gt-delta\\n          [index]=\\"index\\"\\n          [data]=\\"data\\"\\n          [deltaTemplate]=\\"deltaTemplate\\"\\n        ></gt-delta>\\n      </ng-template>\\n      <ng-template #deltaIndex let-index=\\"index\\" let-data=\\"data\\">\\n        <gt-delta [index]=\\"index\\" [data]=\\"data\\" [baseIndex]=\\"0\\"></gt-delta>\\n      </ng-template>\\n      <ng-template\\n        #combined\\n        let-index=\\"index\\"\\n        let-data=\\"data\\"\\n        let-row=\\"row\\"\\n        let-col=\\"col\\"\\n      >\\n        {{ row.value }}\\n        <ng-container *ngIf=\\"index > 0\\">\\n          <gt-delta [index]=\\"index\\" [data]=\\"data\\"></gt-delta>\\n        </ng-container>\\n      </ng-template>\\n      <ng-template #deltaTemplate let-delta=\\"delta\\">\\n        <span>{{ delta.absolute }}</span></ng-template\\n      >\\n      <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n    </form>\\n  `,\\n  styles: [],\\n})\\nexport class TransposeComponent implements OnInit {\\n  @ViewChild(\'delta\', { static: true }) delta:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  @ViewChild(\'deltaAbsolute\', { static: true }) deltaAbsolute:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  @ViewChild(\'deltaIndex\', { static: true }) deltaIndex:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  @ViewChild(\'combined\', { static: true }) combined:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  loading$ = new BehaviorSubject(false);\\n  reactiveForm = this.fb.group({\\n    length: [10],\\n    search: [\'\'],\\n  });\\n  search$ = this.reactiveForm.get(\'search\')?.valueChanges as Observable<string>;\\n  tableConfig$: BehaviorSubject<TableConfig<YearData>> = new BehaviorSubject<\\n    TableConfig<YearData>\\n  >({});\\n  data: Array<RawData> = [];\\n\\n  constructor(private fb: UntypedFormBuilder) {}\\n\\n  ngOnInit(): void {\\n    this.transpose();\\n    this.load();\\n    this.reactiveForm\\n      .get(\'length\')\\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\\n      .subscribe(([length, config]) => {\\n        length = +length;\\n        this.tableConfig$.next({\\n          ...config,\\n          pagination: { ...config.pagination, length },\\n        });\\n      });\\n  }\\n\\n  simulateLoad(): void {\\n    this.loading$.next(true);\\n    // set loading state to false after 2 seconds\\n    setTimeout(() => this.loading$.next(false), 2000);\\n  }\\n  empty(): void {\\n    this.data = [];\\n  }\\n  load(): void {\\n    this.data = [\\n      {\\n        year: \'2010\',\\n        value: 15,\\n      },\\n      {\\n        year: \'2011\',\\n        value: 30,\\n      },\\n      {\\n        year: \'2012\',\\n        value: 25,\\n      },\\n      {\\n        year: \'2013\',\\n        value: 0,\\n      },\\n      {\\n        year: \'2014\',\\n        value: 40,\\n      },\\n      {\\n        year: \'2015\',\\n        value: 0,\\n      },\\n      {\\n        year: \'2016\',\\n        value: -5,\\n      },\\n      {\\n        year: \'2018\',\\n        value: 75,\\n      },\\n      {\\n        year: \'2019\',\\n        value: 100,\\n      },\\n      {\\n        year: \'2020\',\\n        value: 250,\\n      },\\n      {\\n        year: \'2021\',\\n        value: 50,\\n      },\\n      {\\n        year: \'2022\',\\n        value: 60,\\n      },\\n    ];\\n  }\\n  transpose(): void {\\n    if (this.tableConfig$.value.columns) {\\n      this.tableConfig$.next({\\n        stickyHeaders: {\\n          row: true,\\n          column: true,\\n        },\\n        rows: {\\n          year: {\\n            sortable: true,\\n            header: false,\\n            class: \'text-end\',\\n          },\\n          value: {\\n            class: \'text-end\',\\n          },\\n          delta: {\\n            header: \'Delta %\',\\n            templateRef: this.delta,\\n            class: \'text-end\',\\n          },\\n          deltaIndex: {\\n            header: \'Since inception %\',\\n            templateRef: this.deltaIndex,\\n            class: \'text-end\',\\n          },\\n          deltaAbsolute: {\\n            header: \'Delta\',\\n            templateRef: this.deltaAbsolute,\\n            class: \'text-end\',\\n          },\\n          combined: {\\n            header: \'Value with change\',\\n            templateRef: this.combined,\\n            class: \'text-end text-nowrap\',\\n          },\\n        },\\n      });\\n    } else {\\n      this.tableConfig$.next({\\n        stickyHeaders: {\\n          row: true,\\n          column: true,\\n        },\\n        columns: {\\n          year: {\\n            sortable: true,\\n          },\\n          value: {\\n            class: \'text-end\',\\n          },\\n          delta: {\\n            header: \'Delta %\',\\n            templateRef: this.delta,\\n            class: \'text-end\',\\n          },\\n          deltaIndex: {\\n            header: \'Since inception %\',\\n            templateRef: this.deltaIndex,\\n            class: \'text-end\',\\n          },\\n          deltaAbsolute: {\\n            header: \'Delta\',\\n            templateRef: this.deltaAbsolute,\\n            class: \'text-end\',\\n          },\\n          combined: {\\n            header: \'Value with change\',\\n            templateRef: this.combined,\\n            class: \'text-end text-nowrap\',\\n          },\\n        },\\n        pagination: { length: this.reactiveForm.get(\'length\')?.value },\\n      });\\n    }\\n  }\\n  SNIPPETS = TRANSPOSE_SNIPPETS;\\n}\\n\\nexport const Transpose: Story<TransposeComponent> = (\\n  args: TransposeComponent\\n) => ({\\n  props: args,\\n  component: TransposeComponent,\\n});\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"fb","type":"UntypedFormBuilder","deprecated":false,"deprecationMessage":""}],"line":134,"jsdoctags":[{"name":"fb","type":"UntypedFormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"]}],"modules":[{"name":"AppModule","id":"module-AppModule-46e50e7d0f0d7d48aa3b234cfbdff93053f0f12494c1d72c5b8aa513ab640c9dab7fb8040b0645fcad9821668b33b35a2d06a3445f855cf065b1d9a4a0fa4eb9","description":"","deprecationMessage":"","deprecated":false,"file":"projects/docs/src/app/app.module.ts","methods":[],"sourceCode":"import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { AppRoutingModule } from \'./app-routing.module\';\\nimport { AppComponent } from \'./app.component\';\\nimport {\\n  GenericTableCoreModule,\\n  GenericTablePaginationModule,\\n} from \'@angular-generic-table/core\';\\nimport { ReactiveFormsModule } from \'@angular/forms\';\\nimport { AdvancedComponent } from \'./examples/advanced/advanced.component\';\\nimport { SimpleComponent } from \'./examples/simple/simple.component\';\\nimport { TabsComponent } from \'./components/tabs/tabs.component\';\\nimport { CustomTemplatesComponent } from \'./examples/custom-templates/custom-templates.component\';\\nimport { PaginationComponent } from \'./examples/pagination/pagination.component\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { HttpClientModule } from \'@angular/common/http\';\\nimport { HorizontalTableComponent } from \'./examples/horizontal-table/horizontal-table.component\';\\nimport { MobileLayoutComponent } from \'./examples/mobile-layout/mobile-layout.component\';\\nimport { NestedDataComponent } from \'./examples/nested-data/nested-data.component\';\\nimport { TransposeComponent } from \'./examples/transpose/transpose.component\';\\nimport { RowHoverClickComponent } from \'./examples/row-hover-click/row-hover-click.component\';\\nimport { FooterComponent } from \'./examples/footer/footer.component\';\\nimport { SortingComponent } from \'./examples/sorting/sorting.component\';\\n\\n@NgModule({\\n  declarations: [\\n    AppComponent,\\n    AdvancedComponent,\\n    SimpleComponent,\\n    HorizontalTableComponent,\\n    PaginationComponent,\\n    TabsComponent,\\n    CustomTemplatesComponent,\\n    MobileLayoutComponent,\\n    NestedDataComponent,\\n    TransposeComponent,\\n    RowHoverClickComponent,\\n    FooterComponent,\\n    SortingComponent,\\n  ],\\n  imports: [\\n    BrowserModule,\\n    CommonModule,\\n    AppRoutingModule,\\n    GenericTableCoreModule,\\n    GenericTablePaginationModule,\\n    ReactiveFormsModule,\\n    HttpClientModule,\\n  ],\\n  providers: [],\\n  bootstrap: [AppComponent],\\n})\\nexport class AppModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"AdvancedComponent"},{"name":"AppComponent"},{"name":"CustomTemplatesComponent"},{"name":"FooterComponent"},{"name":"HorizontalTableComponent"},{"name":"MobileLayoutComponent"},{"name":"NestedDataComponent"},{"name":"RowHoverClickComponent"},{"name":"SimpleComponent"},{"name":"SortingComponent"},{"name":"TabsComponent"},{"name":"TransposeComponent"}]},{"type":"imports","elements":[{"name":"AppRoutingModule"},{"name":"GenericTableCoreModule"},{"name":"GenericTablePaginationModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[{"name":"AppComponent"}]},{"type":"classes","elements":[]}]},{"name":"AppRoutingModule","id":"module-AppRoutingModule-918bb1d8098f6fd5de3cda0b37cb09c3167e40e26aaa265a4bd8a730846ede98879e656b12ea67d63662fe074e34e9a60b91a458cefb52ed554247da57bab818","description":"","deprecationMessage":"","deprecated":false,"file":"projects/docs/src/app/app-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { Routes, RouterModule } from \'@angular/router\';\\nimport { AdvancedComponent } from \'./examples/advanced/advanced.component\';\\nimport { SimpleComponent } from \'./examples/simple/simple.component\';\\nimport { CustomTemplatesComponent } from \'./examples/custom-templates/custom-templates.component\';\\nimport { PaginationComponent } from \'./examples/pagination/pagination.component\';\\nimport { HorizontalTableComponent } from \'./examples/horizontal-table/horizontal-table.component\';\\nimport { MobileLayoutComponent } from \'./examples/mobile-layout/mobile-layout.component\';\\nimport { NestedDataComponent } from \'./examples/nested-data/nested-data.component\';\\nimport { TransposeComponent } from \'./examples/transpose/transpose.component\';\\nimport { RowHoverClickComponent } from \'./examples/row-hover-click/row-hover-click.component\';\\nimport { FooterComponent } from \'./examples/footer/footer.component\';\\nimport { SortingComponent } from \'./examples/sorting/sorting.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'advanced\',\\n    component: AdvancedComponent,\\n  },\\n  {\\n    path: \'pagination\',\\n    component: PaginationComponent,\\n  },\\n  {\\n    path: \'simple\',\\n    component: SimpleComponent,\\n  },\\n  {\\n    path: \'sorting\',\\n    component: SortingComponent,\\n  },\\n  {\\n    path: \'row-hover-click\',\\n    component: RowHoverClickComponent,\\n  },\\n  {\\n    path: \'horizontal-table\',\\n    component: HorizontalTableComponent,\\n  },\\n  {\\n    path: \'custom-templates\',\\n    component: CustomTemplatesComponent,\\n  },\\n  {\\n    path: \'mobile-layout\',\\n    component: MobileLayoutComponent,\\n  },\\n  {\\n    path: \'nested\',\\n    component: NestedDataComponent,\\n  },\\n  {\\n    path: \'transpose\',\\n    component: TransposeComponent,\\n  },\\n  {\\n    path: \'footer\',\\n    component: FooterComponent,\\n  },\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forRoot(routes)],\\n  exports: [RouterModule],\\n})\\nexport class AppRoutingModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"GenericTableCoreModule","id":"module-GenericTableCoreModule-5e6f26e77833c9b6ffb8891bf22611853d3ccf26b6e6ee93cda5d153827062eb2978ba993150a911f3250163a3355a4aa0cd09c64c0550915cde75217981a475","description":"","deprecationMessage":"","deprecated":false,"file":"projects/core/src/lib/core.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CoreComponent } from \'./core.component\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { SortClassPipe } from \'./pipes/sort-class.pipe\';\\nimport { DashCasePipe } from \'./pipes/dash-case.pipe\';\\nimport { HighlightPipe } from \'./pipes/highlight.pipe\';\\nimport { CapitalCasePipe } from \'./pipes/capital-case.pipe\';\\nimport { DynamicPipe } from \'./pipes/dynamic.pipe\';\\nimport { GtDeltaComponent } from \'./gt-delta/gt-delta.component\';\\n\\n@NgModule({\\n  imports: [\\n    CommonModule,\\n    CoreComponent,\\n    SortClassPipe,\\n    DashCasePipe,\\n    HighlightPipe,\\n    CapitalCasePipe,\\n    CapitalCasePipe,\\n    DynamicPipe,\\n    GtDeltaComponent,\\n  ],\\n  exports: [CoreComponent, GtDeltaComponent],\\n})\\nexport class GenericTableCoreModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[{"name":"CapitalCasePipe"},{"name":"CapitalCasePipe"},{"name":"CoreComponent"},{"name":"DashCasePipe"},{"name":"DynamicPipe"},{"name":"GtDeltaComponent"},{"name":"HighlightPipe"},{"name":"SortClassPipe"}]},{"type":"exports","elements":[{"name":"CoreComponent"},{"name":"GtDeltaComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"GenericTablePaginationModule","id":"module-GenericTablePaginationModule-a4227080671cbaa73f2851b45140457f52248b2362cd6ee8d180e3ebf8f950307912b89e04fbcbcdf5cd82a6e0720cf164c1d5ddfb6c9f94ee347b7a54b53fa3","description":"","deprecationMessage":"","deprecated":false,"file":"projects/core/src/lib/pagination/pagination.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { PaginationComponent } from \'./pagination.component\';\\n\\n@NgModule({\\n  imports: [CommonModule, PaginationComponent],\\n  exports: [PaginationComponent],\\n})\\nexport class GenericTablePaginationModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[{"name":"PaginationComponent"}]},{"type":"exports","elements":[{"name":"PaginationComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]}],"miscellaneous":{"variables":[{"name":"Advanced","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/app.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<AppComponent>","defaultValue":"(args: AppComponent) => ({\\n  props: args,\\n  component: AppComponent,\\n})"},{"name":"Advanced","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/advanced/advanced.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<AdvancedComponent>","defaultValue":"(\\n  args: AdvancedComponent\\n) => ({\\n  props: args,\\n  component: AdvancedComponent,\\n})"},{"name":"ADVANCED_DOCS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/advanced/advanced.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'advanced.component.html\',\\n    code: `<div class=\\"row gx-2 gy-3 mb-3\\">\\n  <div class=\\"col-12 col-sm-auto\\">\\n    <button class=\\"btn btn-primary w-100\\" (click)=\\"addData()\\">Add random data</button>\\n  </div>\\n  <div class=\\"col-12 col-sm-auto\\">\\n    <button class=\\"btn btn-danger w-100\\" (click)=\\"removeData()\\">Remove data</button>\\n  </div>\\n  <div class=\\"col-12 col-sm-auto\\">\\n    <button class=\\"btn btn-secondary w-100\\" (click)=\\"simulateLoad()\\">Load</button>\\n  </div>\\n</div>\\n<form [formGroup]=\\"paginationForm\\">\\n  <div class=\\"row\\">\\n    <div class=\\"form-group col-12 col-sm-auto\\">\\n      <label for=\\"length_input\\">Length</label>\\n      <input id=\\"length_input\\" formControlName=\\"length\\" type=\\"number\\" class=\\"form-control\\">\\n    </div>\\n    <div class=\\"form-group col-12 col-sm-auto\\">\\n      <label for=\\"search_input\\">Search</label>\\n      <input id=\\"search_input\\" formControlName=\\"search\\" type=\\"text\\" class=\\"form-control\\">\\n    </div>\\n  </div>\\n</form>\\n<div class=\\"mx-n3 mx-sm-0\\">\\n  <angular-generic-table [data]=\\"data$\\" [config]=\\"tableConfig$\\" [page]=\\"(currentPage$ | async)!\\" [search]=\\"search$\\" [loading]=\\"loading$\\" #table>\\n    <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n    <div class=\\"table-no-data alert alert-info mt-3\\">\\n      Table is empty\\n    </div>\\n  </angular-generic-table>\\n</div>\\n<div class=\\"row justify-content-between justify-content-sm-center align-items-center mt-3\\" *ngIf=\\"{current: (currentPage$ | async) || 0,total: (table.table$ | async)?.info?.pageTotal || 1\\n} as pagination\\">\\n  <div class=\\"col-auto\\">\\n    <button class=\\"btn btn-primary\\" (click)=\\"prev()\\" [disabled]=\\"pagination.current === 0\\">Prev</button>\\n  </div>\\n  <div class=\\"col-auto\\">\\n    <button class=\\"btn btn-primary\\" (click)=\\"next()\\" [disabled]=\\"pagination.total -1 === pagination.current\\">Next</button>\\n  </div>\\n  <div class=\\"col-auto\\">Current page: {{pagination.current +1}}</div>\\n  <div class=\\"col-auto\\">Total pages: {{pagination.total}}</div>\\n  <div class=\\"col-auto\\">\\n    Records: {{(data$ | async).length}}\\n  </div>\\n  <div class=\\"col-auto\\">\\n    {{clicked}}\\n  </div>\\n</div>\\n<ng-template #actions let-row=\\"row\\" let-col=\\"col\\" let-index=\\"index\\">\\n  <button\\n    *ngIf=\\"index !== undefined\\"\\n    class=\\"btn btn-outline-primary btn-sm\\"\\n    (click)=\\"clickAction(row, col, index)\\"\\n  >\\n    Click me!\\n  </button>\\n</ng-template>\\n<ng-template #color let-row=\\"row\\" let-col=\\"col\\">\\n  <div\\n    [style.background]=\\"row[col.key]\\"\\n    style=\\"width: 1.5rem; height: 1.5rem; border-radius: 50%\\"\\n  ></div>\\n</ng-template>`,\\n    language: \'xml\',\\n  },\\n  {\\n    name: \'advanced.component.ts\',\\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { BehaviorSubject, Observable, ReplaySubject } from \'rxjs\';\\nimport { FormBuilder } from \'@angular/forms\';\\nimport { TableColumn, TableConfig, TableRow } from \'@angular-generic-table/core\';\\nimport { withLatestFrom } from \'rxjs/operators\';\\n\\n@Component({\\n  templateUrl: \'./advanced.component.html\',\\n})\\nexport class AdvancedComponent implements OnInit {\\n  get currentPage$(): Observable<number> {\\n    return this._currentPage$.asObservable();\\n  }\\n\\n  set currentPage(value: number) {\\n    this._currentPage$.next(value);\\n  }\\n  constructor(private fb: FormBuilder) {}\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  @ViewChild(\'color\', { static: true }) color: TemplateRef<any> | undefined;\\n  paginationForm = this.fb.group({\\n    length: [10],\\n    search: [\'\'],\\n  });\\n  search$ = this.paginationForm.get(\'search\')?.valueChanges as Observable<string>;\\n  loading$ = new BehaviorSubject(true);\\n  data$: BehaviorSubject<any> = new BehaviorSubject([\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteColor: \'#26BFAF\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteColor: \'#0f0\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ]);\\n\\n  private _currentPage$ = new BehaviorSubject(0);\\n\\n  clicked: string = \'\';\\n  maleFirstNames = [\'Peter\', \'Clark\', \'Ruben\', \'John\', \'Jack\', \'Roscoe\'];\\n  femaleFirstNames = [\'Mary Jane\', \'Kim\', \'Sarah\', \'Michelle\', \'Ann\'];\\n  lastNames = [\'Andersson\', \'Smith\', \'Parker\', \'Kent\', \'Rogers\', \'Lane\', \'Jackson\'];\\n  foods = [\'Pizza\', \'Pasta\', \'Hamburger\', \'Pancakes\', \'Tacos\', \'Lasagna\', \'Meatloaf\'];\\n  colors = [\'#33d60b\', \'#dcafff\', \'#3fc9ff\', \'#ff1600\', \'#5238b1\', \'#fff\'];\\n\\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\\n\\n  addData(): void {\\n    this.data$.next([...this.data$.getValue(), this.randomRecord()]);\\n  }\\n\\n  removeData(): void {\\n    this.data$.next([]);\\n  }\\n\\n  simulateLoad(): void {\\n    this.loading$.next(true);\\n    // set loading state to false after 2 seconds\\n    setTimeout(() => this.loading$.next(false), 2000);\\n  }\\n\\n  clickAction(row: TableRow, column: { key: string; value: TableColumn }, index: number): void {\\n    console.log(\'clicked row:\', row, \'col:\', column);\\n    this.clicked = \\\\`clicked row number: \\\\${index}\\\\`;\\n  }\\n\\n  randomRecord(): TableRow {\\n    const random = Math.floor(Math.random() * 2);\\n    const newRecord = {\\n      firstName: random\\n        ? this.maleFirstNames[Math.floor(Math.random() * this.maleFirstNames.length)]\\n        : this.femaleFirstNames[Math.floor(Math.random() * this.femaleFirstNames.length)],\\n      lastName: this.lastNames[Math.floor(Math.random() * this.lastNames.length)],\\n      gender: random ? \'male\' : \'female\',\\n      favoriteColor: this.colors[Math.floor(Math.random() * this.colors.length)],\\n      favoriteFood: this.foods[Math.floor(Math.random() * this.foods.length)],\\n    };\\n    console.log(\'added new random record:\', newRecord);\\n\\n    return newRecord;\\n  }\\n\\n  next = () => {\\n    this.currentPage = this._currentPage$.value + 1;\\n  };\\n  prev = () => {\\n    this.currentPage = this._currentPage$.value - 1;\\n  };\\n\\n  ngOnInit(): void {\\n    this.simulateLoad();\\n    this.paginationForm\\n      .get(\'length\')\\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\\n      .subscribe(([length, config]) => {\\n        length = +length;\\n        this.tableConfig$.next({\\n          ...config,\\n          pagination: { ...config.pagination, length },\\n        });\\n      });\\n    this.tableConfig$.next({\\n      class: \'table table-mobile text-nowrap mb-0\',\\n      columns: {\\n        firstName: {\\n          header: \'First name\',\\n          mobileHeader: true,\\n          sortable: true,\\n          order: 0,\\n        },\\n        lastName: {\\n          header: \'Last name\',\\n          mobileHeader: true,\\n          hidden: false,\\n          sortable: true,\\n        },\\n        gender: {\\n          mobileHeader: \'Sex\',\\n          sortable: true,\\n          order: 1,\\n        },\\n        favoriteColor: {\\n          header: \'Favorite color\',\\n          mobileHeader: true,\\n          templateRef: this.color,\\n          sortable: false,\\n          order: 2,\\n          search: false,\\n          class: \'custom-class\',\\n        },\\n        favoriteFood: {\\n          mobileHeader: true,\\n          header: \'Favorite food\',\\n          hidden: false,\\n          sortable: true,\\n          order: 0,\\n        },\\n        action: {\\n          mobileHeader: false,\\n          header: false,\\n          templateRef: this.actions,\\n          order: 6,\\n        },\\n      },\\n      pagination: {\\n        length: this.paginationForm.get(\'length\')?.value || 0,\\n      },\\n      footer: {\\n        columns: {\\n          gender: {\\n            count: (data, key) => {\\n              let men = 0;\\n              let women = 0;\\n              for (let i = 0; i < data.length; i++) {\\n                if (data[i][key] === \'female\') {\\n                  women++;\\n                } else if (data[i][key] === \'male\') {\\n                  men++;\\n                }\\n              }\\n              return \\\\`♂ \\\\${men} ♀ \\\\${women}\\\\`;\\n            },\\n          },\\n          favoriteColor: {},\\n          action: { count: (data, key) => \\\\`Total: \\\\${data.length}\\\\` },\\n        },\\n      },\\n    });\\n  }\\n}`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\nimport { ReactiveFormsModule } from \'@angular/forms\';\\n\\nimport { AdvancedComponent } from \'./advanced.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [AdvancedComponent],\\n  imports: [BrowserModule, ReactiveFormsModule, GenericTableCoreModule],\\n  bootstrap: [AdvancedComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"},{"name":"ADVANCED_DOCS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/pagination/pagination.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'pagination.component.html\',\\n    code: `<form [formGroup]=\\"paginationForm\\">\\n  <div class=\\"row gy-3\\">\\n    <div class=\\"form-group col-12 col-sm-auto\\">\\n      <label for=\\"length_input\\">Length</label>\\n      <input id=\\"length_input\\" formControlName=\\"length\\" type=\\"number\\" class=\\"form-control\\">\\n    </div>\\n    <div class=\\"form-group col-12 col-sm-auto\\">\\n      <label for=\\"search_input\\">Search</label>\\n      <input id=\\"search_input\\" formControlName=\\"search\\" type=\\"text\\" class=\\"form-control\\">\\n    </div>\\n  </div>\\n</form>\\n<div class=\\"mx-n3 mx-sm-0 my-3 overflow-auto\\">\\n  <angular-generic-table [data]=\\"data$\\" [config]=\\"tableConfig$\\" [search]=\\"search$\\" [loading]=\\"loading$\\" #table>\\n    <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n    <div class=\\"table-no-data alert alert-info mt-3\\">\\n      Table is empty\\n    </div>\\n  </angular-generic-table>\\n</div>\\n<angular-generic-table-pagination [table]=\\"table\\">\\n</angular-generic-table-pagination>`,\\n    language: \'xml\',\\n  },\\n  {\\n    name: \'pagination.component.ts\',\\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { BehaviorSubject, Observable, ReplaySubject } from \'rxjs\';\\nimport { FormBuilder } from \'@angular/forms\';\\nimport { TableConfig } from \'@angular-generic-table/core\';\\nimport { pluck, tap, withLatestFrom } from \'rxjs/operators\';\\nimport { HttpClient } from \'@angular/common/http\';\\nimport { DatePipe } from \'@angular/common\';\\n\\n@Component({\\n  selector: \'docs-pagination\',\\n  templateUrl: \'./pagination.component.html\',\\n  styles: [],\\n})\\nexport class PaginationComponent implements OnInit {\\n  constructor(private fb: FormBuilder, private http: HttpClient) {}\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  @ViewChild(\'color\', { static: true }) color: TemplateRef<any> | undefined;\\n  paginationForm = this.fb.group({\\n    length: [10],\\n    search: [\'\'],\\n  });\\n  search$ = this.paginationForm.get(\'search\')?.valueChanges as Observable<string>;\\n  loading$ = new BehaviorSubject(true);\\n  data$: Observable<any> = this.http.get(\'https://private-730c61-generictable.apiary-mock.com/data\').pipe(\\n    pluck(\'data\'),\\n    tap((_) => this.loading$.next(false))\\n  );\\n\\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\\n\\n  ngOnInit(): void {\\n    this.paginationForm\\n      .get(\'length\')\\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\\n      .subscribe(([length, config]) => {\\n        length = +length;\\n        this.tableConfig$.next({\\n          ...config,\\n          pagination: { ...config.pagination, length },\\n        });\\n      });\\n    this.tableConfig$.next({\\n      class: \'table text-nowrap\',\\n      columns: {\\n        first_name: {\\n          sortable: true,\\n        },\\n        last_name: {\\n          sortable: true,\\n        },\\n        gender: {\\n          sortable: true,\\n        },\\n        birthday: {\\n          sortable: true,\\n          class: \'text-end\',\\n          transform: {\\n            pipe: DatePipe,\\n            args: [\'longDate\'],\\n          },\\n        },\\n      },\\n      pagination: {\\n        length: this.paginationForm.get(\'length\')?.value || 0,\\n      },\\n    });\\n  }\\n}`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\nimport { HttpClientModule } from \'@angular/common/http\';\\nimport { ReactiveFormsModule } from \'@angular/forms\';\\n\\nimport { PaginationComponent } from \'./pagination.component\';\\nimport { GenericTableCoreModule, GenericTablePaginationModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [PaginationComponent],\\n  imports: [\\n    BrowserModule,\\n    GenericTableCoreModule,\\n    GenericTablePaginationModule,\\n    ReactiveFormsModule,\\n    HttpClientModule\\n  ],\\n  bootstrap: [PaginationComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"},{"name":"calculate","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/lib/utilities/utilities.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(data: Array<TableRow>, config: TableConfig) => {\\n  const CALCULATIONS: { [key: string]: boolean } = {};\\n  const COLUMN_CALCULATIONS: { [key: string]: Array<string> } = {};\\n  let CALCULATED = Object.entries(config.footer?.columns || {})\\n    .filter(\\n      ([columnName, calculations]) =>\\n        Object.values(calculations || {}).filter((value) => value !== false)\\n          .length >= 0\\n    )\\n    .reduce((acc: any, [columnName, calculations], index) => {\\n      acc[columnName] = Object.entries(calculations || {})\\n        .filter(([calculation, value]) => value !== false)\\n        .reduce((acc: any, [calculation, value]) => {\\n          if (COLUMN_CALCULATIONS[columnName]) {\\n            COLUMN_CALCULATIONS[columnName].push(calculation);\\n          } else if (value === true) {\\n            COLUMN_CALCULATIONS[columnName] = [calculation];\\n          }\\n          CALCULATIONS[calculation] = true;\\n          if (typeof value === \'function\') {\\n            value = value(data, columnName);\\n          }\\n          acc[calculation] = value === true ? 0 : value;\\n          return acc;\\n        }, {});\\n      return acc;\\n    }, {});\\n  if (Object.keys(CALCULATED).length > 0) {\\n    for (let i = 0; i < data.length; i++) {\\n      Object.entries(COLUMN_CALCULATIONS).forEach(([column, calculations]) => {\\n        if (calculations.indexOf(\'sum\') > -1) {\\n          CALCULATED[column].sum += data[i][column];\\n        }\\n        if (\\n          calculations.indexOf(\'avg\') > -1 &&\\n          calculations.indexOf(\'sum\') === -1\\n        ) {\\n          if (CALCULATED[column].sum === undefined) {\\n            CALCULATED[column].sum = 0;\\n          }\\n          CALCULATED[column].sum += data[i][column];\\n        }\\n        if (\\n          calculations.indexOf(\'max\') > -1 &&\\n          (!CALCULATED[column].max || +data[i][column] > CALCULATED[column].max)\\n        ) {\\n          CALCULATED[column].max = +data[i][column];\\n        }\\n        if (\\n          calculations.indexOf(\'min\') > -1 &&\\n          (!CALCULATED[column].min || +data[i][column] < CALCULATED[column].min)\\n        ) {\\n          CALCULATED[column].min = +data[i][column];\\n        }\\n      });\\n    }\\n    Object.entries(COLUMN_CALCULATIONS).forEach(([column, calculations]) => {\\n      if (calculations.indexOf(\'avg\') !== -1) {\\n        CALCULATED[column].avg = CALCULATED[column]?.sum / data.length;\\n        // if sum is not part of calculations config...\\n        if (calculations.indexOf(\'sum\') === -1 && CALCULATED[column].sum) {\\n          // ...remove it\\n          delete CALCULATED[column].sum;\\n        }\\n      }\\n      if (calculations.indexOf(\'count\') !== -1) {\\n        CALCULATED[column].count = data.length;\\n      }\\n    });\\n  }\\n  return {\\n    calculated: CALCULATED,\\n    calculations: Object.keys(CALCULATIONS).sort(\\n      (a, b) =>\\n        (config.footer?.rowOrder?.indexOf(a) || 0) -\\n        (config.footer?.rowOrder?.indexOf(b) || 0)\\n    ),\\n    calculatedColumnsCount: Object.keys(CALCULATED).length || 0,\\n  };\\n}"},{"name":"capitalize","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/lib/utilities/utilities.ts","deprecated":false,"deprecationMessage":"","type":"string"},{"name":"chunk","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/lib/utilities/utilities.ts","deprecated":false,"deprecationMessage":"","type":"Array<Array<TableRow>>"},{"name":"context","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/test.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"require.context(\'./\', true, /\\\\.spec\\\\.ts$/)"},{"name":"context","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/test.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"require.context(\'./\', true, /\\\\.spec\\\\.ts$/)"},{"name":"CUSTOM_TEMPLATES_DOCS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/custom-templates/custom-templates.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'custom-templates.component.ts\',\\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { TableColumn, TableConfig, TableRow } from \'@angular-generic-table/core\';\\nimport { ReplaySubject } from \'rxjs\';\\n\\n@Component({\\n  selector: \'custom-templates\',\\n  templateUrl: \\\\`./custom-templates.component.html\\\\`\\n})\\nexport class CustomTemplatesComponent implements OnInit {\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  @ViewChild(\'color\', { static: true }) color: TemplateRef<any> | undefined;\\n  clicked = \'\';\\n\\n  data = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteColor: \'#26BFAF\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteColor: \'#0f0\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ];\\n  config$: ReplaySubject<TableConfig> = new ReplaySubject(1);\\n  ngOnInit(): void {\\n    this.config$.next({\\n      columns: {\\n        firstName: {},\\n        lastName: {},\\n        gender: {},\\n        favoriteColor: {\\n          templateRef: this.color,\\n        },\\n        favoriteFood: {},\\n        action: {\\n          templateRef: this.actions,\\n        },\\n      },\\n    });\\n  }\\n  clickAction(row: TableRow, column: { key: string; value: TableColumn }, index: number): void {\\n    console.log(\'clicked row:\', row, \'col:\', column);\\n    this.clicked = \\\\`clicked row number: \\\\${index}\\\\`;\\n  }\\n}`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { CustomTemplatesComponent } from \'./custom-templates-table.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [CustomTemplatesComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [CustomTemplatesComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'custom-templates.component.html\',\\n    code: `<angular-generic-table [data]=\\"data\\" [config]=\\"config$\\"></angular-generic-table>\\n<ng-template #actions let-row=\\"row\\" let-col=\\"col\\" let-index=\\"index\\">\\n <button class=\\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\\" (click)=\\"clickAction(row, col, index)\\">Click me!</button>\\n</ng-template>\\n<ng-template #color let-row=\\"row\\" let-col=\\"col\\">\\n <div [style.background]=\\"row[col.key]\\" style=\\"width: 1.5rem; height: 1.5rem; border-radius: 50%\\"></div>\\n</ng-template>\\n{{ clicked }}`,\\n    language: \'xml\',\\n  },\\n]"},{"name":"CustomTemplates","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/custom-templates/custom-templates.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<CustomTemplatesComponent>","defaultValue":"(\\n  args: CustomTemplatesComponent\\n) => ({\\n  props: args,\\n  component: CustomTemplatesComponent,\\n})"},{"name":"dashed","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/lib/utilities/utilities.ts","deprecated":false,"deprecationMessage":"","type":"string"},{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/environments/environment.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  production: false\\n}"},{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/environments/environment.prod.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  production: true\\n}"},{"name":"Footer","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/footer/footer.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<FooterComponent>","defaultValue":"(args: FooterComponent) => ({\\n  props: args,\\n  component: FooterComponent,\\n})"},{"name":"Horizontal","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/horizontal-table/horizontal-table.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<HorizontalTableComponent>","defaultValue":"(\\n  args: HorizontalTableComponent\\n) => ({\\n  props: args,\\n  component: HorizontalTableComponent,\\n})"},{"name":"HORIZONTAL_TABLE_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/horizontal-table/horizontal-table.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'horizontal-table.component.ts\',\\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { GtDeltaComponent, TableConfig } from \'@angular-generic-table/core\';\\nimport { BehaviorSubject } from \'rxjs\';\\n\\n@Component({\\n  selector: \'docs-horizontal\',\\n  templateUrl: \'./horizontal-table.component.html\',\\n  styles: [],\\n})\\nexport class TransposeComponent implements OnInit {\\n  @ViewChild(\'feelings\', { static: true }) feelings:\\n    | TemplateRef<any>\\n    | undefined;\\n  @ViewChild(\'delta\', { static: true }) delta: TemplateRef<GtDeltaComponent> | undefined;\\n  @ViewChild(\'deltaIndex\', { static: true }) deltaIndex:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  loading$ = new BehaviorSubject(false);\\n  config: TableConfig = {};\\n  data: any = [];\\n\\n  ngOnInit(): void {\\n    this.config = {\\n      stickyHeaders: {\\n        row: true,\\n      },\\n      mobileLayout: true,\\n      rows: {\\n        year: {\\n          class: \'text-end\',\\n          header: false\\n        },\\n        value: {\\n          class: \'text-end\'\\n        },\\n        delta: {\\n          header: \'Delta %\',\\n          templateRef: this.delta,\\n          class: \'text-end\'\\n        },\\n        deltaIndex: {\\n          header: \'Since inception %\',\\n          templateRef: this.deltaIndex,\\n          class: \'text-end\'\\n        },\\n        feeling: {\\n          templateRef: this.feelings,\\n          class: \'text-end\'\\n        },\\n      },\\n    };\\n    this.load();\\n  }\\n  simulateLoad(): void {\\n    this.loading$.next(true);\\n    // set loading state to false after 2 seconds\\n    setTimeout(() => this.loading$.next(false), 2000);\\n  }\\n  empty(): void {\\n    this.data = [];\\n  }\\n  load(): void {\\n    this.data = [\\n      {\\n        year: \'2017\',\\n        value: 50,\\n        feeling: \'neutral\'\\n      },\\n      {\\n        year: \'2018\',\\n        value: 75,\\n        feeling: \'positive\'\\n      },\\n      {\\n        year: \'2019\',\\n        value: 100,\\n        feeling: \'thrilled\'\\n      },\\n      {\\n        year: \'2020\',\\n        value: 250,\\n        feeling: \'thrilled\'\\n      },\\n      {\\n        year: \'2021\',\\n        value: 50,\\n        feeling: \'negative\'\\n      }\\n    ];\\n  }\\n}\\n`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'horizontal-table.component.html\',\\n    code: `<button class=\\"btn btn-outline-primary\\" (click)=\\"simulateLoad()\\">Simulate load</button>\\n<button class=\\"btn btn-outline-danger mx-3\\" (click)=\\"empty()\\">Empty</button>\\n<button class=\\"btn btn-outline-primary\\" (click)=\\"load()\\">Reset</button>\\n<div class=\\"overflow-auto\\">\\n  <angular-generic-table\\n    [data]=\\"data\\"\\n    [config]=\\"config\\"\\n    [loading]=\\"loading$\\"\\n  >\\n    <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n    <div class=\\"table-no-data alert alert-info mt-3\\">Table is empty</div>\\n  </angular-generic-table>\\n</div>\\n<ng-template #feelings let-row=\\"row\\" let-col=\\"col\\">\\n  <div [ngSwitch]=\\"row[col.key]\\">\\n    <ng-container *ngSwitchCase=\\"\'thrilled\'\\">😀</ng-container>\\n    <ng-container *ngSwitchCase=\\"\'positive\'\\">🙂</ng-container>\\n    <ng-container *ngSwitchCase=\\"\'neutral\'\\">😐</ng-container>\\n    <ng-container *ngSwitchCase=\\"\'negative\'\\">😭</ng-container>\\n  </div>\\n</ng-template>\\n<ng-template #delta let-data=\\"data\\" let-index=\\"index\\">\\n  <gt-delta [index]=\\"index\\" [data]=\\"data\\"></gt-delta>\\n</ng-template>\\n<ng-template #deltaIndex let-data=\\"data\\" let-index=\\"index\\">\\n  <gt-delta [index]=\\"index\\" [baseIndex]=\\"0\\" [data]=\\"data\\"></gt-delta>\\n</ng-template>`,\\n    language: \'xml\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { HorizontalTableComponent } from \'./horizontal-table.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [HorizontalTableComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [HorizontalTableComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"},{"name":"Mobile","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/mobile-layout/mobile-layout.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<MobileLayoutComponent>","defaultValue":"(\\n  args: MobileLayoutComponent\\n) => ({\\n  props: args,\\n  component: MobileLayoutComponent,\\n})"},{"name":"MOBILE_LAYOUT_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/mobile-layout/mobileLayout.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'mobile-layout.component.ts\',\\n    code: `import {Component, Pipe, PipeTransform, TemplateRef, ViewChild, ViewEncapsulation} from \'@angular/core\';\\nimport {TableColumn, TableConfig, TableRow} from \\"@angular-generic-table/core\\";\\nimport {BehaviorSubject, Observable} from \\"rxjs\\";\\nimport {map} from \\"rxjs/operators\\";\\n\\n@Pipe({\\n  name: \'genderPipe\',\\n})\\nexport class GenderPipe implements PipeTransform {\\n  transform(gender: \'male\' | \'female\'): string {\\n  return gender === \'male\' ? \'👨\' : \'👩\';\\n  }\\n}\\n\\n@Component({\\n  selector: \'docs-mobile-layout\',\\n  template: \\\\`\\n    <div class=\\"d-flex justify-content-end mb-1 align-items-center\\">\\n      {{clicked}} <button class=\\"btn btn-link d-sm-none \\" (click)=\\"toggleLayout()\\">{{(mobileLayout$ | async)? \'Desktop \' : \'Mobile \'}} layout</button>\\n    </div>\\n    <div [class.overflow-auto]=\\"(mobileLayout$ | async) === false\\">\\n      <angular-generic-table [data]=\\"data\\" [config]=\\"config$\\"></angular-generic-table>\\n    </div>\\n    <ng-template #actions let-row=\\"row\\" let-col=\\"col\\" let-index=\\"index\\">\\n      <button class=\\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\\" (click)=\\"clickAction(row, col, index)\\">Click me!</button>\\n    </ng-template>\\n  \\\\`,\\n  styles: [\\\\`\\n    .table th {\\n      white-space: nowrap;\\n    }\\n  \\\\`],\\n  encapsulation: ViewEncapsulation.None\\n})\\nexport class MobileLayoutComponent {\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  clicked = \'\';\\n\\n  mobileLayout$ = new BehaviorSubject(true);\\n  data = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ];\\n  config$: Observable<TableConfig> = this.mobileLayout$.pipe(\\n    map(mobileLayout => ({\\n      mobileLayout,\\n      columns: {\\n        firstName: {\\n          mobileHeader: true,\\n          sortable: true\\n        },\\n        lastName: {\\n          mobileHeader: true,\\n          sortable: true\\n        },\\n        gender: {\\n          mobileHeader: true,\\n          transform: {\\n            pipe: GenderPipe\\n          }\\n        },\\n        favoriteFood: {\\n          mobileHeader: true\\n        },\\n        action: {\\n          mobileHeader: false,\\n          header: false,\\n          templateRef: this.actions,\\n        },\\n      },\\n    }))\\n  );\\n\\n  toggleLayout = (): void => {\\n    this.mobileLayout$.next(!this.mobileLayout$.getValue());\\n  }\\n  clickAction(row: TableRow, column: { key: string; value: TableColumn }, index: number): void {\\n    console.log(\'clicked row:\', row, \'col:\', column);\\n    this.clicked = \\\\`Clicked row number: \\\\${index}\\\\`;\\n  }\\n}`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { MobileLayoutComponent } from \'./mobile-layout.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [MobileLayoutComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [MobileLayoutComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"},{"name":"Nested","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/nested-data/nested-data.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<NestedDataComponent>","defaultValue":"(\\n  args: NestedDataComponent\\n) => ({\\n  props: args,\\n  component: NestedDataComponent,\\n})"},{"name":"NESTED_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/nested-data/nested.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'nested-data.component.ts\',\\n    code: `import {Component, OnInit, TemplateRef, ViewChild} from \'@angular/core\';\\nimport {TableConfig, TableRows} from \\"@angular-generic-table/core\\";\\n\\ninterface NestedData {\\n  name: {\\n    first: string;\\n    last: string;\\n  };\\n  data: {\\n    details?: {\\n      gender: \'male\' | \'female\';\\n      favoriteFood: \'Pasta\' | \'Pizza\';\\n    };\\n  };\\n}\\n\\ninterface Data {\\n  firstName: string;\\n  lastName: string;\\n  gender: \'male\' | \'female\';\\n  favoriteFood: \'Pasta\' | \'Pizza\';\\n  missing: string;\\n}\\n@Component({\\n  selector: \'nested-data\',\\n  template: \\\\`\\n    <div class=\\"row gy-3\\">\\n      <div class=\\"col col-sm-auto\\">\\n        <button class=\\"btn btn-outline-primary mb-3\\" (click)=\\"loadData()\\">\\n          Load other data\\n        </button>\\n      </div>\\n      <div class=\\"col col-sm-auto\\">\\n        <button class=\\"btn btn-outline-primary mb-3\\" (click)=\\"resetData()\\">\\n          Reset\\n        </button>\\n      </div>\\n    </div>\\n    <angular-generic-table [data]=\\"data\\" [config]=\\"config\\"></angular-generic-table>\\n    <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n    <ng-template #gender let-row=\\"row\\" let-col=\\"col\\">\\n      <div [ngSwitch]=\\"row[col.key]\\">\\n        <ng-container *ngSwitchCase=\\"\'male\'\\">♂️</ng-container>\\n        <ng-container *ngSwitchCase=\\"\'female\'\\">♀️</ng-container>\\n      </div>\\n    </ng-template>\\n  \\\\`,\\n  styles: [],\\n})\\nexport class NestedDataComponent implements OnInit {\\n  @ViewChild(\'gender\', { static: true }) gender: TemplateRef<any> | undefined;\\n\\n  config: TableConfig<Data> = {};\\n  data: Array<NestedData> = [];\\n  ngOnInit(): void {\\n    this.resetData();\\n    this.config = {\\n      columns: {\\n        firstName: {\\n          sortable: true,\\n          mapTo: { path: \'name.first\' },\\n        },\\n        lastName: {\\n          sortable: true,\\n          mapTo: { path: \'name.last\' },\\n        },\\n        gender: {\\n          mapTo: { path: \'data.details.gender\' },\\n          templateRef: this.gender,\\n        },\\n        favoriteFood: {\\n          sortable: true,\\n          mapTo: { path: \'data.details.favoriteFood\', missingValue: \'n/a\' },\\n        },\\n        missing: {\\n          mapTo: { path: \'data.missingKey.noMatch\', missingValue: \'n/a\' },\\n        },\\n      },\\n    };\\n  }\\n\\n  resetData() {\\n    this.data = [\\n      {\\n        name: {\\n          first: \'Peter\',\\n          last: \'Parker\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'male\',\\n            favoriteFood: \'Pasta\',\\n          },\\n        },\\n      },\\n      {\\n        name: {\\n          first: \'Mary Jane\',\\n          last: \'Watson\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'female\',\\n            favoriteFood: \'Pizza\',\\n          },\\n        },\\n      },\\n    ];\\n  }\\n\\n  loadData(): void {\\n    this.data = [\\n      {\\n        name: {\\n          first: \'John\',\\n          last: \'Doe\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'male\',\\n            favoriteFood: \'Pasta\',\\n          },\\n        },\\n      },\\n      {\\n        name: {\\n          first: \'Jane\',\\n          last: \'Doe\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'female\',\\n            favoriteFood: \'Pizza\',\\n          },\\n        },\\n      },\\n      {\\n        name: {\\n          first: \'Foo\',\\n          last: \'Bar\',\\n        },\\n        data: {},\\n      },\\n    ];\\n  }\\n}`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { NestedDataComponent } from \'./nested-data.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [NestedDataComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [NestedDataComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"},{"name":"Pagination","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/pagination/pagination.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<PaginationComponent>","defaultValue":"(\\n  args: PaginationComponent\\n) => ({\\n  props: args,\\n  component: PaginationComponent,\\n})"},{"name":"require","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/test.ts","deprecated":false,"deprecationMessage":"","type":"literal type"},{"name":"require","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/test.ts","deprecated":false,"deprecationMessage":"","type":"literal type"},{"name":"ROW_HOVER_CLICK_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/row-hover-click/row-hower-click.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'row-hover-click.component.ts\',\\n    code: `import { Component } from \'@angular/core\';\\nimport { GtRowClickEvent, GtRowHoverEvent } from \'@angular-generic-table/core\';\\n\\n\\n@Component({\\n  selector: \'row-hover-click-table\',\\n  template: \'<div class=\\"overflow-auto\\">\\n      <button class=\\"btn btn-secondary me-3\\" (click)=\\"tableRef.hoverRow(1)\\">\\n        Set hover state to second row\\n      </button>\\n      <button class=\\"btn btn-secondary\\" (click)=\\"tableRef.hoverRow(null)\\">\\n        Remove hover state\\n      </button>\\n      <angular-generic-table\\n        [data]=\\"data\\"\\n        [config]=\\"config\\"\\n        (rowClick)=\\"onRowClick($event)\\"\\n        (rowHover)=\\"onRowHover($event)\\"\\n        #tableRef\\n      ></angular-generic-table>\\n      {{ clicked }}\\n    </div>\',\\n  styles: [\\n    \\\\`\\n      :host ::ng-deep .gt-hover {\\n        background-color: var(--bs-highlight-bg);\\n      }\\n    \\\\`,\\n  ],\\n})\\nexport class RowHoverClickComponent {\\n  clicked = \'\';\\n  data = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ];\\n  config = {\\n    columns: {\\n      firstName: {},\\n      lastName: {},\\n      gender: {},\\n      favoriteFood: {},\\n    },\\n    rowClick: true,\\n    rowHover: true,\\n  };\\n\\n  onRowClick(event: GtRowClickEvent) {\\n    console.log(\'row clicked\', event);\\n    this.clicked = \\\\`clicked row number: \\\\${event.index}\\\\`;\\n  }\\n  onRowHover(event: GtRowHoverEvent) {\\n    console.log(\'row hovered\', event);\\n  }\\n`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { RowHoverClickTableComponent } from \'./events-table.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [RowHoverClickTableComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [RowHoverClickTableComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"},{"name":"RowHoverClick","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/row-hover-click/row-hover-click.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<RowHoverClickComponent>","defaultValue":"(\\n  args: RowHoverClickComponent\\n) => ({\\n  props: args,\\n  component: RowHoverClickComponent,\\n})"},{"name":"search","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/lib/utilities/utilities.ts","deprecated":false,"deprecationMessage":"","type":"TableRow[]"},{"name":"Simple","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/simple/simple.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<SimpleComponent>","defaultValue":"(args: SimpleComponent) => ({\\n  props: args,\\n  component: SimpleComponent,\\n})"},{"name":"SIMPLE_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/footer/simple.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'footer-table.component.ts\',\\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { TableConfig, TableRow } from \'@angular-generic-table/core\';\\nimport { DecimalPipe } from \'@angular/common\';\\n\\n@Component({\\n  template: \\\\`\\n    <div class=\\"overflow-auto\\">\\n      <angular-generic-table [data]=\\"data\\" [config]=\\"config\\">\\n      </angular-generic-table>\\n    </div>\\n    <ng-template #heightTmplRef let-row=\\"row\\" let-col=\\"col\\">\\n      <ng-container *ngIf=\\"row[col.key || col] as height\\"\\n        >{{ height }} m\\n      </ng-container>\\n    </ng-template>\\n  \\\\`,\\n})\\nexport class FooterComponent implements OnInit {\\n  @ViewChild(\'heightTmplRef\', { static: true }) heightTmplRef:\\n    | TemplateRef<any>\\n    | undefined;\\n  data = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n      age: 27,\\n      weight: 85.457,\\n      height: 1.85,\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n      age: 25,\\n      weight: 60.123,\\n      height: 1.65,\\n    },\\n  ];\\n  config: TableConfig = {};\\n  ngOnInit() {\\n    this.config = {\\n      columns: {\\n        firstName: {},\\n        lastName: {},\\n        gender: {},\\n        favoriteFood: {\\n          class: \'text-end flex-end\',\\n        },\\n        age: {\\n          class: \'text-end\',\\n        },\\n        weight: {\\n          class: \'text-end\',\\n          transform: {\\n            pipe: DecimalPipe,\\n            args: [\'1.0-2\'],\\n          },\\n        },\\n        height: {\\n          class: \'text-end\',\\n          templateRef: this.heightTmplRef,\\n        },\\n      },\\n      footer: {\\n        headers: {\\n          sum: \'Total\',\\n          numberOfWomen: \'Number of women\',\\n          numberOfMen: \'Number of men\',\\n          min: true,\\n          max: true,\\n          avg: true,\\n          count: true,\\n          static: true,\\n          first: true,\\n        },\\n        rowOrder: [\\n          \'first\',\\n          \'numberOfWomen\',\\n          \'numberOfMen\',\\n          \'min\',\\n          \'max\',\\n          \'sum\',\\n          \'avg\',\\n          \'count\',\\n        ],\\n        columns: {\\n          firstName: {},\\n          lastName: {\\n            static: \'n/a\',\\n          },\\n          gender: {\\n            numberOfWomen: (data: Array<TableRow>, key) => {\\n              let count = 0;\\n              for (let i = 0; i < data.length; i++) {\\n                if (data[i][key] === \'female\') {\\n                  count++;\\n                }\\n              }\\n              return count;\\n            },\\n            numberOfMen: (data: Array<TableRow>, key) => {\\n              let count = 0;\\n              for (let i = 0; i < data.length; i++) {\\n                if (data[i][key] === \'male\') {\\n                  count++;\\n                }\\n              }\\n              return count;\\n            },\\n          },\\n          favoriteFood: {\\n            first: (data: Array<TableRow>, key) => data[0][key],\\n          },\\n          age: {\\n            sum: true,\\n            avg: true,\\n            count: true,\\n            max: true,\\n            min: true,\\n          },\\n          weight: {\\n            sum: true,\\n            avg: true,\\n            min: true,\\n          },\\n          height: {\\n            avg: true,\\n            min: true,\\n            max: true,\\n          },\\n        },\\n      },\\n    };\\n  }\\n\\n}`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { BasicTableComponent } from \'./basic-table.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [BasicTableComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [BasicTableComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"},{"name":"SIMPLE_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/simple/simple.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'basic-table.component.ts\',\\n    code: `import { Component } from \'@angular/core\';\\nimport { TableConfig } from \'@angular-generic-table/core\';\\n\\ninterface BasicData {\\n  firstName: string;\\n  lastName: string;\\n  gender: \'male\' | \'female\';\\n  favoriteFood: string;\\n}\\n\\n@Component({\\n  template: \'<angular-generic-table [data]=\\"data\\" [config]=\\"config\\"></angular-generic-table>\'\\n})\\nexport class SimpleComponent {\\n  data: Array<BasicData> = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ];\\n  config: TableConfig<BasicData> = {\\n    columns: {\\n      firstName: {},\\n      lastName: {},\\n      gender: {},\\n      favoriteFood: {},\\n    },\\n  };\\n`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { BasicTableComponent } from \'./basic-table.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [BasicTableComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [BasicTableComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"},{"name":"SIMPLE_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/sorting/sorting.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'sorting-table.component.ts\',\\n    code: `import { Component } from \'@angular/core\';\\nimport { TableConfig } from \'@angular-generic-table/core\';\\n\\ninterface SortingData {\\n  firstName: string;\\n  lastName: string;\\n  gender: \'male\' | \'female\';\\n  favoriteFood: string;\\n  birthdate: number;\\n}\\n\\n@Component({\\n  template: \'<div class=\\"overflow-auto\\">\\n      <angular-generic-table\\n        #table\\n        [data]=\\"data\\"\\n        [config]=\\"config\\"\\n        [(sortOrder)]=\\"sortOrder\\"\\n        (columnSort)=\\"logSortChange($event)\\"\\n      ></angular-generic-table>\\n    </div>\\n    <div class=\\"row mb-3 gy-3\\">\\n      <div class=\\"col-12 col-sm-auto\\">\\n        <button\\n          class=\\"btn btn-primary w-100\\"\\n          (click)=\\"table.sortByKey(\'firstName\', $event)\\"\\n        >\\n          Sort on first name\\n        </button>\\n      </div>\\n      <div class=\\"col-12 col-sm-auto\\">\\n        <button class=\\"btn btn-primary w-100\\" (click)=\\"resetSort()\\">\\n          Reset sorting\\n        </button>\\n      </div>\\n    </div>\\n    <strong>Current sort order</strong>\\n    <p>\\n      <code>\\n        {{ sortOrder | json }}\\n      </code>\\n    </p>\'\\n})\\nexport class SimpleComponent {\\n  initialSortOrder: GtSortOrder<SortingData> = [\\n    { key: \'birthdate\', order: \'asc\' },\\n    { key: \'gender\', order: \'asc\' },\\n    { key: \'firstName\', order: \'desc\' },\\n  ];\\n  sortOrder: GtSortOrder<SortingData> = this.initialSortOrder;\\n  data: Array<SortingData> = [\\n    {\\n      firstName: \'John\',\\n      lastName: \'Doe\',\\n      gender: \'male\',\\n      favoriteFood: \'pizza\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Jane\',\\n      lastName: \'Smith\',\\n      gender: \'female\',\\n      favoriteFood: \'sushi\',\\n      birthdate: 803404800000,\\n    },\\n    {\\n      firstName: \'Bob\',\\n      lastName: \'Johnson\',\\n      gender: \'male\',\\n      favoriteFood: \'burgers\',\\n      birthdate: 649345600000,\\n    },\\n    {\\n      firstName: \'Emily\',\\n      lastName: \'Williams\',\\n      gender: \'female\',\\n      favoriteFood: \'chicken\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Michael\',\\n      lastName: \'Jones\',\\n      gender: \'male\',\\n      favoriteFood: \'steak\',\\n      birthdate: 803404800000,\\n    },\\n    {\\n      firstName: \'Matthew\',\\n      lastName: \'Brown\',\\n      gender: \'male\',\\n      favoriteFood: \'seafood\',\\n      birthdate: 649345600000,\\n    },\\n    {\\n      firstName: \'Jessica\',\\n      lastName: \'Miller\',\\n      gender: \'female\',\\n      favoriteFood: \'salad\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Jacob\',\\n      lastName: \'Moore\',\\n      gender: \'male\',\\n      favoriteFood: \'pasta\',\\n      birthdate: 803404800000,\\n    },\\n    {\\n      firstName: \'Nicholas\',\\n      lastName: \'Taylor\',\\n      gender: \'male\',\\n      favoriteFood: \'soup\',\\n      birthdate: 649345600000,\\n    },\\n    {\\n      firstName: \'Ashley\',\\n      lastName: \'Anderson\',\\n      gender: \'female\',\\n      favoriteFood: \'tacos\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Brandon\',\\n      lastName: \'Thomas\',\\n      gender: \'male\',\\n      favoriteFood: \'nachos\',\\n      birthdate: 803404800000,\\n    },\\n  ];\\n  config: TableConfig<SortingData> = {\\n    columns: {\\n      firstName: {\\n        sortable: true,\\n      },\\n      lastName: {\\n        sortable: true,\\n      },\\n      gender: {\\n        sortable: true,\\n      },\\n      favoriteFood: {\\n        sortable: true,\\n      },\\n      birthdate: {\\n        sortable: true,\\n        transform: {\\n          pipe: DatePipe,\\n        },\\n      },\\n    },\\n  };\\n\\n  logSortChange(sortEvent: GtSortEvent<SortingData>) {\\n    console.log(sortEvent);\\n  }\\n\\n  resetSort() {\\n    this.sortOrder = this.initialSortOrder;\\n  }\\n}\\n`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { SortingTableComponent } from \'./sorting-table.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [SortingTableComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [SortingTableComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"},{"name":"Sorting","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/sorting/sorting.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<SortingComponent>","defaultValue":"(args: SortingComponent) => ({\\n  props: args,\\n  component: SortingComponent,\\n})"},{"name":"sortOnMultipleKeys","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/lib/utilities/utilities.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(\\n  keys: GtSortOrder\\n): ((a: TableRow, b: TableRow) => number) => {\\n  const order = keys.map((key) => (key.order === \'desc\' ? -1 : 1));\\n  return (a, b) => {\\n    for (let i = 0; i < keys.length; i++) {\\n      const o = keys[i].key;\\n      if (a[o] > b[o]) return order[i];\\n      if (a[o] < b[o]) return -order[i];\\n    }\\n    return 0;\\n  };\\n}","rawdescription":"sortOnMultipleKeys","description":"<p>sortOnMultipleKeys</p>\\n"},{"name":"Tabs","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/components/tabs/tabs.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<TabsComponent>","defaultValue":"(args: TabsComponent) => ({\\n  props: args,\\n  component: TabsComponent,\\n})"},{"name":"Transpose","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/transpose/transpose.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<TransposeComponent>","defaultValue":"(\\n  args: TransposeComponent\\n) => ({\\n  props: args,\\n  component: TransposeComponent,\\n})"},{"name":"TRANSPOSE_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/transpose/transpose.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'transpose.component.ts\',\\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { BehaviorSubject, Observable } from \'rxjs\';\\nimport { TableConfig, GtDeltaComponent } from \'@angular-generic-table/core\';\\nimport { FormBuilder } from \'@angular/forms\';\\nimport { withLatestFrom } from \'rxjs/operators\';\\n\\ninterface RawData {\\n  year: string;\\n  value: number;\\n}\\ninterface YearData extends RawData {\\n  delta: number;\\n  deltaIndex: number;\\n  combined: number;\\n  deltaAbsolute: number;\\n}\\n@Component({\\n  templateUrl: \'./transpose.component.html\',\\n  styles: []\\n})\\nexport class TransposeComponent implements OnInit {\\n  @ViewChild(\'delta\', { static: true }) delta:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  @ViewChild(\'deltaAbsolute\', { static: true }) deltaAbsolute:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  @ViewChild(\'deltaIndex\', { static: true }) deltaIndex:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  @ViewChild(\'combined\', { static: true }) combined:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  loading$ = new BehaviorSubject(false);\\n  reactiveForm = this.fb.group({\\n    length: [10],\\n    search: [\'\'],\\n  });\\n  search$ = this.reactiveForm.get(\'search\')?.valueChanges as Observable<string>;\\n  tableConfig$: BehaviorSubject<TableConfig<YearData>> = new BehaviorSubject<\\n    TableConfig<YearData>\\n  >({});\\n  data: Array<RawData> = [];\\n\\n  constructor(private fb: UntypedFormBuilder) {}\\n\\n  ngOnInit(): void {\\n    this.transpose();\\n    this.load();\\n    this.reactiveForm\\n      .get(\'length\')\\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\\n      .subscribe(([length, config]) => {\\n        length = +length;\\n        this.tableConfig$.next({\\n          ...config,\\n          pagination: { ...config.pagination, length },\\n        });\\n      });\\n  }\\n\\n  simulateLoad(): void {\\n    this.loading$.next(true);\\n    // set loading state to false after 2 seconds\\n    setTimeout(() => this.loading$.next(false), 2000);\\n  }\\n  empty(): void {\\n    this.data = [];\\n  }\\n  load(): void {\\n    this.data = [\\n      {\\n        year: \'2010\',\\n        value: 15,\\n      },\\n      {\\n        year: \'2011\',\\n        value: 30,\\n      },\\n      {\\n        year: \'2012\',\\n        value: 25,\\n      },\\n      {\\n        year: \'2013\',\\n        value: 0,\\n      },\\n      {\\n        year: \'2014\',\\n        value: 40,\\n      },\\n      {\\n        year: \'2015\',\\n        value: 0,\\n      },\\n      {\\n        year: \'2016\',\\n        value: -5,\\n      },\\n      {\\n        year: \'2018\',\\n        value: 75,\\n      },\\n      {\\n        year: \'2019\',\\n        value: 100,\\n      },\\n      {\\n        year: \'2020\',\\n        value: 250,\\n      },\\n      {\\n        year: \'2021\',\\n        value: 50,\\n      },\\n      {\\n        year: \'2022\',\\n        value: 60,\\n      },\\n    ];\\n  }\\n  transpose(): void {\\n    if (this.tableConfig$.value.columns) {\\n      this.tableConfig$.next({\\n        stickyHeaders: {\\n          row: true,\\n          column: true,\\n        },\\n        rows: {\\n          year: {\\n            sortable: true,\\n            header: false,\\n            class: \'text-end\',\\n          },\\n          value: {\\n            class: \'text-end\',\\n          },\\n          delta: {\\n            header: \'Delta %\',\\n            templateRef: this.delta,\\n            class: \'text-end\',\\n          },\\n          deltaIndex: {\\n            header: \'Since inception %\',\\n            templateRef: this.deltaIndex,\\n            class: \'text-end\',\\n          },\\n          deltaAbsolute: {\\n            header: \'Delta\',\\n            templateRef: this.deltaAbsolute,\\n            class: \'text-end\',\\n          },\\n          combined: {\\n            header: \'Value with change\',\\n            templateRef: this.combined,\\n            class: \'text-end text-nowrap\',\\n          },\\n        },\\n      });\\n    } else {\\n      this.tableConfig$.next({\\n        stickyHeaders: {\\n          row: true,\\n          column: true,\\n        },\\n        columns: {\\n          year: {\\n            sortable: true,\\n          },\\n          value: {\\n            class: \'text-end\',\\n          },\\n          delta: {\\n            header: \'Delta %\',\\n            templateRef: this.delta,\\n            class: \'text-end\',\\n          },\\n          deltaIndex: {\\n            header: \'Since inception %\',\\n            templateRef: this.deltaIndex,\\n            class: \'text-end\',\\n          },\\n          deltaAbsolute: {\\n            header: \'Delta\',\\n            templateRef: this.deltaAbsolute,\\n            class: \'text-end\',\\n          },\\n          combined: {\\n            header: \'Value with change\',\\n            templateRef: this.combined,\\n            class: \'text-end text-nowrap\',\\n          },\\n        },\\n        pagination: { length: this.reactiveForm.get(\'length\')?.value },\\n      });\\n    }\\n  }\\n}\\n`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'transpose.component.html\',\\n    code: `<form [formGroup]=\\"reactiveForm\\">\\n  <div class=\\"row gy-3 gx-3 align-items-end mb-3\\">\\n    <div class=\\"form-group col-6 col-sm-auto\\">\\n      <label for=\\"length_input\\">Number of rows</label>\\n      <input\\n        id=\\"length_input\\"\\n        formControlName=\\"length\\"\\n        type=\\"number\\"\\n        class=\\"form-control\\"\\n      />\\n    </div>\\n    <div class=\\"form-group col-6 col-sm-auto\\">\\n      <label for=\\"search_input\\">Search</label>\\n      <input\\n        id=\\"search_input\\"\\n        formControlName=\\"search\\"\\n        type=\\"text\\"\\n        class=\\"form-control\\"\\n      />\\n    </div>\\n    <div class=\\"col-auto\\">\\n      <button\\n        class=\\"btn btn-outline-primary w-100\\"\\n        (click)=\\"simulateLoad()\\"\\n      >\\n        Simulate load\\n      </button>\\n    </div>\\n    <div class=\\"col col-sm-auto\\">\\n      <button class=\\"btn btn-outline-danger w-100\\" (click)=\\"empty()\\">\\n        Empty\\n      </button>\\n    </div>\\n    <div class=\\"col col-sm-auto\\">\\n      <button class=\\"btn btn-outline-primary w-100\\" (click)=\\"load()\\">\\n        Reset\\n      </button>\\n    </div>\\n    <div class=\\"col col-sm-auto\\">\\n      <button class=\\"btn btn-outline-primary w-100\\" (click)=\\"transpose()\\">\\n        Transpose\\n      </button>\\n    </div>\\n  </div>\\n  <div class=\\"overflow-auto\\">\\n    <angular-generic-table\\n      #table\\n      [data]=\\"data\\"\\n      [config]=\\"tableConfig$\\"\\n      [loading]=\\"loading$\\"\\n      [search]=\\"search$\\"\\n    >\\n      <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n      <div class=\\"table-no-data alert alert-info mt-3\\">Table is empty</div>\\n    </angular-generic-table>\\n  </div>\\n  <angular-generic-table-pagination [table]=\\"table\\">\\n  </angular-generic-table-pagination>\\n  <ng-template #delta let-index=\\"index\\" let-data=\\"data\\">\\n    <gt-delta [index]=\\"index\\" [data]=\\"data\\"></gt-delta>\\n  </ng-template>\\n  <ng-template #deltaAbsolute let-index=\\"index\\" let-data=\\"data\\">\\n    <gt-delta\\n      [index]=\\"index\\"\\n      [data]=\\"data\\"\\n      [deltaTemplate]=\\"deltaTemplate\\"\\n    ></gt-delta>\\n  </ng-template>\\n  <ng-template #deltaIndex let-index=\\"index\\" let-data=\\"data\\">\\n    <gt-delta [index]=\\"index\\" [data]=\\"data\\" [baseIndex]=\\"0\\"></gt-delta>\\n  </ng-template>\\n  <ng-template\\n    #combined\\n    let-index=\\"index\\"\\n    let-data=\\"data\\"\\n    let-row=\\"row\\"\\n    let-col=\\"col\\"\\n  >\\n    {{ row.value }}\\n    <ng-container *ngIf=\\"index > 0\\">\\n      <gt-delta [index]=\\"index\\" [data]=\\"data\\"></gt-delta>\\n    </ng-container>\\n  </ng-template>\\n  <ng-template #deltaTemplate let-delta=\\"delta\\">\\n    <span>{{ delta.absolute }}</span></ng-template\\n  >\\n  <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n</form>`,\\n    language: \'xml\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { HorizontalTableComponent } from \'./horizontal-table.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [HorizontalTableComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [HorizontalTableComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"}],"functions":[],"typealiases":[{"name":"FooterCalculation","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"sum\\" | \\"avg\\" | \\"count\\" | \\"max\\" | \\"min\\"","file":"projects/core/src/lib/models/table-config.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"GtOrder","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"asc\\" | \\"desc\\"","file":"projects/core/src/lib/models/table-sort.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"GtSortOrder","ctype":"miscellaneous","subtype":"typealias","rawtype":"Array<GtSortConfig<R>>","file":"projects/core/src/lib/models/table-sort.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":177},{"name":"SearchFunction","ctype":"miscellaneous","subtype":"typealias","rawtype":"function","file":"projects/core/src/lib/models/table-column.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":178}],"enumerations":[],"groupedVariables":{"projects/docs/src/app/app.component.ts":[{"name":"Advanced","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/app.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<AppComponent>","defaultValue":"(args: AppComponent) => ({\\n  props: args,\\n  component: AppComponent,\\n})"}],"projects/docs/src/app/examples/advanced/advanced.component.ts":[{"name":"Advanced","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/advanced/advanced.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<AdvancedComponent>","defaultValue":"(\\n  args: AdvancedComponent\\n) => ({\\n  props: args,\\n  component: AdvancedComponent,\\n})"}],"projects/docs/src/app/examples/advanced/advanced.snippets.ts":[{"name":"ADVANCED_DOCS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/advanced/advanced.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'advanced.component.html\',\\n    code: `<div class=\\"row gx-2 gy-3 mb-3\\">\\n  <div class=\\"col-12 col-sm-auto\\">\\n    <button class=\\"btn btn-primary w-100\\" (click)=\\"addData()\\">Add random data</button>\\n  </div>\\n  <div class=\\"col-12 col-sm-auto\\">\\n    <button class=\\"btn btn-danger w-100\\" (click)=\\"removeData()\\">Remove data</button>\\n  </div>\\n  <div class=\\"col-12 col-sm-auto\\">\\n    <button class=\\"btn btn-secondary w-100\\" (click)=\\"simulateLoad()\\">Load</button>\\n  </div>\\n</div>\\n<form [formGroup]=\\"paginationForm\\">\\n  <div class=\\"row\\">\\n    <div class=\\"form-group col-12 col-sm-auto\\">\\n      <label for=\\"length_input\\">Length</label>\\n      <input id=\\"length_input\\" formControlName=\\"length\\" type=\\"number\\" class=\\"form-control\\">\\n    </div>\\n    <div class=\\"form-group col-12 col-sm-auto\\">\\n      <label for=\\"search_input\\">Search</label>\\n      <input id=\\"search_input\\" formControlName=\\"search\\" type=\\"text\\" class=\\"form-control\\">\\n    </div>\\n  </div>\\n</form>\\n<div class=\\"mx-n3 mx-sm-0\\">\\n  <angular-generic-table [data]=\\"data$\\" [config]=\\"tableConfig$\\" [page]=\\"(currentPage$ | async)!\\" [search]=\\"search$\\" [loading]=\\"loading$\\" #table>\\n    <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n    <div class=\\"table-no-data alert alert-info mt-3\\">\\n      Table is empty\\n    </div>\\n  </angular-generic-table>\\n</div>\\n<div class=\\"row justify-content-between justify-content-sm-center align-items-center mt-3\\" *ngIf=\\"{current: (currentPage$ | async) || 0,total: (table.table$ | async)?.info?.pageTotal || 1\\n} as pagination\\">\\n  <div class=\\"col-auto\\">\\n    <button class=\\"btn btn-primary\\" (click)=\\"prev()\\" [disabled]=\\"pagination.current === 0\\">Prev</button>\\n  </div>\\n  <div class=\\"col-auto\\">\\n    <button class=\\"btn btn-primary\\" (click)=\\"next()\\" [disabled]=\\"pagination.total -1 === pagination.current\\">Next</button>\\n  </div>\\n  <div class=\\"col-auto\\">Current page: {{pagination.current +1}}</div>\\n  <div class=\\"col-auto\\">Total pages: {{pagination.total}}</div>\\n  <div class=\\"col-auto\\">\\n    Records: {{(data$ | async).length}}\\n  </div>\\n  <div class=\\"col-auto\\">\\n    {{clicked}}\\n  </div>\\n</div>\\n<ng-template #actions let-row=\\"row\\" let-col=\\"col\\" let-index=\\"index\\">\\n  <button\\n    *ngIf=\\"index !== undefined\\"\\n    class=\\"btn btn-outline-primary btn-sm\\"\\n    (click)=\\"clickAction(row, col, index)\\"\\n  >\\n    Click me!\\n  </button>\\n</ng-template>\\n<ng-template #color let-row=\\"row\\" let-col=\\"col\\">\\n  <div\\n    [style.background]=\\"row[col.key]\\"\\n    style=\\"width: 1.5rem; height: 1.5rem; border-radius: 50%\\"\\n  ></div>\\n</ng-template>`,\\n    language: \'xml\',\\n  },\\n  {\\n    name: \'advanced.component.ts\',\\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { BehaviorSubject, Observable, ReplaySubject } from \'rxjs\';\\nimport { FormBuilder } from \'@angular/forms\';\\nimport { TableColumn, TableConfig, TableRow } from \'@angular-generic-table/core\';\\nimport { withLatestFrom } from \'rxjs/operators\';\\n\\n@Component({\\n  templateUrl: \'./advanced.component.html\',\\n})\\nexport class AdvancedComponent implements OnInit {\\n  get currentPage$(): Observable<number> {\\n    return this._currentPage$.asObservable();\\n  }\\n\\n  set currentPage(value: number) {\\n    this._currentPage$.next(value);\\n  }\\n  constructor(private fb: FormBuilder) {}\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  @ViewChild(\'color\', { static: true }) color: TemplateRef<any> | undefined;\\n  paginationForm = this.fb.group({\\n    length: [10],\\n    search: [\'\'],\\n  });\\n  search$ = this.paginationForm.get(\'search\')?.valueChanges as Observable<string>;\\n  loading$ = new BehaviorSubject(true);\\n  data$: BehaviorSubject<any> = new BehaviorSubject([\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteColor: \'#26BFAF\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteColor: \'#0f0\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ]);\\n\\n  private _currentPage$ = new BehaviorSubject(0);\\n\\n  clicked: string = \'\';\\n  maleFirstNames = [\'Peter\', \'Clark\', \'Ruben\', \'John\', \'Jack\', \'Roscoe\'];\\n  femaleFirstNames = [\'Mary Jane\', \'Kim\', \'Sarah\', \'Michelle\', \'Ann\'];\\n  lastNames = [\'Andersson\', \'Smith\', \'Parker\', \'Kent\', \'Rogers\', \'Lane\', \'Jackson\'];\\n  foods = [\'Pizza\', \'Pasta\', \'Hamburger\', \'Pancakes\', \'Tacos\', \'Lasagna\', \'Meatloaf\'];\\n  colors = [\'#33d60b\', \'#dcafff\', \'#3fc9ff\', \'#ff1600\', \'#5238b1\', \'#fff\'];\\n\\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\\n\\n  addData(): void {\\n    this.data$.next([...this.data$.getValue(), this.randomRecord()]);\\n  }\\n\\n  removeData(): void {\\n    this.data$.next([]);\\n  }\\n\\n  simulateLoad(): void {\\n    this.loading$.next(true);\\n    // set loading state to false after 2 seconds\\n    setTimeout(() => this.loading$.next(false), 2000);\\n  }\\n\\n  clickAction(row: TableRow, column: { key: string; value: TableColumn }, index: number): void {\\n    console.log(\'clicked row:\', row, \'col:\', column);\\n    this.clicked = \\\\`clicked row number: \\\\${index}\\\\`;\\n  }\\n\\n  randomRecord(): TableRow {\\n    const random = Math.floor(Math.random() * 2);\\n    const newRecord = {\\n      firstName: random\\n        ? this.maleFirstNames[Math.floor(Math.random() * this.maleFirstNames.length)]\\n        : this.femaleFirstNames[Math.floor(Math.random() * this.femaleFirstNames.length)],\\n      lastName: this.lastNames[Math.floor(Math.random() * this.lastNames.length)],\\n      gender: random ? \'male\' : \'female\',\\n      favoriteColor: this.colors[Math.floor(Math.random() * this.colors.length)],\\n      favoriteFood: this.foods[Math.floor(Math.random() * this.foods.length)],\\n    };\\n    console.log(\'added new random record:\', newRecord);\\n\\n    return newRecord;\\n  }\\n\\n  next = () => {\\n    this.currentPage = this._currentPage$.value + 1;\\n  };\\n  prev = () => {\\n    this.currentPage = this._currentPage$.value - 1;\\n  };\\n\\n  ngOnInit(): void {\\n    this.simulateLoad();\\n    this.paginationForm\\n      .get(\'length\')\\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\\n      .subscribe(([length, config]) => {\\n        length = +length;\\n        this.tableConfig$.next({\\n          ...config,\\n          pagination: { ...config.pagination, length },\\n        });\\n      });\\n    this.tableConfig$.next({\\n      class: \'table table-mobile text-nowrap mb-0\',\\n      columns: {\\n        firstName: {\\n          header: \'First name\',\\n          mobileHeader: true,\\n          sortable: true,\\n          order: 0,\\n        },\\n        lastName: {\\n          header: \'Last name\',\\n          mobileHeader: true,\\n          hidden: false,\\n          sortable: true,\\n        },\\n        gender: {\\n          mobileHeader: \'Sex\',\\n          sortable: true,\\n          order: 1,\\n        },\\n        favoriteColor: {\\n          header: \'Favorite color\',\\n          mobileHeader: true,\\n          templateRef: this.color,\\n          sortable: false,\\n          order: 2,\\n          search: false,\\n          class: \'custom-class\',\\n        },\\n        favoriteFood: {\\n          mobileHeader: true,\\n          header: \'Favorite food\',\\n          hidden: false,\\n          sortable: true,\\n          order: 0,\\n        },\\n        action: {\\n          mobileHeader: false,\\n          header: false,\\n          templateRef: this.actions,\\n          order: 6,\\n        },\\n      },\\n      pagination: {\\n        length: this.paginationForm.get(\'length\')?.value || 0,\\n      },\\n      footer: {\\n        columns: {\\n          gender: {\\n            count: (data, key) => {\\n              let men = 0;\\n              let women = 0;\\n              for (let i = 0; i < data.length; i++) {\\n                if (data[i][key] === \'female\') {\\n                  women++;\\n                } else if (data[i][key] === \'male\') {\\n                  men++;\\n                }\\n              }\\n              return \\\\`♂ \\\\${men} ♀ \\\\${women}\\\\`;\\n            },\\n          },\\n          favoriteColor: {},\\n          action: { count: (data, key) => \\\\`Total: \\\\${data.length}\\\\` },\\n        },\\n      },\\n    });\\n  }\\n}`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\nimport { ReactiveFormsModule } from \'@angular/forms\';\\n\\nimport { AdvancedComponent } from \'./advanced.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [AdvancedComponent],\\n  imports: [BrowserModule, ReactiveFormsModule, GenericTableCoreModule],\\n  bootstrap: [AdvancedComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"}],"projects/docs/src/app/examples/pagination/pagination.snippets.ts":[{"name":"ADVANCED_DOCS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/pagination/pagination.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'pagination.component.html\',\\n    code: `<form [formGroup]=\\"paginationForm\\">\\n  <div class=\\"row gy-3\\">\\n    <div class=\\"form-group col-12 col-sm-auto\\">\\n      <label for=\\"length_input\\">Length</label>\\n      <input id=\\"length_input\\" formControlName=\\"length\\" type=\\"number\\" class=\\"form-control\\">\\n    </div>\\n    <div class=\\"form-group col-12 col-sm-auto\\">\\n      <label for=\\"search_input\\">Search</label>\\n      <input id=\\"search_input\\" formControlName=\\"search\\" type=\\"text\\" class=\\"form-control\\">\\n    </div>\\n  </div>\\n</form>\\n<div class=\\"mx-n3 mx-sm-0 my-3 overflow-auto\\">\\n  <angular-generic-table [data]=\\"data$\\" [config]=\\"tableConfig$\\" [search]=\\"search$\\" [loading]=\\"loading$\\" #table>\\n    <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n    <div class=\\"table-no-data alert alert-info mt-3\\">\\n      Table is empty\\n    </div>\\n  </angular-generic-table>\\n</div>\\n<angular-generic-table-pagination [table]=\\"table\\">\\n</angular-generic-table-pagination>`,\\n    language: \'xml\',\\n  },\\n  {\\n    name: \'pagination.component.ts\',\\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { BehaviorSubject, Observable, ReplaySubject } from \'rxjs\';\\nimport { FormBuilder } from \'@angular/forms\';\\nimport { TableConfig } from \'@angular-generic-table/core\';\\nimport { pluck, tap, withLatestFrom } from \'rxjs/operators\';\\nimport { HttpClient } from \'@angular/common/http\';\\nimport { DatePipe } from \'@angular/common\';\\n\\n@Component({\\n  selector: \'docs-pagination\',\\n  templateUrl: \'./pagination.component.html\',\\n  styles: [],\\n})\\nexport class PaginationComponent implements OnInit {\\n  constructor(private fb: FormBuilder, private http: HttpClient) {}\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  @ViewChild(\'color\', { static: true }) color: TemplateRef<any> | undefined;\\n  paginationForm = this.fb.group({\\n    length: [10],\\n    search: [\'\'],\\n  });\\n  search$ = this.paginationForm.get(\'search\')?.valueChanges as Observable<string>;\\n  loading$ = new BehaviorSubject(true);\\n  data$: Observable<any> = this.http.get(\'https://private-730c61-generictable.apiary-mock.com/data\').pipe(\\n    pluck(\'data\'),\\n    tap((_) => this.loading$.next(false))\\n  );\\n\\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\\n\\n  ngOnInit(): void {\\n    this.paginationForm\\n      .get(\'length\')\\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\\n      .subscribe(([length, config]) => {\\n        length = +length;\\n        this.tableConfig$.next({\\n          ...config,\\n          pagination: { ...config.pagination, length },\\n        });\\n      });\\n    this.tableConfig$.next({\\n      class: \'table text-nowrap\',\\n      columns: {\\n        first_name: {\\n          sortable: true,\\n        },\\n        last_name: {\\n          sortable: true,\\n        },\\n        gender: {\\n          sortable: true,\\n        },\\n        birthday: {\\n          sortable: true,\\n          class: \'text-end\',\\n          transform: {\\n            pipe: DatePipe,\\n            args: [\'longDate\'],\\n          },\\n        },\\n      },\\n      pagination: {\\n        length: this.paginationForm.get(\'length\')?.value || 0,\\n      },\\n    });\\n  }\\n}`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\nimport { HttpClientModule } from \'@angular/common/http\';\\nimport { ReactiveFormsModule } from \'@angular/forms\';\\n\\nimport { PaginationComponent } from \'./pagination.component\';\\nimport { GenericTableCoreModule, GenericTablePaginationModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [PaginationComponent],\\n  imports: [\\n    BrowserModule,\\n    GenericTableCoreModule,\\n    GenericTablePaginationModule,\\n    ReactiveFormsModule,\\n    HttpClientModule\\n  ],\\n  bootstrap: [PaginationComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"}],"projects/core/src/lib/utilities/utilities.ts":[{"name":"calculate","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/lib/utilities/utilities.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(data: Array<TableRow>, config: TableConfig) => {\\n  const CALCULATIONS: { [key: string]: boolean } = {};\\n  const COLUMN_CALCULATIONS: { [key: string]: Array<string> } = {};\\n  let CALCULATED = Object.entries(config.footer?.columns || {})\\n    .filter(\\n      ([columnName, calculations]) =>\\n        Object.values(calculations || {}).filter((value) => value !== false)\\n          .length >= 0\\n    )\\n    .reduce((acc: any, [columnName, calculations], index) => {\\n      acc[columnName] = Object.entries(calculations || {})\\n        .filter(([calculation, value]) => value !== false)\\n        .reduce((acc: any, [calculation, value]) => {\\n          if (COLUMN_CALCULATIONS[columnName]) {\\n            COLUMN_CALCULATIONS[columnName].push(calculation);\\n          } else if (value === true) {\\n            COLUMN_CALCULATIONS[columnName] = [calculation];\\n          }\\n          CALCULATIONS[calculation] = true;\\n          if (typeof value === \'function\') {\\n            value = value(data, columnName);\\n          }\\n          acc[calculation] = value === true ? 0 : value;\\n          return acc;\\n        }, {});\\n      return acc;\\n    }, {});\\n  if (Object.keys(CALCULATED).length > 0) {\\n    for (let i = 0; i < data.length; i++) {\\n      Object.entries(COLUMN_CALCULATIONS).forEach(([column, calculations]) => {\\n        if (calculations.indexOf(\'sum\') > -1) {\\n          CALCULATED[column].sum += data[i][column];\\n        }\\n        if (\\n          calculations.indexOf(\'avg\') > -1 &&\\n          calculations.indexOf(\'sum\') === -1\\n        ) {\\n          if (CALCULATED[column].sum === undefined) {\\n            CALCULATED[column].sum = 0;\\n          }\\n          CALCULATED[column].sum += data[i][column];\\n        }\\n        if (\\n          calculations.indexOf(\'max\') > -1 &&\\n          (!CALCULATED[column].max || +data[i][column] > CALCULATED[column].max)\\n        ) {\\n          CALCULATED[column].max = +data[i][column];\\n        }\\n        if (\\n          calculations.indexOf(\'min\') > -1 &&\\n          (!CALCULATED[column].min || +data[i][column] < CALCULATED[column].min)\\n        ) {\\n          CALCULATED[column].min = +data[i][column];\\n        }\\n      });\\n    }\\n    Object.entries(COLUMN_CALCULATIONS).forEach(([column, calculations]) => {\\n      if (calculations.indexOf(\'avg\') !== -1) {\\n        CALCULATED[column].avg = CALCULATED[column]?.sum / data.length;\\n        // if sum is not part of calculations config...\\n        if (calculations.indexOf(\'sum\') === -1 && CALCULATED[column].sum) {\\n          // ...remove it\\n          delete CALCULATED[column].sum;\\n        }\\n      }\\n      if (calculations.indexOf(\'count\') !== -1) {\\n        CALCULATED[column].count = data.length;\\n      }\\n    });\\n  }\\n  return {\\n    calculated: CALCULATED,\\n    calculations: Object.keys(CALCULATIONS).sort(\\n      (a, b) =>\\n        (config.footer?.rowOrder?.indexOf(a) || 0) -\\n        (config.footer?.rowOrder?.indexOf(b) || 0)\\n    ),\\n    calculatedColumnsCount: Object.keys(CALCULATED).length || 0,\\n  };\\n}"},{"name":"capitalize","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/lib/utilities/utilities.ts","deprecated":false,"deprecationMessage":"","type":"string"},{"name":"chunk","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/lib/utilities/utilities.ts","deprecated":false,"deprecationMessage":"","type":"Array<Array<TableRow>>"},{"name":"dashed","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/lib/utilities/utilities.ts","deprecated":false,"deprecationMessage":"","type":"string"},{"name":"search","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/lib/utilities/utilities.ts","deprecated":false,"deprecationMessage":"","type":"TableRow[]"},{"name":"sortOnMultipleKeys","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/lib/utilities/utilities.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(\\n  keys: GtSortOrder\\n): ((a: TableRow, b: TableRow) => number) => {\\n  const order = keys.map((key) => (key.order === \'desc\' ? -1 : 1));\\n  return (a, b) => {\\n    for (let i = 0; i < keys.length; i++) {\\n      const o = keys[i].key;\\n      if (a[o] > b[o]) return order[i];\\n      if (a[o] < b[o]) return -order[i];\\n    }\\n    return 0;\\n  };\\n}","rawdescription":"sortOnMultipleKeys","description":"<p>sortOnMultipleKeys</p>\\n"}],"projects/core/src/test.ts":[{"name":"context","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/test.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"require.context(\'./\', true, /\\\\.spec\\\\.ts$/)"},{"name":"require","ctype":"miscellaneous","subtype":"variable","file":"projects/core/src/test.ts","deprecated":false,"deprecationMessage":"","type":"literal type"}],"projects/docs/src/test.ts":[{"name":"context","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/test.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"require.context(\'./\', true, /\\\\.spec\\\\.ts$/)"},{"name":"require","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/test.ts","deprecated":false,"deprecationMessage":"","type":"literal type"}],"projects/docs/src/app/examples/custom-templates/custom-templates.snippets.ts":[{"name":"CUSTOM_TEMPLATES_DOCS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/custom-templates/custom-templates.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'custom-templates.component.ts\',\\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { TableColumn, TableConfig, TableRow } from \'@angular-generic-table/core\';\\nimport { ReplaySubject } from \'rxjs\';\\n\\n@Component({\\n  selector: \'custom-templates\',\\n  templateUrl: \\\\`./custom-templates.component.html\\\\`\\n})\\nexport class CustomTemplatesComponent implements OnInit {\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  @ViewChild(\'color\', { static: true }) color: TemplateRef<any> | undefined;\\n  clicked = \'\';\\n\\n  data = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteColor: \'#26BFAF\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteColor: \'#0f0\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ];\\n  config$: ReplaySubject<TableConfig> = new ReplaySubject(1);\\n  ngOnInit(): void {\\n    this.config$.next({\\n      columns: {\\n        firstName: {},\\n        lastName: {},\\n        gender: {},\\n        favoriteColor: {\\n          templateRef: this.color,\\n        },\\n        favoriteFood: {},\\n        action: {\\n          templateRef: this.actions,\\n        },\\n      },\\n    });\\n  }\\n  clickAction(row: TableRow, column: { key: string; value: TableColumn }, index: number): void {\\n    console.log(\'clicked row:\', row, \'col:\', column);\\n    this.clicked = \\\\`clicked row number: \\\\${index}\\\\`;\\n  }\\n}`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { CustomTemplatesComponent } from \'./custom-templates-table.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [CustomTemplatesComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [CustomTemplatesComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'custom-templates.component.html\',\\n    code: `<angular-generic-table [data]=\\"data\\" [config]=\\"config$\\"></angular-generic-table>\\n<ng-template #actions let-row=\\"row\\" let-col=\\"col\\" let-index=\\"index\\">\\n <button class=\\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\\" (click)=\\"clickAction(row, col, index)\\">Click me!</button>\\n</ng-template>\\n<ng-template #color let-row=\\"row\\" let-col=\\"col\\">\\n <div [style.background]=\\"row[col.key]\\" style=\\"width: 1.5rem; height: 1.5rem; border-radius: 50%\\"></div>\\n</ng-template>\\n{{ clicked }}`,\\n    language: \'xml\',\\n  },\\n]"}],"projects/docs/src/app/examples/custom-templates/custom-templates.component.ts":[{"name":"CustomTemplates","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/custom-templates/custom-templates.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<CustomTemplatesComponent>","defaultValue":"(\\n  args: CustomTemplatesComponent\\n) => ({\\n  props: args,\\n  component: CustomTemplatesComponent,\\n})"}],"projects/docs/src/environments/environment.ts":[{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/environments/environment.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  production: false\\n}"}],"projects/docs/src/environments/environment.prod.ts":[{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/environments/environment.prod.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  production: true\\n}"}],"projects/docs/src/app/examples/footer/footer.component.ts":[{"name":"Footer","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/footer/footer.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<FooterComponent>","defaultValue":"(args: FooterComponent) => ({\\n  props: args,\\n  component: FooterComponent,\\n})"}],"projects/docs/src/app/examples/horizontal-table/horizontal-table.component.ts":[{"name":"Horizontal","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/horizontal-table/horizontal-table.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<HorizontalTableComponent>","defaultValue":"(\\n  args: HorizontalTableComponent\\n) => ({\\n  props: args,\\n  component: HorizontalTableComponent,\\n})"}],"projects/docs/src/app/examples/horizontal-table/horizontal-table.snippets.ts":[{"name":"HORIZONTAL_TABLE_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/horizontal-table/horizontal-table.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'horizontal-table.component.ts\',\\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { GtDeltaComponent, TableConfig } from \'@angular-generic-table/core\';\\nimport { BehaviorSubject } from \'rxjs\';\\n\\n@Component({\\n  selector: \'docs-horizontal\',\\n  templateUrl: \'./horizontal-table.component.html\',\\n  styles: [],\\n})\\nexport class TransposeComponent implements OnInit {\\n  @ViewChild(\'feelings\', { static: true }) feelings:\\n    | TemplateRef<any>\\n    | undefined;\\n  @ViewChild(\'delta\', { static: true }) delta: TemplateRef<GtDeltaComponent> | undefined;\\n  @ViewChild(\'deltaIndex\', { static: true }) deltaIndex:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  loading$ = new BehaviorSubject(false);\\n  config: TableConfig = {};\\n  data: any = [];\\n\\n  ngOnInit(): void {\\n    this.config = {\\n      stickyHeaders: {\\n        row: true,\\n      },\\n      mobileLayout: true,\\n      rows: {\\n        year: {\\n          class: \'text-end\',\\n          header: false\\n        },\\n        value: {\\n          class: \'text-end\'\\n        },\\n        delta: {\\n          header: \'Delta %\',\\n          templateRef: this.delta,\\n          class: \'text-end\'\\n        },\\n        deltaIndex: {\\n          header: \'Since inception %\',\\n          templateRef: this.deltaIndex,\\n          class: \'text-end\'\\n        },\\n        feeling: {\\n          templateRef: this.feelings,\\n          class: \'text-end\'\\n        },\\n      },\\n    };\\n    this.load();\\n  }\\n  simulateLoad(): void {\\n    this.loading$.next(true);\\n    // set loading state to false after 2 seconds\\n    setTimeout(() => this.loading$.next(false), 2000);\\n  }\\n  empty(): void {\\n    this.data = [];\\n  }\\n  load(): void {\\n    this.data = [\\n      {\\n        year: \'2017\',\\n        value: 50,\\n        feeling: \'neutral\'\\n      },\\n      {\\n        year: \'2018\',\\n        value: 75,\\n        feeling: \'positive\'\\n      },\\n      {\\n        year: \'2019\',\\n        value: 100,\\n        feeling: \'thrilled\'\\n      },\\n      {\\n        year: \'2020\',\\n        value: 250,\\n        feeling: \'thrilled\'\\n      },\\n      {\\n        year: \'2021\',\\n        value: 50,\\n        feeling: \'negative\'\\n      }\\n    ];\\n  }\\n}\\n`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'horizontal-table.component.html\',\\n    code: `<button class=\\"btn btn-outline-primary\\" (click)=\\"simulateLoad()\\">Simulate load</button>\\n<button class=\\"btn btn-outline-danger mx-3\\" (click)=\\"empty()\\">Empty</button>\\n<button class=\\"btn btn-outline-primary\\" (click)=\\"load()\\">Reset</button>\\n<div class=\\"overflow-auto\\">\\n  <angular-generic-table\\n    [data]=\\"data\\"\\n    [config]=\\"config\\"\\n    [loading]=\\"loading$\\"\\n  >\\n    <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n    <div class=\\"table-no-data alert alert-info mt-3\\">Table is empty</div>\\n  </angular-generic-table>\\n</div>\\n<ng-template #feelings let-row=\\"row\\" let-col=\\"col\\">\\n  <div [ngSwitch]=\\"row[col.key]\\">\\n    <ng-container *ngSwitchCase=\\"\'thrilled\'\\">😀</ng-container>\\n    <ng-container *ngSwitchCase=\\"\'positive\'\\">🙂</ng-container>\\n    <ng-container *ngSwitchCase=\\"\'neutral\'\\">😐</ng-container>\\n    <ng-container *ngSwitchCase=\\"\'negative\'\\">😭</ng-container>\\n  </div>\\n</ng-template>\\n<ng-template #delta let-data=\\"data\\" let-index=\\"index\\">\\n  <gt-delta [index]=\\"index\\" [data]=\\"data\\"></gt-delta>\\n</ng-template>\\n<ng-template #deltaIndex let-data=\\"data\\" let-index=\\"index\\">\\n  <gt-delta [index]=\\"index\\" [baseIndex]=\\"0\\" [data]=\\"data\\"></gt-delta>\\n</ng-template>`,\\n    language: \'xml\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { HorizontalTableComponent } from \'./horizontal-table.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [HorizontalTableComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [HorizontalTableComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"}],"projects/docs/src/app/examples/mobile-layout/mobile-layout.component.ts":[{"name":"Mobile","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/mobile-layout/mobile-layout.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<MobileLayoutComponent>","defaultValue":"(\\n  args: MobileLayoutComponent\\n) => ({\\n  props: args,\\n  component: MobileLayoutComponent,\\n})"}],"projects/docs/src/app/examples/mobile-layout/mobileLayout.snippets.ts":[{"name":"MOBILE_LAYOUT_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/mobile-layout/mobileLayout.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'mobile-layout.component.ts\',\\n    code: `import {Component, Pipe, PipeTransform, TemplateRef, ViewChild, ViewEncapsulation} from \'@angular/core\';\\nimport {TableColumn, TableConfig, TableRow} from \\"@angular-generic-table/core\\";\\nimport {BehaviorSubject, Observable} from \\"rxjs\\";\\nimport {map} from \\"rxjs/operators\\";\\n\\n@Pipe({\\n  name: \'genderPipe\',\\n})\\nexport class GenderPipe implements PipeTransform {\\n  transform(gender: \'male\' | \'female\'): string {\\n  return gender === \'male\' ? \'👨\' : \'👩\';\\n  }\\n}\\n\\n@Component({\\n  selector: \'docs-mobile-layout\',\\n  template: \\\\`\\n    <div class=\\"d-flex justify-content-end mb-1 align-items-center\\">\\n      {{clicked}} <button class=\\"btn btn-link d-sm-none \\" (click)=\\"toggleLayout()\\">{{(mobileLayout$ | async)? \'Desktop \' : \'Mobile \'}} layout</button>\\n    </div>\\n    <div [class.overflow-auto]=\\"(mobileLayout$ | async) === false\\">\\n      <angular-generic-table [data]=\\"data\\" [config]=\\"config$\\"></angular-generic-table>\\n    </div>\\n    <ng-template #actions let-row=\\"row\\" let-col=\\"col\\" let-index=\\"index\\">\\n      <button class=\\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\\" (click)=\\"clickAction(row, col, index)\\">Click me!</button>\\n    </ng-template>\\n  \\\\`,\\n  styles: [\\\\`\\n    .table th {\\n      white-space: nowrap;\\n    }\\n  \\\\`],\\n  encapsulation: ViewEncapsulation.None\\n})\\nexport class MobileLayoutComponent {\\n  @ViewChild(\'actions\', { static: true }) actions: TemplateRef<any> | undefined;\\n  clicked = \'\';\\n\\n  mobileLayout$ = new BehaviorSubject(true);\\n  data = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ];\\n  config$: Observable<TableConfig> = this.mobileLayout$.pipe(\\n    map(mobileLayout => ({\\n      mobileLayout,\\n      columns: {\\n        firstName: {\\n          mobileHeader: true,\\n          sortable: true\\n        },\\n        lastName: {\\n          mobileHeader: true,\\n          sortable: true\\n        },\\n        gender: {\\n          mobileHeader: true,\\n          transform: {\\n            pipe: GenderPipe\\n          }\\n        },\\n        favoriteFood: {\\n          mobileHeader: true\\n        },\\n        action: {\\n          mobileHeader: false,\\n          header: false,\\n          templateRef: this.actions,\\n        },\\n      },\\n    }))\\n  );\\n\\n  toggleLayout = (): void => {\\n    this.mobileLayout$.next(!this.mobileLayout$.getValue());\\n  }\\n  clickAction(row: TableRow, column: { key: string; value: TableColumn }, index: number): void {\\n    console.log(\'clicked row:\', row, \'col:\', column);\\n    this.clicked = \\\\`Clicked row number: \\\\${index}\\\\`;\\n  }\\n}`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { MobileLayoutComponent } from \'./mobile-layout.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [MobileLayoutComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [MobileLayoutComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"}],"projects/docs/src/app/examples/nested-data/nested-data.component.ts":[{"name":"Nested","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/nested-data/nested-data.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<NestedDataComponent>","defaultValue":"(\\n  args: NestedDataComponent\\n) => ({\\n  props: args,\\n  component: NestedDataComponent,\\n})"}],"projects/docs/src/app/examples/nested-data/nested.snippets.ts":[{"name":"NESTED_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/nested-data/nested.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'nested-data.component.ts\',\\n    code: `import {Component, OnInit, TemplateRef, ViewChild} from \'@angular/core\';\\nimport {TableConfig, TableRows} from \\"@angular-generic-table/core\\";\\n\\ninterface NestedData {\\n  name: {\\n    first: string;\\n    last: string;\\n  };\\n  data: {\\n    details?: {\\n      gender: \'male\' | \'female\';\\n      favoriteFood: \'Pasta\' | \'Pizza\';\\n    };\\n  };\\n}\\n\\ninterface Data {\\n  firstName: string;\\n  lastName: string;\\n  gender: \'male\' | \'female\';\\n  favoriteFood: \'Pasta\' | \'Pizza\';\\n  missing: string;\\n}\\n@Component({\\n  selector: \'nested-data\',\\n  template: \\\\`\\n    <div class=\\"row gy-3\\">\\n      <div class=\\"col col-sm-auto\\">\\n        <button class=\\"btn btn-outline-primary mb-3\\" (click)=\\"loadData()\\">\\n          Load other data\\n        </button>\\n      </div>\\n      <div class=\\"col col-sm-auto\\">\\n        <button class=\\"btn btn-outline-primary mb-3\\" (click)=\\"resetData()\\">\\n          Reset\\n        </button>\\n      </div>\\n    </div>\\n    <angular-generic-table [data]=\\"data\\" [config]=\\"config\\"></angular-generic-table>\\n    <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n    <ng-template #gender let-row=\\"row\\" let-col=\\"col\\">\\n      <div [ngSwitch]=\\"row[col.key]\\">\\n        <ng-container *ngSwitchCase=\\"\'male\'\\">♂️</ng-container>\\n        <ng-container *ngSwitchCase=\\"\'female\'\\">♀️</ng-container>\\n      </div>\\n    </ng-template>\\n  \\\\`,\\n  styles: [],\\n})\\nexport class NestedDataComponent implements OnInit {\\n  @ViewChild(\'gender\', { static: true }) gender: TemplateRef<any> | undefined;\\n\\n  config: TableConfig<Data> = {};\\n  data: Array<NestedData> = [];\\n  ngOnInit(): void {\\n    this.resetData();\\n    this.config = {\\n      columns: {\\n        firstName: {\\n          sortable: true,\\n          mapTo: { path: \'name.first\' },\\n        },\\n        lastName: {\\n          sortable: true,\\n          mapTo: { path: \'name.last\' },\\n        },\\n        gender: {\\n          mapTo: { path: \'data.details.gender\' },\\n          templateRef: this.gender,\\n        },\\n        favoriteFood: {\\n          sortable: true,\\n          mapTo: { path: \'data.details.favoriteFood\', missingValue: \'n/a\' },\\n        },\\n        missing: {\\n          mapTo: { path: \'data.missingKey.noMatch\', missingValue: \'n/a\' },\\n        },\\n      },\\n    };\\n  }\\n\\n  resetData() {\\n    this.data = [\\n      {\\n        name: {\\n          first: \'Peter\',\\n          last: \'Parker\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'male\',\\n            favoriteFood: \'Pasta\',\\n          },\\n        },\\n      },\\n      {\\n        name: {\\n          first: \'Mary Jane\',\\n          last: \'Watson\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'female\',\\n            favoriteFood: \'Pizza\',\\n          },\\n        },\\n      },\\n    ];\\n  }\\n\\n  loadData(): void {\\n    this.data = [\\n      {\\n        name: {\\n          first: \'John\',\\n          last: \'Doe\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'male\',\\n            favoriteFood: \'Pasta\',\\n          },\\n        },\\n      },\\n      {\\n        name: {\\n          first: \'Jane\',\\n          last: \'Doe\',\\n        },\\n        data: {\\n          details: {\\n            gender: \'female\',\\n            favoriteFood: \'Pizza\',\\n          },\\n        },\\n      },\\n      {\\n        name: {\\n          first: \'Foo\',\\n          last: \'Bar\',\\n        },\\n        data: {},\\n      },\\n    ];\\n  }\\n}`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { NestedDataComponent } from \'./nested-data.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [NestedDataComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [NestedDataComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"}],"projects/docs/src/app/examples/pagination/pagination.component.ts":[{"name":"Pagination","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/pagination/pagination.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<PaginationComponent>","defaultValue":"(\\n  args: PaginationComponent\\n) => ({\\n  props: args,\\n  component: PaginationComponent,\\n})"}],"projects/docs/src/app/examples/row-hover-click/row-hower-click.snippets.ts":[{"name":"ROW_HOVER_CLICK_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/row-hover-click/row-hower-click.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'row-hover-click.component.ts\',\\n    code: `import { Component } from \'@angular/core\';\\nimport { GtRowClickEvent, GtRowHoverEvent } from \'@angular-generic-table/core\';\\n\\n\\n@Component({\\n  selector: \'row-hover-click-table\',\\n  template: \'<div class=\\"overflow-auto\\">\\n      <button class=\\"btn btn-secondary me-3\\" (click)=\\"tableRef.hoverRow(1)\\">\\n        Set hover state to second row\\n      </button>\\n      <button class=\\"btn btn-secondary\\" (click)=\\"tableRef.hoverRow(null)\\">\\n        Remove hover state\\n      </button>\\n      <angular-generic-table\\n        [data]=\\"data\\"\\n        [config]=\\"config\\"\\n        (rowClick)=\\"onRowClick($event)\\"\\n        (rowHover)=\\"onRowHover($event)\\"\\n        #tableRef\\n      ></angular-generic-table>\\n      {{ clicked }}\\n    </div>\',\\n  styles: [\\n    \\\\`\\n      :host ::ng-deep .gt-hover {\\n        background-color: var(--bs-highlight-bg);\\n      }\\n    \\\\`,\\n  ],\\n})\\nexport class RowHoverClickComponent {\\n  clicked = \'\';\\n  data = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ];\\n  config = {\\n    columns: {\\n      firstName: {},\\n      lastName: {},\\n      gender: {},\\n      favoriteFood: {},\\n    },\\n    rowClick: true,\\n    rowHover: true,\\n  };\\n\\n  onRowClick(event: GtRowClickEvent) {\\n    console.log(\'row clicked\', event);\\n    this.clicked = \\\\`clicked row number: \\\\${event.index}\\\\`;\\n  }\\n  onRowHover(event: GtRowHoverEvent) {\\n    console.log(\'row hovered\', event);\\n  }\\n`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { RowHoverClickTableComponent } from \'./events-table.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [RowHoverClickTableComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [RowHoverClickTableComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"}],"projects/docs/src/app/examples/row-hover-click/row-hover-click.component.ts":[{"name":"RowHoverClick","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/row-hover-click/row-hover-click.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<RowHoverClickComponent>","defaultValue":"(\\n  args: RowHoverClickComponent\\n) => ({\\n  props: args,\\n  component: RowHoverClickComponent,\\n})"}],"projects/docs/src/app/examples/simple/simple.component.ts":[{"name":"Simple","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/simple/simple.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<SimpleComponent>","defaultValue":"(args: SimpleComponent) => ({\\n  props: args,\\n  component: SimpleComponent,\\n})"}],"projects/docs/src/app/examples/footer/simple.snippets.ts":[{"name":"SIMPLE_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/footer/simple.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'footer-table.component.ts\',\\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { TableConfig, TableRow } from \'@angular-generic-table/core\';\\nimport { DecimalPipe } from \'@angular/common\';\\n\\n@Component({\\n  template: \\\\`\\n    <div class=\\"overflow-auto\\">\\n      <angular-generic-table [data]=\\"data\\" [config]=\\"config\\">\\n      </angular-generic-table>\\n    </div>\\n    <ng-template #heightTmplRef let-row=\\"row\\" let-col=\\"col\\">\\n      <ng-container *ngIf=\\"row[col.key || col] as height\\"\\n        >{{ height }} m\\n      </ng-container>\\n    </ng-template>\\n  \\\\`,\\n})\\nexport class FooterComponent implements OnInit {\\n  @ViewChild(\'heightTmplRef\', { static: true }) heightTmplRef:\\n    | TemplateRef<any>\\n    | undefined;\\n  data = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n      age: 27,\\n      weight: 85.457,\\n      height: 1.85,\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n      age: 25,\\n      weight: 60.123,\\n      height: 1.65,\\n    },\\n  ];\\n  config: TableConfig = {};\\n  ngOnInit() {\\n    this.config = {\\n      columns: {\\n        firstName: {},\\n        lastName: {},\\n        gender: {},\\n        favoriteFood: {\\n          class: \'text-end flex-end\',\\n        },\\n        age: {\\n          class: \'text-end\',\\n        },\\n        weight: {\\n          class: \'text-end\',\\n          transform: {\\n            pipe: DecimalPipe,\\n            args: [\'1.0-2\'],\\n          },\\n        },\\n        height: {\\n          class: \'text-end\',\\n          templateRef: this.heightTmplRef,\\n        },\\n      },\\n      footer: {\\n        headers: {\\n          sum: \'Total\',\\n          numberOfWomen: \'Number of women\',\\n          numberOfMen: \'Number of men\',\\n          min: true,\\n          max: true,\\n          avg: true,\\n          count: true,\\n          static: true,\\n          first: true,\\n        },\\n        rowOrder: [\\n          \'first\',\\n          \'numberOfWomen\',\\n          \'numberOfMen\',\\n          \'min\',\\n          \'max\',\\n          \'sum\',\\n          \'avg\',\\n          \'count\',\\n        ],\\n        columns: {\\n          firstName: {},\\n          lastName: {\\n            static: \'n/a\',\\n          },\\n          gender: {\\n            numberOfWomen: (data: Array<TableRow>, key) => {\\n              let count = 0;\\n              for (let i = 0; i < data.length; i++) {\\n                if (data[i][key] === \'female\') {\\n                  count++;\\n                }\\n              }\\n              return count;\\n            },\\n            numberOfMen: (data: Array<TableRow>, key) => {\\n              let count = 0;\\n              for (let i = 0; i < data.length; i++) {\\n                if (data[i][key] === \'male\') {\\n                  count++;\\n                }\\n              }\\n              return count;\\n            },\\n          },\\n          favoriteFood: {\\n            first: (data: Array<TableRow>, key) => data[0][key],\\n          },\\n          age: {\\n            sum: true,\\n            avg: true,\\n            count: true,\\n            max: true,\\n            min: true,\\n          },\\n          weight: {\\n            sum: true,\\n            avg: true,\\n            min: true,\\n          },\\n          height: {\\n            avg: true,\\n            min: true,\\n            max: true,\\n          },\\n        },\\n      },\\n    };\\n  }\\n\\n}`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { BasicTableComponent } from \'./basic-table.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [BasicTableComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [BasicTableComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"}],"projects/docs/src/app/examples/simple/simple.snippets.ts":[{"name":"SIMPLE_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/simple/simple.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'basic-table.component.ts\',\\n    code: `import { Component } from \'@angular/core\';\\nimport { TableConfig } from \'@angular-generic-table/core\';\\n\\ninterface BasicData {\\n  firstName: string;\\n  lastName: string;\\n  gender: \'male\' | \'female\';\\n  favoriteFood: string;\\n}\\n\\n@Component({\\n  template: \'<angular-generic-table [data]=\\"data\\" [config]=\\"config\\"></angular-generic-table>\'\\n})\\nexport class SimpleComponent {\\n  data: Array<BasicData> = [\\n    {\\n      firstName: \'Peter\',\\n      lastName: \'Parker\',\\n      gender: \'male\',\\n      favoriteFood: \'Pasta\',\\n    },\\n    {\\n      firstName: \'Mary Jane\',\\n      lastName: \'Watson\',\\n      gender: \'female\',\\n      favoriteFood: \'Pizza\',\\n    },\\n  ];\\n  config: TableConfig<BasicData> = {\\n    columns: {\\n      firstName: {},\\n      lastName: {},\\n      gender: {},\\n      favoriteFood: {},\\n    },\\n  };\\n`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { BasicTableComponent } from \'./basic-table.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [BasicTableComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [BasicTableComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"}],"projects/docs/src/app/examples/sorting/sorting.snippets.ts":[{"name":"SIMPLE_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/sorting/sorting.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'sorting-table.component.ts\',\\n    code: `import { Component } from \'@angular/core\';\\nimport { TableConfig } from \'@angular-generic-table/core\';\\n\\ninterface SortingData {\\n  firstName: string;\\n  lastName: string;\\n  gender: \'male\' | \'female\';\\n  favoriteFood: string;\\n  birthdate: number;\\n}\\n\\n@Component({\\n  template: \'<div class=\\"overflow-auto\\">\\n      <angular-generic-table\\n        #table\\n        [data]=\\"data\\"\\n        [config]=\\"config\\"\\n        [(sortOrder)]=\\"sortOrder\\"\\n        (columnSort)=\\"logSortChange($event)\\"\\n      ></angular-generic-table>\\n    </div>\\n    <div class=\\"row mb-3 gy-3\\">\\n      <div class=\\"col-12 col-sm-auto\\">\\n        <button\\n          class=\\"btn btn-primary w-100\\"\\n          (click)=\\"table.sortByKey(\'firstName\', $event)\\"\\n        >\\n          Sort on first name\\n        </button>\\n      </div>\\n      <div class=\\"col-12 col-sm-auto\\">\\n        <button class=\\"btn btn-primary w-100\\" (click)=\\"resetSort()\\">\\n          Reset sorting\\n        </button>\\n      </div>\\n    </div>\\n    <strong>Current sort order</strong>\\n    <p>\\n      <code>\\n        {{ sortOrder | json }}\\n      </code>\\n    </p>\'\\n})\\nexport class SimpleComponent {\\n  initialSortOrder: GtSortOrder<SortingData> = [\\n    { key: \'birthdate\', order: \'asc\' },\\n    { key: \'gender\', order: \'asc\' },\\n    { key: \'firstName\', order: \'desc\' },\\n  ];\\n  sortOrder: GtSortOrder<SortingData> = this.initialSortOrder;\\n  data: Array<SortingData> = [\\n    {\\n      firstName: \'John\',\\n      lastName: \'Doe\',\\n      gender: \'male\',\\n      favoriteFood: \'pizza\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Jane\',\\n      lastName: \'Smith\',\\n      gender: \'female\',\\n      favoriteFood: \'sushi\',\\n      birthdate: 803404800000,\\n    },\\n    {\\n      firstName: \'Bob\',\\n      lastName: \'Johnson\',\\n      gender: \'male\',\\n      favoriteFood: \'burgers\',\\n      birthdate: 649345600000,\\n    },\\n    {\\n      firstName: \'Emily\',\\n      lastName: \'Williams\',\\n      gender: \'female\',\\n      favoriteFood: \'chicken\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Michael\',\\n      lastName: \'Jones\',\\n      gender: \'male\',\\n      favoriteFood: \'steak\',\\n      birthdate: 803404800000,\\n    },\\n    {\\n      firstName: \'Matthew\',\\n      lastName: \'Brown\',\\n      gender: \'male\',\\n      favoriteFood: \'seafood\',\\n      birthdate: 649345600000,\\n    },\\n    {\\n      firstName: \'Jessica\',\\n      lastName: \'Miller\',\\n      gender: \'female\',\\n      favoriteFood: \'salad\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Jacob\',\\n      lastName: \'Moore\',\\n      gender: \'male\',\\n      favoriteFood: \'pasta\',\\n      birthdate: 803404800000,\\n    },\\n    {\\n      firstName: \'Nicholas\',\\n      lastName: \'Taylor\',\\n      gender: \'male\',\\n      favoriteFood: \'soup\',\\n      birthdate: 649345600000,\\n    },\\n    {\\n      firstName: \'Ashley\',\\n      lastName: \'Anderson\',\\n      gender: \'female\',\\n      favoriteFood: \'tacos\',\\n      birthdate: 946684800000,\\n    },\\n    {\\n      firstName: \'Brandon\',\\n      lastName: \'Thomas\',\\n      gender: \'male\',\\n      favoriteFood: \'nachos\',\\n      birthdate: 803404800000,\\n    },\\n  ];\\n  config: TableConfig<SortingData> = {\\n    columns: {\\n      firstName: {\\n        sortable: true,\\n      },\\n      lastName: {\\n        sortable: true,\\n      },\\n      gender: {\\n        sortable: true,\\n      },\\n      favoriteFood: {\\n        sortable: true,\\n      },\\n      birthdate: {\\n        sortable: true,\\n        transform: {\\n          pipe: DatePipe,\\n        },\\n      },\\n    },\\n  };\\n\\n  logSortChange(sortEvent: GtSortEvent<SortingData>) {\\n    console.log(sortEvent);\\n  }\\n\\n  resetSort() {\\n    this.sortOrder = this.initialSortOrder;\\n  }\\n}\\n`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { SortingTableComponent } from \'./sorting-table.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [SortingTableComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [SortingTableComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"}],"projects/docs/src/app/examples/sorting/sorting.component.ts":[{"name":"Sorting","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/sorting/sorting.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<SortingComponent>","defaultValue":"(args: SortingComponent) => ({\\n  props: args,\\n  component: SortingComponent,\\n})"}],"projects/docs/src/app/components/tabs/tabs.component.ts":[{"name":"Tabs","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/components/tabs/tabs.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<TabsComponent>","defaultValue":"(args: TabsComponent) => ({\\n  props: args,\\n  component: TabsComponent,\\n})"}],"projects/docs/src/app/examples/transpose/transpose.component.ts":[{"name":"Transpose","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/transpose/transpose.component.ts","deprecated":false,"deprecationMessage":"","type":"Story<TransposeComponent>","defaultValue":"(\\n  args: TransposeComponent\\n) => ({\\n  props: args,\\n  component: TransposeComponent,\\n})"}],"projects/docs/src/app/examples/transpose/transpose.snippets.ts":[{"name":"TRANSPOSE_SNIPPETS","ctype":"miscellaneous","subtype":"variable","file":"projects/docs/src/app/examples/transpose/transpose.snippets.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'transpose.component.ts\',\\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { BehaviorSubject, Observable } from \'rxjs\';\\nimport { TableConfig, GtDeltaComponent } from \'@angular-generic-table/core\';\\nimport { FormBuilder } from \'@angular/forms\';\\nimport { withLatestFrom } from \'rxjs/operators\';\\n\\ninterface RawData {\\n  year: string;\\n  value: number;\\n}\\ninterface YearData extends RawData {\\n  delta: number;\\n  deltaIndex: number;\\n  combined: number;\\n  deltaAbsolute: number;\\n}\\n@Component({\\n  templateUrl: \'./transpose.component.html\',\\n  styles: []\\n})\\nexport class TransposeComponent implements OnInit {\\n  @ViewChild(\'delta\', { static: true }) delta:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  @ViewChild(\'deltaAbsolute\', { static: true }) deltaAbsolute:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  @ViewChild(\'deltaIndex\', { static: true }) deltaIndex:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  @ViewChild(\'combined\', { static: true }) combined:\\n    | TemplateRef<GtDeltaComponent>\\n    | undefined;\\n  loading$ = new BehaviorSubject(false);\\n  reactiveForm = this.fb.group({\\n    length: [10],\\n    search: [\'\'],\\n  });\\n  search$ = this.reactiveForm.get(\'search\')?.valueChanges as Observable<string>;\\n  tableConfig$: BehaviorSubject<TableConfig<YearData>> = new BehaviorSubject<\\n    TableConfig<YearData>\\n  >({});\\n  data: Array<RawData> = [];\\n\\n  constructor(private fb: UntypedFormBuilder) {}\\n\\n  ngOnInit(): void {\\n    this.transpose();\\n    this.load();\\n    this.reactiveForm\\n      .get(\'length\')\\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\\n      .subscribe(([length, config]) => {\\n        length = +length;\\n        this.tableConfig$.next({\\n          ...config,\\n          pagination: { ...config.pagination, length },\\n        });\\n      });\\n  }\\n\\n  simulateLoad(): void {\\n    this.loading$.next(true);\\n    // set loading state to false after 2 seconds\\n    setTimeout(() => this.loading$.next(false), 2000);\\n  }\\n  empty(): void {\\n    this.data = [];\\n  }\\n  load(): void {\\n    this.data = [\\n      {\\n        year: \'2010\',\\n        value: 15,\\n      },\\n      {\\n        year: \'2011\',\\n        value: 30,\\n      },\\n      {\\n        year: \'2012\',\\n        value: 25,\\n      },\\n      {\\n        year: \'2013\',\\n        value: 0,\\n      },\\n      {\\n        year: \'2014\',\\n        value: 40,\\n      },\\n      {\\n        year: \'2015\',\\n        value: 0,\\n      },\\n      {\\n        year: \'2016\',\\n        value: -5,\\n      },\\n      {\\n        year: \'2018\',\\n        value: 75,\\n      },\\n      {\\n        year: \'2019\',\\n        value: 100,\\n      },\\n      {\\n        year: \'2020\',\\n        value: 250,\\n      },\\n      {\\n        year: \'2021\',\\n        value: 50,\\n      },\\n      {\\n        year: \'2022\',\\n        value: 60,\\n      },\\n    ];\\n  }\\n  transpose(): void {\\n    if (this.tableConfig$.value.columns) {\\n      this.tableConfig$.next({\\n        stickyHeaders: {\\n          row: true,\\n          column: true,\\n        },\\n        rows: {\\n          year: {\\n            sortable: true,\\n            header: false,\\n            class: \'text-end\',\\n          },\\n          value: {\\n            class: \'text-end\',\\n          },\\n          delta: {\\n            header: \'Delta %\',\\n            templateRef: this.delta,\\n            class: \'text-end\',\\n          },\\n          deltaIndex: {\\n            header: \'Since inception %\',\\n            templateRef: this.deltaIndex,\\n            class: \'text-end\',\\n          },\\n          deltaAbsolute: {\\n            header: \'Delta\',\\n            templateRef: this.deltaAbsolute,\\n            class: \'text-end\',\\n          },\\n          combined: {\\n            header: \'Value with change\',\\n            templateRef: this.combined,\\n            class: \'text-end text-nowrap\',\\n          },\\n        },\\n      });\\n    } else {\\n      this.tableConfig$.next({\\n        stickyHeaders: {\\n          row: true,\\n          column: true,\\n        },\\n        columns: {\\n          year: {\\n            sortable: true,\\n          },\\n          value: {\\n            class: \'text-end\',\\n          },\\n          delta: {\\n            header: \'Delta %\',\\n            templateRef: this.delta,\\n            class: \'text-end\',\\n          },\\n          deltaIndex: {\\n            header: \'Since inception %\',\\n            templateRef: this.deltaIndex,\\n            class: \'text-end\',\\n          },\\n          deltaAbsolute: {\\n            header: \'Delta\',\\n            templateRef: this.deltaAbsolute,\\n            class: \'text-end\',\\n          },\\n          combined: {\\n            header: \'Value with change\',\\n            templateRef: this.combined,\\n            class: \'text-end text-nowrap\',\\n          },\\n        },\\n        pagination: { length: this.reactiveForm.get(\'length\')?.value },\\n      });\\n    }\\n  }\\n}\\n`,\\n    language: \'typescript\',\\n  },\\n  {\\n    name: \'transpose.component.html\',\\n    code: `<form [formGroup]=\\"reactiveForm\\">\\n  <div class=\\"row gy-3 gx-3 align-items-end mb-3\\">\\n    <div class=\\"form-group col-6 col-sm-auto\\">\\n      <label for=\\"length_input\\">Number of rows</label>\\n      <input\\n        id=\\"length_input\\"\\n        formControlName=\\"length\\"\\n        type=\\"number\\"\\n        class=\\"form-control\\"\\n      />\\n    </div>\\n    <div class=\\"form-group col-6 col-sm-auto\\">\\n      <label for=\\"search_input\\">Search</label>\\n      <input\\n        id=\\"search_input\\"\\n        formControlName=\\"search\\"\\n        type=\\"text\\"\\n        class=\\"form-control\\"\\n      />\\n    </div>\\n    <div class=\\"col-auto\\">\\n      <button\\n        class=\\"btn btn-outline-primary w-100\\"\\n        (click)=\\"simulateLoad()\\"\\n      >\\n        Simulate load\\n      </button>\\n    </div>\\n    <div class=\\"col col-sm-auto\\">\\n      <button class=\\"btn btn-outline-danger w-100\\" (click)=\\"empty()\\">\\n        Empty\\n      </button>\\n    </div>\\n    <div class=\\"col col-sm-auto\\">\\n      <button class=\\"btn btn-outline-primary w-100\\" (click)=\\"load()\\">\\n        Reset\\n      </button>\\n    </div>\\n    <div class=\\"col col-sm-auto\\">\\n      <button class=\\"btn btn-outline-primary w-100\\" (click)=\\"transpose()\\">\\n        Transpose\\n      </button>\\n    </div>\\n  </div>\\n  <div class=\\"overflow-auto\\">\\n    <angular-generic-table\\n      #table\\n      [data]=\\"data\\"\\n      [config]=\\"tableConfig$\\"\\n      [loading]=\\"loading$\\"\\n      [search]=\\"search$\\"\\n    >\\n      <div class=\\"table-loading gt-skeleton-loader\\"></div>\\n      <div class=\\"table-no-data alert alert-info mt-3\\">Table is empty</div>\\n    </angular-generic-table>\\n  </div>\\n  <angular-generic-table-pagination [table]=\\"table\\">\\n  </angular-generic-table-pagination>\\n  <ng-template #delta let-index=\\"index\\" let-data=\\"data\\">\\n    <gt-delta [index]=\\"index\\" [data]=\\"data\\"></gt-delta>\\n  </ng-template>\\n  <ng-template #deltaAbsolute let-index=\\"index\\" let-data=\\"data\\">\\n    <gt-delta\\n      [index]=\\"index\\"\\n      [data]=\\"data\\"\\n      [deltaTemplate]=\\"deltaTemplate\\"\\n    ></gt-delta>\\n  </ng-template>\\n  <ng-template #deltaIndex let-index=\\"index\\" let-data=\\"data\\">\\n    <gt-delta [index]=\\"index\\" [data]=\\"data\\" [baseIndex]=\\"0\\"></gt-delta>\\n  </ng-template>\\n  <ng-template\\n    #combined\\n    let-index=\\"index\\"\\n    let-data=\\"data\\"\\n    let-row=\\"row\\"\\n    let-col=\\"col\\"\\n  >\\n    {{ row.value }}\\n    <ng-container *ngIf=\\"index > 0\\">\\n      <gt-delta [index]=\\"index\\" [data]=\\"data\\"></gt-delta>\\n    </ng-container>\\n  </ng-template>\\n  <ng-template #deltaTemplate let-delta=\\"delta\\">\\n    <span>{{ delta.absolute }}</span></ng-template\\n  >\\n  <docs-tabs [content]=\\"SNIPPETS\\"></docs-tabs>\\n</form>`,\\n    language: \'xml\',\\n  },\\n  {\\n    name: \'app.module.ts\',\\n    code: `import { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\n\\nimport { HorizontalTableComponent } from \'./horizontal-table.component\';\\nimport { GenericTableCoreModule } from \'@angular-generic-table/core\';\\n\\n@NgModule({\\n  declarations: [HorizontalTableComponent],\\n  imports: [BrowserModule, GenericTableCoreModule],\\n  bootstrap: [HorizontalTableComponent]\\n})\\nexport class AppModule {}`,\\n    language: \'typescript\',\\n  },\\n]"}]},"groupedFunctions":{},"groupedEnumerations":{},"groupedTypeAliases":{"projects/core/src/lib/models/table-config.interface.ts":[{"name":"FooterCalculation","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"sum\\" | \\"avg\\" | \\"count\\" | \\"max\\" | \\"min\\"","file":"projects/core/src/lib/models/table-config.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186}],"projects/core/src/lib/models/table-sort.interface.ts":[{"name":"GtOrder","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"asc\\" | \\"desc\\"","file":"projects/core/src/lib/models/table-sort.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"GtSortOrder","ctype":"miscellaneous","subtype":"typealias","rawtype":"Array<GtSortConfig<R>>","file":"projects/core/src/lib/models/table-sort.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":177}],"projects/core/src/lib/models/table-column.interface.ts":[{"name":"SearchFunction","ctype":"miscellaneous","subtype":"typealias","rawtype":"function","file":"projects/core/src/lib/models/table-column.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":178}]}},"routes":{"name":"<root>","kind":"module","className":"AppModule","children":[{"name":"routes","filename":"projects/docs/src/app/app-routing.module.ts","module":"AppRoutingModule","children":[{"path":"advanced","component":"AdvancedComponent"},{"path":"pagination","component":"PaginationComponent"},{"path":"simple","component":"SimpleComponent"},{"path":"sorting","component":"SortingComponent"},{"path":"row-hover-click","component":"RowHoverClickComponent"},{"path":"horizontal-table","component":"HorizontalTableComponent"},{"path":"custom-templates","component":"CustomTemplatesComponent"},{"path":"mobile-layout","component":"MobileLayoutComponent"},{"path":"nested","component":"NestedDataComponent"},{"path":"transpose","component":"TransposeComponent"},{"path":"footer","component":"FooterComponent"}],"kind":"module"}]},"coverage":{"count":1,"status":"low","files":[{"filePath":"projects/core/src/lib/core.component.ts","type":"component","linktype":"component","name":"CoreComponent","coveragePercent":2,"coverageCount":"1/36","status":"low"},{"filePath":"projects/core/src/lib/core.service.ts","type":"injectable","linktype":"injectable","name":"CoreService","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"projects/core/src/lib/gt-delta/gt-delta.component.ts","type":"component","linktype":"component","name":"GtDeltaComponent","coveragePercent":0,"coverageCount":"0/15","status":"low"},{"filePath":"projects/core/src/lib/gt-delta/gt-delta.component.ts","type":"interface","linktype":"interface","name":"GtDelta","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/core/src/lib/models/gt-pagination.ts","type":"interface","linktype":"interface","name":"GtPaginationAriaLabels","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/core/src/lib/models/gt-pagination.ts","type":"interface","linktype":"interface","name":"GtPaginationClasses","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"projects/core/src/lib/models/table-column.interface.ts","type":"interface","linktype":"interface","name":"TableColumn","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"projects/core/src/lib/models/table-config.interface.ts","type":"interface","linktype":"interface","name":"CalcFunc","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"projects/core/src/lib/models/table-config.interface.ts","type":"interface","linktype":"interface","name":"TableConfig","coveragePercent":36,"coverageCount":"4/11","status":"medium"},{"filePath":"projects/core/src/lib/models/table-config.interface.ts","type":"interface","linktype":"interface","name":"TableFooterColumn","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/core/src/lib/models/table-events.interface.ts","type":"interface","linktype":"interface","name":"GtRowClickEvent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/core/src/lib/models/table-events.interface.ts","type":"interface","linktype":"interface","name":"GtRowHoverEvent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/core/src/lib/models/table-events.interface.ts","type":"interface","linktype":"interface","name":"GtSortEvent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"projects/core/src/lib/models/table-info.interface.ts","type":"interface","linktype":"interface","name":"TableInfo","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/core/src/lib/models/table-meta.interface.ts","type":"interface","linktype":"interface","name":"TableMeta","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/core/src/lib/models/table-row.interface.ts","type":"interface","linktype":"interface","name":"TableRow","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/core/src/lib/models/table-sort.interface.ts","type":"interface","linktype":"interface","name":"GtSortConfig","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/core/src/lib/pagination/pagination.component.ts","type":"component","linktype":"component","name":"PaginationComponent","coveragePercent":0,"coverageCount":"0/13","status":"low"},{"filePath":"projects/core/src/lib/pipes/capital-case.pipe.ts","type":"pipe","linktype":"pipe","name":"CapitalCasePipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/core/src/lib/pipes/dash-case.pipe.ts","type":"pipe","linktype":"pipe","name":"DashCasePipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/core/src/lib/pipes/dynamic.pipe.ts","type":"pipe","linktype":"pipe","name":"DynamicPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/core/src/lib/pipes/highlight.pipe.ts","type":"pipe","linktype":"pipe","name":"HighlightPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/core/src/lib/pipes/sort-class.pipe.ts","type":"pipe","linktype":"pipe","name":"SortClassPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/core/src/lib/utilities/utilities.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"calculate","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/core/src/lib/utilities/utilities.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"capitalize","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/core/src/lib/utilities/utilities.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"chunk","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/core/src/lib/utilities/utilities.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"dashed","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/core/src/lib/utilities/utilities.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"search","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/core/src/lib/utilities/utilities.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"sortOnMultipleKeys","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"projects/core/src/test.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"context","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/core/src/test.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"require","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/app.component.ts","type":"component","linktype":"component","name":"AppComponent","coveragePercent":0,"coverageCount":"0/24","status":"low"},{"filePath":"projects/docs/src/app/app.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Advanced","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/components/tabs/tabs.component.ts","type":"component","linktype":"component","name":"TabsComponent","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"projects/docs/src/app/components/tabs/tabs.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Tabs","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/advanced/advanced.component.ts","type":"component","linktype":"component","name":"AdvancedComponent","coveragePercent":0,"coverageCount":"0/25","status":"low"},{"filePath":"projects/docs/src/app/examples/advanced/advanced.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Advanced","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/advanced/advanced.snippets.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ADVANCED_DOCS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/custom-templates/custom-templates.component.ts","type":"component","linktype":"component","name":"CustomTemplatesComponent","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"projects/docs/src/app/examples/custom-templates/custom-templates.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"CustomTemplates","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/custom-templates/custom-templates.snippets.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"CUSTOM_TEMPLATES_DOCS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/footer/footer.component.ts","type":"component","linktype":"component","name":"FooterComponent","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"projects/docs/src/app/examples/footer/footer.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Footer","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/footer/simple.snippets.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SIMPLE_SNIPPETS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/horizontal-table/horizontal-table.component.ts","type":"component","linktype":"component","name":"HorizontalTableComponent","coveragePercent":0,"coverageCount":"0/12","status":"low"},{"filePath":"projects/docs/src/app/examples/horizontal-table/horizontal-table.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Horizontal","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/horizontal-table/horizontal-table.snippets.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"HORIZONTAL_TABLE_SNIPPETS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/mobile-layout/mobile-layout.component.ts","type":"component","linktype":"component","name":"MobileLayoutComponent","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"projects/docs/src/app/examples/mobile-layout/mobile-layout.component.ts","type":"pipe","linktype":"pipe","name":"GenderPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/mobile-layout/mobile-layout.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Mobile","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/mobile-layout/mobileLayout.snippets.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"MOBILE_LAYOUT_SNIPPETS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/nested-data/nested-data.component.ts","type":"component","linktype":"component","name":"NestedDataComponent","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"projects/docs/src/app/examples/nested-data/nested-data.component.ts","type":"interface","linktype":"interface","name":"Data","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"projects/docs/src/app/examples/nested-data/nested-data.component.ts","type":"interface","linktype":"interface","name":"NestedData","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/docs/src/app/examples/nested-data/nested-data.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Nested","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/nested-data/nested.snippets.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"NESTED_SNIPPETS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/pagination/pagination.component.ts","type":"component","linktype":"component","name":"PaginationComponent","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"projects/docs/src/app/examples/pagination/pagination.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Pagination","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/pagination/pagination.snippets.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ADVANCED_DOCS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/row-hover-click/row-hover-click.component.ts","type":"component","linktype":"component","name":"RowHoverClickComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"projects/docs/src/app/examples/row-hover-click/row-hover-click.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"RowHoverClick","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/row-hover-click/row-hower-click.snippets.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ROW_HOVER_CLICK_SNIPPETS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/simple/simple.component.ts","type":"component","linktype":"component","name":"SimpleComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/docs/src/app/examples/simple/simple.component.ts","type":"interface","linktype":"interface","name":"BasicData","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"projects/docs/src/app/examples/simple/simple.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/simple/simple.snippets.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SIMPLE_SNIPPETS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/sorting/sorting.component.ts","type":"component","linktype":"component","name":"SortingComponent","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"projects/docs/src/app/examples/sorting/sorting.component.ts","type":"interface","linktype":"interface","name":"SortingData","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"projects/docs/src/app/examples/sorting/sorting.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Sorting","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/sorting/sorting.snippets.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SIMPLE_SNIPPETS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/transpose/transpose.component.ts","type":"component","linktype":"component","name":"TransposeComponent","coveragePercent":0,"coverageCount":"0/17","status":"low"},{"filePath":"projects/docs/src/app/examples/transpose/transpose.component.ts","type":"interface","linktype":"interface","name":"RawData","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/docs/src/app/examples/transpose/transpose.component.ts","type":"interface","linktype":"interface","name":"YearData","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"projects/docs/src/app/examples/transpose/transpose.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Transpose","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/app/examples/transpose/transpose.snippets.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"TRANSPOSE_SNIPPETS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/environments/environment.prod.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"environment","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/environments/environment.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"environment","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/test.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"context","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/docs/src/test.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"require","coveragePercent":0,"coverageCount":"0/1","status":"low"}]}}');(0,angular.P)(documentation_namespaceObject);var parameters={actions:{argTypesRegex:"^on[A-Z].*"},controls:{matchers:{color:/(background|color)$/i,date:/Date$/}},docs:{inlineStories:!0},options:{storySort:{includeName:!1,order:["Introduction","Examples",["Basic","Sorting","Nested data","Row click & hover","Pagination","Custom templates","Table footer","Horizontal layout","Transpose data","Mobile layout"]]}},themes:{default:"Bootstrap",clearable:!1,list:[{name:"Bootstrap",class:"theme-bootstrap",color:"var(--bs-primary)"}],onChange:function onChange(theme){document.body.setAttribute("data-theme",theme.class)}}},__namedExportsOrder=["parameters"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":return(0,ClientApi.uc)(value);case"argTypes":return(0,ClientApi.v9)(value);case"decorators":return value.forEach((function(decorator){return(0,ClientApi.$9)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return(0,ClientApi.HZ)(loader,!1)}));case"parameters":return(0,ClientApi.h1)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return(0,ClientApi.My)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return(0,ClientApi._C)(enhancer)}));case"render":return(0,ClientApi.$P)(value);case"globals":case"globalTypes":var v={};return v[key]=value,(0,ClientApi.h1)(v,!1);case"__namedExportsOrder":case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./storybook-init-framework-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js")},"./projects/docs/src/stories/Introduction.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_7__.h_,{title:"Introduction",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("h1",{id:"angular-generic-table-docs"},"Angular Generic Table Docs"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("p",null,"Generic table version 5 has been rebuilt to be more efficient and to make it easier to customize and add new features. It still relies on native html tables for layout and rendering. Follow the instructions below to get started with the latest release candidate."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("h2",{id:"install"},"Install"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("code",{parentName:"pre"},"npm install @angular-generic-table/core@rc --save\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("h2",{id:"import-module"},"Import module"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("p",null,"We recommend import ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("inlineCode",{parentName:"p"},"GenericTableCoreModule")," into a shared module eg. ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("inlineCode",{parentName:"p"},"SharedModule")," that can be imported into other, preferably lazy loaded modules when needed."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("code",{parentName:"pre",className:"language-ts"},"import { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [...],\n  imports: [\n    ...\n    GenericTableCoreModule\n  ],\n  exports: [\n    GenericTableCoreModule\n  ]\n})\nexport class SharedModule {}\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("h2",{id:"import-styling"},"Import styling"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("p",null,"We recommend setting up your Angular project to use scss (SASS) for css preprocessing."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("p",null,"Once configured to use scss, it's just a matter of including the scss to your main styles file, typically it would be ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("inlineCode",{parentName:"p"},"styles.scss")," located at the root of the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("inlineCode",{parentName:"p"},"src")," folder unless you've changed it."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("h3",{id:"add-scss"},"Add scss"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("inlineCode",{parentName:"p"},"{project}/src/styles.scss")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("code",{parentName:"pre",className:"language-scss"},"// import base styles from angular-generic-table/core\n@use '~@angular-generic-table/core/scss' as generic-table-styles;\n@include generic-table-styles.styles(); // all styles\n\n// @include generic-table-styles.search-style(); // search (highlight) style\n// @include generic-table-styles.mobile-style(); // mobile layout style\n// @include generic-table-styles.pagination-style(); // pagination styles\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("h3",{id:"override-scss-variables"},"Override scss variables"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("p",null,"It's possible to override the scss variables used by generic table by passing them when importing the scss.\n",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("inlineCode",{parentName:"p"},"{project}/src/styles.scss")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("code",{parentName:"pre",className:"language-scss"},"// import base styles from angular-generic-table/core and override scss variables\n@use '~@angular-generic-table/core/scss' as generic-table-styles with (\n    $highlight-background-color: purple,\n    $mobile-style-max-width: 375px\n);\n@include generic-table-styles.styles();\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("strong",{parentName:"p"},"SCSS Variables")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("table",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("thead",{parentName:"table"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tr",{parentName:"thead"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("th",{parentName:"tr",align:"left"},"Default value"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tbody",{parentName:"table"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tr",{parentName:"tbody"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"$highlight-background-color:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"#ffdd00;")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tr",{parentName:"tbody"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"$mobile-style-selector:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"'table.table-mobile';")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tr",{parentName:"tbody"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"$mobile-style-max-width:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"576px;")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tr",{parentName:"tbody"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"$mobile-style-header-font-weight:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"500;")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tr",{parentName:"tbody"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"$mobile-style-header-background-color:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"#fff;")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tr",{parentName:"tbody"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"$mobile-style-button-selector:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"'.btn-sm';")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tr",{parentName:"tbody"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"$mobile-style-border-bottom:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"solid 1px #dedede;")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tr",{parentName:"tbody"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"$mobile-style-button-font-size:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"1rem;")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tr",{parentName:"tbody"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"$mobile-style-button-padding:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"0.5625rem 1rem;")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tr",{parentName:"tbody"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"$pagination-ellipsis-content:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"'...';")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tr",{parentName:"tbody"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"$pagination-active-color:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"#000;")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("tr",{parentName:"tbody"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"$pagination-justify-content:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("td",{parentName:"tr",align:"left"},"center;")))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("h3",{id:"have-other-needs"},"Have other needs?"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("p",null,"More examples and use cases coming soon! In the meantime create an ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("a",{parentName:"p",href:"https://github.com/hjalmers/angular-generic-table/issues",target:"_blank",rel:"nofollow noopener noreferrer"},"issue over at github")))}MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Introduction",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_7__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["__page"]},"./projects/docs/src/stories/examples/Advanced.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>Advanced_stories,multipleFeatures:()=>multipleFeatures});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/fesm2020/platform-browser.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),core_module=__webpack_require__("./projects/core/src/lib/core.module.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),BehaviorSubject=__webpack_require__("./node_modules/rxjs/_esm2015/internal/BehaviorSubject.js"),ReplaySubject=__webpack_require__("./node_modules/rxjs/_esm2015/internal/ReplaySubject.js"),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),withLatestFrom=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/withLatestFrom.js");const ADVANCED_DOCS=[{name:"advanced.component.html",code:'<div class="row gx-2 gy-3 mb-3">\n  <div class="col-12 col-sm-auto">\n    <button class="btn btn-primary w-100" (click)="addData()">Add random data</button>\n  </div>\n  <div class="col-12 col-sm-auto">\n    <button class="btn btn-danger w-100" (click)="removeData()">Remove data</button>\n  </div>\n  <div class="col-12 col-sm-auto">\n    <button class="btn btn-secondary w-100" (click)="simulateLoad()">Load</button>\n  </div>\n</div>\n<form [formGroup]="paginationForm">\n  <div class="row">\n    <div class="form-group col-12 col-sm-auto">\n      <label for="length_input">Length</label>\n      <input id="length_input" formControlName="length" type="number" class="form-control">\n    </div>\n    <div class="form-group col-12 col-sm-auto">\n      <label for="search_input">Search</label>\n      <input id="search_input" formControlName="search" type="text" class="form-control">\n    </div>\n  </div>\n</form>\n<div class="mx-n3 mx-sm-0">\n  <angular-generic-table [data]="data$" [config]="tableConfig$" [page]="(currentPage$ | async)!" [search]="search$" [loading]="loading$" #table>\n    <div class="table-loading gt-skeleton-loader"></div>\n    <div class="table-no-data alert alert-info mt-3">\n      Table is empty\n    </div>\n  </angular-generic-table>\n</div>\n<div class="row justify-content-between justify-content-sm-center align-items-center mt-3" *ngIf="{current: (currentPage$ | async) || 0,total: (table.table$ | async)?.info?.pageTotal || 1\n} as pagination">\n  <div class="col-auto">\n    <button class="btn btn-primary" (click)="prev()" [disabled]="pagination.current === 0">Prev</button>\n  </div>\n  <div class="col-auto">\n    <button class="btn btn-primary" (click)="next()" [disabled]="pagination.total -1 === pagination.current">Next</button>\n  </div>\n  <div class="col-auto">Current page: {{pagination.current +1}}</div>\n  <div class="col-auto">Total pages: {{pagination.total}}</div>\n  <div class="col-auto">\n    Records: {{(data$ | async).length}}\n  </div>\n  <div class="col-auto">\n    {{clicked}}\n  </div>\n</div>\n<ng-template #actions let-row="row" let-col="col" let-index="index">\n  <button\n    *ngIf="index !== undefined"\n    class="btn btn-outline-primary btn-sm"\n    (click)="clickAction(row, col, index)"\n  >\n    Click me!\n  </button>\n</ng-template>\n<ng-template #color let-row="row" let-col="col">\n  <div\n    [style.background]="row[col.key]"\n    style="width: 1.5rem; height: 1.5rem; border-radius: 50%"\n  ></div>\n</ng-template>',language:"xml"},{name:"advanced.component.ts",code:"import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\nimport { FormBuilder } from '@angular/forms';\nimport { TableColumn, TableConfig, TableRow } from '@angular-generic-table/core';\nimport { withLatestFrom } from 'rxjs/operators';\n\n@Component({\n  templateUrl: './advanced.component.html',\n})\nexport class AdvancedComponent implements OnInit {\n  get currentPage$(): Observable<number> {\n    return this._currentPage$.asObservable();\n  }\n\n  set currentPage(value: number) {\n    this._currentPage$.next(value);\n  }\n  constructor(private fb: FormBuilder) {}\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n  paginationForm = this.fb.group({\n    length: [10],\n    search: [''],\n  });\n  search$ = this.paginationForm.get('search')?.valueChanges as Observable<string>;\n  loading$ = new BehaviorSubject(true);\n  data$: BehaviorSubject<any> = new BehaviorSubject([\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteColor: '#26BFAF',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteColor: '#0f0',\n      favoriteFood: 'Pizza',\n    },\n  ]);\n\n  private _currentPage$ = new BehaviorSubject(0);\n\n  clicked: string = '';\n  maleFirstNames = ['Peter', 'Clark', 'Ruben', 'John', 'Jack', 'Roscoe'];\n  femaleFirstNames = ['Mary Jane', 'Kim', 'Sarah', 'Michelle', 'Ann'];\n  lastNames = ['Andersson', 'Smith', 'Parker', 'Kent', 'Rogers', 'Lane', 'Jackson'];\n  foods = ['Pizza', 'Pasta', 'Hamburger', 'Pancakes', 'Tacos', 'Lasagna', 'Meatloaf'];\n  colors = ['#33d60b', '#dcafff', '#3fc9ff', '#ff1600', '#5238b1', '#fff'];\n\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\n\n  addData(): void {\n    this.data$.next([...this.data$.getValue(), this.randomRecord()]);\n  }\n\n  removeData(): void {\n    this.data$.next([]);\n  }\n\n  simulateLoad(): void {\n    this.loading$.next(true);\n    // set loading state to false after 2 seconds\n    setTimeout(() => this.loading$.next(false), 2000);\n  }\n\n  clickAction(row: TableRow, column: { key: string; value: TableColumn }, index: number): void {\n    console.log('clicked row:', row, 'col:', column);\n    this.clicked = `clicked row number: ${index}`;\n  }\n\n  randomRecord(): TableRow {\n    const random = Math.floor(Math.random() * 2);\n    const newRecord = {\n      firstName: random\n        ? this.maleFirstNames[Math.floor(Math.random() * this.maleFirstNames.length)]\n        : this.femaleFirstNames[Math.floor(Math.random() * this.femaleFirstNames.length)],\n      lastName: this.lastNames[Math.floor(Math.random() * this.lastNames.length)],\n      gender: random ? 'male' : 'female',\n      favoriteColor: this.colors[Math.floor(Math.random() * this.colors.length)],\n      favoriteFood: this.foods[Math.floor(Math.random() * this.foods.length)],\n    };\n    console.log('added new random record:', newRecord);\n\n    return newRecord;\n  }\n\n  next = () => {\n    this.currentPage = this._currentPage$.value + 1;\n  };\n  prev = () => {\n    this.currentPage = this._currentPage$.value - 1;\n  };\n\n  ngOnInit(): void {\n    this.simulateLoad();\n    this.paginationForm\n      .get('length')\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\n      .subscribe(([length, config]) => {\n        length = +length;\n        this.tableConfig$.next({\n          ...config,\n          pagination: { ...config.pagination, length },\n        });\n      });\n    this.tableConfig$.next({\n      class: 'table table-mobile text-nowrap mb-0',\n      columns: {\n        firstName: {\n          header: 'First name',\n          mobileHeader: true,\n          sortable: true,\n          order: 0,\n        },\n        lastName: {\n          header: 'Last name',\n          mobileHeader: true,\n          hidden: false,\n          sortable: true,\n        },\n        gender: {\n          mobileHeader: 'Sex',\n          sortable: true,\n          order: 1,\n        },\n        favoriteColor: {\n          header: 'Favorite color',\n          mobileHeader: true,\n          templateRef: this.color,\n          sortable: false,\n          order: 2,\n          search: false,\n          class: 'custom-class',\n        },\n        favoriteFood: {\n          mobileHeader: true,\n          header: 'Favorite food',\n          hidden: false,\n          sortable: true,\n          order: 0,\n        },\n        action: {\n          mobileHeader: false,\n          header: false,\n          templateRef: this.actions,\n          order: 6,\n        },\n      },\n      pagination: {\n        length: this.paginationForm.get('length')?.value || 0,\n      },\n      footer: {\n        columns: {\n          gender: {\n            count: (data, key) => {\n              let men = 0;\n              let women = 0;\n              for (let i = 0; i < data.length; i++) {\n                if (data[i][key] === 'female') {\n                  women++;\n                } else if (data[i][key] === 'male') {\n                  men++;\n                }\n              }\n              return `♂ ${men} ♀ ${women}`;\n            },\n          },\n          favoriteColor: {},\n          action: { count: (data, key) => `Total: ${data.length}` },\n        },\n      },\n    });\n  }\n}",language:"typescript"},{name:"app.module.ts",code:"import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AdvancedComponent } from './advanced.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [AdvancedComponent],\n  imports: [BrowserModule, ReactiveFormsModule, GenericTableCoreModule],\n  bootstrap: [AdvancedComponent]\n})\nexport class AppModule {}",language:"typescript"}];var _class;let AdvancedComponent=((_class=class AdvancedComponent{get currentPage$(){return this._currentPage$.asObservable()}set currentPage(value){this._currentPage$.next(value)}constructor(fb){this.fb=fb,this.paginationForm=this.fb.group({length:[10],search:[""]}),this.search$=this.paginationForm.get("search")?.valueChanges,this.loading$=new BehaviorSubject.X(!0),this.data$=new BehaviorSubject.X([{firstName:"Peter",lastName:"Parker",gender:"male",favoriteColor:"#26BFAF",favoriteFood:"Pasta"},{firstName:"Mary Jane",lastName:"Watson",gender:"female",favoriteColor:"#0f0",favoriteFood:"Pizza"}]),this._currentPage$=new BehaviorSubject.X(0),this.clicked="",this.maleFirstNames=["Peter","Clark","Ruben","John","Jack","Roscoe"],this.femaleFirstNames=["Mary Jane","Kim","Sarah","Michelle","Ann"],this.lastNames=["Andersson","Smith","Parker","Kent","Rogers","Lane","Jackson"],this.foods=["Pizza","Pasta","Hamburger","Pancakes","Tacos","Lasagna","Meatloaf"],this.colors=["#33d60b","#dcafff","#3fc9ff","#ff1600","#5238b1","#fff"],this.tableConfig$=new ReplaySubject.t(1),this.SNIPPETS=ADVANCED_DOCS,this.next=()=>{this.currentPage=this._currentPage$.value+1},this.prev=()=>{this.currentPage=this._currentPage$.value-1}}addData(){this.data$.next([...this.data$.getValue(),this.randomRecord()])}removeData(){this.data$.next([])}simulateLoad(){this.loading$.next(!0),setTimeout((()=>this.loading$.next(!1)),2e3)}clickAction(row,column,index){console.log("clicked row:",row,"col:",column),this.clicked=`clicked row number: ${index}`}randomRecord(){const random=Math.floor(2*Math.random()),newRecord={firstName:random?this.maleFirstNames[Math.floor(Math.random()*this.maleFirstNames.length)]:this.femaleFirstNames[Math.floor(Math.random()*this.femaleFirstNames.length)],lastName:this.lastNames[Math.floor(Math.random()*this.lastNames.length)],gender:random?"male":"female",favoriteColor:this.colors[Math.floor(Math.random()*this.colors.length)],favoriteFood:this.foods[Math.floor(Math.random()*this.foods.length)]};return console.log("added new random record:",newRecord),newRecord}ngOnInit(){this.simulateLoad(),this.paginationForm.get("length")?.valueChanges.pipe((0,withLatestFrom.M)(this.tableConfig$)).subscribe((([length,config])=>{length=+length,this.tableConfig$.next({...config,pagination:{...config.pagination,length}})})),this.tableConfig$.next({class:"table text-nowrap mb-0",mobileLayout:!0,columns:{firstName:{header:"First name",mobileHeader:!0,sortable:!0,order:0},lastName:{header:"Last name",mobileHeader:!0,hidden:!1,sortable:!0},gender:{mobileHeader:"Sex",sortable:!0,order:1},favoriteColor:{header:"Favorite color",mobileHeader:!0,templateRef:this.color,sortable:!1,order:2,search:!1,class:"custom-class"},favoriteFood:{mobileHeader:!0,header:"Favorite food",hidden:!1,sortable:!0,order:0},action:{mobileHeader:!1,header:!1,templateRef:this.actions,order:6,class:"py-1 text-end"}},pagination:{length:this.paginationForm.get("length")?.value||0},footer:{columns:{gender:{count:(data,key)=>{let men=0,women=0;for(let i=0;i<data.length;i++)"female"===data[i][key]?women++:"male"===data[i][key]&&men++;return`♂ ${men} ♀ ${women}`}},favoriteColor:{},action:{count:(data,key)=>`Total: ${data.length}`}}}})}}).ctorParameters=()=>[{type:fesm2020_forms.UntypedFormBuilder}],_class.propDecorators={actions:[{type:core.ViewChild,args:["actions",{static:!0}]}],color:[{type:core.ViewChild,args:["color",{static:!0}]}]},_class);AdvancedComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"docs-advanced",template:'<div class="row mb-3 gy-3 gx-2">\n  <div class="col-12 col-sm-auto">\n    <button class="btn btn-primary w-100" (click)="addData()">\n      Add random data\n    </button>\n  </div>\n  <div class="col-12 col-sm-auto">\n    <button class="btn btn-danger w-100" (click)="removeData()">\n      Remove data\n    </button>\n  </div>\n  <div class="col-12 col-sm-auto">\n    <button class="btn btn-secondary w-100" (click)="simulateLoad()">\n      Load\n    </button>\n  </div>\n</div>\n<form [formGroup]="paginationForm">\n  <div class="row gy-3">\n    <div class="form-group col-6 col-sm-auto">\n      <label for="length_input">Length</label>\n      <input\n        id="length_input"\n        formControlName="length"\n        type="number"\n        class="form-control"\n      />\n    </div>\n    <div class="form-group col-6 col-sm-auto">\n      <label for="search_input">Search</label>\n      <input\n        id="search_input"\n        formControlName="search"\n        type="text"\n        class="form-control"\n      />\n    </div>\n  </div>\n</form>\n<div class="overflow-scroll mt-3 pb-3">\n  <angular-generic-table\n    [data]="data$"\n    [config]="tableConfig$"\n    [page]="(currentPage$ | async)!"\n    [search]="search$"\n    [loading]="loading$"\n    #table\n  >\n    <div class="table-loading gt-skeleton-loader"></div>\n    <div class="table-no-data alert alert-info mt-3">Table is empty</div>\n  </angular-generic-table>\n</div>\n<div\n  class="row justify-content-center align-items-center gy-3"\n  *ngIf="{\n    current: (currentPage$ | async) || 0,\n    total: (table.table$ | async)?.info?.pageTotal || 1\n  } as pagination"\n>\n  <div class="col-6 col-sm-auto">\n    <button\n      class="btn btn-primary w-100"\n      (click)="prev()"\n      [disabled]="pagination.current === 0"\n    >\n      Prev\n    </button>\n  </div>\n  <div class="col-6 col-sm-auto">\n    <button\n      class="btn btn-primary w-100"\n      (click)="next()"\n      [disabled]="pagination.total - 1 === pagination.current"\n    >\n      Next\n    </button>\n  </div>\n  <div class="col-auto">Current page: {{ pagination.current + 1 }}</div>\n  <div class="col-auto">Total pages: {{ pagination.total }}</div>\n  <div class="col-auto">Records: {{ (data$ | async).length }}</div>\n  <div class="col-auto">\n    {{ clicked }}\n  </div>\n</div>\n<ng-template #actions let-row="row" let-col="col" let-index="index">\n  <button\n    *ngIf="index !== undefined"\n    class="btn btn-outline-primary btn-sm"\n    (click)="clickAction(row, col, index)"\n  >\n    Click me!\n  </button>\n</ng-template>\n<ng-template #color let-row="row" let-col="col">\n  <div\n    [style.background]="row[col.key]"\n    style="width: 1.5rem; height: 1.5rem; border-radius: 50%"\n  ></div>\n</ng-template>\n<docs-tabs [content]="SNIPPETS"></docs-tabs>\n'})],AdvancedComponent);const Advanced=args=>({props:args,component:AdvancedComponent});var tabs_component=__webpack_require__("./projects/docs/src/app/components/tabs/tabs.component.ts"),http=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),pagination_module=__webpack_require__("./projects/core/src/lib/pagination/pagination.module.ts"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Examples/Multiple features",decorators:[(0,client.moduleMetadata)({declarations:[AdvancedComponent,tabs_component.n],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],mdxType:"Meta"}),(0,esm.kt)("h1",{id:"multiple-features"},"Multiple features"),(0,esm.kt)("p",null,"Example showcasing:"),(0,esm.kt)("ul",null,(0,esm.kt)("li",{parentName:"ul"},"Sorting"),(0,esm.kt)("li",{parentName:"ul"},"Loading state"),(0,esm.kt)("li",{parentName:"ul"},"Empty state"),(0,esm.kt)("li",{parentName:"ul"},"Global search"),(0,esm.kt)("li",{parentName:"ul"},"Mobile table layout with sticky header (resize viewport to < 576px to view example)"),(0,esm.kt)("li",{parentName:"ul"},"Custom pagination"),(0,esm.kt)("li",{parentName:"ul"},"Add/remove data"),(0,esm.kt)("li",{parentName:"ul"},"Custom templates"),(0,esm.kt)("li",{parentName:"ul"},"Table footer")),(0,esm.kt)("h3",{id:"example"},"Example"),(0,esm.kt)(dist_esm.oG,{name:"Multiple features",mdxType:"Story"},Advanced.bind({})))}MDXContent.isMDXComponent=!0;var multipleFeatures=Advanced.bind({});multipleFeatures.storyName="Multiple features",multipleFeatures.parameters={storySource:{source:"Advanced.bind({})"}};var componentMeta={title:"Examples/Multiple features",decorators:[(0,client.moduleMetadata)({declarations:[AdvancedComponent,tabs_component.n],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],includeStories:["multipleFeatures"]},mdxStoryNameToKey={"Multiple features":"multipleFeatures"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))}});const Advanced_stories=componentMeta;var __namedExportsOrder=["multipleFeatures"]},"./projects/docs/src/stories/examples/Custom-templates.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,customTemplates:()=>customTemplates,default:()=>Custom_templates_stories});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/fesm2020/platform-browser.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),core_module=__webpack_require__("./projects/core/src/lib/core.module.ts"),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),tabs_component=__webpack_require__("./projects/docs/src/app/components/tabs/tabs.component.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),ReplaySubject=__webpack_require__("./node_modules/rxjs/_esm2015/internal/ReplaySubject.js");const CUSTOM_TEMPLATES_DOCS=[{name:"custom-templates.component.ts",code:"import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { TableColumn, TableConfig, TableRow } from '@angular-generic-table/core';\nimport { ReplaySubject } from 'rxjs';\n\n@Component({\n  selector: 'custom-templates',\n  templateUrl: `./custom-templates.component.html`\n})\nexport class CustomTemplatesComponent implements OnInit {\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n  clicked = '';\n\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteColor: '#26BFAF',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteColor: '#0f0',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config$: ReplaySubject<TableConfig> = new ReplaySubject(1);\n  ngOnInit(): void {\n    this.config$.next({\n      columns: {\n        firstName: {},\n        lastName: {},\n        gender: {},\n        favoriteColor: {\n          templateRef: this.color,\n        },\n        favoriteFood: {},\n        action: {\n          templateRef: this.actions,\n        },\n      },\n    });\n  }\n  clickAction(row: TableRow, column: { key: string; value: TableColumn }, index: number): void {\n    console.log('clicked row:', row, 'col:', column);\n    this.clicked = `clicked row number: ${index}`;\n  }\n}",language:"typescript"},{name:"app.module.ts",code:"import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { CustomTemplatesComponent } from './custom-templates-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [CustomTemplatesComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [CustomTemplatesComponent]\n})\nexport class AppModule {}",language:"typescript"},{name:"custom-templates.component.html",code:'<angular-generic-table [data]="data" [config]="config$"></angular-generic-table>\n<ng-template #actions let-row="row" let-col="col" let-index="index">\n <button class="btn btn-outline-primary btn-sm my-sm-n3 text-nowrap" (click)="clickAction(row, col, index)">Click me!</button>\n</ng-template>\n<ng-template #color let-row="row" let-col="col">\n <div [style.background]="row[col.key]" style="width: 1.5rem; height: 1.5rem; border-radius: 50%"></div>\n</ng-template>\n{{ clicked }}',language:"xml"}];var _class;let CustomTemplatesComponent=((_class=class CustomTemplatesComponent{constructor(){this.clicked="",this.data=[{firstName:"Peter",lastName:"Parker",gender:"male",favoriteColor:"#26BFAF",favoriteFood:"Pasta"},{firstName:"Mary Jane",lastName:"Watson",gender:"female",favoriteColor:"#0f0",favoriteFood:"Pizza"}],this.config$=new ReplaySubject.t(1),this.SNIPPETS=CUSTOM_TEMPLATES_DOCS}ngOnInit(){this.config$.next({columns:{firstName:{},lastName:{},gender:{},favoriteColor:{templateRef:this.color},favoriteFood:{},action:{templateRef:this.actions}}})}clickAction(row,column,index){console.log("clicked row:",row,"col:",column),this.clicked=`clicked row number: ${index}`}}).propDecorators={actions:[{type:core.ViewChild,args:["actions",{static:!0}]}],color:[{type:core.ViewChild,args:["color",{static:!0}]}]},_class);CustomTemplatesComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"docs-custom-templates",template:'\n    <div class="overflow-auto">\n      <angular-generic-table\n        [data]="data"\n        [config]="config$"\n      ></angular-generic-table>\n    </div>\n    <ng-template #actions let-row="row" let-col="col" let-index="index">\n      <button\n        class="btn btn-outline-primary btn-sm my-sm-n3 text-nowrap"\n        (click)="clickAction(row, col, index)"\n      >\n        Click me!\n      </button>\n    </ng-template>\n    <ng-template #color let-row="row" let-col="col">\n      <div\n        [style.background]="row[col.key]"\n        style="width: 1.5rem; height: 1.5rem; border-radius: 50%"\n      ></div>\n    </ng-template>\n    {{ clicked }}\n    <docs-tabs [content]="SNIPPETS"></docs-tabs>\n  '})],CustomTemplatesComponent);const CustomTemplates=args=>({props:args,component:CustomTemplatesComponent});var http=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),pagination_module=__webpack_require__("./projects/core/src/lib/pagination/pagination.module.ts"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Examples/Custom templates",decorators:[(0,client.moduleMetadata)({declarations:[CustomTemplatesComponent,tabs_component.n],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],mdxType:"Meta"}),(0,esm.kt)("h1",{id:"custom-templates"},"Custom templates"),(0,esm.kt)("p",null,"Define custom templates and assign them to different columns using the ",(0,esm.kt)("inlineCode",{parentName:"p"},"templateRef")," property when declaring ",(0,esm.kt)("inlineCode",{parentName:"p"},"columns")," in ",(0,esm.kt)("inlineCode",{parentName:"p"},"config"),"."),(0,esm.kt)(dist_esm.oG,{name:"Custom templates",mdxType:"Story"},CustomTemplates.bind({})))}MDXContent.isMDXComponent=!0;var customTemplates=CustomTemplates.bind({});customTemplates.storyName="Custom templates",customTemplates.parameters={storySource:{source:"CustomTemplates.bind({})"}};var componentMeta={title:"Examples/Custom templates",decorators:[(0,client.moduleMetadata)({declarations:[CustomTemplatesComponent,tabs_component.n],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],includeStories:["customTemplates"]},mdxStoryNameToKey={"Custom templates":"customTemplates"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))}});const Custom_templates_stories=componentMeta;var __namedExportsOrder=["customTemplates"]},"./projects/docs/src/stories/examples/Footer.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>Footer_stories,tableFooter:()=>tableFooter});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/fesm2020/platform-browser.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),core_module=__webpack_require__("./projects/core/src/lib/core.module.ts"),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),tabs_component=__webpack_require__("./projects/docs/src/app/components/tabs/tabs.component.ts"),http=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),pagination_module=__webpack_require__("./projects/core/src/lib/pagination/pagination.module.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");const SIMPLE_SNIPPETS=[{name:"footer-table.component.ts",code:"import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { TableConfig, TableRow } from '@angular-generic-table/core';\nimport { DecimalPipe } from '@angular/common';\n\n@Component({\n  template: `\n    <div class=\"overflow-auto\">\n      <angular-generic-table [data]=\"data\" [config]=\"config\">\n      </angular-generic-table>\n    </div>\n    <ng-template #heightTmplRef let-row=\"row\" let-col=\"col\">\n      <ng-container *ngIf=\"row[col.key || col] as height\"\n        >{{ height }} m\n      </ng-container>\n    </ng-template>\n  `,\n})\nexport class FooterComponent implements OnInit {\n  @ViewChild('heightTmplRef', { static: true }) heightTmplRef:\n    | TemplateRef<any>\n    | undefined;\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n      age: 27,\n      weight: 85.457,\n      height: 1.85,\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n      age: 25,\n      weight: 60.123,\n      height: 1.65,\n    },\n  ];\n  config: TableConfig = {};\n  ngOnInit() {\n    this.config = {\n      columns: {\n        firstName: {},\n        lastName: {},\n        gender: {},\n        favoriteFood: {\n          class: 'text-end flex-end',\n        },\n        age: {\n          class: 'text-end',\n        },\n        weight: {\n          class: 'text-end',\n          transform: {\n            pipe: DecimalPipe,\n            args: ['1.0-2'],\n          },\n        },\n        height: {\n          class: 'text-end',\n          templateRef: this.heightTmplRef,\n        },\n      },\n      footer: {\n        headers: {\n          sum: 'Total',\n          numberOfWomen: 'Number of women',\n          numberOfMen: 'Number of men',\n          min: true,\n          max: true,\n          avg: true,\n          count: true,\n          static: true,\n          first: true,\n        },\n        rowOrder: [\n          'first',\n          'numberOfWomen',\n          'numberOfMen',\n          'min',\n          'max',\n          'sum',\n          'avg',\n          'count',\n        ],\n        columns: {\n          firstName: {},\n          lastName: {\n            static: 'n/a',\n          },\n          gender: {\n            numberOfWomen: (data: Array<TableRow>, key) => {\n              let count = 0;\n              for (let i = 0; i < data.length; i++) {\n                if (data[i][key] === 'female') {\n                  count++;\n                }\n              }\n              return count;\n            },\n            numberOfMen: (data: Array<TableRow>, key) => {\n              let count = 0;\n              for (let i = 0; i < data.length; i++) {\n                if (data[i][key] === 'male') {\n                  count++;\n                }\n              }\n              return count;\n            },\n          },\n          favoriteFood: {\n            first: (data: Array<TableRow>, key) => data[0][key],\n          },\n          age: {\n            sum: true,\n            avg: true,\n            count: true,\n            max: true,\n            min: true,\n          },\n          weight: {\n            sum: true,\n            avg: true,\n            min: true,\n          },\n          height: {\n            avg: true,\n            min: true,\n            max: true,\n          },\n        },\n      },\n    };\n  }\n\n}",language:"typescript"},{name:"app.module.ts",code:"import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { BasicTableComponent } from './basic-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [BasicTableComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [BasicTableComponent]\n})\nexport class AppModule {}",language:"typescript"}];var _class;let FooterComponent=((_class=class FooterComponent{constructor(){this.data=[{firstName:"Peter",lastName:"Parker",gender:"male",favoriteFood:"Pasta",age:27,weight:85.457,height:1.85},{firstName:"Mary Jane",lastName:"Watson",gender:"female",favoriteFood:"Pizza",age:25,weight:60.123,height:1.65}],this.config={},this.SNIPPETS=SIMPLE_SNIPPETS}ngOnInit(){this.config={mobileLayout:!0,columns:{firstName:{mobileHeader:!0},lastName:{mobileHeader:!0},gender:{mobileHeader:!0},favoriteFood:{mobileHeader:!0,class:"text-end flex-end"},age:{mobileHeader:!0,class:"text-end"},weight:{mobileHeader:!0,class:"text-end",transform:{pipe:common.JJ,args:["1.0-2"]}},height:{mobileHeader:!0,class:"text-end",templateRef:this.heightTmplRef}},footer:{headers:{sum:"Total",numberOfWomen:"Number of women",numberOfMen:"Number of men",min:!0,max:!0,avg:!0,count:!0,static:!0,first:!0},rowOrder:["first","numberOfWomen","numberOfMen","min","max","sum","avg","count"],columns:{firstName:{},lastName:{static:"n/a"},gender:{numberOfWomen:(data,key)=>{let count=0;for(let i=0;i<data.length;i++)"female"===data[i][key]&&count++;return count},numberOfMen:(data,key)=>{let count=0;for(let i=0;i<data.length;i++)"male"===data[i][key]&&count++;return count}},favoriteFood:{first:(data,key)=>data[0][key]},age:{sum:!0,avg:!0,count:!0,max:!0,min:!0},weight:{sum:!0,avg:!0,min:!0},height:{avg:!0,min:!0,max:!0}}}}}}).propDecorators={heightTmplRef:[{type:core.ViewChild,args:["heightTmplRef",{static:!0}]}]},_class);FooterComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"docs-footer",template:'\n    <div class="overflow-auto">\n      <angular-generic-table [data]="data" [config]="config">\n      </angular-generic-table>\n    </div>\n    <docs-tabs [content]="SNIPPETS"></docs-tabs>\n    <ng-template #heightTmplRef let-row="row" let-col="col">\n      <ng-container *ngIf="row[col.key || col] as height"\n        >{{ height }} m\n      </ng-container>\n    </ng-template>\n  '})],FooterComponent);const Footer=args=>({props:args,component:FooterComponent});var _excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Preview=function makeShortcode(name){return function MDXDefaultShortcode(props){return console.warn("Component "+name+" was not imported, exported, or provided by MDXProvider as global scope"),(0,esm.kt)("div",props)}}("Preview"),layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Examples/Table footer",decorators:[(0,client.moduleMetadata)({declarations:[tabs_component.n,FooterComponent],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],mdxType:"Meta"}),(0,esm.kt)("h1",{id:"table-footer"},"Table footer"),(0,esm.kt)("p",null,"Use the footer config option to display accumulations like totals, count, min, max etc. or any other content for that matter in the footer of the table. Pass your own data or accumulator function or use the ones provided by Generic Table."),(0,esm.kt)("strong",null,"Footer config"),(0,esm.kt)("p",null,"The footer config has the following options which are described more in detail below."),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-json"},"\"footer\": {\n    \"headers\"?: {\n      [key: 'sum'|'avg'|'count'|'max'|'min'|string]: string|boolean;\n    };\n    \"columns\"?: {\n      [key: string]: {\n        [key: 'sum'|'avg'|'count'|'max'|'min'|string]: boolean|number|string|Function;\n      };\n    };\n    \"rowOrder\"?: Array<'sum'|'avg'|'count'|'max'|'min'|string>;\n    \"emptyContent\"?: string;\n  };\n")),(0,esm.kt)("strong",null,"Footer config options"),(0,esm.kt)(Preview,{mdxSource:"%0A%3Cdiv%20class=%22overflow-auto%22%3E%0A%20%20%20%20%3Ctable%3E%0A%20%20%20%20%20%20%3Cthead%3E%0A%20%20%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%20%20%3Cth%3EOption%3C/th%3E%0A%20%20%20%20%20%20%20%20%3Cth%3EDescription%3C/th%3E%0A%20%20%20%20%20%20%3C/tr%3E%0A%20%20%20%20%20%20%3C/thead%3E%0A%20%20%20%20%20%20%3Ctbody%3E%0A%20%20%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%20%20%3Ctd%3E%3Ccode%3Eheaders%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%20%20%3Ctd%3EKey%20value%20pairs%20for%20headers,%20each%20key%20corresponds%20to%20name%20of%20accumulator.%3C/td%3E%0A%20%20%20%20%20%20%3C/tr%3E%0A%20%20%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%20%20%3Ctd%3E%3Ccode%3Ecolumns%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%20%20%3Ctd%3EKey%20value%20pairs%20with%20columns%20that%20should%20display%20content/accumulations.%20Specify%20which%20accumulator%20to%20use%20%3Ccode%3Emin%3C/code%3E,%20%3Ccode%3Emax%3C/code%3E,%20%3Ccode%3Eavg%3C/code%3E,%20%3Ccode%3Ecount%3C/code%3E,%20%3Ccode%3Esum%3C/code%3E%20or%20define%20your%20own%20one%20or%20add%20fixed%20content%20to%20display.%20%3C/td%3E%0A%20%20%20%20%20%20%3C/tr%3E%0A%20%20%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%20%20%3Ctd%3E%3Ccode%3ErowOrder%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%20%20%3Ctd%3ERow%20order%20for%20accumulators.%3C/td%3E%0A%20%20%20%20%20%20%3C/tr%3E%0A%20%20%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%20%20%3Ctd%3E%3Ccode%3EemptyContent%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%20%20%3Ctd%3EContent%20to%20display%20when%20accumulation%20is%20undefined%20or%20null%20for%20a%20field.%3C/td%3E%0A%20%20%20%20%20%20%3C/tr%3E%0A%20%20%20%20%20%20%3C/tbody%3E%0A%20%20%20%20%3C/table%3E%0A%20%20%3C/div%3E%0A",mdxType:"Preview"},(0,esm.kt)("div",{class:"overflow-auto"},(0,esm.kt)("table",null,(0,esm.kt)("thead",null,(0,esm.kt)("tr",null,(0,esm.kt)("th",null,"Option"),(0,esm.kt)("th",null,"Description"))),(0,esm.kt)("tbody",null,(0,esm.kt)("tr",null,(0,esm.kt)("td",null,(0,esm.kt)("code",null,"headers")),(0,esm.kt)("td",null,"Key value pairs for headers, each key corresponds to name of accumulator.")),(0,esm.kt)("tr",null,(0,esm.kt)("td",null,(0,esm.kt)("code",null,"columns")),(0,esm.kt)("td",null,"Key value pairs with columns that should display content/accumulations. Specify which accumulator to use ",(0,esm.kt)("code",null,"min"),", ",(0,esm.kt)("code",null,"max"),", ",(0,esm.kt)("code",null,"avg"),", ",(0,esm.kt)("code",null,"count"),", ",(0,esm.kt)("code",null,"sum")," or define your own one or add fixed content to display. ")),(0,esm.kt)("tr",null,(0,esm.kt)("td",null,(0,esm.kt)("code",null,"rowOrder")),(0,esm.kt)("td",null,"Row order for accumulators.")),(0,esm.kt)("tr",null,(0,esm.kt)("td",null,(0,esm.kt)("code",null,"emptyContent")),(0,esm.kt)("td",null,"Content to display when accumulation is undefined or null for a field.")))))),(0,esm.kt)("strong",null,"Example config"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-json"},'"footer": {\n  "headers": {\n    "customFn": "Custom",\n    "min": true,\n  },\n  "columns": {\n    "foo": {\n      "min": true,\n      "max": true,\n      "customFn": (data: Array<TableRow>, key: string) => ...,\n    }\n  },\n  "rowOrder": ["min", "max", "customFn"],\n}\n')),(0,esm.kt)("strong",null,"Example"),(0,esm.kt)("br",null),"Take a look at the ",(0,esm.kt)("a",{href:"examples?path=/docs/examples-multiple-features--multiple-features"},"Multiple features example")," to view another configuration.",(0,esm.kt)("br",null),(0,esm.kt)("br",null),(0,esm.kt)(dist_esm.oG,{name:"Table footer",mdxType:"Story"},Footer.bind({})))}MDXContent.isMDXComponent=!0;var tableFooter=Footer.bind({});tableFooter.storyName="Table footer",tableFooter.parameters={storySource:{source:"Footer.bind({})"}};var componentMeta={title:"Examples/Table footer",decorators:[(0,client.moduleMetadata)({declarations:[tabs_component.n,FooterComponent],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],includeStories:["tableFooter"]},mdxStoryNameToKey={"Table footer":"tableFooter"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))}});const Footer_stories=componentMeta;var __namedExportsOrder=["tableFooter"]},"./projects/docs/src/stories/examples/Horizontal.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>Horizontal_stories,horizontalLayout:()=>horizontalLayout});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/fesm2020/platform-browser.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),core_module=__webpack_require__("./projects/core/src/lib/core.module.ts"),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),tabs_component=__webpack_require__("./projects/docs/src/app/components/tabs/tabs.component.ts"),http=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),pagination_module=__webpack_require__("./projects/core/src/lib/pagination/pagination.module.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");const HORIZONTAL_TABLE_SNIPPETS=[{name:"horizontal-table.component.ts",code:"import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { GtDeltaComponent, TableConfig } from '@angular-generic-table/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'docs-horizontal',\n  templateUrl: './horizontal-table.component.html',\n  styles: [],\n})\nexport class TransposeComponent implements OnInit {\n  @ViewChild('feelings', { static: true }) feelings:\n    | TemplateRef<any>\n    | undefined;\n  @ViewChild('delta', { static: true }) delta: TemplateRef<GtDeltaComponent> | undefined;\n  @ViewChild('deltaIndex', { static: true }) deltaIndex:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  loading$ = new BehaviorSubject(false);\n  config: TableConfig = {};\n  data: any = [];\n\n  ngOnInit(): void {\n    this.config = {\n      stickyHeaders: {\n        row: true,\n      },\n      mobileLayout: true,\n      rows: {\n        year: {\n          class: 'text-end',\n          header: false\n        },\n        value: {\n          class: 'text-end'\n        },\n        delta: {\n          header: 'Delta %',\n          templateRef: this.delta,\n          class: 'text-end'\n        },\n        deltaIndex: {\n          header: 'Since inception %',\n          templateRef: this.deltaIndex,\n          class: 'text-end'\n        },\n        feeling: {\n          templateRef: this.feelings,\n          class: 'text-end'\n        },\n      },\n    };\n    this.load();\n  }\n  simulateLoad(): void {\n    this.loading$.next(true);\n    // set loading state to false after 2 seconds\n    setTimeout(() => this.loading$.next(false), 2000);\n  }\n  empty(): void {\n    this.data = [];\n  }\n  load(): void {\n    this.data = [\n      {\n        year: '2017',\n        value: 50,\n        feeling: 'neutral'\n      },\n      {\n        year: '2018',\n        value: 75,\n        feeling: 'positive'\n      },\n      {\n        year: '2019',\n        value: 100,\n        feeling: 'thrilled'\n      },\n      {\n        year: '2020',\n        value: 250,\n        feeling: 'thrilled'\n      },\n      {\n        year: '2021',\n        value: 50,\n        feeling: 'negative'\n      }\n    ];\n  }\n}\n",language:"typescript"},{name:"horizontal-table.component.html",code:'<button class="btn btn-outline-primary" (click)="simulateLoad()">Simulate load</button>\n<button class="btn btn-outline-danger mx-3" (click)="empty()">Empty</button>\n<button class="btn btn-outline-primary" (click)="load()">Reset</button>\n<div class="overflow-auto">\n  <angular-generic-table\n    [data]="data"\n    [config]="config"\n    [loading]="loading$"\n  >\n    <div class="table-loading gt-skeleton-loader"></div>\n    <div class="table-no-data alert alert-info mt-3">Table is empty</div>\n  </angular-generic-table>\n</div>\n<ng-template #feelings let-row="row" let-col="col">\n  <div [ngSwitch]="row[col.key]">\n    <ng-container *ngSwitchCase="\'thrilled\'">😀</ng-container>\n    <ng-container *ngSwitchCase="\'positive\'">🙂</ng-container>\n    <ng-container *ngSwitchCase="\'neutral\'">😐</ng-container>\n    <ng-container *ngSwitchCase="\'negative\'">😭</ng-container>\n  </div>\n</ng-template>\n<ng-template #delta let-data="data" let-index="index">\n  <gt-delta [index]="index" [data]="data"></gt-delta>\n</ng-template>\n<ng-template #deltaIndex let-data="data" let-index="index">\n  <gt-delta [index]="index" [baseIndex]="0" [data]="data"></gt-delta>\n</ng-template>',language:"xml"},{name:"app.module.ts",code:"import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HorizontalTableComponent } from './horizontal-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [HorizontalTableComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [HorizontalTableComponent]\n})\nexport class AppModule {}",language:"typescript"}];var _class,BehaviorSubject=__webpack_require__("./node_modules/rxjs/_esm2015/internal/BehaviorSubject.js");let HorizontalTableComponent=((_class=class HorizontalTableComponent{constructor(){this.loading$=new BehaviorSubject.X(!1),this.config={},this.data=[],this.SNIPPETS=HORIZONTAL_TABLE_SNIPPETS}ngOnInit(){this.config={stickyHeaders:{row:!0},mobileLayout:!0,rows:{year:{class:"text-end",header:!1},value:{class:"text-end"},delta:{header:"Delta %",templateRef:this.delta,class:"text-end"},deltaIndex:{header:"Since inception %",templateRef:this.deltaIndex,class:"text-end"},feeling:{templateRef:this.feelings,class:"text-end"}}},this.load()}simulateLoad(){this.loading$.next(!0),setTimeout((()=>this.loading$.next(!1)),2e3)}empty(){this.data=[]}load(){this.data=[{year:"2017",value:50,feeling:"neutral"},{year:"2018",value:75,feeling:"positive"},{year:"2019",value:100,feeling:"thrilled"},{year:"2020",value:250,feeling:"thrilled"},{year:"2021",value:50,feeling:"negative"}]}}).propDecorators={feelings:[{type:core.ViewChild,args:["feelings",{static:!0}]}],delta:[{type:core.ViewChild,args:["delta",{static:!0}]}],deltaIndex:[{type:core.ViewChild,args:["deltaIndex",{static:!0}]}]},_class);HorizontalTableComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"docs-horizontal-table",template:'\n    <button class="btn btn-outline-primary" (click)="simulateLoad()">\n      Simulate load\n    </button>\n    <button class="btn btn-outline-danger mx-3" (click)="empty()">Empty</button>\n    <button class="btn btn-outline-primary" (click)="load()">Reset</button>\n    <div class="overflow-auto">\n      <angular-generic-table\n        [data]="data"\n        [config]="config"\n        [loading]="loading$"\n      >\n        <div class="table-loading gt-skeleton-loader"></div>\n        <div class="table-no-data alert alert-info mt-3">Table is empty</div>\n      </angular-generic-table>\n    </div>\n    <ng-template #feelings let-row="row" let-col="col">\n      <div [ngSwitch]="row[col.key]">\n        <ng-container *ngSwitchCase="\'thrilled\'">😀</ng-container>\n        <ng-container *ngSwitchCase="\'positive\'">🙂</ng-container>\n        <ng-container *ngSwitchCase="\'neutral\'">😐</ng-container>\n        <ng-container *ngSwitchCase="\'negative\'">😭</ng-container>\n      </div>\n    </ng-template>\n    <ng-template #delta let-data="data" let-index="index">\n      <gt-delta [index]="index" [data]="data"></gt-delta>\n    </ng-template>\n    <ng-template #deltaIndex let-data="data" let-index="index">\n      <gt-delta [index]="index" [baseIndex]="0" [data]="data"></gt-delta>\n    </ng-template>\n    <docs-tabs [content]="SNIPPETS"></docs-tabs>\n  '})],HorizontalTableComponent);const Horizontal=args=>({props:args,component:HorizontalTableComponent});var _excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Examples/Horizontal layout",decorators:[(0,client.moduleMetadata)({declarations:[HorizontalTableComponent,tabs_component.n],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],mdxType:"Meta"}),(0,esm.kt)("h1",{id:"horizontal-layout"},"Horizontal layout"),(0,esm.kt)("p",null,"Declare ",(0,esm.kt)("inlineCode",{parentName:"p"},"rows")," instead of ",(0,esm.kt)("inlineCode",{parentName:"p"},"columns")," to get a horizontal table where records are added as columns instead of rows. The example below freezes the first column by setting ",(0,esm.kt)("inlineCode",{parentName:"p"},"stickyHeaders.row")," to true, it also uses ",(0,esm.kt)("inlineCode",{parentName:"p"},"<gt-delta>")," which is a helper component to display the delta between two values (by default it compares against previous row or column)."),(0,esm.kt)(dist_esm.oG,{name:"Horizontal layout",mdxType:"Story"},Horizontal.bind({})))}MDXContent.isMDXComponent=!0;var horizontalLayout=Horizontal.bind({});horizontalLayout.storyName="Horizontal layout",horizontalLayout.parameters={storySource:{source:"Horizontal.bind({})"}};var componentMeta={title:"Examples/Horizontal layout",decorators:[(0,client.moduleMetadata)({declarations:[HorizontalTableComponent,tabs_component.n],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],includeStories:["horizontalLayout"]},mdxStoryNameToKey={"Horizontal layout":"horizontalLayout"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))}});const Horizontal_stories=componentMeta;var __namedExportsOrder=["horizontalLayout"]},"./projects/docs/src/stories/examples/Mobile.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>Mobile_stories,mobileLayout:()=>mobileLayout});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/fesm2020/platform-browser.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),core_module=__webpack_require__("./projects/core/src/lib/core.module.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),mobile_layout_component=__webpack_require__("./projects/docs/src/app/examples/mobile-layout/mobile-layout.component.ts.css?ngResource!=!./node_modules/@ngtools/webpack/src/loaders/inline-resource.js?data=CiAgICAgIC50YWJsZSB0aCB7CiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDsKICAgICAgfQogICAg!./projects/docs/src/app/examples/mobile-layout/mobile-layout.component.ts"),mobile_layout_component_default=__webpack_require__.n(mobile_layout_component),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),BehaviorSubject=__webpack_require__("./node_modules/rxjs/_esm2015/internal/BehaviorSubject.js"),map=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/map.js");const MOBILE_LAYOUT_SNIPPETS=[{name:"mobile-layout.component.ts",code:"import {Component, Pipe, PipeTransform, TemplateRef, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {TableColumn, TableConfig, TableRow} from \"@angular-generic-table/core\";\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {map} from \"rxjs/operators\";\n\n@Pipe({\n  name: 'genderPipe',\n})\nexport class GenderPipe implements PipeTransform {\n  transform(gender: 'male' | 'female'): string {\n  return gender === 'male' ? '👨' : '👩';\n  }\n}\n\n@Component({\n  selector: 'docs-mobile-layout',\n  template: `\n    <div class=\"d-flex justify-content-end mb-1 align-items-center\">\n      {{clicked}} <button class=\"btn btn-link d-sm-none \" (click)=\"toggleLayout()\">{{(mobileLayout$ | async)? 'Desktop ' : 'Mobile '}} layout</button>\n    </div>\n    <div [class.overflow-auto]=\"(mobileLayout$ | async) === false\">\n      <angular-generic-table [data]=\"data\" [config]=\"config$\"></angular-generic-table>\n    </div>\n    <ng-template #actions let-row=\"row\" let-col=\"col\" let-index=\"index\">\n      <button class=\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\" (click)=\"clickAction(row, col, index)\">Click me!</button>\n    </ng-template>\n  `,\n  styles: [`\n    .table th {\n      white-space: nowrap;\n    }\n  `],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MobileLayoutComponent {\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  clicked = '';\n\n  mobileLayout$ = new BehaviorSubject(true);\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config$: Observable<TableConfig> = this.mobileLayout$.pipe(\n    map(mobileLayout => ({\n      mobileLayout,\n      columns: {\n        firstName: {\n          mobileHeader: true,\n          sortable: true\n        },\n        lastName: {\n          mobileHeader: true,\n          sortable: true\n        },\n        gender: {\n          mobileHeader: true,\n          transform: {\n            pipe: GenderPipe\n          }\n        },\n        favoriteFood: {\n          mobileHeader: true\n        },\n        action: {\n          mobileHeader: false,\n          header: false,\n          templateRef: this.actions,\n        },\n      },\n    }))\n  );\n\n  toggleLayout = (): void => {\n    this.mobileLayout$.next(!this.mobileLayout$.getValue());\n  }\n  clickAction(row: TableRow, column: { key: string; value: TableColumn }, index: number): void {\n    console.log('clicked row:', row, 'col:', column);\n    this.clicked = `Clicked row number: ${index}`;\n  }\n}",language:"typescript"},{name:"app.module.ts",code:"import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { MobileLayoutComponent } from './mobile-layout.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [MobileLayoutComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [MobileLayoutComponent]\n})\nexport class AppModule {}",language:"typescript"}];var _class;let GenderPipe=class GenderPipe{transform(gender){return"male"===gender?"👨":"👩"}};GenderPipe=(0,tslib_es6.gn)([(0,core.Pipe)({name:"genderPipe"})],GenderPipe);let MobileLayoutComponent=(_class=class MobileLayoutComponent{constructor(){this.clicked="",this.mobileLayout$=new BehaviorSubject.X(!0),this.data=[{firstName:"Peter",lastName:"Parker",gender:"male",favoriteFood:"Pasta"},{firstName:"Mary Jane",lastName:"Watson",gender:"female",favoriteFood:"Pizza"}],this.config$=this.mobileLayout$.pipe((0,map.U)((mobileLayout=>({mobileLayout,columns:{firstName:{mobileHeader:!0,sortable:!0},lastName:{mobileHeader:!0,sortable:!0},gender:{mobileHeader:!0,transform:{pipe:GenderPipe}},favoriteFood:{mobileHeader:!0},action:{mobileHeader:!1,header:!1,templateRef:this.actions}}})))),this.SNIPPETS=MOBILE_LAYOUT_SNIPPETS,this.toggleLayout=()=>{this.mobileLayout$.next(!this.mobileLayout$.getValue())}}clickAction(row,column,index){console.log("clicked row:",row,"col:",column),this.clicked=`Clicked row number: ${index}`}},_class.propDecorators={actions:[{type:core.ViewChild,args:["actions",{static:!0}]}]},_class);MobileLayoutComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"docs-mobile-layout",template:'\n    <div class="d-flex justify-content-end mb-1 align-items-center">\n      {{ clicked }}\n      <button class="btn btn-link d-sm-none " (click)="toggleLayout()">\n        {{ (mobileLayout$ | async) ? \'Desktop \' : \'Mobile \' }} layout\n      </button>\n    </div>\n    <div [class.overflow-auto]="(mobileLayout$ | async) === false">\n      <angular-generic-table\n        [data]="data"\n        [config]="config$"\n      ></angular-generic-table>\n    </div>\n    <ng-template #actions let-row="row" let-col="col" let-index="index">\n      <button\n        class="btn btn-outline-primary btn-sm my-sm-n3 text-nowrap"\n        (click)="clickAction(row, col, index)"\n      >\n        Click me!\n      </button>\n    </ng-template>\n    <docs-tabs [content]="SNIPPETS"></docs-tabs>\n  ',encapsulation:core.ViewEncapsulation.None,styles:[mobile_layout_component_default()]})],MobileLayoutComponent);const Mobile=args=>({props:args,component:MobileLayoutComponent});var fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),tabs_component=__webpack_require__("./projects/docs/src/app/components/tabs/tabs.component.ts"),http=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),pagination_module=__webpack_require__("./projects/core/src/lib/pagination/pagination.module.ts"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Examples/Mobile layout",decorators:[(0,client.moduleMetadata)({declarations:[tabs_component.n],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],mdxType:"Meta"}),(0,esm.kt)("h1",{id:"mobile-layout"},"Mobile layout"),(0,esm.kt)("p",null,"Use mobile layout for table by setting ",(0,esm.kt)("inlineCode",{parentName:"p"},"mobileLayout")," config option to ",(0,esm.kt)("inlineCode",{parentName:"p"},"true")," for table (or by adding class ",(0,esm.kt)("inlineCode",{parentName:"p"},".table-mobile")," to table). Using config option is the preferred way as it will not only add the correct styling but also hide mobile headers automatically when option changes. Generic table uses CSS to create an layout optimized for mobiles, i.e the markup stays the same and it's still use table elements for rendering. Resize the window or view the example below on a small screen to checkout the mobile version as well as the ability toggle to desktop layout."),(0,esm.kt)("h3",{id:"set-breakpoint-for-mobile-layout"},"Set breakpoint for mobile layout"),(0,esm.kt)("p",null,"Since Generic table relies solely on CSS and media queries to accomplish the mobile layout, it's just a matter of declaring a breakpoint using ",(0,esm.kt)("inlineCode",{parentName:"p"},"SCSS"),". Override the default value of ",(0,esm.kt)("inlineCode",{parentName:"p"},"576px"),"\n(bootstrap breakpoint for small screens), by passing a new value for ",(0,esm.kt)("inlineCode",{parentName:"p"},"$mobile-style-max-width")," like this:"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-scss"},"@use '@angular-generic-table/core/scss' as generic-table-styles with (\n  $mobile-style-max-width: 375px\n);\n@include generic-table-styles.styles();\n")),(0,esm.kt)("h3",{id:"example"},"Example"),(0,esm.kt)(dist_esm.oG,{name:"Mobile layout",mdxType:"Story"},Mobile.bind({})))}MDXContent.isMDXComponent=!0;var mobileLayout=Mobile.bind({});mobileLayout.storyName="Mobile layout",mobileLayout.parameters={storySource:{source:"Mobile.bind({})"}};var componentMeta={title:"Examples/Mobile layout",decorators:[(0,client.moduleMetadata)({declarations:[tabs_component.n],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],includeStories:["mobileLayout"]},mdxStoryNameToKey={"Mobile layout":"mobileLayout"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))}});const Mobile_stories=componentMeta;var __namedExportsOrder=["mobileLayout"]},"./projects/docs/src/stories/examples/Nested-data.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>Nested_data_stories,nestedData:()=>nestedData});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/fesm2020/platform-browser.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),core_module=__webpack_require__("./projects/core/src/lib/core.module.ts"),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),tabs_component=__webpack_require__("./projects/docs/src/app/components/tabs/tabs.component.ts"),http=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),pagination_module=__webpack_require__("./projects/core/src/lib/pagination/pagination.module.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");const NESTED_SNIPPETS=[{name:"nested-data.component.ts",code:"import {Component, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {TableConfig, TableRows} from \"@angular-generic-table/core\";\n\ninterface NestedData {\n  name: {\n    first: string;\n    last: string;\n  };\n  data: {\n    details?: {\n      gender: 'male' | 'female';\n      favoriteFood: 'Pasta' | 'Pizza';\n    };\n  };\n}\n\ninterface Data {\n  firstName: string;\n  lastName: string;\n  gender: 'male' | 'female';\n  favoriteFood: 'Pasta' | 'Pizza';\n  missing: string;\n}\n@Component({\n  selector: 'nested-data',\n  template: `\n    <div class=\"row gy-3\">\n      <div class=\"col col-sm-auto\">\n        <button class=\"btn btn-outline-primary mb-3\" (click)=\"loadData()\">\n          Load other data\n        </button>\n      </div>\n      <div class=\"col col-sm-auto\">\n        <button class=\"btn btn-outline-primary mb-3\" (click)=\"resetData()\">\n          Reset\n        </button>\n      </div>\n    </div>\n    <angular-generic-table [data]=\"data\" [config]=\"config\"></angular-generic-table>\n    <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n    <ng-template #gender let-row=\"row\" let-col=\"col\">\n      <div [ngSwitch]=\"row[col.key]\">\n        <ng-container *ngSwitchCase=\"'male'\">♂️</ng-container>\n        <ng-container *ngSwitchCase=\"'female'\">♀️</ng-container>\n      </div>\n    </ng-template>\n  `,\n  styles: [],\n})\nexport class NestedDataComponent implements OnInit {\n  @ViewChild('gender', { static: true }) gender: TemplateRef<any> | undefined;\n\n  config: TableConfig<Data> = {};\n  data: Array<NestedData> = [];\n  ngOnInit(): void {\n    this.resetData();\n    this.config = {\n      columns: {\n        firstName: {\n          sortable: true,\n          mapTo: { path: 'name.first' },\n        },\n        lastName: {\n          sortable: true,\n          mapTo: { path: 'name.last' },\n        },\n        gender: {\n          mapTo: { path: 'data.details.gender' },\n          templateRef: this.gender,\n        },\n        favoriteFood: {\n          sortable: true,\n          mapTo: { path: 'data.details.favoriteFood', missingValue: 'n/a' },\n        },\n        missing: {\n          mapTo: { path: 'data.missingKey.noMatch', missingValue: 'n/a' },\n        },\n      },\n    };\n  }\n\n  resetData() {\n    this.data = [\n      {\n        name: {\n          first: 'Peter',\n          last: 'Parker',\n        },\n        data: {\n          details: {\n            gender: 'male',\n            favoriteFood: 'Pasta',\n          },\n        },\n      },\n      {\n        name: {\n          first: 'Mary Jane',\n          last: 'Watson',\n        },\n        data: {\n          details: {\n            gender: 'female',\n            favoriteFood: 'Pizza',\n          },\n        },\n      },\n    ];\n  }\n\n  loadData(): void {\n    this.data = [\n      {\n        name: {\n          first: 'John',\n          last: 'Doe',\n        },\n        data: {\n          details: {\n            gender: 'male',\n            favoriteFood: 'Pasta',\n          },\n        },\n      },\n      {\n        name: {\n          first: 'Jane',\n          last: 'Doe',\n        },\n        data: {\n          details: {\n            gender: 'female',\n            favoriteFood: 'Pizza',\n          },\n        },\n      },\n      {\n        name: {\n          first: 'Foo',\n          last: 'Bar',\n        },\n        data: {},\n      },\n    ];\n  }\n}",language:"typescript"},{name:"app.module.ts",code:"import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { NestedDataComponent } from './nested-data.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [NestedDataComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [NestedDataComponent]\n})\nexport class AppModule {}",language:"typescript"}];var _class,core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let NestedDataComponent=((_class=class NestedDataComponent{constructor(){this.config={},this.data=[],this.SNIPPETS=NESTED_SNIPPETS}ngOnInit(){this.resetData(),this.config={columns:{firstName:{sortable:!0,mapTo:{path:"name.first"}},lastName:{sortable:!0,mapTo:{path:"name.last"}},gender:{mapTo:{path:"data.details.gender"},templateRef:this.gender},favoriteFood:{sortable:!0,mapTo:{path:"data.details.favoriteFood",missingValue:"n/a"}},missing:{mapTo:{path:"data.missingKey.noMatch",missingValue:"n/a"}}}}}resetData(){this.data=[{name:{first:"Peter",last:"Parker"},data:{details:{gender:"male",favoriteFood:"Pasta"}}},{name:{first:"Mary Jane",last:"Watson"},data:{details:{gender:"female",favoriteFood:"Pizza"}}}]}loadData(){this.data=[{name:{first:"John",last:"Doe"},data:{details:{gender:"male",favoriteFood:"Pasta"}}},{name:{first:"Jane",last:"Doe"},data:{details:{gender:"female",favoriteFood:"Pizza"}}},{name:{first:"Foo",last:"Bar"},data:{}}]}}).propDecorators={gender:[{type:core.ViewChild,args:["gender",{static:!0}]}]},_class);NestedDataComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"nested-data",template:'\n    <div class="row gy-3">\n      <div class="col col-sm-auto">\n        <button class="btn btn-outline-primary mb-3" (click)="loadData()">\n          Load other data\n        </button>\n      </div>\n      <div class="col col-sm-auto">\n        <button class="btn btn-outline-primary mb-3" (click)="resetData()">\n          Reset\n        </button>\n      </div>\n    </div>\n    <div class="overflow-auto">\n      <angular-generic-table\n        [data]="data"\n        [config]="config"\n      ></angular-generic-table>\n    </div>\n    <docs-tabs [content]="SNIPPETS"></docs-tabs>\n    <ng-template #gender let-row="row" let-col="col">\n      <div [ngSwitch]="row[col.key]">\n        <ng-container *ngSwitchCase="\'male\'">♂️</ng-container>\n        <ng-container *ngSwitchCase="\'female\'">♀️</ng-container>\n      </div>\n    </ng-template>\n  '})],NestedDataComponent);const Nested=args=>({props:args,component:NestedDataComponent});var _excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Examples/Nested data",decorators:[(0,client.moduleMetadata)({declarations:[tabs_component.n,NestedDataComponent],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],mdxType:"Meta"}),(0,esm.kt)("h1",{id:"nested-data"},"Nested data"),(0,esm.kt)("p",null,"Generic table can generate tables based on nested JSON structures, just use ",(0,esm.kt)("inlineCode",{parentName:"p"},"mapTo")," option and pass string path to object value as ",(0,esm.kt)("inlineCode",{parentName:"p"},"path")," and optionally a ",(0,esm.kt)("inlineCode",{parentName:"p"},"missingValue")," value which will be used if key is undefined."),(0,esm.kt)(dist_esm.oG,{name:"Nested data",mdxType:"Story"},Nested.bind({})))}MDXContent.isMDXComponent=!0;var nestedData=Nested.bind({});nestedData.storyName="Nested data",nestedData.parameters={storySource:{source:"Nested.bind({})"}};var componentMeta={title:"Examples/Nested data",decorators:[(0,client.moduleMetadata)({declarations:[tabs_component.n,NestedDataComponent],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],includeStories:["nestedData"]},mdxStoryNameToKey={"Nested data":"nestedData"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))}});const Nested_data_stories=componentMeta;var __namedExportsOrder=["nestedData"]},"./projects/docs/src/stories/examples/Pagination.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>Pagination_stories,pagination:()=>pagination});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/fesm2020/platform-browser.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),core_module=__webpack_require__("./projects/core/src/lib/core.module.ts"),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),tabs_component=__webpack_require__("./projects/docs/src/app/components/tabs/tabs.component.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),BehaviorSubject=__webpack_require__("./node_modules/rxjs/_esm2015/internal/BehaviorSubject.js"),ReplaySubject=__webpack_require__("./node_modules/rxjs/_esm2015/internal/ReplaySubject.js"),pluck=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/pluck.js"),tap=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/tap.js"),withLatestFrom=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/withLatestFrom.js");const ADVANCED_DOCS=[{name:"pagination.component.html",code:'<form [formGroup]="paginationForm">\n  <div class="row gy-3">\n    <div class="form-group col-12 col-sm-auto">\n      <label for="length_input">Length</label>\n      <input id="length_input" formControlName="length" type="number" class="form-control">\n    </div>\n    <div class="form-group col-12 col-sm-auto">\n      <label for="search_input">Search</label>\n      <input id="search_input" formControlName="search" type="text" class="form-control">\n    </div>\n  </div>\n</form>\n<div class="mx-n3 mx-sm-0 my-3 overflow-auto">\n  <angular-generic-table [data]="data$" [config]="tableConfig$" [search]="search$" [loading]="loading$" #table>\n    <div class="table-loading gt-skeleton-loader"></div>\n    <div class="table-no-data alert alert-info mt-3">\n      Table is empty\n    </div>\n  </angular-generic-table>\n</div>\n<angular-generic-table-pagination [table]="table">\n</angular-generic-table-pagination>',language:"xml"},{name:"pagination.component.ts",code:"import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\nimport { FormBuilder } from '@angular/forms';\nimport { TableConfig } from '@angular-generic-table/core';\nimport { pluck, tap, withLatestFrom } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'docs-pagination',\n  templateUrl: './pagination.component.html',\n  styles: [],\n})\nexport class PaginationComponent implements OnInit {\n  constructor(private fb: FormBuilder, private http: HttpClient) {}\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n  paginationForm = this.fb.group({\n    length: [10],\n    search: [''],\n  });\n  search$ = this.paginationForm.get('search')?.valueChanges as Observable<string>;\n  loading$ = new BehaviorSubject(true);\n  data$: Observable<any> = this.http.get('https://private-730c61-generictable.apiary-mock.com/data').pipe(\n    pluck('data'),\n    tap((_) => this.loading$.next(false))\n  );\n\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\n\n  ngOnInit(): void {\n    this.paginationForm\n      .get('length')\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\n      .subscribe(([length, config]) => {\n        length = +length;\n        this.tableConfig$.next({\n          ...config,\n          pagination: { ...config.pagination, length },\n        });\n      });\n    this.tableConfig$.next({\n      class: 'table text-nowrap',\n      columns: {\n        first_name: {\n          sortable: true,\n        },\n        last_name: {\n          sortable: true,\n        },\n        gender: {\n          sortable: true,\n        },\n        birthday: {\n          sortable: true,\n          class: 'text-end',\n          transform: {\n            pipe: DatePipe,\n            args: ['longDate'],\n          },\n        },\n      },\n      pagination: {\n        length: this.paginationForm.get('length')?.value || 0,\n      },\n    });\n  }\n}",language:"typescript"},{name:"app.module.ts",code:"import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { PaginationComponent } from './pagination.component';\nimport { GenericTableCoreModule, GenericTablePaginationModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [PaginationComponent],\n  imports: [\n    BrowserModule,\n    GenericTableCoreModule,\n    GenericTablePaginationModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  bootstrap: [PaginationComponent]\n})\nexport class AppModule {}",language:"typescript"}];var _class,http=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs");let PaginationComponent=(_class=class PaginationComponent{constructor(fb,http){this.fb=fb,this.http=http,this.paginationForm=this.fb.group({length:[10],search:[""]}),this.search$=this.paginationForm.get("search")?.valueChanges,this.loading$=new BehaviorSubject.X(!0),this.data$=this.http.get("https://private-730c61-generictable.apiary-mock.com/data").pipe((0,pluck.j)("data"),(0,tap.b)((_=>this.loading$.next(!1)))),this.tableConfig$=new ReplaySubject.t(1),this.SNIPPETS=ADVANCED_DOCS}ngOnInit(){this.paginationForm.get("length")?.valueChanges.pipe((0,withLatestFrom.M)(this.tableConfig$)).subscribe((([length,config])=>{length=+length,this.tableConfig$.next({...config,pagination:{...config.pagination,length}})})),this.tableConfig$.next({class:"table text-nowrap",columns:{first_name:{sortable:!0},last_name:{sortable:!0},gender:{sortable:!0},birthday:{sortable:!0,class:"text-end justify-content-end",search:(row,column)=>(0,common.p6)(row[column],"longDate","en"),transform:{pipe:common.uU,args:["longDate"]}}},pagination:{length:this.paginationForm.get("length")?.value||0}})}},_class.ctorParameters=()=>[{type:fesm2020_forms.UntypedFormBuilder},{type:http.eN}],_class.propDecorators={actions:[{type:core.ViewChild,args:["actions",{static:!0}]}],color:[{type:core.ViewChild,args:["color",{static:!0}]}]},_class);PaginationComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"docs-pagination",template:'<form [formGroup]="paginationForm">\n  <div class="row gy-3">\n    <div class="form-group col-12 col-sm-auto">\n      <label for="length_input">Number of rows</label>\n      <input\n        id="length_input"\n        formControlName="length"\n        type="number"\n        class="form-control"\n      />\n    </div>\n    <div class="form-group col-12 col-sm-auto">\n      <label for="search_input">Search</label>\n      <input\n        id="search_input"\n        formControlName="search"\n        type="text"\n        class="form-control"\n      />\n    </div>\n  </div>\n</form>\n<div class="mx-n3 mx-sm-0 my-3 overflow-auto">\n  <angular-generic-table\n    [data]="data$"\n    [config]="tableConfig$"\n    [search]="search$"\n    [loading]="loading$"\n    #table\n  >\n    <div class="table-loading gt-skeleton-loader"></div>\n    <div class="table-no-data alert alert-info mt-3">Table is empty</div>\n  </angular-generic-table>\n</div>\n<angular-generic-table-pagination [table]="table">\n</angular-generic-table-pagination>\n<docs-tabs [content]="SNIPPETS"></docs-tabs>\n'})],PaginationComponent);const Pagination=args=>({props:args,component:PaginationComponent});var pagination_module=__webpack_require__("./projects/core/src/lib/pagination/pagination.module.ts"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Preview=function makeShortcode(name){return function MDXDefaultShortcode(props){return console.warn("Component "+name+" was not imported, exported, or provided by MDXProvider as global scope"),(0,esm.kt)("div",props)}}("Preview"),layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Examples/Pagination",decorators:[(0,client.moduleMetadata)({declarations:[PaginationComponent,tabs_component.n],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],mdxType:"Meta"}),(0,esm.kt)("h1",{id:"pagination"},"Pagination"),(0,esm.kt)("p",null,"What would a table be without pagination? To simplify things for you, Angular Generic Table provides a basic pagination component. Just pass a reference to the table like this:"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-markup"},'<angular-generic-table #tableRef" .../>\n<angular-generic-table-pagination [table]="tableRef"/>\n')),(0,esm.kt)(Preview,{mdxSource:"%0A%3Cdiv%20class=%22overflow-auto%22%3E%0A%20%20%3Ctable%3E%0A%20%20%20%20%3Cthead%3E%0A%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%3Cth%3E@Input%3C/th%3E%0A%20%20%20%20%20%20%3Cth%3EDescription%3C/th%3E%0A%20%20%20%20%20%20%3Cth%3EType%3C/th%3E%0A%20%20%20%20%20%20%3Cth%3EDefault%3C/th%3E%0A%20%20%20%20%3C/tr%3E%0A%20%20%20%20%3C/thead%3E%0A%20%20%20%20%3Ctbody%3E%0A%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3Etable%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3ETable%20connected%20to%20the%20pagination%20control.%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3ETable%20component%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3En/a%3C/code%3E%3C/td%3E%0A%20%20%20%20%3C/tr%3E%0A%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3EpaginationLength%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3ENumber%20of%20pagination%20buttons%20to%20show.%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3Enumber%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3E5%3C/code%3E%3C/td%3E%0A%20%20%20%20%3C/tr%3E%0A%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3Eclasses%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3EClasses%20for%20pagination%20elements.%20Pass%20an%20object%20with%20key%20values,%20where%20key%20is%20element%20and%20value%20is%20classes%20to%20be%20applied.%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3EGtPaginationClasses%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3E{%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20 nav:%20null,%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20 ul:%20'pagination',%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20 li:%20'page-item',%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20 button:%20'page-link'%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20}%0A%20%20%20%20%20%20%3C/code%3E%3C/td%3E%0A%20%20%20%20%3C/tr%3E%0A%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3EariaLabels%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3EAria%20labels%20for%20pagination%20elements.%20Pass%20an%20object%20with%20key%20values,%20where%20key%20is%20element%20and%20value%20is%20aria%20label%20to%20use.%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3EGtPaginationAriaLabels%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3E%0A%20%20%20%20%20%20%20%20{%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20 nav:%20'Table%20navigation',%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20 button:%20'Go%20to%20page%20'%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20}%0A%20%20%20%20%20%20%3C/code%3E%3C/td%3E%0A%20%20%20%20%3C/tr%3E%0A%20%20%20%20%3C/tbody%3E%0A%20%20%3C/table%3E%0A%20%20%3C/div%3E%0A",mdxType:"Preview"},(0,esm.kt)("div",{class:"overflow-auto"},(0,esm.kt)("table",null,(0,esm.kt)("thead",null,(0,esm.kt)("tr",null,(0,esm.kt)("th",null,"@Input"),(0,esm.kt)("th",null,"Description"),(0,esm.kt)("th",null,"Type"),(0,esm.kt)("th",null,"Default"))),(0,esm.kt)("tbody",null,(0,esm.kt)("tr",null,(0,esm.kt)("td",null,(0,esm.kt)("code",null,"table")),(0,esm.kt)("td",null,"Table connected to the pagination control."),(0,esm.kt)("td",null,"Table component"),(0,esm.kt)("td",null,(0,esm.kt)("code",null,"n/a"))),(0,esm.kt)("tr",null,(0,esm.kt)("td",null,(0,esm.kt)("code",null,"paginationLength")),(0,esm.kt)("td",null,"Number of pagination buttons to show."),(0,esm.kt)("td",null,(0,esm.kt)("code",null,"number")),(0,esm.kt)("td",null,(0,esm.kt)("code",null,"5"))),(0,esm.kt)("tr",null,(0,esm.kt)("td",null,(0,esm.kt)("code",null,"classes")),(0,esm.kt)("td",null,"Classes for pagination elements. Pass an object with key values, where key is element and value is classes to be applied."),(0,esm.kt)("td",null,(0,esm.kt)("code",null,"GtPaginationClasses")),(0,esm.kt)("td",null,(0,esm.kt)("code",null,"{",(0,esm.kt)("br",null)," nav: null,",(0,esm.kt)("br",null)," ul: 'pagination',",(0,esm.kt)("br",null)," li: 'page-item',",(0,esm.kt)("br",null)," button: 'page-link'",(0,esm.kt)("br",null),"}"))),(0,esm.kt)("tr",null,(0,esm.kt)("td",null,(0,esm.kt)("code",null,"ariaLabels")),(0,esm.kt)("td",null,"Aria labels for pagination elements. Pass an object with key values, where key is element and value is aria label to use."),(0,esm.kt)("td",null,(0,esm.kt)("code",null,"GtPaginationAriaLabels")),(0,esm.kt)("td",null,(0,esm.kt)("code",null,"{",(0,esm.kt)("br",null)," nav: 'Table navigation',",(0,esm.kt)("br",null)," button: 'Go to page '",(0,esm.kt)("br",null),"}"))))))),(0,esm.kt)("h3",{id:"import-module"},"Import module"),(0,esm.kt)("p",null,"In order to use the pagination component provided by angular generic table, you need to import it."),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-ts"},"import { GenericTableCoreModule, GenericTablePaginationModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [...],\n  imports: [\n    ...\n    GenericTableCoreModule,\n    GenericTablePaginationModule\n  ],\n  exports: [\n    GenericTableCoreModule,\n    GenericTablePaginationModule\n  ]\n})\nexport class SharedModule {}\n")),(0,esm.kt)("h3",{id:"example"},"Example"),(0,esm.kt)(dist_esm.oG,{name:"Pagination",mdxType:"Story"},Pagination.bind({})))}MDXContent.isMDXComponent=!0;var pagination=Pagination.bind({});pagination.storyName="Pagination",pagination.parameters={storySource:{source:"Pagination.bind({})"}};var componentMeta={title:"Examples/Pagination",decorators:[(0,client.moduleMetadata)({declarations:[PaginationComponent,tabs_component.n],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],includeStories:["pagination"]},mdxStoryNameToKey={Pagination:"pagination"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))}});const Pagination_stories=componentMeta;var __namedExportsOrder=["pagination"]},"./projects/docs/src/stories/examples/Row-events.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>Row_events_stories,rowClickHover:()=>rowClickHover});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/fesm2020/platform-browser.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),core_module=__webpack_require__("./projects/core/src/lib/core.module.ts"),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),tabs_component=__webpack_require__("./projects/docs/src/app/components/tabs/tabs.component.ts"),http=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),pagination_module=__webpack_require__("./projects/core/src/lib/pagination/pagination.module.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),row_hover_click_component=__webpack_require__("./projects/docs/src/app/examples/row-hover-click/row-hover-click.component.ts.css?ngResource!=!./node_modules/@ngtools/webpack/src/loaders/inline-resource.js?data=CiAgICAgIDpob3N0IDo6bmctZGVlcCAuZ3QtaG92ZXIgewogICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJzLWhpZ2hsaWdodC1iZyk7CiAgICAgIH0KICAgIA%3D%3D!./projects/docs/src/app/examples/row-hover-click/row-hover-click.component.ts"),row_hover_click_component_default=__webpack_require__.n(row_hover_click_component),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");const ROW_HOVER_CLICK_SNIPPETS=[{name:"row-hover-click.component.ts",code:"import { Component } from '@angular/core';\nimport { GtRowClickEvent, GtRowHoverEvent } from '@angular-generic-table/core';\n\n\n@Component({\n  selector: 'row-hover-click-table',\n  template: '<div class=\"overflow-auto\">\n      <button class=\"btn btn-secondary me-3\" (click)=\"tableRef.hoverRow(1)\">\n        Set hover state to second row\n      </button>\n      <button class=\"btn btn-secondary\" (click)=\"tableRef.hoverRow(null)\">\n        Remove hover state\n      </button>\n      <angular-generic-table\n        [data]=\"data\"\n        [config]=\"config\"\n        (rowClick)=\"onRowClick($event)\"\n        (rowHover)=\"onRowHover($event)\"\n        #tableRef\n      ></angular-generic-table>\n      {{ clicked }}\n    </div>',\n  styles: [\n    `\n      :host ::ng-deep .gt-hover {\n        background-color: var(--bs-highlight-bg);\n      }\n    `,\n  ],\n})\nexport class RowHoverClickComponent {\n  clicked = '';\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config = {\n    columns: {\n      firstName: {},\n      lastName: {},\n      gender: {},\n      favoriteFood: {},\n    },\n    rowClick: true,\n    rowHover: true,\n  };\n\n  onRowClick(event: GtRowClickEvent) {\n    console.log('row clicked', event);\n    this.clicked = `clicked row number: ${event.index}`;\n  }\n  onRowHover(event: GtRowHoverEvent) {\n    console.log('row hovered', event);\n  }\n",language:"typescript"},{name:"app.module.ts",code:"import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { RowHoverClickTableComponent } from './events-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [RowHoverClickTableComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [RowHoverClickTableComponent]\n})\nexport class AppModule {}",language:"typescript"}];let RowHoverClickComponent=class RowHoverClickComponent{constructor(){this.clicked="",this.data=[{firstName:"Peter",lastName:"Parker",gender:"male",favoriteFood:"Pasta"},{firstName:"Mary Jane",lastName:"Watson",gender:"female",favoriteFood:"Pizza"}],this.config={columns:{firstName:{},lastName:{},gender:{},favoriteFood:{}},rowClick:!0,rowHover:!0},this.SNIPPETS=ROW_HOVER_CLICK_SNIPPETS}onRowClick(event){console.log("row clicked",event),this.clicked=`clicked row number: ${event.index}`}onRowHover(event){console.log("row hovered",event)}};RowHoverClickComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"docs-row-hover-click",template:'\n    <div class="overflow-auto">\n      <button class="btn btn-secondary me-3" (click)="tableRef.hoverRow(1)">\n        Set hover state to second row\n      </button>\n      <button class="btn btn-secondary" (click)="tableRef.hoverRow(null)">\n        Remove hover state\n      </button>\n      <angular-generic-table\n        [data]="data"\n        [config]="config"\n        (rowClick)="onRowClick($event)"\n        (rowHover)="onRowHover($event)"\n        #tableRef\n      ></angular-generic-table>\n    </div>\n    {{ clicked }}\n    <docs-tabs [content]="SNIPPETS"></docs-tabs>\n  ',styles:[row_hover_click_component_default()]})],RowHoverClickComponent);const RowHoverClick=args=>({props:args,component:RowHoverClickComponent});var _excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Examples/Row click & hover",decorators:[(0,client.moduleMetadata)({declarations:[tabs_component.n,RowHoverClickComponent],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],mdxType:"Meta"}),(0,esm.kt)("h1",{id:"row-click-and-hover"},"Row click and hover"),(0,esm.kt)("p",null,"Set ",(0,esm.kt)("inlineCode",{parentName:"p"},"rowClick")," and ",(0,esm.kt)("inlineCode",{parentName:"p"},"rowHover")," to ",(0,esm.kt)("inlineCode",{parentName:"p"},"true")," in ",(0,esm.kt)("inlineCode",{parentName:"p"},"config")," to enable row click and hover events which can be used to trigger actions when rows are clicked or hovered. These events are emitted and declared using ",(0,esm.kt)("inlineCode",{parentName:"p"},"@Output rowClick")," and ",(0,esm.kt)("inlineCode",{parentName:"p"},"@Output() rowHover"),". It's also possible to set hover state on a row using ",(0,esm.kt)("inlineCode",{parentName:"p"},"rowHover")," method on the table component (currently it takes a row index as argument), pass null to remove hover state. The later might come in handy when you want to highlight something in the table based on an external source like a chart etc. Note that you should use css if you're only interested in styling the row on row hover, no need to listen to events or set hover state to do that."),(0,esm.kt)("h3",{id:"example"},"Example"),(0,esm.kt)("p",null,"Resize screen to view mobile version"),(0,esm.kt)(dist_esm.oG,{name:"Row click & hover",mdxType:"Story"},RowHoverClick.bind({})))}MDXContent.isMDXComponent=!0;var rowClickHover=RowHoverClick.bind({});rowClickHover.storyName="Row click & hover",rowClickHover.parameters={storySource:{source:"RowHoverClick.bind({})"}};var componentMeta={title:"Examples/Row click & hover",decorators:[(0,client.moduleMetadata)({declarations:[tabs_component.n,RowHoverClickComponent],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],includeStories:["rowClickHover"]},mdxStoryNameToKey={"Row click & hover":"rowClickHover"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))}});const Row_events_stories=componentMeta;var __namedExportsOrder=["rowClickHover"]},"./projects/docs/src/stories/examples/Sorting.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>Sorting_stories,sorting:()=>sorting});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/fesm2020/platform-browser.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),core_module=__webpack_require__("./projects/core/src/lib/core.module.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");const SIMPLE_SNIPPETS=[{name:"sorting-table.component.ts",code:"import { Component } from '@angular/core';\nimport { TableConfig } from '@angular-generic-table/core';\n\ninterface SortingData {\n  firstName: string;\n  lastName: string;\n  gender: 'male' | 'female';\n  favoriteFood: string;\n  birthdate: number;\n}\n\n@Component({\n  template: '<div class=\"overflow-auto\">\n      <angular-generic-table\n        #table\n        [data]=\"data\"\n        [config]=\"config\"\n        [(sortOrder)]=\"sortOrder\"\n        (columnSort)=\"logSortChange($event)\"\n      ></angular-generic-table>\n    </div>\n    <div class=\"row mb-3 gy-3\">\n      <div class=\"col-12 col-sm-auto\">\n        <button\n          class=\"btn btn-primary w-100\"\n          (click)=\"table.sortByKey('firstName', $event)\"\n        >\n          Sort on first name\n        </button>\n      </div>\n      <div class=\"col-12 col-sm-auto\">\n        <button class=\"btn btn-primary w-100\" (click)=\"resetSort()\">\n          Reset sorting\n        </button>\n      </div>\n    </div>\n    <strong>Current sort order</strong>\n    <p>\n      <code>\n        {{ sortOrder | json }}\n      </code>\n    </p>'\n})\nexport class SimpleComponent {\n  initialSortOrder: GtSortOrder<SortingData> = [\n    { key: 'birthdate', order: 'asc' },\n    { key: 'gender', order: 'asc' },\n    { key: 'firstName', order: 'desc' },\n  ];\n  sortOrder: GtSortOrder<SortingData> = this.initialSortOrder;\n  data: Array<SortingData> = [\n    {\n      firstName: 'John',\n      lastName: 'Doe',\n      gender: 'male',\n      favoriteFood: 'pizza',\n      birthdate: 946684800000,\n    },\n    {\n      firstName: 'Jane',\n      lastName: 'Smith',\n      gender: 'female',\n      favoriteFood: 'sushi',\n      birthdate: 803404800000,\n    },\n    {\n      firstName: 'Bob',\n      lastName: 'Johnson',\n      gender: 'male',\n      favoriteFood: 'burgers',\n      birthdate: 649345600000,\n    },\n    {\n      firstName: 'Emily',\n      lastName: 'Williams',\n      gender: 'female',\n      favoriteFood: 'chicken',\n      birthdate: 946684800000,\n    },\n    {\n      firstName: 'Michael',\n      lastName: 'Jones',\n      gender: 'male',\n      favoriteFood: 'steak',\n      birthdate: 803404800000,\n    },\n    {\n      firstName: 'Matthew',\n      lastName: 'Brown',\n      gender: 'male',\n      favoriteFood: 'seafood',\n      birthdate: 649345600000,\n    },\n    {\n      firstName: 'Jessica',\n      lastName: 'Miller',\n      gender: 'female',\n      favoriteFood: 'salad',\n      birthdate: 946684800000,\n    },\n    {\n      firstName: 'Jacob',\n      lastName: 'Moore',\n      gender: 'male',\n      favoriteFood: 'pasta',\n      birthdate: 803404800000,\n    },\n    {\n      firstName: 'Nicholas',\n      lastName: 'Taylor',\n      gender: 'male',\n      favoriteFood: 'soup',\n      birthdate: 649345600000,\n    },\n    {\n      firstName: 'Ashley',\n      lastName: 'Anderson',\n      gender: 'female',\n      favoriteFood: 'tacos',\n      birthdate: 946684800000,\n    },\n    {\n      firstName: 'Brandon',\n      lastName: 'Thomas',\n      gender: 'male',\n      favoriteFood: 'nachos',\n      birthdate: 803404800000,\n    },\n  ];\n  config: TableConfig<SortingData> = {\n    columns: {\n      firstName: {\n        sortable: true,\n      },\n      lastName: {\n        sortable: true,\n      },\n      gender: {\n        sortable: true,\n      },\n      favoriteFood: {\n        sortable: true,\n      },\n      birthdate: {\n        sortable: true,\n        transform: {\n          pipe: DatePipe,\n        },\n      },\n    },\n  };\n\n  logSortChange(sortEvent: GtSortEvent<SortingData>) {\n    console.log(sortEvent);\n  }\n\n  resetSort() {\n    this.sortOrder = this.initialSortOrder;\n  }\n}\n",language:"typescript"},{name:"app.module.ts",code:"import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { SortingTableComponent } from './sorting-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [SortingTableComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [SortingTableComponent]\n})\nexport class AppModule {}",language:"typescript"}];let SortingComponent=class SortingComponent{constructor(){this.initialSortOrder=[{key:"birthdate",order:"asc"},{key:"gender",order:"asc"},{key:"firstName",order:"desc"}],this.sortOrder=this.initialSortOrder,this.data=[{firstName:"John",lastName:"Doe",gender:"male",favoriteFood:"pizza",birthdate:9466848e5},{firstName:"Jane",lastName:"Smith",gender:"female",favoriteFood:"sushi",birthdate:8034048e5},{firstName:"Bob",lastName:"Johnson",gender:"male",favoriteFood:"burgers",birthdate:6493456e5},{firstName:"Emily",lastName:"Williams",gender:"female",favoriteFood:"chicken",birthdate:9466848e5},{firstName:"Michael",lastName:"Jones",gender:"male",favoriteFood:"steak",birthdate:8034048e5},{firstName:"Matthew",lastName:"Brown",gender:"male",favoriteFood:"seafood",birthdate:6493456e5},{firstName:"Jessica",lastName:"Miller",gender:"female",favoriteFood:"salad",birthdate:9466848e5},{firstName:"Jacob",lastName:"Moore",gender:"male",favoriteFood:"pasta",birthdate:8034048e5},{firstName:"Nicholas",lastName:"Taylor",gender:"male",favoriteFood:"soup",birthdate:6493456e5},{firstName:"Ashley",lastName:"Anderson",gender:"female",favoriteFood:"tacos",birthdate:9466848e5},{firstName:"Brandon",lastName:"Thomas",gender:"male",favoriteFood:"nachos",birthdate:8034048e5}],this.config={columns:{firstName:{sortable:!0},lastName:{sortable:!0},gender:{sortable:!0},favoriteFood:{sortable:!0},birthdate:{sortable:!0,transform:{pipe:common.uU}}}},this.SNIPPETS=SIMPLE_SNIPPETS}logSortChange(sortEvent){console.log(sortEvent)}resetSort(){this.sortOrder=this.initialSortOrder}};SortingComponent=(0,tslib_es6.gn)([(0,core.Component)({template:'\n    <div class="overflow-auto">\n      <angular-generic-table\n        #table\n        [data]="data"\n        [config]="config"\n        [(sortOrder)]="sortOrder"\n        (columnSort)="logSortChange($event)"\n      ></angular-generic-table>\n    </div>\n    <div class="row mb-3 gy-3">\n      <div class="col-12 col-sm-auto">\n        <button\n          class="btn btn-primary w-100"\n          (click)="table.sortByKey(\'firstName\', $event)"\n        >\n          Sort on first name\n        </button>\n      </div>\n      <div class="col-12 col-sm-auto">\n        <button class="btn btn-primary w-100" (click)="resetSort()">\n          Reset sorting\n        </button>\n      </div>\n    </div>\n    <strong>Current sort order</strong>\n    <p>\n      <code>\n        {{ sortOrder | json }}\n      </code>\n    </p>\n    <docs-tabs [content]="SNIPPETS"></docs-tabs>\n  '})],SortingComponent);const Sorting=args=>({props:args,component:SortingComponent});var fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),tabs_component=__webpack_require__("./projects/docs/src/app/components/tabs/tabs.component.ts"),http=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),pagination_module=__webpack_require__("./projects/core/src/lib/pagination/pagination.module.ts"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Examples/Sorting",decorators:[(0,client.moduleMetadata)({declarations:[tabs_component.n,SortingComponent],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],mdxType:"Meta"}),(0,esm.kt)("h1",{id:"sorting"},"Sorting"),(0,esm.kt)("p",null,(0,esm.kt)("strong",{parentName:"p"},"Sort on multiple columns"),(0,esm.kt)("br",null),'\nGeneric table supports sorting on multiple columns by holding "shift" key while sorting. To set or update sort order for a table use ',(0,esm.kt)("inlineCode",{parentName:"p"},"sortOrder")," input and pass ",(0,esm.kt)("inlineCode",{parentName:"p"},"GtSortOrder<R>")," which should be an array with keys and order to sort on e.g. ",(0,esm.kt)("inlineCode",{parentName:"p"},"[{key: 'firstName', order: 'asc'}, {key: 'gender', order: 'desc'}]"),"."),(0,esm.kt)("p",null,(0,esm.kt)("strong",{parentName:"p"},"Call sort programmatically"),(0,esm.kt)("br",null),"\nIt's also possible to call sort programmatically by calling ",(0,esm.kt)("inlineCode",{parentName:"p"},"sortByKey")," method on ",(0,esm.kt)("inlineCode",{parentName:"p"},"GenericTableComponent")," instance. The method accepts a row key and an optional mouse event as arguments e.g. ",(0,esm.kt)("inlineCode",{parentName:"p"},"table.sortByKey('firstName', $event)"),"."),(0,esm.kt)("p",null,(0,esm.kt)("strong",{parentName:"p"},"Toggle sortable columns"),(0,esm.kt)("br",null),"\nThe ability to sort columns by clicking on the column header is disabled by default. To enable this feature set ",(0,esm.kt)("inlineCode",{parentName:"p"},"sortable")," to ",(0,esm.kt)("inlineCode",{parentName:"p"},"true")," in the column configuration."),(0,esm.kt)("p",null,(0,esm.kt)("strong",{parentName:"p"},"Handle sorting externally"),(0,esm.kt)("br",null),"\nIt's possible to disable table sorting within the component by setting ",(0,esm.kt)("inlineCode",{parentName:"p"},"disableTableSort")," in tableConfig to ",(0,esm.kt)("inlineCode",{parentName:"p"},"true"),". This is useful when sorting is handled externally e.g. for server-side pagination. The table will still use ",(0,esm.kt)("inlineCode",{parentName:"p"},"sortOrder")," to visually show how the data is sorted but keep in mind that the data should be sorted accordingly when passed to the table."),(0,esm.kt)("p",null,(0,esm.kt)("strong",{parentName:"p"},"Sorting events"),(0,esm.kt)("br",null),"\nListen to ",(0,esm.kt)("inlineCode",{parentName:"p"},"columnSort")," event which emits ",(0,esm.kt)("inlineCode",{parentName:"p"},"GtSortEvent<R>")," to get notified when the sort order changes e.g. ",(0,esm.kt)("inlineCode",{parentName:"p"},"(columnSort)=logSortChange($event)")," this could be used to trigger sorting externally. ",(0,esm.kt)("inlineCode",{parentName:"p"},"sortOrder")," also supports two-way binding e.g. ",(0,esm.kt)("inlineCode",{parentName:"p"},"[(sortOrder)]=sortOrder")," to sync ",(0,esm.kt)("inlineCode",{parentName:"p"},"GtSortOrder<R>"),"."),(0,esm.kt)("h3",{id:"example"},"Example"),(0,esm.kt)("p",null,"The initial sort order for the table below is set to: ",(0,esm.kt)("inlineCode",{parentName:"p"},"[{ key: 'birthdate', order: 'asc' }, { key: 'gender', order: 'asc' }, { key: 'firstName', order: 'desc' }]")," and all columns are sortable with ",(0,esm.kt)("inlineCode",{parentName:"p"},"sortable")," set to ",(0,esm.kt)("inlineCode",{parentName:"p"},"true"),". Shift + click column headers or the sort button below to sort on multiple columns. It also listens to ",(0,esm.kt)("inlineCode",{parentName:"p"},"columnSort")," events which are written to the console."),(0,esm.kt)(dist_esm.oG,{name:"Sorting",mdxType:"Story"},Sorting.bind({})))}MDXContent.isMDXComponent=!0;var sorting=Sorting.bind({});sorting.storyName="Sorting",sorting.parameters={storySource:{source:"Sorting.bind({})"}};var componentMeta={title:"Examples/Sorting",decorators:[(0,client.moduleMetadata)({declarations:[tabs_component.n,SortingComponent],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],includeStories:["sorting"]},mdxStoryNameToKey={Sorting:"sorting"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))}});const Sorting_stories=componentMeta;var __namedExportsOrder=["sorting"]},"./projects/docs/src/stories/examples/Static.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,basic:()=>basic,default:()=>Static_stories});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/fesm2020/platform-browser.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),core_module=__webpack_require__("./projects/core/src/lib/core.module.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");const SIMPLE_SNIPPETS=[{name:"basic-table.component.ts",code:"import { Component } from '@angular/core';\nimport { TableConfig } from '@angular-generic-table/core';\n\ninterface BasicData {\n  firstName: string;\n  lastName: string;\n  gender: 'male' | 'female';\n  favoriteFood: string;\n}\n\n@Component({\n  template: '<angular-generic-table [data]=\"data\" [config]=\"config\"></angular-generic-table>'\n})\nexport class SimpleComponent {\n  data: Array<BasicData> = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config: TableConfig<BasicData> = {\n    columns: {\n      firstName: {},\n      lastName: {},\n      gender: {},\n      favoriteFood: {},\n    },\n  };\n",language:"typescript"},{name:"app.module.ts",code:"import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { BasicTableComponent } from './basic-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [BasicTableComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [BasicTableComponent]\n})\nexport class AppModule {}",language:"typescript"}];let SimpleComponent=class SimpleComponent{constructor(){this.data=[{firstName:"Peter",lastName:"Parker",gender:"male",favoriteFood:"Pasta"},{firstName:"Mary Jane",lastName:"Watson",gender:"female",favoriteFood:"Pizza"}],this.config={class:"table table-striped table-bordered",columns:{firstName:{},lastName:{},gender:{},favoriteFood:{}}},this.SNIPPETS=SIMPLE_SNIPPETS}};SimpleComponent=(0,tslib_es6.gn)([(0,core.Component)({template:'\n    <div class="overflow-auto">\n      <angular-generic-table\n        [data]="data"\n        [config]="config"\n      ></angular-generic-table>\n    </div>\n    <docs-tabs [content]="SNIPPETS"></docs-tabs>\n  '})],SimpleComponent);const Simple=args=>({props:args,component:SimpleComponent});var fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),tabs_component=__webpack_require__("./projects/docs/src/app/components/tabs/tabs.component.ts"),http=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),pagination_module=__webpack_require__("./projects/core/src/lib/pagination/pagination.module.ts"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Examples/Basic",decorators:[(0,client.moduleMetadata)({declarations:[SimpleComponent,tabs_component.n],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],mdxType:"Meta"}),(0,esm.kt)("h1",{id:"basic-example"},"Basic example"),(0,esm.kt)("p",null,"Pass ",(0,esm.kt)("inlineCode",{parentName:"p"},"data")," and ",(0,esm.kt)("inlineCode",{parentName:"p"},"config")," to Generic Table to generate a table. The example below uses the minimal configuration needed to generate a table with static data."),(0,esm.kt)(dist_esm.oG,{name:"Basic",args:{data:[{firstName:"Mark",lastName:"Parker",gender:"male",favoriteFood:"Pasta"},{firstName:"Mary Jane",lastName:"Watson",gender:"female",favoriteFood:"Pizza"}]},mdxType:"Story"},Simple.bind({})))}MDXContent.isMDXComponent=!0;var basic=Simple.bind({});basic.storyName="Basic",basic.args={data:[{firstName:"Mark",lastName:"Parker",gender:"male",favoriteFood:"Pasta"},{firstName:"Mary Jane",lastName:"Watson",gender:"female",favoriteFood:"Pizza"}]},basic.parameters={storySource:{source:"Simple.bind({})"}};var componentMeta={title:"Examples/Basic",decorators:[(0,client.moduleMetadata)({declarations:[SimpleComponent,tabs_component.n],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],includeStories:["basic"]},mdxStoryNameToKey={Basic:"basic"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))}});const Static_stories=componentMeta;var __namedExportsOrder=["basic"]},"./projects/docs/src/stories/examples/Transpose.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>Transpose_stories,transposeData:()=>transposeData});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/fesm2020/platform-browser.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),core_module=__webpack_require__("./projects/core/src/lib/core.module.ts"),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),tabs_component=__webpack_require__("./projects/docs/src/app/components/tabs/tabs.component.ts"),http=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),pagination_module=__webpack_require__("./projects/core/src/lib/pagination/pagination.module.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),BehaviorSubject=__webpack_require__("./node_modules/rxjs/_esm2015/internal/BehaviorSubject.js"),withLatestFrom=__webpack_require__("./node_modules/rxjs/_esm2015/internal/operators/withLatestFrom.js");const TRANSPOSE_SNIPPETS=[{name:"transpose.component.ts",code:"import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { TableConfig, GtDeltaComponent } from '@angular-generic-table/core';\nimport { FormBuilder } from '@angular/forms';\nimport { withLatestFrom } from 'rxjs/operators';\n\ninterface RawData {\n  year: string;\n  value: number;\n}\ninterface YearData extends RawData {\n  delta: number;\n  deltaIndex: number;\n  combined: number;\n  deltaAbsolute: number;\n}\n@Component({\n  templateUrl: './transpose.component.html',\n  styles: []\n})\nexport class TransposeComponent implements OnInit {\n  @ViewChild('delta', { static: true }) delta:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  @ViewChild('deltaAbsolute', { static: true }) deltaAbsolute:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  @ViewChild('deltaIndex', { static: true }) deltaIndex:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  @ViewChild('combined', { static: true }) combined:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  loading$ = new BehaviorSubject(false);\n  reactiveForm = this.fb.group({\n    length: [10],\n    search: [''],\n  });\n  search$ = this.reactiveForm.get('search')?.valueChanges as Observable<string>;\n  tableConfig$: BehaviorSubject<TableConfig<YearData>> = new BehaviorSubject<\n    TableConfig<YearData>\n  >({});\n  data: Array<RawData> = [];\n\n  constructor(private fb: UntypedFormBuilder) {}\n\n  ngOnInit(): void {\n    this.transpose();\n    this.load();\n    this.reactiveForm\n      .get('length')\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\n      .subscribe(([length, config]) => {\n        length = +length;\n        this.tableConfig$.next({\n          ...config,\n          pagination: { ...config.pagination, length },\n        });\n      });\n  }\n\n  simulateLoad(): void {\n    this.loading$.next(true);\n    // set loading state to false after 2 seconds\n    setTimeout(() => this.loading$.next(false), 2000);\n  }\n  empty(): void {\n    this.data = [];\n  }\n  load(): void {\n    this.data = [\n      {\n        year: '2010',\n        value: 15,\n      },\n      {\n        year: '2011',\n        value: 30,\n      },\n      {\n        year: '2012',\n        value: 25,\n      },\n      {\n        year: '2013',\n        value: 0,\n      },\n      {\n        year: '2014',\n        value: 40,\n      },\n      {\n        year: '2015',\n        value: 0,\n      },\n      {\n        year: '2016',\n        value: -5,\n      },\n      {\n        year: '2018',\n        value: 75,\n      },\n      {\n        year: '2019',\n        value: 100,\n      },\n      {\n        year: '2020',\n        value: 250,\n      },\n      {\n        year: '2021',\n        value: 50,\n      },\n      {\n        year: '2022',\n        value: 60,\n      },\n    ];\n  }\n  transpose(): void {\n    if (this.tableConfig$.value.columns) {\n      this.tableConfig$.next({\n        stickyHeaders: {\n          row: true,\n          column: true,\n        },\n        rows: {\n          year: {\n            sortable: true,\n            header: false,\n            class: 'text-end',\n          },\n          value: {\n            class: 'text-end',\n          },\n          delta: {\n            header: 'Delta %',\n            templateRef: this.delta,\n            class: 'text-end',\n          },\n          deltaIndex: {\n            header: 'Since inception %',\n            templateRef: this.deltaIndex,\n            class: 'text-end',\n          },\n          deltaAbsolute: {\n            header: 'Delta',\n            templateRef: this.deltaAbsolute,\n            class: 'text-end',\n          },\n          combined: {\n            header: 'Value with change',\n            templateRef: this.combined,\n            class: 'text-end text-nowrap',\n          },\n        },\n      });\n    } else {\n      this.tableConfig$.next({\n        stickyHeaders: {\n          row: true,\n          column: true,\n        },\n        columns: {\n          year: {\n            sortable: true,\n          },\n          value: {\n            class: 'text-end',\n          },\n          delta: {\n            header: 'Delta %',\n            templateRef: this.delta,\n            class: 'text-end',\n          },\n          deltaIndex: {\n            header: 'Since inception %',\n            templateRef: this.deltaIndex,\n            class: 'text-end',\n          },\n          deltaAbsolute: {\n            header: 'Delta',\n            templateRef: this.deltaAbsolute,\n            class: 'text-end',\n          },\n          combined: {\n            header: 'Value with change',\n            templateRef: this.combined,\n            class: 'text-end text-nowrap',\n          },\n        },\n        pagination: { length: this.reactiveForm.get('length')?.value },\n      });\n    }\n  }\n}\n",language:"typescript"},{name:"transpose.component.html",code:'<form [formGroup]="reactiveForm">\n  <div class="row gy-3 gx-3 align-items-end mb-3">\n    <div class="form-group col-6 col-sm-auto">\n      <label for="length_input">Number of rows</label>\n      <input\n        id="length_input"\n        formControlName="length"\n        type="number"\n        class="form-control"\n      />\n    </div>\n    <div class="form-group col-6 col-sm-auto">\n      <label for="search_input">Search</label>\n      <input\n        id="search_input"\n        formControlName="search"\n        type="text"\n        class="form-control"\n      />\n    </div>\n    <div class="col-auto">\n      <button\n        class="btn btn-outline-primary w-100"\n        (click)="simulateLoad()"\n      >\n        Simulate load\n      </button>\n    </div>\n    <div class="col col-sm-auto">\n      <button class="btn btn-outline-danger w-100" (click)="empty()">\n        Empty\n      </button>\n    </div>\n    <div class="col col-sm-auto">\n      <button class="btn btn-outline-primary w-100" (click)="load()">\n        Reset\n      </button>\n    </div>\n    <div class="col col-sm-auto">\n      <button class="btn btn-outline-primary w-100" (click)="transpose()">\n        Transpose\n      </button>\n    </div>\n  </div>\n  <div class="overflow-auto">\n    <angular-generic-table\n      #table\n      [data]="data"\n      [config]="tableConfig$"\n      [loading]="loading$"\n      [search]="search$"\n    >\n      <div class="table-loading gt-skeleton-loader"></div>\n      <div class="table-no-data alert alert-info mt-3">Table is empty</div>\n    </angular-generic-table>\n  </div>\n  <angular-generic-table-pagination [table]="table">\n  </angular-generic-table-pagination>\n  <ng-template #delta let-index="index" let-data="data">\n    <gt-delta [index]="index" [data]="data"></gt-delta>\n  </ng-template>\n  <ng-template #deltaAbsolute let-index="index" let-data="data">\n    <gt-delta\n      [index]="index"\n      [data]="data"\n      [deltaTemplate]="deltaTemplate"\n    ></gt-delta>\n  </ng-template>\n  <ng-template #deltaIndex let-index="index" let-data="data">\n    <gt-delta [index]="index" [data]="data" [baseIndex]="0"></gt-delta>\n  </ng-template>\n  <ng-template\n    #combined\n    let-index="index"\n    let-data="data"\n    let-row="row"\n    let-col="col"\n  >\n    {{ row.value }}\n    <ng-container *ngIf="index > 0">\n      <gt-delta [index]="index" [data]="data"></gt-delta>\n    </ng-container>\n  </ng-template>\n  <ng-template #deltaTemplate let-delta="delta">\n    <span>{{ delta.absolute }}</span></ng-template\n  >\n  <docs-tabs [content]="SNIPPETS"></docs-tabs>\n</form>',language:"xml"},{name:"app.module.ts",code:"import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HorizontalTableComponent } from './horizontal-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [HorizontalTableComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [HorizontalTableComponent]\n})\nexport class AppModule {}",language:"typescript"}];var _class;let TransposeComponent=((_class=class TransposeComponent{constructor(fb){this.fb=fb,this.loading$=new BehaviorSubject.X(!1),this.reactiveForm=this.fb.group({length:[10],search:[""]}),this.search$=this.reactiveForm.get("search")?.valueChanges,this.tableConfig$=new BehaviorSubject.X({}),this.data=[],this.SNIPPETS=TRANSPOSE_SNIPPETS}ngOnInit(){this.transpose(),this.load(),this.reactiveForm.get("length")?.valueChanges.pipe((0,withLatestFrom.M)(this.tableConfig$)).subscribe((([length,config])=>{length=+length,this.tableConfig$.next({...config,pagination:{...config.pagination,length}})}))}simulateLoad(){this.loading$.next(!0),setTimeout((()=>this.loading$.next(!1)),2e3)}empty(){this.data=[]}load(){this.data=[{year:"2010",value:15},{year:"2011",value:30},{year:"2012",value:25},{year:"2013",value:0},{year:"2014",value:40},{year:"2015",value:0},{year:"2016",value:-5},{year:"2018",value:75},{year:"2019",value:100},{year:"2020",value:250},{year:"2021",value:50},{year:"2022",value:60}]}transpose(){this.tableConfig$.value.columns?this.tableConfig$.next({stickyHeaders:{row:!0,column:!0},rows:{year:{sortable:!0,header:!1,class:"text-end"},value:{class:"text-end"},delta:{header:"Delta %",templateRef:this.delta,class:"text-end"},deltaIndex:{header:"Since inception %",templateRef:this.deltaIndex,class:"text-end"},deltaAbsolute:{header:"Delta",templateRef:this.deltaAbsolute,class:"text-end"},combined:{header:"Value with change",templateRef:this.combined,class:"text-end text-nowrap"}}}):this.tableConfig$.next({stickyHeaders:{row:!0,column:!0},columns:{year:{sortable:!0},value:{class:"text-end"},delta:{header:"Delta %",templateRef:this.delta,class:"text-end"},deltaIndex:{header:"Since inception %",templateRef:this.deltaIndex,class:"text-end"},deltaAbsolute:{header:"Delta",templateRef:this.deltaAbsolute,class:"text-end"},combined:{header:"Value with change",templateRef:this.combined,class:"text-end text-nowrap"}},pagination:{length:this.reactiveForm.get("length")?.value}})}}).ctorParameters=()=>[{type:fesm2020_forms.UntypedFormBuilder}],_class.propDecorators={delta:[{type:core.ViewChild,args:["delta",{static:!0}]}],deltaAbsolute:[{type:core.ViewChild,args:["deltaAbsolute",{static:!0}]}],deltaIndex:[{type:core.ViewChild,args:["deltaIndex",{static:!0}]}],combined:[{type:core.ViewChild,args:["combined",{static:!0}]}]},_class);TransposeComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"docs-transpose",template:'\n    <form [formGroup]="reactiveForm">\n      <div class="row gy-3 gx-3 align-items-end mb-3">\n        <div class="form-group col-6 col-sm-auto">\n          <label for="length_input">Number of rows</label>\n          <input\n            id="length_input"\n            formControlName="length"\n            type="number"\n            class="form-control"\n          />\n        </div>\n        <div class="form-group col-6 col-sm-auto">\n          <label for="search_input">Search</label>\n          <input\n            id="search_input"\n            formControlName="search"\n            type="text"\n            class="form-control"\n          />\n        </div>\n        <div class="col-auto">\n          <button\n            class="btn btn-outline-primary w-100"\n            (click)="simulateLoad()"\n          >\n            Simulate load\n          </button>\n        </div>\n        <div class="col col-sm-auto">\n          <button class="btn btn-outline-danger w-100" (click)="empty()">\n            Empty\n          </button>\n        </div>\n        <div class="col col-sm-auto">\n          <button class="btn btn-outline-primary w-100" (click)="load()">\n            Reset\n          </button>\n        </div>\n        <div class="col col-sm-auto">\n          <button class="btn btn-outline-primary w-100" (click)="transpose()">\n            Transpose\n          </button>\n        </div>\n      </div>\n      <div class="overflow-auto">\n        <angular-generic-table\n          #table\n          [data]="data"\n          [config]="tableConfig$"\n          [loading]="loading$"\n          [search]="search$"\n        >\n          <div class="table-loading gt-skeleton-loader"></div>\n          <div class="table-no-data alert alert-info mt-3">Table is empty</div>\n        </angular-generic-table>\n      </div>\n      <angular-generic-table-pagination [table]="table">\n      </angular-generic-table-pagination>\n      <ng-template #delta let-index="index" let-data="data">\n        <gt-delta [index]="index" [data]="data"></gt-delta>\n      </ng-template>\n      <ng-template #deltaAbsolute let-index="index" let-data="data">\n        <gt-delta\n          [index]="index"\n          [data]="data"\n          [deltaTemplate]="deltaTemplate"\n        ></gt-delta>\n      </ng-template>\n      <ng-template #deltaIndex let-index="index" let-data="data">\n        <gt-delta [index]="index" [data]="data" [baseIndex]="0"></gt-delta>\n      </ng-template>\n      <ng-template\n        #combined\n        let-index="index"\n        let-data="data"\n        let-row="row"\n        let-col="col"\n      >\n        {{ row.value }}\n        <ng-container *ngIf="index > 0">\n          <gt-delta [index]="index" [data]="data"></gt-delta>\n        </ng-container>\n      </ng-template>\n      <ng-template #deltaTemplate let-delta="delta">\n        <span>{{ delta.absolute }}</span></ng-template\n      >\n      <docs-tabs [content]="SNIPPETS"></docs-tabs>\n    </form>\n  '})],TransposeComponent);const Transpose=args=>({props:args,component:TransposeComponent});var _excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Examples/Transpose data",decorators:[(0,client.moduleMetadata)({declarations:[tabs_component.n],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],mdxType:"Meta"}),(0,esm.kt)("h1",{id:"transpose-table-flip-layout"},"Transpose table (flip layout)"),(0,esm.kt)("p",null,"Similar to ",(0,esm.kt)("a",{href:"examples?path=/docs/examples-horizontal-layout--horizontal-layout"},"horizontal layout example")," but with ",(0,esm.kt)("code",null,"search")," and ",(0,esm.kt)("code",null,"pagination")," enabled as well as the ability to switch between row-layout and column-layout."),(0,esm.kt)(dist_esm.oG,{name:"Transpose data",mdxType:"Story"},Transpose.bind({})))}MDXContent.isMDXComponent=!0;var transposeData=Transpose.bind({});transposeData.storyName="Transpose data",transposeData.parameters={storySource:{source:"Transpose.bind({})"}};var componentMeta={title:"Examples/Transpose data",decorators:[(0,client.moduleMetadata)({declarations:[tabs_component.n],imports:[platform_browser.BrowserModule,common.ez,core_module.h,pagination_module.i,fesm2020_forms.ReactiveFormsModule,http.JF]})],includeStories:["transposeData"]},mdxStoryNameToKey={"Transpose data":"transposeData"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))}});const Transpose_stories=componentMeta;var __namedExportsOrder=["transposeData"]},"./projects/docs/src/app/examples/mobile-layout/mobile-layout.component.ts.css?ngResource!=!./node_modules/@ngtools/webpack/src/loaders/inline-resource.js?data=CiAgICAgIC50YWJsZSB0aCB7CiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDsKICAgICAgfQogICAg!./projects/docs/src/app/examples/mobile-layout/mobile-layout.component.ts":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"\n      .table th {\n        white-space: nowrap;\n      }\n    ","",{version:3,sources:["webpack://./projects/docs/src/app/examples/mobile-layout/mobile-layout.component.ts"],names:[],mappings:";MACM;QACE,mBAAmB;MACrB",sourcesContent:["\n      .table th {\n        white-space: nowrap;\n      }\n    "],sourceRoot:""}]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/docs/src/app/examples/row-hover-click/row-hover-click.component.ts.css?ngResource!=!./node_modules/@ngtools/webpack/src/loaders/inline-resource.js?data=CiAgICAgIDpob3N0IDo6bmctZGVlcCAuZ3QtaG92ZXIgewogICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJzLWhpZ2hsaWdodC1iZyk7CiAgICAgIH0KICAgIA%3D%3D!./projects/docs/src/app/examples/row-hover-click/row-hover-click.component.ts":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"\n      :host ::ng-deep .gt-hover {\n        background-color: var(--bs-highlight-bg);\n      }\n    ","",{version:3,sources:["webpack://./projects/docs/src/app/examples/row-hover-click/row-hover-click.component.ts"],names:[],mappings:";MACM;QACE,wCAAwC;MAC1C",sourcesContent:["\n      :host ::ng-deep .gt-hover {\n        background-color: var(--bs-highlight-bg);\n      }\n    "],sourceRoot:""}]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/core/src/lib/gt-delta/gt-delta.component.ts.css?ngResource!=!./node_modules/@ngtools/webpack/src/loaders/inline-resource.js?data=CiAgICAgIDpob3N0IHsKICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICAgIH0KICAgIA%3D%3D!./projects/core/src/lib/gt-delta/gt-delta.component.ts":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"\n      :host {\n        display: inline-block;\n      }\n    ","",{version:3,sources:["webpack://./projects/core/src/lib/gt-delta/gt-delta.component.ts"],names:[],mappings:";MACM;QACE,qBAAqB;MACvB",sourcesContent:["\n      :host {\n        display: inline-block;\n      }\n    "],sourceRoot:""}]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/docs/src/app/components/tabs/tabs.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"pre {\n  background-image: linear-gradient(0deg, #f8f8f8 25%, #ffffff 25%, #ffffff 50%, #f8f8f8 50%, #f8f8f8 75%, #ffffff 75%, #ffffff 100%);\n  background-size: 84px 84px;\n  padding: 21px 1rem;\n}\n\nul {\n  -ms-overflow-style: none; /* IE and Edge */\n  scrollbar-width: none; /* Firefox */\n}\nul::-webkit-scrollbar {\n  display: none;\n}","",{version:3,sources:["webpack://./projects/docs/src/app/components/tabs/tabs.component.scss"],names:[],mappings:"AAAA;EACE,mIAAA;EACA,0BAAA;EACA,kBAAA;AACF;;AACA;EAIE,wBAAA,EAAA,gBAAA;EACA,qBAAA,EAAA,YAAA;AADF;AAHE;EACE,aAAA;AAKJ",sourcesContent:["pre {\n  background-image: linear-gradient(0deg, #f8f8f8 25%, #ffffff 25%, #ffffff 50%, #f8f8f8 50%, #f8f8f8 75%, #ffffff 75%, #ffffff 100%);\n  background-size: 84.00px 84.00px;\n  padding: 21px 1rem;\n}\nul {\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  -ms-overflow-style: none; /* IE and Edge */\n  scrollbar-width: none; /* Firefox */\n}\n"],sourceRoot:""}]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./.storybook/scss-loader.scss?ngGlobalStyle":()=>{},"./projects/docs/src/stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./projects/docs/src/stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$",module.exports=webpackEmptyContext},"./projects/docs/src/stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./Introduction.stories.mdx":"./projects/docs/src/stories/Introduction.stories.mdx","./examples/Advanced.stories.mdx":"./projects/docs/src/stories/examples/Advanced.stories.mdx","./examples/Custom-templates.stories.mdx":"./projects/docs/src/stories/examples/Custom-templates.stories.mdx","./examples/Footer.stories.mdx":"./projects/docs/src/stories/examples/Footer.stories.mdx","./examples/Horizontal.stories.mdx":"./projects/docs/src/stories/examples/Horizontal.stories.mdx","./examples/Mobile.stories.mdx":"./projects/docs/src/stories/examples/Mobile.stories.mdx","./examples/Nested-data.stories.mdx":"./projects/docs/src/stories/examples/Nested-data.stories.mdx","./examples/Pagination.stories.mdx":"./projects/docs/src/stories/examples/Pagination.stories.mdx","./examples/Row-events.stories.mdx":"./projects/docs/src/stories/examples/Row-events.stories.mdx","./examples/Sorting.stories.mdx":"./projects/docs/src/stories/examples/Sorting.stories.mdx","./examples/Static.stories.mdx":"./projects/docs/src/stories/examples/Static.stories.mdx","./examples/Transpose.stories.mdx":"./projects/docs/src/stories/examples/Transpose.stories.mdx"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./projects/docs/src/stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$"},"?4f7e":()=>{},"./generated-stories-entry.cjs":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module=__webpack_require__.nmd(module),(0,__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js").configure)([__webpack_require__("./projects/docs/src/stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$"),__webpack_require__("./projects/docs/src/stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$")],module,!1)}},__webpack_require__=>{var __webpack_exec__=moduleId=>__webpack_require__(__webpack_require__.s=moduleId);__webpack_require__.O(0,[826],(()=>(__webpack_exec__("./node_modules/@storybook/core-server/node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_exec__("./node_modules/@storybook/core-server/node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_exec__("./storybook-init-framework-entry.js"),__webpack_exec__("./node_modules/@storybook/angular/dist/ts3.9/client/docs/config-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/angular/dist/ts3.9/client/preview/config.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-docs/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-links/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-actions/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-backgrounds/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-measure/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-outline/preview.js-generated-config-entry.js"),__webpack_exec__("./.storybook/preview.js-generated-config-entry.js"),__webpack_exec__("./generated-stories-entry.cjs"),__webpack_exec__("./projects/docs/src/polyfills.ts"),__webpack_exec__("./.storybook/scss-loader.scss?ngGlobalStyle"))));__webpack_require__.O()}]);
//# sourceMappingURL=main.9aefd33c.iframe.bundle.js.map