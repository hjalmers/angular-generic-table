{"version":3,"file":"main.baa7105e.iframe.bundle.js","mappings":"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","sources":["./.storybook/preview.js","./.storybook/preview.js-generated-config-entry.js","./projects/docs/src/stories/Introduction.stories.mdx","./projects/core/src/lib/enums/order.enum.ts","./projects/core/src/lib/utilities/utilities.ts","./projects/core/src/lib/core.component.ts","./projects/core/src/lib/pipes/sort-class.pipe.ts","./projects/core/src/lib/pipes/dash-case.pipe.ts","./projects/core/src/lib/pipes/highlight.pipe.ts","./projects/core/src/lib/pipes/capital-case.pipe.ts","./projects/core/src/lib/pipes/dynamic.pipe.ts","./projects/core/src/lib/gt-delta/gt-delta.component.ts","./projects/core/src/lib/core.module.ts","./projects/docs/src/app/examples/simple/simple.snippets.ts","./projects/docs/src/app/examples/simple/simple.component.ts","./projects/docs/src/app/examples/mobile-layout/mobileLayout.snippets.ts","./projects/docs/src/app/examples/mobile-layout/mobile-layout.component.ts","./projects/docs/src/app/examples/advanced/advanced.snippets.ts","./projects/docs/src/app/examples/advanced/advanced.component.ts","./projects/docs/src/app/components/tabs/tabs.component.ts","./projects/docs/src/app/examples/custom-templates/custom-templates.snippets.ts","./projects/docs/src/app/examples/custom-templates/custom-templates.component.ts","./projects/docs/src/app/examples/pagination/pagination.snippets.ts","./projects/docs/src/app/examples/pagination/pagination.component.ts","./projects/core/src/lib/pagination/pagination.component.ts","./projects/core/src/lib/pagination/pagination.module.ts","./projects/docs/src/app/examples/horizontal-table/horizontal-table.snippets.ts","./projects/docs/src/app/examples/horizontal-table/horizontal-table.component.ts","./projects/docs/src/app/examples/nested-data/nested.snippets.ts","./projects/docs/src/app/examples/nested-data/nested-data.component.ts","./projects/docs/src/app/examples/transpose/transpose.snippets.ts","./projects/docs/src/app/examples/transpose/transpose.component.ts","./projects/docs/src/app/examples/row-hover-click/row-hower-click.snippets.ts","./projects/docs/src/app/examples/row-hover-click/row-hover-click.component.ts","./projects/docs/src/stories/Table.stories.mdx","webpack:///./projects/docs/src/stories/ sync ^\\.(?9e9a","./projects/docs/src/stories/ sync ^\\.(","./generated-stories-entry.cjs"],"sourcesContent":["import { setCompodocJson } from \"@storybook/addon-docs/angular\";\nimport docJson from \"../documentation.json\";\n\nsetCompodocJson(docJson);\n\nexport const parameters = {\n  actions: { argTypesRegex: \"^on[A-Z].*\" },\n  controls: {\n    matchers: {\n      color: /(background|color)$/i,\n      date: /Date$/,\n    },\n  },\n  docs: { inlineStories: true },\n  themes: {\n    //default: \"Swimbird - Dark\",\n    default: \"Bootstrap\",\n    clearable: false,\n    list: [\n      //{ name: \"Swimbird - Dark\", class: \"theme-sb-dark\", color: \"#00aced\" },\n      //{ name: \"Swimbird - Light\", class: \"theme-sb-light\", color: \"#00aced\" },\n      {\n        name: \"Bootstrap\",\n        class: \"theme-bootstrap\",\n        color: \"var(--bs-primary)\",\n      },\n    ],\n    onChange: (theme) => {\n      document.body.setAttribute(\"data-theme\", theme.class);\n    },\n  },\n};\n","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable import/no-unresolved */\nimport { addDecorator, addParameters, addLoader, addArgs, addArgTypes, addArgsEnhancer, addArgTypesEnhancer, setGlobalRender } from '/home/runner/work/angular-generic-table/angular-generic-table/node_modules/@storybook/client-api';\nimport * as config from '/home/runner/work/angular-generic-table/angular-generic-table/.storybook/preview.js';\nObject.keys(config).forEach(function (key) {\n  var value = config[key];\n\n  switch (key) {\n    case 'args':\n      {\n        return addArgs(value);\n      }\n\n    case 'argTypes':\n      {\n        return addArgTypes(value);\n      }\n\n    case 'decorators':\n      {\n        return value.forEach(function (decorator) {\n          return addDecorator(decorator, false);\n        });\n      }\n\n    case 'loaders':\n      {\n        return value.forEach(function (loader) {\n          return addLoader(loader, false);\n        });\n      }\n\n    case 'parameters':\n      {\n        return addParameters(_objectSpread({}, value), false);\n      }\n\n    case 'argTypesEnhancers':\n      {\n        return value.forEach(function (enhancer) {\n          return addArgTypesEnhancer(enhancer);\n        });\n      }\n\n    case 'argsEnhancers':\n      {\n        return value.forEach(function (enhancer) {\n          return addArgsEnhancer(enhancer);\n        });\n      }\n\n    case 'render':\n      {\n        return setGlobalRender(value);\n      }\n\n    case 'globals':\n    case 'globalTypes':\n      {\n        var v = {};\n        v[key] = value;\n        return addParameters(v, false);\n      }\n\n    case '__namedExportsOrder':\n    case 'decorateStory':\n    case 'renderToDOM':\n      {\n        return null; // This key is not handled directly in v6 mode.\n      }\n\n    default:\n      {\n        // eslint-disable-next-line prefer-template\n        return console.log(key + ' was not supported :( !');\n      }\n  }\n});","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta } from '@storybook/addon-docs';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Introduction\" mdxType=\"Meta\" />\n    <h1>{`Angular Generic Table Docs`}</h1>\n    <p>{`Generic table version 5 has been rebuilt to be more efficient and to make it easier to customize and add new features. It still relies on native html tables for layout and rendering. Follow the instructions below to get started with the latest release candidate.`}</p>\n    <h2>{`Install`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`npm install @angular-generic-table/core@rc --save\n`}</code></pre>\n    <h2>{`Import module`}</h2>\n    <p>{`We recommend import `}<inlineCode parentName=\"p\">{`GenericTableCoreModule`}</inlineCode>{` into a shared module eg. `}<inlineCode parentName=\"p\">{`SharedModule`}</inlineCode>{` that can be imported into other, preferably lazy loaded modules when needed.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [...],\n  imports: [\n    ...\n    GenericTableCoreModule\n  ],\n  exports: [\n    GenericTableCoreModule\n  ]\n})\nexport class SharedModule {}\n`}</code></pre>\n    <h2>{`Import styling`}</h2>\n    <p>{`We recommend setting up your Angular project to use scss (SASS) for css preprocessing.`}</p>\n    <p>{`Once configured to use scss, it's just a matter of including the scss to your main styles file, typically it would be `}<inlineCode parentName=\"p\">{`styles.scss`}</inlineCode>{` located at the root of the `}<inlineCode parentName=\"p\">{`src`}</inlineCode>{` folder unless you've changed it.`}</p>\n    <h3>{`Add scss`}</h3>\n    <p><inlineCode parentName=\"p\">{`{project}/src/styles.scss`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`// import base styles from angular-generic-table/core\n@use '~@angular-generic-table/core/scss' as generic-table-styles;\n@include generic-table-styles.styles(); // all styles\n\n// @include generic-table-styles.search-style(); // search (highlight) style\n// @include generic-table-styles.mobile-style(); // mobile layout style\n// @include generic-table-styles.pagination-style(); // pagination styles\n`}</code></pre>\n    <h3>{`Override scss variables`}</h3>\n    <p>{`It's possible to override the scss variables used by generic table by passing them when importing the scss.\n`}<inlineCode parentName=\"p\">{`{project}/src/styles.scss`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`// import base styles from angular-generic-table/core and override scss variables\n@use '~@angular-generic-table/core/scss' as generic-table-styles with (\n    $highlight-background-color: purple,\n    $mobile-style-max-width: 375px\n);\n@include generic-table-styles.styles();\n`}</code></pre>\n    <p><strong parentName=\"p\">{`SCSS Variables`}</strong></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Default value`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$highlight-background-color:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`#ffdd00;`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$mobile-style-selector:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`'table.table-mobile';`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$mobile-style-max-width:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`576px;`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$mobile-style-header-font-weight:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`500;`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$mobile-style-header-background-color:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`#fff;`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$mobile-style-button-selector:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`'.btn-sm';`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$mobile-style-border-bottom:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`solid 1px #dedede;`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$mobile-style-button-font-size:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`1rem;`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$mobile-style-button-padding:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`0.5625rem 1rem;`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$pagination-ellipsis-content:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`'...';`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$pagination-active-color:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`#000;`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$pagination-justify-content:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`center;`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3>{`Have other needs?`}</h3>\n    <p>{`More examples and use cases coming soon! In the meantime create an `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/hjalmers/angular-generic-table/issues\"\n      }}>{`issue over at github`}</a></p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.parameters = { docsOnly: true };\n\nconst componentMeta = { title: 'Introduction', includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","export enum Order {\n  ASC = 'asc',\n  DESC = 'desc',\n}\n","import { TableRow } from '../models/table-row.interface';\nimport { TableConfig } from '../models/table-config.interface';\n\nexport let dashed: (s: string) => string;\ndashed = (s: string) => s.replace(/[A-Z]/g, (m) => '-' + m.toLowerCase());\n\nexport let capitalize: (s: string) => string;\ncapitalize = (s) =>\n  (s.charAt(0).toUpperCase() + s.slice(1))\n    .replace(/_/g, ' ')\n    .replace(/([A-Z][a-z]+)/g, ' $1')\n    .replace(/([A-Z]{2,})/g, ' $1')\n    .replace(/\\s{2,}/g, ' ')\n    .trim();\n\nexport let chunk: (\n  array: Array<any>,\n  chunkSize: number\n) => Array<Array<TableRow>>;\nchunk = (array, chunkSize) => {\n  if (chunkSize < 0) {\n    throw new Error('Invalid chunk size');\n  }\n  if (chunkSize === 0 && !chunkSize) {\n    return [array];\n  }\n  const CHUNK = [];\n  for (let i = 0, len = array.length; i < len; i += chunkSize) {\n    CHUNK.push(array.slice(i, i + chunkSize));\n  }\n  return CHUNK;\n};\n\nexport let search: (\n  text: string,\n  caseSensitive: boolean,\n  data: Array<TableRow>,\n  config: TableConfig\n) => TableRow[];\nsearch = (\n  text: string,\n  caseSensitive: boolean,\n  data: Array<TableRow>,\n  config: TableConfig\n) => {\n  if (config.columns) {\n    const searchColumns = Object.keys(config.columns).filter(\n      // @ts-ignore\n      (key) =>\n        config.columns &&\n        !config.columns[key]?.hidden &&\n        config.columns[key]?.search !== false\n    );\n\n    const FILTERED = [];\n    for (let i = 0; i < data.length; i++) {\n      const row = data[i];\n      const match =\n        Object.entries(row)\n          .filter(([key, value]) => searchColumns.indexOf(key) !== -1)\n          .reduce((acc, [key, value], index): string => {\n            return (\n              acc +\n              (index === 0 ? '' : ' ? ') +\n              (caseSensitive ? value + '' : (value + '').toLowerCase())\n            );\n          }, '')\n          .indexOf(text) !== -1;\n      if (match) {\n        FILTERED[FILTERED.length] = row;\n      }\n    }\n    return FILTERED;\n  } else {\n    return data;\n  }\n};\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  EMPTY,\n  isObservable,\n  Observable,\n  of,\n  ReplaySubject,\n  Subject,\n} from 'rxjs';\nimport { TableConfig } from './models/table-config.interface';\nimport { KeyValue } from '@angular/common';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n  map,\n  shareReplay,\n  startWith,\n  switchMap,\n  take,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { TableColumn } from './models/table-column.interface';\nimport { Order } from './enums/order.enum';\nimport { chunk, search } from './utilities/utilities';\nimport { TableRow } from './models/table-row.interface';\nimport { TableSort } from './models/table-sort.interface';\nimport { TableMeta } from './models/table-meta.interface';\nimport {\n  GtRowClickEvent,\n  GtRowHoverEvent,\n} from './models/table-events.interface';\n\n@Component({\n  selector: 'angular-generic-table',\n  templateUrl: './core.component.html',\n  styles: [],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CoreComponent {\n  @Input() set loading(isLoading: Observable<boolean> | boolean) {\n    this._loading$.next(isLoading);\n  }\n  @Input()\n  set page(page: number) {\n    this._currentPage$.next(page);\n  }\n\n  @Input()\n  set search(string: Observable<string> | string | null) {\n    this._searchBy$.next(string);\n  }\n\n  @Input()\n  set config(config: Observable<TableConfig> | TableConfig) {\n    this._tableConfig$.next(config);\n  }\n\n  @Input()\n  set data(data: Observable<Array<TableRow>> | Array<TableRow>) {\n    this._data$.next(data);\n  }\n\n  @Output() rowClick = new EventEmitter<GtRowClickEvent>();\n\n  _rowClick(row: TableRow, index: number, event: MouseEvent): void {\n    this.rowClick.emit({ row, index, event });\n  }\n\n  private _rowHover$ = new ReplaySubject<GtRowHoverEvent>(1);\n  @Output() rowHover = new EventEmitter<GtRowHoverEvent>();\n  rowHover$ = this._rowHover$.asObservable().pipe(\n    debounceTime(50),\n    distinctUntilChanged((p, q) => p.index === q.index),\n    tap((event) => this.rowHover.emit(event)),\n    shareReplay(1)\n  );\n\n  hoverRow(id: string): void;\n  hoverRow(index: number): void;\n  hoverRow(none: null): void;\n  hoverRow(arg: string | number | null): void {\n    if (typeof arg === 'number') {\n      this.data$\n        .pipe(\n          map((data) => data[arg]),\n          take(1)\n        )\n        .subscribe((row) => this._hoverRow(row, arg));\n    } else if (typeof arg === 'string') {\n      // TODO: implement hover by id\n    } else {\n      this._hoverRow(null, null);\n    }\n  }\n  _hoverRow(\n    row: TableRow | null,\n    index: number | null,\n    event?: MouseEvent\n  ): void {\n    this._rowHover$.next({ row, index, event });\n  }\n\n  get loading$(): Observable<boolean> {\n    return this._loading$.pipe(\n      startWith(false),\n      map((value) => (isObservable(value) ? value : of(value))),\n      switchMap((obs) => obs),\n      shareReplay(1)\n    );\n  }\n\n  private _loading$: ReplaySubject<Observable<boolean> | boolean> =\n    new ReplaySubject(1);\n  sortBy$: Subject<TableSort> = new Subject();\n  // tslint:disable-next-line:variable-name\n  private _sortBy: TableSort | undefined;\n\n  // tslint:disable-next-line:variable-name\n  private _searchBy$: ReplaySubject<Observable<string> | string | null> =\n    new ReplaySubject(1);\n  searchBy$: Observable<string | null> = this._searchBy$.pipe(\n    startWith(''),\n    map((value) => (isObservable(value) ? value : of(value))),\n    switchMap((obs) => obs),\n    shareReplay(1)\n  );\n\n  // tslint:disable-next-line:variable-name\n  private _tableConfig$: ReplaySubject<TableConfig | Observable<TableConfig>> =\n    new ReplaySubject(1);\n  tableConfig$: Observable<TableConfig> = this._tableConfig$.pipe(\n    map((value) => (isObservable(value) ? value : of(value))),\n    switchMap((obs) => obs),\n    shareReplay(1)\n  );\n\n  private _data$: ReplaySubject<Array<TableRow> | Observable<Array<TableRow>>> =\n    new ReplaySubject(1);\n  data$: Observable<Array<TableRow>> = this._data$.pipe(\n    map((value) => (isObservable(value) ? value : of(value))),\n    switchMap((obs) => combineLatest([obs])),\n    withLatestFrom(this.tableConfig$),\n    map(([[data], config]) => {\n      // if columns or rows contains config for mapTo...\n      if (\n        (config.columns &&\n          !!Object.values(config.columns).find((column) => !!column.mapTo)) ||\n        (config.rows &&\n          !!Object.values(config.rows).find((column) => !!column.mapTo))\n      ) {\n        // ...map data to new keys on row...\n        const newData: TableRow[] = [];\n        for (let i = 0; i < data.length; i++) {\n          const row = data[i];\n          const newKeys = Object.entries(config.columns || config.rows || [])\n            .filter(([key, value]) => !!value.mapTo) // add keys for columns with mapTo config...\n            .reduce(\n              (previousValue, [key, value]) => ({\n                ...previousValue,\n                [key]: this.nestedValue(\n                  row,\n                  value.mapTo!.path,\n                  value.mapTo?.missingValue\n                ),\n              }),\n              {}\n            );\n          newData[i] = { ...row, ...newKeys };\n        }\n        data = newData;\n      }\n      return { data, config };\n    }),\n    switchMap((obs) =>\n      combineLatest([\n        of(obs),\n        this.sortBy$.pipe(startWith(EMPTY)),\n        this.searchBy$,\n      ])\n    ),\n    map(([table, sortBy, searchBy]) => {\n      // create a new array reference and sort new array (prevent mutating existing state)\n      table.data = [...table.data];\n      return !sortBy\n        ? searchBy\n          ? search(searchBy, false, table.data, table.config)\n          : table.data\n        : (searchBy\n            ? search(searchBy, false, table.data, table.config)\n            : table.data\n          )?.sort((a, b) => {\n            // TODO: improve logic\n            const typed = sortBy as TableSort;\n            return a[typed.sortBy] > b[typed.sortBy]\n              ? typed.sortByOrder === Order.ASC\n                ? 1\n                : -1\n              : b[typed.sortBy] > a[typed.sortBy]\n              ? typed.sortByOrder === Order.ASC\n                ? -1\n                : 1\n              : 0;\n          });\n    }),\n    shareReplay(1)\n  );\n\n  table$: Observable<TableMeta> = combineLatest([\n    this.data$,\n    this.tableConfig$,\n  ]).pipe(\n    map(([sorted, config]) => {\n      // if pagination is disabled...\n      if (!config.pagination || config.pagination.length === 0) {\n        // ...return unaltered array\n        return {\n          data: [sorted],\n          config,\n          info: { records: sorted.length, pageTotal: 1 },\n        };\n      }\n      // return record set\n      return {\n        data: chunk(sorted, +(config.pagination.length || 0)),\n        config,\n        info: {\n          records: sorted.length,\n          pageTotal: Math.ceil(\n            sorted.length / +(config.pagination.length || 0)\n          ),\n        },\n      };\n    }),\n    shareReplay(1)\n  );\n\n  private _currentPage$: BehaviorSubject<number> = new BehaviorSubject(0);\n  currentPage$ = combineLatest([this._currentPage$, this.table$]).pipe(\n    map(([page, table]: any) => {\n      // determine last page\n      const lastPage =\n        Math.ceil(\n          table.info.records /\n            (table.config?.pagination?.length || table.info.records)\n        ) - 1;\n      // determine max/min position\n      return +page < 0 ? 0 : +page > lastPage ? lastPage : +page;\n    }),\n    shareReplay(1)\n  );\n\n  colspan$ = this.tableConfig$.pipe(\n    switchMap((config) =>\n      config.columns\n        ? of(\n            Object.values(config.columns || config.rows || {}).filter(\n              (value) => value.hidden !== true\n            ).length\n          )\n        : this.data$.pipe(map((data) => data.length + 1))\n    )\n  );\n\n  sort(property: string): void {\n    const newSortOrder =\n      this._sortBy?.sortBy !== property ||\n      this._sortBy?.sortByOrder === Order.DESC ||\n      !this._sortBy.sortByOrder\n        ? Order.ASC\n        : Order.DESC;\n    const newSortBy = {\n      sortBy: property,\n      sortByOrder: newSortOrder,\n    };\n    this.sortBy$.next(newSortBy);\n    this._sortBy = newSortBy;\n  }\n\n  columnOrder = (\n    a: KeyValue<string, TableColumn>,\n    b: KeyValue<string, TableColumn>\n  ): number => {\n    return (a.value.order || 0) - (b.value.order || 0);\n  };\n\n  nestedValue(\n    object: any,\n    mapTo: string,\n    missingValue: string | number | null = null\n  ): unknown {\n    const levels = mapTo.split('.');\n    return levels.reduce(\n      (previousValue, currentValue, index) =>\n        previousValue[currentValue] ||\n        (index === levels.length - 1 ? missingValue : {}),\n      object\n    );\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Order } from '../enums/order.enum';\n\n@Pipe({\n  name: 'sortClass',\n})\nexport class SortClassPipe implements PipeTransform {\n  transform(\n    selection: { sortBy: string; sortByOrder: Order } | any,\n    property: string,\n    aria = false\n  ): string | null {\n    return selection?.sortBy === property\n      ? !aria\n        ? 'gt-sort-' + selection.sortByOrder\n        : selection.sortByOrder + 'ending'\n      : !aria\n      ? ''\n      : null;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { dashed } from '../utilities/utilities';\n\n@Pipe({\n  name: 'dashCase',\n})\nexport class DashCasePipe implements PipeTransform {\n  transform(s: string): any {\n    return dashed(s);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'highlight',\n})\nexport class HighlightPipe implements PipeTransform {\n  transform(text: any, searchTerm: string | null): string {\n    if (!searchTerm) {\n      return text;\n    }\n    const haystackAlwaysString = text + '';\n    let highlightedText = haystackAlwaysString; // fallback\n\n    let searchPattern;\n    try {\n      searchPattern = new RegExp(\n        '(' +\n          // @ts-ignore\n          searchTerm\n            .toLowerCase()\n            .match(/\".*?\"|[^ ]+/g) // extract words\n            .map(\n              (needle) => needle.replace(/\"(.*?)\"/, '$1') // strip away '\"'\n            )\n            .join('|') + // combine words\n          ')',\n        'ig'\n      );\n    } catch (error) {\n      return highlightedText;\n    }\n\n    const containsTagPattern = /(<.*?>)(.*)(<\\/.*?>)/gi;\n    const containsTagMatches = containsTagPattern.exec(haystackAlwaysString);\n\n    if (containsTagMatches) {\n      // tag exists in haystack\n      highlightedText =\n        containsTagMatches[1] +\n        containsTagMatches[2].replace(\n          searchPattern,\n          '<span class=\"gt-highlight-search\">$1</span>'\n        ) +\n        containsTagMatches[3];\n    } else {\n      highlightedText = haystackAlwaysString.replace(\n        searchPattern,\n        '<span class=\"gt-highlight-search\">$1</span>'\n      );\n    }\n\n    return highlightedText;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { capitalize } from '../utilities/utilities';\n\n@Pipe({\n  name: 'capitalCase',\n})\nexport class CapitalCasePipe implements PipeTransform {\n  transform(s: string): any {\n    return capitalize(s);\n  }\n}\n","import { Injector, Pipe, PipeTransform, Type } from '@angular/core';\n\n@Pipe({\n  name: 'dynamicPipe',\n})\nexport class DynamicPipe implements PipeTransform {\n  constructor(private injector: Injector) {}\n\n  transform(value: any, requiredPipe: Type<any>, pipeArgs: any[]): any {\n    const injector = Injector.create({\n      name: 'DynamicPipe',\n      parent: this.injector,\n      providers: [{ provide: requiredPipe }],\n    });\n    const pipe = injector.get(requiredPipe);\n    return pipe.transform(value, ...(pipeArgs || []));\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { TableRows } from '../models/table-row.interface';\n\n@Component({\n  selector: 'gt-delta',\n  template: `<span\n    *ngIf=\"{\n      value:\n        index === 0\n          ? initialValue\n          : ((baseIndex === undefined\n              ? data[index - 1][key]\n              : data[baseIndex][key]) -\n              data[index][key]) /\n            -Math.abs(\n              baseIndex === undefined\n                ? data[index - 1][key]\n                : data[baseIndex][key]\n            )\n    } as delta\"\n    [class]=\"[\n      classes.span,\n      !delta.value || !Number.isFinite(delta.value)\n        ? null\n        : delta.value > 0\n        ? classes.positive\n        : classes.negative\n    ]\"\n    [class.gt-delta-positive]=\"delta.value > 0 && Number.isFinite(delta.value)\"\n    [class.gt-delta-negative]=\"delta.value < 0\"\n    >{{\n      Number.isFinite(delta.value)\n        ? (delta.value | percent)\n        : delta.value === initialValue\n        ? initialValue\n        : notApplicableValue\n    }}</span\n  >`,\n  styles: [\n    `\n      :host {\n        display: inline-block;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GtDeltaComponent {\n  constructor() {}\n  Math = Math;\n  Number = Number;\n  @Input() data: TableRows = [];\n  @Input() index: number = 0;\n  @Input() baseIndex?: number;\n  @Input() classes = {\n    span: 'gt-delta',\n    positive: 'text-success',\n    negative: 'text-danger',\n  };\n  @Input() key: string = 'value';\n  @Input() notApplicableValue: string = 'n/a';\n  @Input() initialValue: string = '-';\n}\n","import { NgModule } from '@angular/core';\nimport { CoreComponent } from './core.component';\nimport { CommonModule } from '@angular/common';\nimport { SortClassPipe } from './pipes/sort-class.pipe';\nimport { DashCasePipe } from './pipes/dash-case.pipe';\nimport { HighlightPipe } from './pipes/highlight.pipe';\nimport { CapitalCasePipe } from './pipes/capital-case.pipe';\nimport { DynamicPipe } from './pipes/dynamic.pipe';\nimport { GtDeltaComponent } from './gt-delta/gt-delta.component';\n\n@NgModule({\n  declarations: [\n    CoreComponent,\n    SortClassPipe,\n    DashCasePipe,\n    HighlightPipe,\n    CapitalCasePipe,\n    CapitalCasePipe,\n    DynamicPipe,\n    GtDeltaComponent,\n  ],\n  imports: [CommonModule],\n  exports: [CoreComponent, GtDeltaComponent],\n})\nexport class GenericTableCoreModule {}\n","export const SIMPLE_SNIPPETS = [\n  {\n    name: 'basic-table.component.ts',\n    code: `import { Component } from '@angular/core';\n\n@Component({\n  selector: 'basic-table',\n  template: '<angular-generic-table [data]=\"data\" [config]=\"config\"></angular-generic-table>'\n})\nexport class SimpleComponent {\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config = {\n    columns: {\n      firstName: {},\n      lastName: {},\n      gender: {},\n      favoriteFood: {},\n    },\n  };\n`,\n    language: 'typescript',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { BasicTableComponent } from './basic-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [BasicTableComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [BasicTableComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import { Component } from '@angular/core';\nimport { Story } from '@storybook/angular/types-6-0';\nimport { SIMPLE_SNIPPETS } from './simple.snippets';\n\n@Component({\n  selector: 'docs-simple',\n  template: `\n    <div class=\"overflow-auto\">\n      <angular-generic-table\n        [data]=\"data\"\n        [config]=\"config\"\n      ></angular-generic-table>\n    </div>\n    <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n  `,\n  styles: [],\n})\nexport class SimpleComponent {\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config = {\n    columns: {\n      firstName: {},\n      lastName: {},\n      gender: {},\n      favoriteFood: {},\n    },\n  };\n\n  SNIPPETS = SIMPLE_SNIPPETS;\n}\n\nexport const Simple: Story<SimpleComponent> = (args: SimpleComponent) => ({\n  props: args,\n  component: SimpleComponent,\n});\n","export const MOBILE_LAYOUT_SNIPPETS = [\n  {\n    name: 'mobile-layout.component.ts',\n    code: `import {Component, Pipe, PipeTransform, TemplateRef, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {TableColumn, TableConfig, TableRow} from \"@angular-generic-table/core\";\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {map} from \"rxjs/operators\";\n\n@Pipe({\n  name: 'genderPipe',\n})\nexport class GenderPipe implements PipeTransform {\n  transform(gender: 'male' | 'female'): string {\n  return gender === 'male' ? '👨' : '👩';\n  }\n}\n\n@Component({\n  selector: 'docs-mobile-layout',\n  template: \\`\n    <div class=\"d-flex justify-content-end mb-1 align-items-center\">\n      {{clicked}} <button class=\"btn btn-link d-sm-none \" (click)=\"toggleLayout()\">{{(mobileLayout$ | async)? 'Desktop ' : 'Mobile '}} layout</button>\n    </div>\n    <div [class.overflow-auto]=\"(mobileLayout$ | async) === false\">\n      <angular-generic-table [data]=\"data\" [config]=\"config$\"></angular-generic-table>\n    </div>\n    <ng-template #actions let-row=\"row\" let-col=\"col\" let-index=\"index\">\n      <button class=\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\" (click)=\"clickAction(row, col, index)\">Click me!</button>\n    </ng-template>\n  \\`,\n  styles: [\\`\n    .table th {\n      white-space: nowrap;\n    }\n  \\`],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MobileLayoutComponent {\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  clicked = '';\n\n  mobileLayout$ = new BehaviorSubject(true);\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config$: Observable<TableConfig> = this.mobileLayout$.pipe(\n    map(mobileLayout => ({\n      mobileLayout,\n      columns: {\n        firstName: {\n          mobileHeader: true,\n          sortable: true\n        },\n        lastName: {\n          mobileHeader: true,\n          sortable: true\n        },\n        gender: {\n          mobileHeader: true,\n          transform: {\n            pipe: GenderPipe\n          }\n        },\n        favoriteFood: {\n          mobileHeader: true\n        },\n        action: {\n          mobileHeader: false,\n          header: false,\n          templateRef: this.actions,\n        },\n      },\n    }))\n  );\n\n  toggleLayout = (): void => {\n    this.mobileLayout$.next(!this.mobileLayout$.getValue());\n  }\n  clickAction(row: TableRow, column: { key: string; value: TableColumn }, index: number): void {\n    console.log('clicked row:', row, 'col:', column);\n    this.clicked = \\`Clicked row number: \\${index}\\`;\n  }\n}`,\n    language: 'typescript',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { MobileLayoutComponent } from './mobile-layout.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [MobileLayoutComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [MobileLayoutComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import {\n  Component,\n  Pipe,\n  PipeTransform,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Story } from '@storybook/angular/types-6-0';\nimport {\n  TableColumn,\n  TableConfig,\n  TableRow,\n} from '@angular-generic-table/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MOBILE_LAYOUT_SNIPPETS } from './mobileLayout.snippets';\n\n@Pipe({\n  name: 'genderPipe',\n})\nexport class GenderPipe implements PipeTransform {\n  transform(gender: 'male' | 'female'): string {\n    return gender === 'male' ? '👨' : '👩';\n  }\n}\n\n@Component({\n  selector: 'docs-mobile-layout',\n  template: `\n    <div class=\"d-flex justify-content-end mb-1 align-items-center\">\n      {{ clicked }}\n      <button class=\"btn btn-link d-sm-none \" (click)=\"toggleLayout()\">\n        {{ (mobileLayout$ | async) ? 'Desktop ' : 'Mobile ' }} layout\n      </button>\n    </div>\n    <div [class.overflow-auto]=\"(mobileLayout$ | async) === false\">\n      <angular-generic-table\n        [data]=\"data\"\n        [config]=\"config$\"\n      ></angular-generic-table>\n    </div>\n    <ng-template #actions let-row=\"row\" let-col=\"col\" let-index=\"index\">\n      <button\n        class=\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\"\n        (click)=\"clickAction(row, col, index)\"\n      >\n        Click me!\n      </button>\n    </ng-template>\n    <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n  `,\n  styles: [\n    `\n      .table th {\n        white-space: nowrap;\n      }\n    `,\n  ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MobileLayoutComponent {\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  clicked = '';\n\n  mobileLayout$ = new BehaviorSubject(true);\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config$: Observable<TableConfig> = this.mobileLayout$.pipe(\n    map((mobileLayout) => ({\n      mobileLayout,\n      columns: {\n        firstName: {\n          mobileHeader: true,\n          sortable: true,\n        },\n        lastName: {\n          mobileHeader: true,\n          sortable: true,\n        },\n        gender: {\n          mobileHeader: true,\n          transform: {\n            pipe: GenderPipe,\n          },\n        },\n        favoriteFood: {\n          mobileHeader: true,\n        },\n        action: {\n          mobileHeader: false,\n          header: false,\n          templateRef: this.actions,\n        },\n      },\n    }))\n  );\n\n  SNIPPETS = MOBILE_LAYOUT_SNIPPETS;\n\n  toggleLayout = (): void => {\n    this.mobileLayout$.next(!this.mobileLayout$.getValue());\n  };\n  clickAction(\n    row: TableRow,\n    column: { key: string; value: TableColumn },\n    index: number\n  ): void {\n    console.log('clicked row:', row, 'col:', column);\n    this.clicked = `Clicked row number: ${index}`;\n  }\n}\n\nexport const Mobile: Story<MobileLayoutComponent> = (\n  args: MobileLayoutComponent\n) => ({\n  props: args,\n  component: MobileLayoutComponent,\n});\n","export const ADVANCED_DOCS = [\n  {\n    name: 'advanced.component.html',\n    code: `<div class=\"row gx-2 gy-3 mb-3\">\n  <div class=\"col-12 col-sm-auto\">\n    <button class=\"btn btn-primary w-100\" (click)=\"addData()\">Add random data</button>\n  </div>\n  <div class=\"col-12 col-sm-auto\">\n    <button class=\"btn btn-danger w-100\" (click)=\"removeData()\">Remove data</button>\n  </div>\n  <div class=\"col-12 col-sm-auto\">\n    <button class=\"btn btn-secondary w-100\" (click)=\"simulateLoad()\">Load</button>\n  </div>\n</div>\n<form [formGroup]=\"paginationForm\">\n  <div class=\"row\">\n    <div class=\"form-group col-12 col-sm-auto\">\n      <label for=\"length_input\">Length</label>\n      <input id=\"length_input\" formControlName=\"length\" type=\"number\" class=\"form-control\">\n    </div>\n    <div class=\"form-group col-12 col-sm-auto\">\n      <label for=\"search_input\">Search</label>\n      <input id=\"search_input\" formControlName=\"search\" type=\"text\" class=\"form-control\">\n    </div>\n  </div>\n</form>\n<div class=\"mx-n3 mx-sm-0\">\n  <angular-generic-table [data]=\"data$\" [config]=\"tableConfig$\" [page]=\"(currentPage$ | async)!\" [search]=\"search$\" [loading]=\"loading$\" #table>\n    <div class=\"table-loading gt-skeleton-loader\"></div>\n    <div class=\"table-no-data alert alert-info mt-3\">\n      Table is empty\n    </div>\n  </angular-generic-table>\n</div>\n<div class=\"row justify-content-between justify-content-sm-center align-items-center mt-3\" *ngIf=\"{current: (currentPage$ | async) || 0,total: (table.table$ | async)?.info?.pageTotal || 1\n} as pagination\">\n  <div class=\"col-auto\">\n    <button class=\"btn btn-primary\" (click)=\"prev()\" [disabled]=\"pagination.current === 0\">Prev</button>\n  </div>\n  <div class=\"col-auto\">\n    <button class=\"btn btn-primary\" (click)=\"next()\" [disabled]=\"pagination.total -1 === pagination.current\">Next</button>\n  </div>\n  <div class=\"col-auto\">Current page: {{pagination.current +1}}</div>\n  <div class=\"col-auto\">Total pages: {{pagination.total}}</div>\n  <div class=\"col-auto\">\n    Records: {{(data$ | async).length}}\n  </div>\n  <div class=\"col-auto\">\n    {{clicked}}\n  </div>\n</div>\n<ng-template #actions let-row=\"row\" let-col=\"col\" let-index=\"index\">\n  <button class=\"btn btn-outline-primary btn-sm my-sm-n3\" (click)=\"clickAction(row, col, index)\">Click me!</button>\n</ng-template>\n<ng-template #color let-row=\"row\" let-col=\"col\">\n  <div [style.background]=\"row[col.key]\" style=\"width: 1.5rem; height: 1.5rem; border-radius: 50%\"></div>\n</ng-template>`,\n    language: 'xml',\n  },\n  {\n    name: 'advanced.component.ts',\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\nimport { FormBuilder } from '@angular/forms';\nimport { TableColumn, TableConfig, TableRow } from '@angular-generic-table/core';\nimport { withLatestFrom } from 'rxjs/operators';\n\n@Component({\n  selector: 'docs-advanced',\n  templateUrl: './advanced.component.html',\n  styles: [],\n})\nexport class AdvancedComponent implements OnInit {\n  get currentPage$(): Observable<number> {\n    return this._currentPage$.asObservable();\n  }\n\n  set currentPage(value: number) {\n    this._currentPage$.next(value);\n  }\n  constructor(private fb: FormBuilder) {}\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n  paginationForm = this.fb.group({\n    length: [10],\n    search: [''],\n  });\n  search$ = this.paginationForm.get('search')?.valueChanges as Observable<string>;\n  loading$ = new BehaviorSubject(true);\n  data$: BehaviorSubject<any> = new BehaviorSubject([\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteColor: '#26BFAF',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteColor: '#0f0',\n      favoriteFood: 'Pizza',\n    },\n  ]);\n\n  private _currentPage$ = new BehaviorSubject(0);\n\n  clicked: string = '';\n  maleFirstNames = ['Peter', 'Clark', 'Ruben', 'John', 'Jack', 'Roscoe'];\n  femaleFirstNames = ['Mary Jane', 'Kim', 'Sarah', 'Michelle', 'Ann'];\n  lastNames = ['Andersson', 'Smith', 'Parker', 'Kent', 'Rogers', 'Lane', 'Jackson'];\n  foods = ['Pizza', 'Pasta', 'Hamburger', 'Pancakes', 'Tacos', 'Lasagna', 'Meatloaf'];\n  colors = ['#33d60b', '#dcafff', '#3fc9ff', '#ff1600', '#5238b1', '#fff'];\n\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\n\n  addData(): void {\n    this.data$.next([...this.data$.getValue(), this.randomRecord()]);\n  }\n\n  removeData(): void {\n    this.data$.next([]);\n  }\n\n  simulateLoad(): void {\n    this.loading$.next(true);\n    // set loading state to false after 2 seconds\n    setTimeout(() => this.loading$.next(false), 2000);\n  }\n\n  clickAction(row: TableRow, column: { key: string; value: TableColumn }, index: number): void {\n    console.log('clicked row:', row, 'col:', column);\n    this.clicked = \\`clicked row number: \\${index}\\`;\n  }\n\n  randomRecord(): TableRow {\n    const random = Math.floor(Math.random() * 2);\n    const newRecord = {\n      firstName: random\n        ? this.maleFirstNames[Math.floor(Math.random() * this.maleFirstNames.length)]\n        : this.femaleFirstNames[Math.floor(Math.random() * this.femaleFirstNames.length)],\n      lastName: this.lastNames[Math.floor(Math.random() * this.lastNames.length)],\n      gender: random ? 'male' : 'female',\n      favoriteColor: this.colors[Math.floor(Math.random() * this.colors.length)],\n      favoriteFood: this.foods[Math.floor(Math.random() * this.foods.length)],\n    };\n    console.log('added new random record:', newRecord);\n\n    return newRecord;\n  }\n\n  next = () => {\n    this.currentPage = this._currentPage$.value + 1;\n  };\n  prev = () => {\n    this.currentPage = this._currentPage$.value - 1;\n  };\n\n  ngOnInit(): void {\n    this.simulateLoad();\n    this.paginationForm\n      .get('length')\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\n      .subscribe(([length, config]) => {\n        length = +length;\n        this.tableConfig$.next({\n          ...config,\n          pagination: { ...config.pagination, length },\n        });\n      });\n    this.tableConfig$.next({\n      class: 'table table-mobile text-nowrap mb-0',\n      columns: {\n        firstName: {\n          header: 'First name',\n          mobileHeader: true,\n          sortable: true,\n          order: 0,\n        },\n        lastName: {\n          header: 'Last name',\n          mobileHeader: true,\n          hidden: false,\n          sortable: true,\n        },\n        gender: {\n          mobileHeader: 'Sex',\n          sortable: true,\n          order: 1,\n        },\n        favoriteColor: {\n          header: 'Favorite color',\n          mobileHeader: true,\n          templateRef: this.color,\n          sortable: false,\n          order: 2,\n          search: false,\n          class: 'custom-class',\n        },\n        favoriteFood: {\n          mobileHeader: true,\n          header: 'Favorite food',\n          hidden: false,\n          sortable: true,\n          order: 0,\n        },\n        action: {\n          mobileHeader: false,\n          header: false,\n          templateRef: this.actions,\n          order: 6,\n        },\n      },\n      pagination: {\n        length: this.paginationForm.get('length')?.value || 0,\n      },\n    });\n  }\n}`,\n    language: 'typescript',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AdvancedComponent } from './advanced.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [AdvancedComponent],\n  imports: [BrowserModule, ReactiveFormsModule, GenericTableCoreModule],\n  bootstrap: [AdvancedComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\nimport { UntypedFormBuilder } from '@angular/forms';\nimport {\n  TableConfig,\n  TableRow,\n  TableColumn,\n} from '@angular-generic-table/core';\nimport { withLatestFrom } from 'rxjs/operators';\nimport { Story } from '@storybook/angular/types-6-0';\nimport { ADVANCED_DOCS } from './advanced.snippets';\n\n@Component({\n  selector: 'docs-advanced',\n  templateUrl: './advanced.component.html',\n  styles: [],\n})\nexport class AdvancedComponent implements OnInit {\n  get currentPage$(): Observable<number> {\n    return this._currentPage$.asObservable();\n  }\n\n  set currentPage(value: number) {\n    this._currentPage$.next(value);\n  }\n  constructor(private fb: UntypedFormBuilder) {}\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n  paginationForm = this.fb.group({\n    length: [10],\n    search: [''],\n  });\n  search$ = this.paginationForm.get('search')\n    ?.valueChanges as Observable<string>;\n  loading$ = new BehaviorSubject(true);\n  data$: BehaviorSubject<any> = new BehaviorSubject([\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteColor: '#26BFAF',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteColor: '#0f0',\n      favoriteFood: 'Pizza',\n    },\n  ]);\n\n  private _currentPage$ = new BehaviorSubject(0);\n\n  clicked: string = '';\n  maleFirstNames = ['Peter', 'Clark', 'Ruben', 'John', 'Jack', 'Roscoe'];\n  femaleFirstNames = ['Mary Jane', 'Kim', 'Sarah', 'Michelle', 'Ann'];\n  lastNames = [\n    'Andersson',\n    'Smith',\n    'Parker',\n    'Kent',\n    'Rogers',\n    'Lane',\n    'Jackson',\n  ];\n  foods = [\n    'Pizza',\n    'Pasta',\n    'Hamburger',\n    'Pancakes',\n    'Tacos',\n    'Lasagna',\n    'Meatloaf',\n  ];\n  colors = ['#33d60b', '#dcafff', '#3fc9ff', '#ff1600', '#5238b1', '#fff'];\n\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\n  SNIPPETS = ADVANCED_DOCS;\n\n  addData(): void {\n    this.data$.next([...this.data$.getValue(), this.randomRecord()]);\n  }\n\n  removeData(): void {\n    this.data$.next([]);\n  }\n\n  simulateLoad(): void {\n    this.loading$.next(true);\n    // set loading state to false after 2 seconds\n    setTimeout(() => this.loading$.next(false), 2000);\n  }\n\n  clickAction(\n    row: TableRow,\n    column: { key: string; value: TableColumn },\n    index: number\n  ): void {\n    console.log('clicked row:', row, 'col:', column);\n    this.clicked = `clicked row number: ${index}`;\n  }\n\n  randomRecord(): TableRow {\n    const random = Math.floor(Math.random() * 2);\n    const newRecord = {\n      firstName: random\n        ? this.maleFirstNames[\n            Math.floor(Math.random() * this.maleFirstNames.length)\n          ]\n        : this.femaleFirstNames[\n            Math.floor(Math.random() * this.femaleFirstNames.length)\n          ],\n      lastName:\n        this.lastNames[Math.floor(Math.random() * this.lastNames.length)],\n      gender: random ? 'male' : 'female',\n      favoriteColor:\n        this.colors[Math.floor(Math.random() * this.colors.length)],\n      favoriteFood: this.foods[Math.floor(Math.random() * this.foods.length)],\n    };\n    console.log('added new random record:', newRecord);\n\n    return newRecord;\n  }\n\n  next = () => {\n    this.currentPage = this._currentPage$.value + 1;\n  };\n  prev = () => {\n    this.currentPage = this._currentPage$.value - 1;\n  };\n\n  ngOnInit(): void {\n    this.simulateLoad();\n    this.paginationForm\n      .get('length')\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\n      .subscribe(([length, config]) => {\n        length = +length;\n        this.tableConfig$.next({\n          ...config,\n          pagination: { ...config.pagination, length },\n        });\n      });\n    this.tableConfig$.next({\n      class: 'table text-nowrap mb-0',\n      mobileLayout: true,\n      columns: {\n        firstName: {\n          header: 'First name',\n          mobileHeader: true,\n          sortable: true,\n          order: 0,\n        },\n        lastName: {\n          header: 'Last name',\n          mobileHeader: true,\n          hidden: false,\n          sortable: true,\n        },\n        gender: {\n          mobileHeader: 'Sex',\n          sortable: true,\n          order: 1,\n        },\n        favoriteColor: {\n          header: 'Favorite color',\n          mobileHeader: true,\n          templateRef: this.color,\n          sortable: false,\n          order: 2,\n          search: false,\n          class: 'custom-class',\n        },\n        favoriteFood: {\n          mobileHeader: true,\n          header: 'Favorite food',\n          hidden: false,\n          sortable: true,\n          order: 0,\n        },\n        action: {\n          mobileHeader: false,\n          header: false,\n          templateRef: this.actions,\n          order: 6,\n          class: 'py-1 text-end',\n        },\n      },\n      pagination: {\n        length: this.paginationForm.get('length')?.value || 0,\n      },\n    });\n  }\n}\n\nexport const Advanced: Story<AdvancedComponent> = (\n  args: AdvancedComponent\n) => ({\n  props: args,\n  component: AdvancedComponent,\n});\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Story } from '@storybook/angular/types-6-0';\nimport hljs from 'highlight.js/lib/core';\nimport { HighlightResult } from 'highlight.js';\n\nimport typescript from 'highlight.js/lib/languages/typescript';\nimport xml from 'highlight.js/lib/languages/xml';\nimport scss from 'highlight.js/lib/languages/scss';\n\nhljs.registerLanguage('typescript', typescript);\nhljs.registerLanguage('scss', scss);\nhljs.registerLanguage('xml', xml);\n\n@Component({\n  selector: 'docs-tabs',\n  template: `\n    <ul class=\"nav nav-tabs mt-4 flex-nowrap text-nowrap overflow-auto\">\n      <li class=\"nav-item\" *ngFor=\"let item of content; let i = index\">\n        <button\n          class=\"nav-link btn-link\"\n          [class.active]=\"activeIndex === i\"\n          (click)=\"view(i)\"\n        >\n          {{ item.name }}\n        </button>\n      </li>\n    </ul>\n    <ng-container *ngIf=\"activeContent\">\n      <pre><code [innerHTML]=\"activeContent?.value\" class=\"{{'language-' + activeContent?.language}}\"></code></pre>\n    </ng-container>\n  `,\n  styleUrls: ['./tabs.component.scss'],\n})\nexport class TabsComponent implements OnInit {\n  get content(): any {\n    return this._content;\n  }\n\n  @Input() set content(value: any) {\n    this._content = value;\n  }\n  constructor() {}\n  activeIndex = 0;\n  activeContent: HighlightResult | undefined;\n\n  private _content: Array<{}> = [];\n  ngOnInit(): void {\n    this.activeContent = hljs.highlight(this.content[this.activeIndex].code, {\n      language: this.content[this.activeIndex].language,\n    });\n  }\n\n  view(index: number): void {\n    this.activeIndex = index;\n    this.activeContent = hljs.highlight(this.content[index].code, {\n      language: this.content[index].language,\n    });\n  }\n}\n\nexport const Tabs: Story<TabsComponent> = (args: TabsComponent) => ({\n  props: args,\n  component: TabsComponent,\n});\n","export const CUSTOM_TEMPLATES_DOCS = [\n  {\n    name: 'custom-templates.component.ts',\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { TableColumn, TableConfig, TableRow } from '@angular-generic-table/core';\nimport { ReplaySubject } from 'rxjs';\n\n@Component({\n  selector: 'custom-templates',\n  templateUrl: \\`./custom-templates.component.html\\`\n})\nexport class CustomTemplatesComponent implements OnInit {\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n  clicked = '';\n\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteColor: '#26BFAF',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteColor: '#0f0',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config$: ReplaySubject<TableConfig> = new ReplaySubject(1);\n  ngOnInit(): void {\n    this.config$.next({\n      columns: {\n        firstName: {},\n        lastName: {},\n        gender: {},\n        favoriteColor: {\n          templateRef: this.color,\n        },\n        favoriteFood: {},\n        action: {\n          templateRef: this.actions,\n        },\n      },\n    });\n  }\n  clickAction(row: TableRow, column: { key: string; value: TableColumn }, index: number): void {\n    console.log('clicked row:', row, 'col:', column);\n    this.clicked = \\`clicked row number: \\${index}\\`;\n  }\n}`,\n    language: 'typescript',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { CustomTemplatesComponent } from './custom-templates-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [CustomTemplatesComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [CustomTemplatesComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n  {\n    name: 'custom-templates.component.html',\n    code: `<angular-generic-table [data]=\"data\" [config]=\"config$\"></angular-generic-table>\n<ng-template #actions let-row=\"row\" let-col=\"col\" let-index=\"index\">\n <button class=\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\" (click)=\"clickAction(row, col, index)\">Click me!</button>\n</ng-template>\n<ng-template #color let-row=\"row\" let-col=\"col\">\n <div [style.background]=\"row[col.key]\" style=\"width: 1.5rem; height: 1.5rem; border-radius: 50%\"></div>\n</ng-template>\n{{ clicked }}`,\n    language: 'xml',\n  },\n];\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { Story } from '@storybook/angular/types-6-0';\nimport {\n  TableConfig,\n  TableRow,\n  TableColumn,\n} from '@angular-generic-table/core';\nimport { ReplaySubject } from 'rxjs';\nimport { CUSTOM_TEMPLATES_DOCS } from './custom-templates.snippets';\n\n@Component({\n  selector: 'docs-custom-templates',\n  template: `\n    <div class=\"overflow-auto\">\n      <angular-generic-table\n        [data]=\"data\"\n        [config]=\"config$\"\n      ></angular-generic-table>\n    </div>\n    <ng-template #actions let-row=\"row\" let-col=\"col\" let-index=\"index\">\n      <button\n        class=\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\"\n        (click)=\"clickAction(row, col, index)\"\n      >\n        Click me!\n      </button>\n    </ng-template>\n    <ng-template #color let-row=\"row\" let-col=\"col\">\n      <div\n        [style.background]=\"row[col.key]\"\n        style=\"width: 1.5rem; height: 1.5rem; border-radius: 50%\"\n      ></div>\n    </ng-template>\n    {{ clicked }}\n    <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n  `,\n})\nexport class CustomTemplatesComponent implements OnInit {\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n  clicked = '';\n\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteColor: '#26BFAF',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteColor: '#0f0',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config$: ReplaySubject<TableConfig> = new ReplaySubject(1);\n\n  SNIPPETS = CUSTOM_TEMPLATES_DOCS;\n  ngOnInit(): void {\n    this.config$.next({\n      columns: {\n        firstName: {},\n        lastName: {},\n        gender: {},\n        favoriteColor: {\n          templateRef: this.color,\n        },\n        favoriteFood: {},\n        action: {\n          templateRef: this.actions,\n        },\n      },\n    });\n  }\n  clickAction(\n    row: TableRow,\n    column: { key: string; value: TableColumn },\n    index: number\n  ): void {\n    console.log('clicked row:', row, 'col:', column);\n    this.clicked = `clicked row number: ${index}`;\n  }\n}\n\nexport const CustomTemplates: Story<CustomTemplatesComponent> = (\n  args: CustomTemplatesComponent\n) => ({\n  props: args,\n  component: CustomTemplatesComponent,\n});\n","export const ADVANCED_DOCS = [\n  {\n    name: 'pagination.component.html',\n    code: `<form [formGroup]=\"paginationForm\">\n  <div class=\"row gy-3\">\n    <div class=\"form-group col-12 col-sm-auto\">\n      <label for=\"length_input\">Length</label>\n      <input id=\"length_input\" formControlName=\"length\" type=\"number\" class=\"form-control\">\n    </div>\n    <div class=\"form-group col-12 col-sm-auto\">\n      <label for=\"search_input\">Search</label>\n      <input id=\"search_input\" formControlName=\"search\" type=\"text\" class=\"form-control\">\n    </div>\n  </div>\n</form>\n<div class=\"mx-n3 mx-sm-0 my-3 overflow-auto\">\n  <angular-generic-table [data]=\"data$\" [config]=\"tableConfig$\" [search]=\"search$\" [loading]=\"loading$\" #table>\n    <div class=\"table-loading gt-skeleton-loader\"></div>\n    <div class=\"table-no-data alert alert-info mt-3\">\n      Table is empty\n    </div>\n  </angular-generic-table>\n</div>\n<angular-generic-table-pagination [table]=\"table\">\n</angular-generic-table-pagination>`,\n    language: 'xml',\n  },\n  {\n    name: 'pagination.component.ts',\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\nimport { FormBuilder } from '@angular/forms';\nimport { TableConfig } from '@angular-generic-table/core';\nimport { pluck, tap, withLatestFrom } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'docs-pagination',\n  templateUrl: './pagination.component.html',\n  styles: [],\n})\nexport class PaginationComponent implements OnInit {\n  constructor(private fb: FormBuilder, private http: HttpClient) {}\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n  paginationForm = this.fb.group({\n    length: [10],\n    search: [''],\n  });\n  search$ = this.paginationForm.get('search')?.valueChanges as Observable<string>;\n  loading$ = new BehaviorSubject(true);\n  data$: Observable<any> = this.http.get('https://private-730c61-generictable.apiary-mock.com/data').pipe(\n    pluck('data'),\n    tap((_) => this.loading$.next(false))\n  );\n\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\n\n  ngOnInit(): void {\n    this.paginationForm\n      .get('length')\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\n      .subscribe(([length, config]) => {\n        length = +length;\n        this.tableConfig$.next({\n          ...config,\n          pagination: { ...config.pagination, length },\n        });\n      });\n    this.tableConfig$.next({\n      class: 'table text-nowrap',\n      columns: {\n        first_name: {\n          sortable: true,\n        },\n        last_name: {\n          sortable: true,\n        },\n        gender: {\n          sortable: true,\n        },\n        birthday: {\n          sortable: true,\n          class: 'text-end',\n          transform: {\n            pipe: DatePipe,\n            args: ['longDate'],\n          },\n        },\n      },\n      pagination: {\n        length: this.paginationForm.get('length')?.value || 0,\n      },\n    });\n  }\n}`,\n    language: 'typescript',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { PaginationComponent } from './pagination.component';\nimport { GenericTableCoreModule, GenericTablePaginationModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [PaginationComponent],\n  imports: [\n    BrowserModule,\n    GenericTableCoreModule,\n    GenericTablePaginationModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  bootstrap: [PaginationComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\nimport { UntypedFormBuilder } from '@angular/forms';\nimport { TableConfig } from '@angular-generic-table/core';\nimport { pluck, tap, withLatestFrom } from 'rxjs/operators';\nimport { Story } from '@storybook/angular/types-6-0';\nimport { ADVANCED_DOCS } from './pagination.snippets';\nimport { HttpClient } from '@angular/common/http';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'docs-pagination',\n  templateUrl: './pagination.component.html',\n  styles: [],\n})\nexport class PaginationComponent implements OnInit {\n  constructor(private fb: UntypedFormBuilder, private http: HttpClient) {}\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n  paginationForm = this.fb.group({\n    length: [10],\n    search: [''],\n  });\n  search$ = this.paginationForm.get('search')\n    ?.valueChanges as Observable<string>;\n  loading$ = new BehaviorSubject(true);\n  data$: Observable<any> = this.http\n    .get('https://private-730c61-generictable.apiary-mock.com/data')\n    .pipe(\n      pluck('data'),\n      tap((_) => this.loading$.next(false))\n    );\n\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\n  SNIPPETS = ADVANCED_DOCS;\n\n  ngOnInit(): void {\n    this.paginationForm\n      .get('length')\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\n      .subscribe(([length, config]) => {\n        length = +length;\n        this.tableConfig$.next({\n          ...config,\n          pagination: { ...config.pagination, length },\n        });\n      });\n    this.tableConfig$.next({\n      class: 'table text-nowrap',\n      columns: {\n        first_name: {\n          sortable: true,\n        },\n        last_name: {\n          sortable: true,\n        },\n        gender: {\n          sortable: true,\n        },\n        birthday: {\n          sortable: true,\n          class: 'text-end',\n          transform: {\n            pipe: DatePipe,\n            args: ['longDate'],\n          },\n        },\n      },\n      pagination: {\n        length: this.paginationForm.get('length')?.value || 0,\n      },\n    });\n  }\n}\n\nexport const Pagination: Story<PaginationComponent> = (\n  args: PaginationComponent\n) => ({\n  props: args,\n  component: PaginationComponent,\n});\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { combineLatest, ReplaySubject } from 'rxjs';\nimport { map, pluck, switchMap } from 'rxjs/operators';\nimport { CoreComponent } from '../core.component';\nimport {\n  GtPaginationAriaLabels,\n  GtPaginationClasses,\n} from '../models/gt-pagination';\n\n@Component({\n  selector: 'angular-generic-table-pagination',\n  templateUrl: './pagination.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaginationComponent {\n  get paginationLength(): number {\n    return this._paginationLength;\n  }\n\n  @Input() set paginationLength(value: number) {\n    this._paginationLength = +value;\n  }\n  get classes(): GtPaginationClasses {\n    return this._classes;\n  }\n\n  @Input() set classes(value: GtPaginationClasses) {\n    this._classes = value;\n  }\n  get ariaLabels(): GtPaginationAriaLabels {\n    return this._ariaLabels;\n  }\n\n  @Input() set ariaLabels(value: GtPaginationAriaLabels) {\n    this._ariaLabels = value;\n  }\n  get table(): CoreComponent | undefined {\n    return this._table;\n  }\n  @Input() set table(value: any) {\n    this._table = value;\n    this.table$.next(value);\n  }\n\n  table$: ReplaySubject<CoreComponent> = new ReplaySubject(1);\n  private _table: CoreComponent | undefined;\n  private _ariaLabels: GtPaginationAriaLabels = {\n    nav: 'Table pagination',\n    button: 'Go to page ',\n  };\n  private _classes: GtPaginationClasses = {\n    ul: 'pagination',\n    li: 'page-item',\n    button: 'page-link',\n  };\n  private _paginationLength: number = 5;\n  pagination$ = this.table$.pipe(\n    switchMap((core) =>\n      combineLatest([core?.table$.pipe(pluck('info')), core?.currentPage$])\n    ),\n    map(([info, currentPage]) => this.generateList(info.pageTotal, currentPage))\n  );\n\n  generateList(pages: number, currentPosition: number): Array<number> {\n    const middle = Math.floor(this.paginationLength / 2);\n    const length =\n      pages < this.paginationLength ? pages : this.paginationLength;\n\n    return Array.from({ length }, (_, i) => {\n      if (i === 0) {\n        return 1;\n      } else if (pages < this.paginationLength) {\n        return i + 1;\n      } else if (i + 1 === length) {\n        return pages;\n      } else if (currentPosition > middle && currentPosition < pages - middle) {\n        return i + currentPosition - (middle - 1);\n      } else if (\n        currentPosition > middle &&\n        currentPosition < pages - (middle - 1)\n      ) {\n        return i + currentPosition - middle;\n      } else if (\n        currentPosition > middle &&\n        currentPosition === pages - (middle - 1)\n      ) {\n        return i + currentPosition - (middle + 1);\n      } else if (currentPosition > middle && currentPosition === pages - 1) {\n        return i + currentPosition - (middle + 2);\n      } else {\n        return i + 1;\n      }\n    });\n  }\n\n  goto(page: number): void {\n    if (this.table) {\n      this.table.page = page - 1;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PaginationComponent } from './pagination.component';\n\n@NgModule({\n  declarations: [PaginationComponent],\n  imports: [CommonModule],\n  exports: [PaginationComponent],\n})\nexport class GenericTablePaginationModule {}\n","export const HORIZONTAL_TABLE_SNIPPETS = [\n  {\n    name: 'horizontal-table.component.ts',\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { GtDeltaComponent, TableConfig, TableRows } from '@angular-generic-table/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'docs-horizontal',\n  templateUrl: './horizontal-table.component.html',\n  styles: [],\n})\nexport class TransposeComponent implements OnInit {\n  @ViewChild('feelings', { static: true }) feelings:\n    | TemplateRef<any>\n    | undefined;\n  @ViewChild('delta', { static: true }) delta: TemplateRef<GtDeltaComponent> | undefined;\n  @ViewChild('deltaIndex', { static: true }) deltaIndex:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  loading$ = new BehaviorSubject(false);\n  config: TableConfig = {};\n  data: TableRows = [];\n\n  ngOnInit(): void {\n    this.config = {\n      stickyHeaders: {\n        row: true,\n      },\n      mobileLayout: true,\n      rows: {\n        year: {\n          class: 'text-end',\n          header: false\n        },\n        value: {\n          class: 'text-end'\n        },\n        delta: {\n          header: 'Delta %',\n          templateRef: this.delta,\n          class: 'text-end'\n        },\n        deltaIndex: {\n          header: 'Since inception %',\n          templateRef: this.deltaIndex,\n          class: 'text-end'\n        },\n        feeling: {\n          templateRef: this.feelings,\n          class: 'text-end'\n        },\n      },\n    };\n    this.load();\n  }\n  simulateLoad(): void {\n    this.loading$.next(true);\n    // set loading state to false after 2 seconds\n    setTimeout(() => this.loading$.next(false), 2000);\n  }\n  empty(): void {\n    this.data = [];\n  }\n  load(): void {\n    this.data = [\n      {\n        year: '2017',\n        value: 50,\n        feeling: 'neutral'\n      },\n      {\n        year: '2018',\n        value: 75,\n        feeling: 'positive'\n      },\n      {\n        year: '2019',\n        value: 100,\n        feeling: 'thrilled'\n      },\n      {\n        year: '2020',\n        value: 250,\n        feeling: 'thrilled'\n      },\n      {\n        year: '2021',\n        value: 50,\n        feeling: 'negative'\n      }\n    ];\n  }\n}\n`,\n    language: 'typescript',\n  },\n  {\n    name: 'horizontal-table.component.html',\n    code: `<button class=\"btn btn-outline-primary\" (click)=\"simulateLoad()\">Simulate load</button>\n<button class=\"btn btn-outline-danger mx-3\" (click)=\"empty()\">Empty</button>\n<button class=\"btn btn-outline-primary\" (click)=\"load()\">Reset</button>\n<div class=\"overflow-auto\">\n  <angular-generic-table\n    [data]=\"data\"\n    [config]=\"config\"\n    [loading]=\"loading$\"\n  >\n    <div class=\"table-loading gt-skeleton-loader\"></div>\n    <div class=\"table-no-data alert alert-info mt-3\">Table is empty</div>\n  </angular-generic-table>\n</div>\n<ng-template #feelings let-row=\"row\" let-col=\"col\">\n  <div [ngSwitch]=\"row[col.key]\">\n    <ng-container *ngSwitchCase=\"'thrilled'\">😀</ng-container>\n    <ng-container *ngSwitchCase=\"'positive'\">🙂</ng-container>\n    <ng-container *ngSwitchCase=\"'neutral'\">😐</ng-container>\n    <ng-container *ngSwitchCase=\"'negative'\">😭</ng-container>\n  </div>\n</ng-template>\n<ng-template #delta let-data=\"data\" let-index=\"index\">\n  <gt-delta [index]=\"index\" [data]=\"data\"></gt-delta>\n</ng-template>\n<ng-template #deltaIndex let-data=\"data\" let-index=\"index\">\n  <gt-delta [index]=\"index\" [baseIndex]=\"0\" [data]=\"data\"></gt-delta>\n</ng-template>`,\n    language: 'xml',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HorizontalTableComponent } from './horizontal-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [HorizontalTableComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [HorizontalTableComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { Story } from '@storybook/angular/types-6-0';\nimport { HORIZONTAL_TABLE_SNIPPETS } from './horizontal-table.snippets';\nimport {\n  GtDeltaComponent,\n  TableConfig,\n  TableRows,\n} from '@angular-generic-table/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'docs-horizontal-table',\n  template: `\n    <button class=\"btn btn-outline-primary\" (click)=\"simulateLoad()\">\n      Simulate load\n    </button>\n    <button class=\"btn btn-outline-danger mx-3\" (click)=\"empty()\">Empty</button>\n    <button class=\"btn btn-outline-primary\" (click)=\"load()\">Reset</button>\n    <div class=\"overflow-auto\">\n      <angular-generic-table\n        [data]=\"data\"\n        [config]=\"config\"\n        [loading]=\"loading$\"\n      >\n        <div class=\"table-loading gt-skeleton-loader\"></div>\n        <div class=\"table-no-data alert alert-info mt-3\">Table is empty</div>\n      </angular-generic-table>\n    </div>\n    <ng-template #feelings let-row=\"row\" let-col=\"col\">\n      <div [ngSwitch]=\"row[col.key]\">\n        <ng-container *ngSwitchCase=\"'thrilled'\">😀</ng-container>\n        <ng-container *ngSwitchCase=\"'positive'\">🙂</ng-container>\n        <ng-container *ngSwitchCase=\"'neutral'\">😐</ng-container>\n        <ng-container *ngSwitchCase=\"'negative'\">😭</ng-container>\n      </div>\n    </ng-template>\n    <ng-template #delta let-data=\"data\" let-index=\"index\">\n      <gt-delta [index]=\"index\" [data]=\"data\"></gt-delta>\n    </ng-template>\n    <ng-template #deltaIndex let-data=\"data\" let-index=\"index\">\n      <gt-delta [index]=\"index\" [baseIndex]=\"0\" [data]=\"data\"></gt-delta>\n    </ng-template>\n    <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n  `,\n  styles: [],\n})\nexport class HorizontalTableComponent implements OnInit {\n  @ViewChild('feelings', { static: true }) feelings:\n    | TemplateRef<any>\n    | undefined;\n  @ViewChild('delta', { static: true }) delta:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  @ViewChild('deltaIndex', { static: true }) deltaIndex:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  loading$ = new BehaviorSubject(false);\n  config: TableConfig = {};\n  data: TableRows = [];\n\n  ngOnInit(): void {\n    this.config = {\n      stickyHeaders: {\n        row: true,\n      },\n      mobileLayout: true,\n      rows: {\n        year: {\n          class: 'text-end',\n          header: false,\n        },\n        value: {\n          class: 'text-end',\n        },\n        delta: {\n          header: 'Delta %',\n          templateRef: this.delta,\n          class: 'text-end',\n        },\n        deltaIndex: {\n          header: 'Since inception %',\n          templateRef: this.deltaIndex,\n          class: 'text-end',\n        },\n        feeling: {\n          templateRef: this.feelings,\n          class: 'text-end',\n        },\n      },\n    };\n    this.load();\n  }\n  simulateLoad(): void {\n    this.loading$.next(true);\n    // set loading state to false after 2 seconds\n    setTimeout(() => this.loading$.next(false), 2000);\n  }\n  empty(): void {\n    this.data = [];\n  }\n  load(): void {\n    this.data = [\n      {\n        year: '2017',\n        value: 50,\n        feeling: 'neutral',\n      },\n      {\n        year: '2018',\n        value: 75,\n        feeling: 'positive',\n      },\n      {\n        year: '2019',\n        value: 100,\n        feeling: 'thrilled',\n      },\n      {\n        year: '2020',\n        value: 250,\n        feeling: 'thrilled',\n      },\n      {\n        year: '2021',\n        value: 50,\n        feeling: 'negative',\n      },\n    ];\n  }\n\n  SNIPPETS = HORIZONTAL_TABLE_SNIPPETS;\n}\n\nexport const Horizontal: Story<HorizontalTableComponent> = (\n  args: HorizontalTableComponent\n) => ({\n  props: args,\n  component: HorizontalTableComponent,\n});\n","export const NESTED_SNIPPETS = [\n  {\n    name: 'nested-data.component.ts',\n    code: `import {Component, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {TableConfig, TableRows} from \"@angular-generic-table/core\";\n\n@Component({\n  selector: 'nested-data',\n  template: \\`\n    <div class=\"row gy-3\">\n      <div class=\"col col-sm-auto\">\n        <button class=\"btn btn-outline-primary mb-3\" (click)=\"loadData()\">\n          Load other data\n        </button>\n      </div>\n      <div class=\"col col-sm-auto\">\n        <button class=\"btn btn-outline-primary mb-3\" (click)=\"resetData()\">\n          Reset\n        </button>\n      </div>\n    </div>\n    <angular-generic-table [data]=\"data\" [config]=\"config\"></angular-generic-table>\n    <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n    <ng-template #gender let-row=\"row\" let-col=\"col\">\n      <div [ngSwitch]=\"row[col.key]\">\n        <ng-container *ngSwitchCase=\"'male'\">♂️</ng-container>\n        <ng-container *ngSwitchCase=\"'female'\">♀️</ng-container>\n      </div>\n    </ng-template>\n  \\`,\n  styles: [],\n})\nexport class NestedDataComponent implements OnInit {\n  @ViewChild('gender', { static: true }) gender: TemplateRef<any> | undefined;\n\n  config: TableConfig = {};\n  data: TableRows = [];\n  ngOnInit(): void {\n    this.resetData();\n    this.config = {\n      columns: {\n        firstName: {\n          sortable: true,\n          mapTo: { path: 'name.first' },\n        },\n        lastName: {\n          mapTo: { path: 'name.last' },\n        },\n        gender: {\n          mapTo: { path: 'data.details.gender' },\n          templateRef: this.gender,\n        },\n        favoriteFood: {\n          mapTo: { path: 'data.details.favoriteFood', missingValue: 'n/a' },\n        },\n        missing: {\n          mapTo: { path: 'data.missingKey.noMatch', missingValue: 'n/a' },\n        },\n      },\n    };\n  }\n\n  resetData() {\n    this.data = [\n      {\n        name: {\n          first: 'Peter',\n          last: 'Parker',\n        },\n        data: {\n          details: {\n            gender: 'male',\n            favoriteFood: 'Pasta',\n          },\n        },\n      },\n      {\n        name: {\n          first: 'Mary Jane',\n          last: 'Watson',\n        },\n        data: {\n          details: {\n            gender: 'female',\n            favoriteFood: 'Pizza',\n          },\n        },\n      },\n    ];\n  }\n\n  loadData(): void {\n    this.data = [\n      {\n        name: {\n          first: 'John',\n          last: 'Doe',\n        },\n        data: {\n          details: {\n            gender: 'male',\n            favoriteFood: 'Pasta',\n          },\n        },\n      },\n      {\n        name: {\n          first: 'Jane',\n          last: 'Doe',\n        },\n        data: {\n          details: {\n            gender: 'female',\n            favoriteFood: 'Pizza',\n          },\n        },\n      },\n      {\n        name: {\n          first: 'Foo',\n          last: 'Bar',\n        },\n        data: {},\n      },\n    ];\n  }\n}`,\n    language: 'typescript',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { NestedDataComponent } from './nested-data.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [NestedDataComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [NestedDataComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import { NESTED_SNIPPETS } from './nested.snippets';\nimport { Story } from '@storybook/angular/types-6-0';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { TableConfig, TableRows } from '@angular-generic-table/core';\n\n@Component({\n  selector: 'nested-data',\n  template: `\n    <div class=\"row gy-3\">\n      <div class=\"col col-sm-auto\">\n        <button class=\"btn btn-outline-primary mb-3\" (click)=\"loadData()\">\n          Load other data\n        </button>\n      </div>\n      <div class=\"col col-sm-auto\">\n        <button class=\"btn btn-outline-primary mb-3\" (click)=\"resetData()\">\n          Reset\n        </button>\n      </div>\n    </div>\n    <div class=\"overflow-auto\">\n      <angular-generic-table\n        [data]=\"data\"\n        [config]=\"config\"\n      ></angular-generic-table>\n    </div>\n    <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n    <ng-template #gender let-row=\"row\" let-col=\"col\">\n      <div [ngSwitch]=\"row[col.key]\">\n        <ng-container *ngSwitchCase=\"'male'\">♂️</ng-container>\n        <ng-container *ngSwitchCase=\"'female'\">♀️</ng-container>\n      </div>\n    </ng-template>\n  `,\n  styles: [],\n})\nexport class NestedDataComponent implements OnInit {\n  @ViewChild('gender', { static: true }) gender: TemplateRef<any> | undefined;\n\n  config: TableConfig = {};\n  data: TableRows = [];\n  ngOnInit(): void {\n    this.resetData();\n    this.config = {\n      columns: {\n        firstName: {\n          sortable: true,\n          mapTo: { path: 'name.first' },\n        },\n        lastName: {\n          mapTo: { path: 'name.last' },\n        },\n        gender: {\n          mapTo: { path: 'data.details.gender' },\n          templateRef: this.gender,\n        },\n        favoriteFood: {\n          mapTo: { path: 'data.details.favoriteFood', missingValue: 'n/a' },\n        },\n        missing: {\n          mapTo: { path: 'data.missingKey.noMatch', missingValue: 'n/a' },\n        },\n      },\n    };\n  }\n\n  resetData() {\n    this.data = [\n      {\n        name: {\n          first: 'Peter',\n          last: 'Parker',\n        },\n        data: {\n          details: {\n            gender: 'male',\n            favoriteFood: 'Pasta',\n          },\n        },\n      },\n      {\n        name: {\n          first: 'Mary Jane',\n          last: 'Watson',\n        },\n        data: {\n          details: {\n            gender: 'female',\n            favoriteFood: 'Pizza',\n          },\n        },\n      },\n    ];\n  }\n\n  loadData(): void {\n    this.data = [\n      {\n        name: {\n          first: 'John',\n          last: 'Doe',\n        },\n        data: {\n          details: {\n            gender: 'male',\n            favoriteFood: 'Pasta',\n          },\n        },\n      },\n      {\n        name: {\n          first: 'Jane',\n          last: 'Doe',\n        },\n        data: {\n          details: {\n            gender: 'female',\n            favoriteFood: 'Pizza',\n          },\n        },\n      },\n      {\n        name: {\n          first: 'Foo',\n          last: 'Bar',\n        },\n        data: {},\n      },\n    ];\n  }\n\n  SNIPPETS = NESTED_SNIPPETS;\n}\n\nexport const Nested: Story<NestedDataComponent> = (\n  args: NestedDataComponent\n) => ({\n  props: args,\n  component: NestedDataComponent,\n});\n","export const TRANSPOSE_SNIPPETS = [\n  {\n    name: 'transpose.component.ts',\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { TableConfig, TableRows, GtDeltaComponent } from '@angular-generic-table/core';\nimport { FormBuilder } from '@angular/forms';\nimport { withLatestFrom } from 'rxjs/operators';\n\n@Component({\n  selector: 'docs-transpose',\n  templateUrl: './transpose.component.html',\n  styles: []\n})\nexport class TransposeComponent implements OnInit {\n  @ViewChild('delta', { static: true }) delta:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  @ViewChild('deltaIndex', { static: true }) deltaIndex:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  @ViewChild('combined', { static: true }) combined:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  loading$ = new BehaviorSubject(false);\n  reactiveForm = this.fb.group({\n    length: [10],\n    search: [''],\n  });\n  search$ = this.reactiveForm.get('search')?.valueChanges as Observable<string>;\n  tableConfig$: BehaviorSubject<TableConfig> = new BehaviorSubject<TableConfig>(\n    {}\n  );\n  data: TableRows = [];\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.transpose();\n    this.load();\n    this.reactiveForm\n      .get('length')\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\n      .subscribe(([length, config]) => {\n        length = +length;\n        this.tableConfig$.next({\n          ...config,\n          pagination: { ...config.pagination, length },\n        });\n      });\n  }\n\n  simulateLoad(): void {\n    this.loading$.next(true);\n    // set loading state to false after 2 seconds\n    setTimeout(() => this.loading$.next(false), 2000);\n  }\n  empty(): void {\n    this.data = [];\n  }\n  load(): void {\n    this.data = [\n      {\n        year: '2010',\n        value: 15,\n      },\n      {\n        year: '2011',\n        value: 30,\n      },\n      {\n        year: '2012',\n        value: 25,\n      },\n      {\n        year: '2013',\n        value: 0,\n      },\n      {\n        year: '2014',\n        value: 40,\n      },\n      {\n        year: '2015',\n        value: 60,\n      },\n      {\n        year: '2016',\n        value: -5,\n      },\n      {\n        year: '2018',\n        value: 75,\n      },\n      {\n        year: '2019',\n        value: 100,\n      },\n      {\n        year: '2020',\n        value: 250,\n      },\n      {\n        year: '2021',\n        value: 50,\n      },\n      {\n        year: '2022',\n        value: 60,\n      },\n    ];\n  }\n  transpose(): void {\n    if (this.tableConfig$.value.columns) {\n      this.tableConfig$.next({\n        stickyHeaders: {\n          row: true,\n          column: true,\n        },\n        rows: {\n          year: {\n            sortable: true,\n            header: false,\n            class: 'text-end',\n          },\n          value: {\n            class: 'text-end',\n          },\n          delta: {\n            header: 'Delta %',\n            templateRef: this.delta,\n            class: 'text-end',\n          },\n          deltaIndex: {\n            header: 'Since inception %',\n            templateRef: this.deltaIndex,\n            class: 'text-end',\n          },\n          combined: {\n            header: 'Value with change',\n            templateRef: this.combined,\n            class: 'text-end text-nowrap',\n          },\n        },\n      });\n    } else {\n      this.tableConfig$.next({\n        stickyHeaders: {\n          row: true,\n          column: true,\n        },\n        columns: {\n          year: {\n            sortable: true,\n          },\n          value: {\n            class: 'text-end',\n          },\n          delta: {\n            header: 'Delta %',\n            templateRef: this.delta,\n            class: 'text-end',\n          },\n          deltaIndex: {\n            header: 'Since inception %',\n            templateRef: this.deltaIndex,\n            class: 'text-end',\n          },\n          combined: {\n            header: 'Value with change',\n            templateRef: this.combined,\n            class: 'text-end text-nowrap',\n          },\n        },\n        pagination: { length: this.reactiveForm.get('length')?.value },\n      });\n    }\n  }\n}\n`,\n    language: 'typescript',\n  },\n  {\n    name: 'horizontal-table.component.html',\n    code: `<form [formGroup]=\"reactiveForm\">\n  <div class=\"row gy-3 gx-3 align-items-end mb-3\">\n    <div class=\"form-group col-6 col-sm-auto\">\n      <label for=\"length_input\">Number of rows</label>\n      <input\n        id=\"length_input\"\n        formControlName=\"length\"\n        type=\"number\"\n        class=\"form-control\"\n      />\n    </div>\n    <div class=\"form-group col-6 col-sm-auto\">\n      <label for=\"search_input\">Search</label>\n      <input\n        id=\"search_input\"\n        formControlName=\"search\"\n        type=\"text\"\n        class=\"form-control\"\n      />\n    </div>\n    <div class=\"col-auto\">\n      <button\n        class=\"btn btn-outline-primary w-100\"\n        (click)=\"simulateLoad()\"\n      >\n        Simulate load\n      </button>\n    </div>\n    <div class=\"col col-sm-auto\">\n      <button class=\"btn btn-outline-danger w-100\" (click)=\"empty()\">\n        Empty\n      </button>\n    </div>\n    <div class=\"col col-sm-auto\">\n      <button class=\"btn btn-outline-primary w-100\" (click)=\"load()\">\n        Reset\n      </button>\n    </div>\n    <div class=\"col col-sm-auto\">\n      <button class=\"btn btn-outline-primary w-100\" (click)=\"transpose()\">\n        Transpose\n      </button>\n    </div>\n  </div>\n  <div class=\"overflow-auto\">\n    <angular-generic-table\n      #table\n      [data]=\"data\"\n      [config]=\"tableConfig$\"\n      [loading]=\"loading$\"\n      [search]=\"search$\"\n    >\n      <div class=\"table-loading gt-skeleton-loader\"></div>\n      <div class=\"table-no-data alert alert-info mt-3\">Table is empty</div>\n    </angular-generic-table>\n  </div>\n  <angular-generic-table-pagination [table]=\"table\">\n  </angular-generic-table-pagination>\n  <ng-template #delta let-index=\"index\" let-data=\"data\">\n    <gt-delta [index]=\"index\" [data]=\"data\"></gt-delta>\n  </ng-template>\n  <ng-template #deltaIndex let-index=\"index\" let-data=\"data\">\n    <gt-delta [index]=\"index\" [data]=\"data\" [baseIndex]=\"0\"></gt-delta>\n  </ng-template>\n  <ng-template\n    #combined\n    let-index=\"index\"\n    let-data=\"data\"\n    let-row=\"row\"\n    let-col=\"col\"\n  >\n    {{ row.value }}\n    <ng-container *ngIf=\"index > 0\">\n      (<gt-delta [index]=\"index\" [data]=\"data\"></gt-delta>)\n    </ng-container>\n  </ng-template>\n</form>`,\n    language: 'xml',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HorizontalTableComponent } from './horizontal-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [HorizontalTableComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [HorizontalTableComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport {\n  TableConfig,\n  TableRows,\n  GtDeltaComponent,\n} from '@angular-generic-table/core';\nimport { UntypedFormBuilder } from '@angular/forms';\nimport { withLatestFrom } from 'rxjs/operators';\nimport { Story } from '@storybook/angular/types-6-0';\nimport { TRANSPOSE_SNIPPETS } from './transpose.snippets';\n\n@Component({\n  selector: 'docs-transpose',\n  template: `\n    <form [formGroup]=\"reactiveForm\">\n      <div class=\"row gy-3 gx-3 align-items-end mb-3\">\n        <div class=\"form-group col-6 col-sm-auto\">\n          <label for=\"length_input\">Number of rows</label>\n          <input\n            id=\"length_input\"\n            formControlName=\"length\"\n            type=\"number\"\n            class=\"form-control\"\n          />\n        </div>\n        <div class=\"form-group col-6 col-sm-auto\">\n          <label for=\"search_input\">Search</label>\n          <input\n            id=\"search_input\"\n            formControlName=\"search\"\n            type=\"text\"\n            class=\"form-control\"\n          />\n        </div>\n        <div class=\"col-auto\">\n          <button\n            class=\"btn btn-outline-primary w-100\"\n            (click)=\"simulateLoad()\"\n          >\n            Simulate load\n          </button>\n        </div>\n        <div class=\"col col-sm-auto\">\n          <button class=\"btn btn-outline-danger w-100\" (click)=\"empty()\">\n            Empty\n          </button>\n        </div>\n        <div class=\"col col-sm-auto\">\n          <button class=\"btn btn-outline-primary w-100\" (click)=\"load()\">\n            Reset\n          </button>\n        </div>\n        <div class=\"col col-sm-auto\">\n          <button class=\"btn btn-outline-primary w-100\" (click)=\"transpose()\">\n            Transpose\n          </button>\n        </div>\n      </div>\n      <div class=\"overflow-auto\">\n        <angular-generic-table\n          #table\n          [data]=\"data\"\n          [config]=\"tableConfig$\"\n          [loading]=\"loading$\"\n          [search]=\"search$\"\n        >\n          <div class=\"table-loading gt-skeleton-loader\"></div>\n          <div class=\"table-no-data alert alert-info mt-3\">Table is empty</div>\n        </angular-generic-table>\n      </div>\n      <angular-generic-table-pagination [table]=\"table\">\n      </angular-generic-table-pagination>\n      <ng-template #delta let-index=\"index\" let-data=\"data\">\n        <gt-delta [index]=\"index\" [data]=\"data\"></gt-delta>\n      </ng-template>\n      <ng-template #deltaIndex let-index=\"index\" let-data=\"data\">\n        <gt-delta [index]=\"index\" [data]=\"data\" [baseIndex]=\"0\"></gt-delta>\n      </ng-template>\n      <ng-template\n        #combined\n        let-index=\"index\"\n        let-data=\"data\"\n        let-row=\"row\"\n        let-col=\"col\"\n      >\n        {{ row.value }}\n        <ng-container *ngIf=\"index > 0\">\n          (<gt-delta [index]=\"index\" [data]=\"data\"></gt-delta>)\n        </ng-container>\n      </ng-template>\n      <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n    </form>\n  `,\n  styles: [],\n})\nexport class TransposeComponent implements OnInit {\n  @ViewChild('delta', { static: true }) delta:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  @ViewChild('deltaIndex', { static: true }) deltaIndex:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  @ViewChild('combined', { static: true }) combined:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  loading$ = new BehaviorSubject(false);\n  reactiveForm = this.fb.group({\n    length: [10],\n    search: [''],\n  });\n  search$ = this.reactiveForm.get('search')?.valueChanges as Observable<string>;\n  tableConfig$: BehaviorSubject<TableConfig> = new BehaviorSubject<TableConfig>(\n    {}\n  );\n  data: TableRows = [];\n\n  constructor(private fb: UntypedFormBuilder) {}\n\n  ngOnInit(): void {\n    this.transpose();\n    this.load();\n    this.reactiveForm\n      .get('length')\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\n      .subscribe(([length, config]) => {\n        length = +length;\n        this.tableConfig$.next({\n          ...config,\n          pagination: { ...config.pagination, length },\n        });\n      });\n  }\n\n  simulateLoad(): void {\n    this.loading$.next(true);\n    // set loading state to false after 2 seconds\n    setTimeout(() => this.loading$.next(false), 2000);\n  }\n  empty(): void {\n    this.data = [];\n  }\n  load(): void {\n    this.data = [\n      {\n        year: '2010',\n        value: 15,\n      },\n      {\n        year: '2011',\n        value: 30,\n      },\n      {\n        year: '2012',\n        value: 25,\n      },\n      {\n        year: '2013',\n        value: 0,\n      },\n      {\n        year: '2014',\n        value: 40,\n      },\n      {\n        year: '2015',\n        value: 60,\n      },\n      {\n        year: '2016',\n        value: -5,\n      },\n      {\n        year: '2018',\n        value: 75,\n      },\n      {\n        year: '2019',\n        value: 100,\n      },\n      {\n        year: '2020',\n        value: 250,\n      },\n      {\n        year: '2021',\n        value: 50,\n      },\n      {\n        year: '2022',\n        value: 60,\n      },\n    ];\n  }\n  transpose(): void {\n    if (this.tableConfig$.value.columns) {\n      this.tableConfig$.next({\n        stickyHeaders: {\n          row: true,\n          column: true,\n        },\n        rows: {\n          year: {\n            sortable: true,\n            header: false,\n            class: 'text-end',\n          },\n          value: {\n            class: 'text-end',\n          },\n          delta: {\n            header: 'Delta %',\n            templateRef: this.delta,\n            class: 'text-end',\n          },\n          deltaIndex: {\n            header: 'Since inception %',\n            templateRef: this.deltaIndex,\n            class: 'text-end',\n          },\n          combined: {\n            header: 'Value with change',\n            templateRef: this.combined,\n            class: 'text-end text-nowrap',\n          },\n        },\n      });\n    } else {\n      this.tableConfig$.next({\n        stickyHeaders: {\n          row: true,\n          column: true,\n        },\n        columns: {\n          year: {\n            sortable: true,\n          },\n          value: {\n            class: 'text-end',\n          },\n          delta: {\n            header: 'Delta %',\n            templateRef: this.delta,\n            class: 'text-end',\n          },\n          deltaIndex: {\n            header: 'Since inception %',\n            templateRef: this.deltaIndex,\n            class: 'text-end',\n          },\n          combined: {\n            header: 'Value with change',\n            templateRef: this.combined,\n            class: 'text-end text-nowrap',\n          },\n        },\n        pagination: { length: this.reactiveForm.get('length')?.value },\n      });\n    }\n  }\n  SNIPPETS = TRANSPOSE_SNIPPETS;\n}\n\nexport const Transpose: Story<TransposeComponent> = (\n  args: TransposeComponent\n) => ({\n  props: args,\n  component: TransposeComponent,\n});\n","export const ROW_HOVER_CLICK_SNIPPETS = [\n  {\n    name: 'row-hover-click.component.ts',\n    code: `import { Component } from '@angular/core';\nimport { GtRowClickEvent, GtRowHoverEvent } from '@angular-generic-table/core';\n\n\n@Component({\n  selector: 'row-hover-click-table',\n  template: '<div class=\"overflow-auto\">\n      <button class=\"btn btn-secondary me-3\" (click)=\"tableRef.hoverRow(1)\">\n        Set hover state to second row\n      </button>\n      <button class=\"btn btn-secondary\" (click)=\"tableRef.hoverRow(null)\">\n        Remove hover state\n      </button>\n      <angular-generic-table\n        [data]=\"data\"\n        [config]=\"config\"\n        (rowClick)=\"onRowClick($event)\"\n        (rowHover)=\"onRowHover($event)\"\n        #tableRef\n      ></angular-generic-table>\n    </div>',\n  styles: [\n    \\`\n      :host ::ng-deep .gt-hover {\n        background-color: var(--bs-highlight-bg);\n      }\n    \\`,\n  ],\n})\nexport class RowHoverClickComponent {\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config = {\n    columns: {\n      firstName: {},\n      lastName: {},\n      gender: {},\n      favoriteFood: {},\n    },\n    rowClick: true,\n    rowHover: true,\n  };\n\n  onRowClick(event: GtRowClickEvent) {\n    console.log('row clicked', event);\n  }\n  onRowHover(event: GtRowHoverEvent) {\n    console.log('row hovered', event);\n  }\n`,\n    language: 'typescript',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { RowHoverClickTableComponent } from './events-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [RowHoverClickTableComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [RowHoverClickTableComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import { Component } from '@angular/core';\nimport { Story } from '@storybook/angular/types-6-0';\nimport { ROW_HOVER_CLICK_SNIPPETS } from './row-hower-click.snippets';\nimport { GtRowClickEvent, GtRowHoverEvent } from '@angular-generic-table/core';\n\n@Component({\n  selector: 'docs-row-hover-click',\n  template: `\n    <div class=\"overflow-auto\">\n      <button class=\"btn btn-secondary me-3\" (click)=\"tableRef.hoverRow(1)\">\n        Set hover state to second row\n      </button>\n      <button class=\"btn btn-secondary\" (click)=\"tableRef.hoverRow(null)\">\n        Remove hover state\n      </button>\n      <angular-generic-table\n        [data]=\"data\"\n        [config]=\"config\"\n        (rowClick)=\"onRowClick($event)\"\n        (rowHover)=\"onRowHover($event)\"\n        #tableRef\n      ></angular-generic-table>\n    </div>\n    <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n  `,\n  styles: [\n    `\n      :host ::ng-deep .gt-hover {\n        background-color: var(--bs-highlight-bg);\n      }\n    `,\n  ],\n})\nexport class RowHoverClickComponent {\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config = {\n    columns: {\n      firstName: {},\n      lastName: {},\n      gender: {},\n      favoriteFood: {},\n    },\n    rowClick: true,\n    rowHover: true,\n  };\n\n  onRowClick(event: GtRowClickEvent) {\n    console.log('row clicked', event);\n  }\n  onRowHover(event: GtRowHoverEvent) {\n    console.log('row hovered', event);\n  }\n\n  SNIPPETS = ROW_HOVER_CLICK_SNIPPETS;\n}\n\nexport const RowHoverClick: Story<RowHoverClickComponent> = (\n  args: RowHoverClickComponent\n) => ({\n  props: args,\n  component: RowHoverClickComponent,\n});\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Story } from '@storybook/addon-docs';\nimport {moduleMetadata} from \"@storybook/angular\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {CommonModule} from \"@angular/common\";\nimport {GenericTableCoreModule} from \"../../../core/src/lib/core.module\";\nimport {Simple, SimpleComponent} from \"../app/examples/simple/simple.component\";\nimport {Mobile, MobileLayoutComponent} from \"../app/examples/mobile-layout/mobile-layout.component\";\nimport {Advanced, AdvancedComponent} from \"../app/examples/advanced/advanced.component\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {TabsComponent} from \"../app/components/tabs/tabs.component\";\nimport {CustomTemplates, CustomTemplatesComponent} from \"../app/examples/custom-templates/custom-templates.component\";\nimport {Pagination, PaginationComponent} from \"../app/examples/pagination/pagination.component\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {GenericTablePaginationModule} from \"../../../core/src/lib/pagination/pagination.module\";\nimport {Horizontal, HorizontalTableComponent} from \"../app/examples/horizontal-table/horizontal-table.component\";\nimport {Nested, NestedDataComponent} from \"../app/examples/nested-data/nested-data.component\";\nimport {Transpose} from '../app/examples/transpose/transpose.component'; import {\n  RowHoverClick,\n  RowHoverClickComponent\n} from '../app/examples/row-hover-click/row-hover-click.component';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst Preview = makeShortcode(\"Preview\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Meta title=\"Examples\" decorators={[moduleMetadata({\n      declarations: [CustomTemplatesComponent, SimpleComponent, AdvancedComponent, PaginationComponent, HorizontalTableComponent, TabsComponent, MobileLayoutComponent, NestedDataComponent, RowHoverClickComponent],\n      imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n    })]} mdxType=\"Meta\" />\n    <h1>{`Examples`}</h1>\n    <h2>{`Basic table`}</h2>\n    <p>{`Pass `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`config`}</inlineCode>{` to table to generate a table. The example below uses the minimal configuration needed to generate a table with static data.`}</p>\n    <Story name=\"Basic table\" args={{\n      data: [{\n        firstName: 'Mark',\n        lastName: 'Parker',\n        gender: 'male',\n        favoriteFood: 'Pasta'\n      }, {\n        firstName: 'Mary Jane',\n        lastName: 'Watson',\n        gender: 'female',\n        favoriteFood: 'Pizza'\n      }]\n    }} mdxType=\"Story\">\n  {Simple.bind({})}\n    </Story>\n    <h2>{`Nested data table`}</h2>\n    <p>{`Generic table can generate tables based on nested JSON structures, just use `}<inlineCode parentName=\"p\">{`mapTo`}</inlineCode>{` option and pass string path to object value as `}<inlineCode parentName=\"p\">{`path`}</inlineCode>{` and optionally a `}<inlineCode parentName=\"p\">{`missingValue`}</inlineCode>{` value which will be used if key is undefined.`}</p>\n    <Story name=\"Nested data\" args={{\n      data: [{\n        name: {\n          first: 'Peter',\n          last: 'Parker'\n        },\n        data: {\n          details: {\n            gender: 'male',\n            favoriteFood: 'Pasta'\n          }\n        }\n      }, {\n        name: {\n          first: 'Mary Jane',\n          last: 'Watson'\n        },\n        data: {\n          details: {\n            gender: 'female',\n            favoriteFood: 'Pizza'\n          }\n        }\n      }]\n    }} mdxType=\"Story\">\n  {Nested.bind({})}\n    </Story>\n    <h2>{`Custom templates`}</h2>\n    <p>{`Define custom templates and assign them to different columns using the `}<inlineCode parentName=\"p\">{`templateRef`}</inlineCode>{` property when declaring `}<inlineCode parentName=\"p\">{`columns`}</inlineCode>{` in `}<inlineCode parentName=\"p\">{`config`}</inlineCode>{`.`}</p>\n    <Story name=\"Custom templates\" args={{\n      data: [{\n        firstName: 'Peter',\n        lastName: 'Parker',\n        gender: 'male',\n        favoriteColor: '#26BFAF',\n        favoriteFood: 'Pasta'\n      }, {\n        firstName: 'Mary Jane',\n        lastName: 'Watson',\n        gender: 'female',\n        favoriteColor: '#0f0',\n        favoriteFood: 'Pizza'\n      }]\n    }} mdxType=\"Story\">\n  {CustomTemplates.bind({})}\n    </Story>\n    <h2>{`Advanced example`}</h2>\n    <p>{`Example showcasing:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Row sort`}</li>\n      <li parentName=\"ul\">{`Loading state`}</li>\n      <li parentName=\"ul\">{`Empty state`}</li>\n      <li parentName=\"ul\">{`Global search`}</li>\n      <li parentName=\"ul\">{`Mobile table layout with sticky header (resize viewport to < 576px to view example)`}</li>\n      <li parentName=\"ul\">{`Custom pagination`}</li>\n      <li parentName=\"ul\">{`Add/remove data`}</li>\n      <li parentName=\"ul\">{`Custom templates`}</li>\n    </ul>\n    <Story name=\"Advanced\" args={{\n      data: [{\n        firstName: 'Peter',\n        lastName: 'Parker',\n        gender: 'male',\n        favoriteColor: '#26BFAF',\n        favoriteFood: 'Pasta'\n      }, {\n        firstName: 'Mary Jane',\n        lastName: 'Watson',\n        gender: 'female',\n        favoriteColor: '#0f0',\n        favoriteFood: 'Pizza'\n      }]\n    }} mdxType=\"Story\">\n  {Advanced.bind({})}\n    </Story>\n    <h2>{`Pagination example`}</h2>\n    <p>{`What would a table be without pagination? To simplify things for you, Angular Generic Table provides a basic pagination component. Just pass a reference to the table like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-markup\"\n      }}>{`<angular-generic-table #tableRef\" .../>\n<angular-generic-table-pagination [table]=\"tableRef\"/>\n`}</code></pre>\n    <Preview mdxSource=\"%0A%3Cdiv%20class=%22overflow-auto%22%3E%0A%20%20%3Ctable%3E%0A%20%20%20%20%3Cthead%3E%0A%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%3Cth%3E@Input%3C/th%3E%0A%20%20%20%20%20%20%3Cth%3EDescription%3C/th%3E%0A%20%20%20%20%20%20%3Cth%3EType%3C/th%3E%0A%20%20%20%20%20%20%3Cth%3EDefault%3C/th%3E%0A%20%20%20%20%3C/tr%3E%0A%20%20%20%20%3C/thead%3E%0A%20%20%20%20%3Ctbody%3E%0A%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3Etable%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3ETable%20connected%20to%20the%20pagination%20control.%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3ETable%20component%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3En/a%3C/code%3E%3C/td%3E%0A%20%20%20%20%3C/tr%3E%0A%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3EpaginationLength%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3ENumber%20of%20pagination%20buttons%20to%20show.%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3Enumber%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3E5%3C/code%3E%3C/td%3E%0A%20%20%20%20%3C/tr%3E%0A%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3Eclasses%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3EClasses%20for%20pagination%20elements.%20Pass%20an%20object%20with%20key%20values,%20where%20key%20is%20element%20and%20value%20is%20classes%20to%20be%20applied.%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3EGtPaginationClasses%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3E&#123;%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20&nbsp;nav:%20null,%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20&nbsp;ul:%20'pagination',%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20&nbsp;li:%20'page-item',%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20&nbsp;button:%20'page-link'%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20&#125;%0A%20%20%20%20%20%20%3C/code%3E%3C/td%3E%0A%20%20%20%20%3C/tr%3E%0A%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3EariaLabels%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3EAria%20labels%20for%20pagination%20elements.%20Pass%20an%20object%20with%20key%20values,%20where%20key%20is%20element%20and%20value%20is%20aria%20label%20to%20use.%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3EGtPaginationAriaLabels%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3E%0A%20%20%20%20%20%20%20%20&#123;%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20&nbsp;nav:%20'Table%20navigation',%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20&nbsp;button:%20'Go%20to%20page%20'%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20&#125;%0A%20%20%20%20%20%20%3C/code%3E%3C/td%3E%0A%20%20%20%20%3C/tr%3E%0A%20%20%20%20%3C/tbody%3E%0A%20%20%3C/table%3E%0A%20%20%3C/div%3E%0A\" mdxType=\"Preview\">\n  <div class=\"overflow-auto\">\n  <table>\n    <thead>\n    <tr>\n      <th>@Input</th>\n      <th>Description</th>\n      <th>Type</th>\n      <th>Default</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr>\n      <td><code>table</code></td>\n      <td>Table connected to the pagination control.</td>\n      <td>Table component</td>\n      <td><code>n/a</code></td>\n    </tr>\n    <tr>\n      <td><code>paginationLength</code></td>\n      <td>Number of pagination buttons to show.</td>\n      <td><code>number</code></td>\n      <td><code>5</code></td>\n    </tr>\n    <tr>\n      <td><code>classes</code></td>\n      <td>Classes for pagination elements. Pass an object with key values, where key is element and value is classes to be applied.</td>\n      <td><code>GtPaginationClasses</code></td>\n      <td><code>&#123;<br />\n        &nbsp;nav: null,<br />\n        &nbsp;ul: 'pagination',<br />\n        &nbsp;li: 'page-item',<br />\n        &nbsp;button: 'page-link'<br />\n        &#125;\n      </code></td>\n    </tr>\n    <tr>\n      <td><code>ariaLabels</code></td>\n      <td>Aria labels for pagination elements. Pass an object with key values, where key is element and value is aria label to use.</td>\n      <td><code>GtPaginationAriaLabels</code></td>\n      <td><code>\n        &#123;<br />\n        &nbsp;nav: 'Table navigation',<br />\n        &nbsp;button: 'Go to page '<br />\n        &#125;\n      </code></td>\n    </tr>\n    </tbody>\n  </table>\n  </div>\n    </Preview>\n    <h3>{`Import module`}</h3>\n    <p>{`In order to use the pagination component provided by angular generic table, you need to import it.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { GenericTableCoreModule, GenericTablePaginationModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [...],\n  imports: [\n    ...\n    GenericTableCoreModule,\n    GenericTablePaginationModule\n  ],\n  exports: [\n    GenericTableCoreModule,\n    GenericTablePaginationModule\n  ]\n})\nexport class SharedModule {}\n`}</code></pre>\n    <Story name=\"Pagination\" mdxType=\"Story\">\n  {Pagination.bind({})}\n    </Story>\n    <h2>{`Row click and hover`}</h2>\n    <p>{`Set `}<inlineCode parentName=\"p\">{`rowClick`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`rowHover`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` in `}<inlineCode parentName=\"p\">{`config`}</inlineCode>{` to enable row click and hover events which can be used to trigger actions when rows are clicked or hovered. These events are emitted and declared using `}<inlineCode parentName=\"p\">{`@Output rowClick`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`@Output() rowHover`}</inlineCode>{`. It's also possible to set hover state on a row using `}<inlineCode parentName=\"p\">{`rowHover`}</inlineCode>{` method on the table component (currently it takes a row index as argument), pass null to remove hover state. The later might come in handy when you want to highlight something in the table based on an external source like a chart etc. Note that you should use css if you're only interested in styling the row on row hover, no need to listen to events or set hover state to do that.`}</p>\n    <Story name=\"Row click/hover\" mdxType=\"Story\">\n  {RowHoverClick.bind({})}\n    </Story>\n    <h2>{`Horizontal example`}</h2>\n    <p>{`Declare `}<inlineCode parentName=\"p\">{`rows`}</inlineCode>{` instead of `}<inlineCode parentName=\"p\">{`columns`}</inlineCode>{` to get a horizontal table where records are added as columns instead of rows. The example below freezes the first column by setting `}<inlineCode parentName=\"p\">{`stickyHeaders.row`}</inlineCode>{` to true, it also uses `}<inlineCode parentName=\"p\">{`<gt-delta>`}</inlineCode>{` which is a helper component to display the delta between two values (by default it compares against previous row or column).`}</p>\n    <Story name=\"Horizontal table\" mdxType=\"Story\">\n  {Horizontal.bind({})}\n    </Story>\n    <h3>{`Transpose table (flip layout)`}</h3>\n    <p>{`Here's a similar example with `}<code>{`search`}</code>{` and `}<code>{`pagination`}</code>{`, that let the user switch from row-layout to column-layout.`}</p>\n    <Story name=\"Transpose table\" mdxType=\"Story\">\n  {Transpose.bind({})}\n    </Story>\n    <h2>{`Toggle mobile layout`}</h2>\n    <p>{`Use mobile layout for table by setting `}<inlineCode parentName=\"p\">{`mobileLayout`}</inlineCode>{` config option to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` for table (or by adding class `}<inlineCode parentName=\"p\">{`.table-mobile`}</inlineCode>{` to table). Using config option is the preferred way as it will not only add the correct styling but also hide mobile headers automatically when option changes. Generic table uses CSS to create an layout optimized for mobiles, i.e the markup stays the same and it's still use table elements for rendering. Resize the window or view the example below on a small screen to checkout the mobile version as well as the ability toggle to desktop layout.`}</p>\n    <h3>{`Set breakpoint for mobile layout`}</h3>\n    <p>{`Since Generic table relies solely on CSS and media queries to accomplish the mobile layout, it's just a matter of declaring a breakpoint using `}<inlineCode parentName=\"p\">{`SCSS`}</inlineCode>{`. Override the default value of `}<inlineCode parentName=\"p\">{`576px`}</inlineCode>{`\n(bootstrap breakpoint for small screens), by passing a new value for `}<inlineCode parentName=\"p\">{`$mobile-style-max-width`}</inlineCode>{` like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`@use '@angular-generic-table/core/scss' as generic-table-styles with (\n  $mobile-style-max-width: 375px\n);\n@include generic-table-styles.styles();\n`}</code></pre>\n    <Story name=\"Toggle mobile layout\" mdxType=\"Story\">\n  {Mobile.bind({})}\n    </Story>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const basicTable = Simple.bind({});\nbasicTable.storyName = 'Basic table';\nbasicTable.args = {\n  data: [{\n    firstName: 'Mark',\n    lastName: 'Parker',\n    gender: 'male',\n    favoriteFood: 'Pasta'\n  }, {\n    firstName: 'Mary Jane',\n    lastName: 'Watson',\n    gender: 'female',\n    favoriteFood: 'Pizza'\n  }]\n};\nbasicTable.parameters = { storySource: { source: 'Simple.bind({})' } };\n\nexport const nestedData = Nested.bind({});\nnestedData.storyName = 'Nested data';\nnestedData.args = {\n  data: [{\n    name: {\n      first: 'Peter',\n      last: 'Parker'\n    },\n    data: {\n      details: {\n        gender: 'male',\n        favoriteFood: 'Pasta'\n      }\n    }\n  }, {\n    name: {\n      first: 'Mary Jane',\n      last: 'Watson'\n    },\n    data: {\n      details: {\n        gender: 'female',\n        favoriteFood: 'Pizza'\n      }\n    }\n  }]\n};\nnestedData.parameters = { storySource: { source: 'Nested.bind({})' } };\n\nexport const customTemplates = CustomTemplates.bind({});\ncustomTemplates.storyName = 'Custom templates';\ncustomTemplates.args = {\n  data: [{\n    firstName: 'Peter',\n    lastName: 'Parker',\n    gender: 'male',\n    favoriteColor: '#26BFAF',\n    favoriteFood: 'Pasta'\n  }, {\n    firstName: 'Mary Jane',\n    lastName: 'Watson',\n    gender: 'female',\n    favoriteColor: '#0f0',\n    favoriteFood: 'Pizza'\n  }]\n};\ncustomTemplates.parameters = { storySource: { source: 'CustomTemplates.bind({})' } };\n\nexport const advanced = Advanced.bind({});\nadvanced.storyName = 'Advanced';\nadvanced.args = {\n  data: [{\n    firstName: 'Peter',\n    lastName: 'Parker',\n    gender: 'male',\n    favoriteColor: '#26BFAF',\n    favoriteFood: 'Pasta'\n  }, {\n    firstName: 'Mary Jane',\n    lastName: 'Watson',\n    gender: 'female',\n    favoriteColor: '#0f0',\n    favoriteFood: 'Pizza'\n  }]\n};\nadvanced.parameters = { storySource: { source: 'Advanced.bind({})' } };\n\nexport const pagination = Pagination.bind({});\npagination.storyName = 'Pagination';\npagination.parameters = { storySource: { source: 'Pagination.bind({})' } };\n\nexport const rowClickHover = RowHoverClick.bind({});\nrowClickHover.storyName = 'Row click/hover';\nrowClickHover.parameters = { storySource: { source: 'RowHoverClick.bind({})' } };\n\nexport const horizontalTable = Horizontal.bind({});\nhorizontalTable.storyName = 'Horizontal table';\nhorizontalTable.parameters = { storySource: { source: 'Horizontal.bind({})' } };\n\nexport const transposeTable = Transpose.bind({});\ntransposeTable.storyName = 'Transpose table';\ntransposeTable.parameters = { storySource: { source: 'Transpose.bind({})' } };\n\nexport const toggleMobileLayout = Mobile.bind({});\ntoggleMobileLayout.storyName = 'Toggle mobile layout';\ntoggleMobileLayout.parameters = { storySource: { source: 'Mobile.bind({})' } };\n\nconst componentMeta = { title: 'Examples', decorators: [moduleMetadata({\n  declarations: [CustomTemplatesComponent, SimpleComponent, AdvancedComponent, PaginationComponent, HorizontalTableComponent, TabsComponent, MobileLayoutComponent, NestedDataComponent, RowHoverClickComponent],\n  imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n})], includeStories: [\"basicTable\",\"nestedData\",\"customTemplates\",\"advanced\",\"pagination\",\"rowClickHover\",\"horizontalTable\",\"transposeTable\",\"toggleMobileLayout\"],  };\n\nconst mdxStoryNameToKey = {\"Basic table\":\"basicTable\",\"Nested data\":\"nestedData\",\"Custom templates\":\"customTemplates\",\"Advanced\":\"advanced\",\"Pagination\":\"pagination\",\"Row click/hover\":\"rowClickHover\",\"Horizontal table\":\"horizontalTable\",\"Transpose table\":\"transposeTable\",\"Toggle mobile layout\":\"toggleMobileLayout\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"./projects/docs/src/stories sync recursive ^\\\\.(?:(?:^%7C\\\\/%7C(?:(?:(?%21(?:^%7C\\\\/)\\\\.).)*?)\\\\/)(?%21\\\\.)(?=.)[^/]*?\\\\.stories\\\\.(js%7Cjsx%7Cts%7Ctsx))$\";\nmodule.exports = webpackEmptyContext;","var map = {\n\t\"./Introduction.stories.mdx\": \"./projects/docs/src/stories/Introduction.stories.mdx\",\n\t\"./Table.stories.mdx\": \"./projects/docs/src/stories/Table.stories.mdx\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./projects/docs/src/stories sync recursive ^\\\\.(?:(?:^%7C\\\\/%7C(?:(?:(?%21(?:^%7C\\\\/)\\\\.).)*?)\\\\/)(?%21\\\\.)(?=.)[^/]*?\\\\.stories\\\\.mdx)$\";","\"use strict\";\n\nvar _frameworkImportPath = require(\"@storybook/angular\");\n\n/* eslint-disable import/no-unresolved */\n(0, _frameworkImportPath.configure)([require.context('./projects/docs/src/stories', true, /^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.mdx)$/),require.context('./projects/docs/src/stories', true, /^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(js|jsx|ts|tsx))$/)], module, false);"],"names":["setCompodocJson","docJson","parameters","actions","argTypesRegex","controls","matchers","color","date","docs","inlineStories","themes","default","clearable","list","name","class","onChange","theme","document","body","setAttribute","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_defineProperty","obj","key","value","defineProperty","configurable","writable","config","forEach","addArgs","addArgTypes","decorator","addDecorator","loader","addLoader","addParameters","_objectSpread","target","i","arguments","length","source","getOwnPropertyDescriptors","defineProperties","enhancer","addArgTypesEnhancer","addArgsEnhancer","setGlobalRender","v","console","log","layoutProps","MDXContent","components","props","mdxType","title","parentName","isMDXComponent","__page","Error","docsOnly","componentMeta","includeStories","mdxStoryNameToKey","page","mdxComponentAnnotations","Order","dashed","capitalize","chunk","search","s","replace","m","toLowerCase","charAt","toUpperCase","slice","trim","array","chunkSize","CHUNK","len","text","caseSensitive","data","columns","searchColumns","hidden","FILTERED","row","entries","indexOf","reduce","acc","index","CoreComponent","rowClick","EventEmitter","_rowHover$","ReplaySubject","rowHover","rowHover$","this","asObservable","pipe","debounceTime","distinctUntilChanged","p","q","tap","event","emit","shareReplay","_loading$","sortBy$","Subject","_searchBy$","searchBy$","startWith","map","isObservable","of","switchMap","obs","_tableConfig$","tableConfig$","_data$","data$","combineLatest","withLatestFrom","values","find","column","mapTo","rows","newData","newKeys","previousValue","nestedValue","path","missingValue","E","table","sortBy","searchBy","sort","a","b","typed","sortByOrder","ASC","table$","sorted","pagination","info","records","pageTotal","Math","ceil","_currentPage$","BehaviorSubject","currentPage$","lastPage","colspan$","columnOrder","order","loading","isLoading","next","string","_rowClick","hoverRow","arg","take","subscribe","_hoverRow","loading$","property","newSortBy","_sortBy","DESC","levels","split","currentValue","Input","Output","Component","selector","template","changeDetection","ChangeDetectionStrategy","SortClassPipe","transform","selection","aria","Pipe","DashCasePipe","HighlightPipe","searchTerm","haystackAlwaysString","searchPattern","highlightedText","RegExp","match","needle","join","error","containsTagMatches","exec","CapitalCasePipe","DynamicPipe","constructor","injector","requiredPipe","pipeArgs","Injector","parent","providers","provide","get","GtDeltaComponent","Number","classes","span","positive","negative","notApplicableValue","initialValue","GenericTableCoreModule","NgModule","declarations","imports","exports","SIMPLE_SNIPPETS","code","language","SimpleComponent","firstName","lastName","gender","favoriteFood","SNIPPETS","Simple","args","component","MOBILE_LAYOUT_SNIPPETS","GenderPipe","MobileLayoutComponent","clicked","mobileLayout$","config$","mobileLayout","mobileHeader","sortable","action","header","templateRef","toggleLayout","getValue","clickAction","ViewChild","static","encapsulation","ViewEncapsulation","Mobile","ADVANCED_DOCS","AdvancedComponent","fb","paginationForm","group","search$","valueChanges","favoriteColor","maleFirstNames","femaleFirstNames","lastNames","foods","colors","currentPage","prev","addData","randomRecord","removeData","simulateLoad","setTimeout","random","floor","newRecord","ngOnInit","UntypedFormBuilder","Advanced","typescript","scss","xml","TabsComponent","activeIndex","_content","content","activeContent","view","CUSTOM_TEMPLATES_DOCS","CustomTemplatesComponent","CustomTemplates","PaginationComponent","http","pluck","_","first_name","last_name","birthday","Pagination","_ariaLabels","nav","button","_classes","ul","li","_paginationLength","pagination$","core","generateList","paginationLength","ariaLabels","_table","pages","currentPosition","middle","Array","from","goto","GenericTablePaginationModule","HORIZONTAL_TABLE_SNIPPETS","HorizontalTableComponent","stickyHeaders","year","delta","deltaIndex","feeling","feelings","load","empty","Horizontal","NESTED_SNIPPETS","NestedDataComponent","resetData","missing","first","last","details","loadData","Nested","TRANSPOSE_SNIPPETS","TransposeComponent","reactiveForm","transpose","combined","Transpose","ROW_HOVER_CLICK_SNIPPETS","RowHoverClickComponent","onRowClick","onRowHover","RowHoverClick","Preview","makeShortcode","MDXDefaultShortcode","warn","decorators","moduleMetadata","BrowserModule","CommonModule","ReactiveFormsModule","HttpClientModule","bind","mdxSource","basicTable","storyName","storySource","nestedData","customTemplates","advanced","rowClickHover","horizontalTable","transposeTable","toggleMobileLayout","webpackEmptyContext","req","e","resolve","id","module","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","require","configure"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}