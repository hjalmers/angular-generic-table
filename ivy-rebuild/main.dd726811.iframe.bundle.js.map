{"version":3,"file":"main.dd726811.iframe.bundle.js","mappings":"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","sources":["./projects/core/src/lib/core.component.ts","./projects/core/src/lib/core.module.ts","./projects/core/src/lib/gt-delta/gt-delta.component.ts","./projects/core/src/lib/pagination/pagination.component.ts","./projects/core/src/lib/pagination/pagination.module.ts","./projects/core/src/lib/pipes/capital-case.pipe.ts","./projects/core/src/lib/pipes/dash-case.pipe.ts","./projects/core/src/lib/pipes/dynamic.pipe.ts","./projects/core/src/lib/pipes/highlight.pipe.ts","./projects/core/src/lib/pipes/row-selection.pipe.ts","./projects/core/src/lib/pipes/sort-class.pipe.ts","./projects/core/src/lib/utilities/utilities.ts","./projects/docs/src/app/components/tabs/tabs.component.ts","./projects/docs/src/app/examples/pagination/pagination.snippets.ts","./projects/docs/src/app/examples/pagination/pagination.component.ts","./.storybook/preview.js","./.storybook/preview.js-generated-config-entry.js","./projects/docs/src/stories/Introduction.stories.mdx","./projects/docs/src/app/examples/advanced/advanced.snippets.ts","./projects/docs/src/app/examples/advanced/advanced.component.ts","./projects/docs/src/stories/examples/Advanced.stories.mdx","./projects/docs/src/app/examples/custom-templates/custom-templates.snippets.ts","./projects/docs/src/app/examples/custom-templates/custom-templates.component.ts","./projects/docs/src/stories/examples/Custom-templates.stories.mdx","./projects/docs/src/app/examples/footer/simple.snippets.ts","./projects/docs/src/app/examples/footer/footer.component.ts","./projects/docs/src/stories/examples/Footer.stories.mdx","./projects/docs/src/app/examples/horizontal-table/horizontal-table.snippets.ts","./projects/docs/src/app/examples/horizontal-table/horizontal-table.component.ts","./projects/docs/src/stories/examples/Horizontal.stories.mdx","./projects/docs/src/app/examples/mobile-layout/mobileLayout.snippets.ts","./projects/docs/src/app/examples/mobile-layout/mobile-layout.component.ts","./projects/docs/src/stories/examples/Mobile.stories.mdx","./projects/docs/src/app/examples/nested-data/nested.snippets.ts","./projects/docs/src/app/examples/nested-data/nested-data.component.ts","./projects/docs/src/stories/examples/Nested-data.stories.mdx","./projects/docs/src/stories/examples/Pagination/Client-side-pagination.stories.mdx","./projects/docs/src/stories/examples/Pagination/Pagination-get-started.stories.mdx","./projects/core/src/lib/core.service.ts","./projects/docs/src/app/examples/server-side-pagination/server-side-pagination.snippets.ts","./projects/docs/src/app/examples/server-side-pagination/server-side-pagination.component.ts","./projects/docs/src/stories/examples/Pagination/Server-side-pagination.stories.mdx","./projects/docs/src/app/examples/row-hover-click/row-hower-click.snippets.ts","./projects/docs/src/app/examples/row-hover-click/row-hover-click.component.ts","./projects/docs/src/stories/examples/Row-events.stories.mdx","./projects/docs/src/app/examples/row-select/row-select.snippets.ts","./projects/docs/src/app/examples/row-select/row-select.component.ts","./projects/docs/src/stories/examples/Row-selection.stories.mdx","./projects/docs/src/app/examples/sorting/sorting.snippets.ts","./projects/docs/src/app/examples/sorting/sorting.component.ts","./projects/docs/src/stories/examples/Sorting.stories.mdx","./projects/docs/src/app/examples/simple/simple.snippets.ts","./projects/docs/src/app/examples/simple/simple.component.ts","./projects/docs/src/stories/examples/Static.stories.mdx","./projects/docs/src/app/examples/transpose/transpose.snippets.ts","./projects/docs/src/app/examples/transpose/transpose.component.ts","./projects/docs/src/stories/examples/Transpose.stories.mdx","webpack:///./projects/docs/src/app/examples/mobile-layout/mobile-layout.component.ts?7059","webpack:///./projects/docs/src/app/examples/row-hover-click/row-hover-click.component.ts?377f","webpack:///./projects/docs/src/app/examples/row-select/row-select.component.ts?943d","webpack:///./projects/core/src/lib/gt-delta/gt-delta.component.ts?28f2","./projects/docs/src/app/components/tabs/tabs.component.scss","webpack:///./projects/docs/src/stories/ sync ^\\.(?9e9a","./projects/docs/src/stories/ sync ^\\.(","./generated-stories-entry.cjs"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  TrackByFunction,\n} from '@angular/core';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  fromEvent,\n  isObservable,\n  Observable,\n  of,\n  ReplaySubject,\n  Subject,\n} from 'rxjs';\nimport { TableConfig } from './models/table-config.interface';\nimport {\n  AsyncPipe,\n  KeyValue,\n  KeyValuePipe,\n  NgClass,\n  NgForOf,\n  NgIf,\n  NgTemplateOutlet,\n  SlicePipe,\n} from '@angular/common';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  map,\n  pluck,\n  shareReplay,\n  startWith,\n  switchMap,\n  take,\n  takeUntil,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { TableColumn } from './models/table-column.interface';\nimport {\n  calculate,\n  chunk,\n  search,\n  sortOnMultipleKeys,\n} from './utilities/utilities';\nimport { TableRow } from './models/table-row.interface';\nimport { GtOrder, GtSortOrder } from './models/table-sort.interface';\nimport { TableMeta } from './models/table-meta.interface';\nimport {\n  GtPageChangeEvent,\n  GtRowSelectEvent,\n  GtRowClickEvent,\n  GtRowActiveEvent,\n  GtSortEvent,\n} from './models/table-events.interface';\nimport { CapitalCasePipe } from './pipes/capital-case.pipe';\nimport { SortClassPipe } from './pipes/sort-class.pipe';\nimport { DashCasePipe } from './pipes/dash-case.pipe';\nimport { DynamicPipe } from './pipes/dynamic.pipe';\nimport { HighlightPipe } from './pipes/highlight.pipe';\nimport { RowSelectionPipe } from './pipes/row-selection.pipe';\nimport { GtPaginationInfo } from './models/gt-pagination';\nimport { TableInfo } from './models/table-info.interface';\n\n@Component({\n  selector: 'angular-generic-table',\n  templateUrl: './core.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    CapitalCasePipe,\n    KeyValuePipe,\n    SortClassPipe,\n    DashCasePipe,\n    RowSelectionPipe,\n    AsyncPipe,\n    NgTemplateOutlet,\n    SlicePipe,\n    DynamicPipe,\n    HighlightPipe,\n    NgClass,\n    NgIf,\n    NgForOf,\n  ],\n})\nexport class CoreComponent implements OnDestroy {\n  unsubscribe$ = new Subject();\n  get navigationKeys(): typeof this._navigationKeys {\n    return this._navigationKeys;\n  }\n\n  /** navigationKeys\n   * @description An array of keyboard keys that will trigger navigation and active row, currently only supports arrow keys, home and end (omit key name from array to disable it)\n   * @type {string[]}\n   * @default ['ArrowDown', 'ArrowUp', 'ArrowLeft', 'ArrowRight', 'Home', 'End']\n   */\n  @Input() set navigationKeys(value: typeof this._navigationKeys) {\n    this._navigationKeys = value;\n  }\n\n  private _navigationKeys = [\n    'ArrowDown',\n    'ArrowUp',\n    'ArrowLeft',\n    'ArrowRight',\n    'Home',\n    'End',\n  ];\n  get selectKeys(): string[] {\n    return this._selectKeys;\n  }\n\n  /** selectKeys\n   * @description An array of keyboard keys that will trigger row selection (omit key name from array to disable it)\n   * @type {string[]}\n   * @default ['Enter', ' ']\n   */\n  @Input() set selectKeys(value: string[]) {\n    this._selectKeys = value;\n  }\n\n  private _selectKeys = ['Enter', ' '];\n  get sortOrder$(): Observable<GtSortOrder> {\n    return this._sortOrder$.asObservable();\n  }\n\n  @Input() set loading(isLoading: Observable<boolean> | boolean) {\n    this._loading$.next(isLoading);\n  }\n  @Input()\n  set paginationIndex(pageIndex: number) {\n    this._currentPaginationIndex$.next(pageIndex);\n  }\n\n  get paginationIndex(): number {\n    return this._currentPaginationIndex$.getValue();\n  }\n\n  @Input() set pagingInfo(value: GtPaginationInfo | null) {\n    if (value) {\n      this._pagingInfo$.next(value);\n      if (\n        value.pageCurrent !== this._currentPaginationIndex$.getValue() + 1 &&\n        value.pageCurrent !== null\n      ) {\n        this.paginationIndex = value.pageCurrent - 1;\n      }\n    }\n  }\n\n  /** customClasses\n   * @description An object that contains custom classes for various elements in the table.\n   * @type {object} - { selectedRow: string, activeRow: string } - default classes are 'gt-selected' and 'gt-active'\n   */\n  @Input() set customClasses(classes: Partial<typeof this._customClasses>) {\n    this._customClasses = { ...this._customClasses, ...classes };\n  }\n\n  get customClasses(): typeof this._customClasses {\n    return this._customClasses;\n  }\n\n  private _customClasses = {\n    selectedRow: 'gt-selected',\n    activeRow: 'gt-active',\n  };\n\n  /** isRowSelectedFn\n   * @description Function to determine if row is selected or not.\n   * @type {fn} A function that receives a row object and optional state for current selection that can be used to determine if row should be marked as selected or not. */\n  @Input() set isRowSelectedFn(\n    fn: (row: TableRow | any, selection?: any) => boolean\n  ) {\n    this._isRowSelectedFn = fn;\n  }\n\n  get isRowSelectedFn(): any {\n    return this._isRowSelectedFn;\n  }\n\n  private _isRowSelectedFn: any;\n\n  /** selection\n   * @description An object that contains the currently selected row(s) in the table. It's passed to the selection function to determine which rows should be selected.\n   * @type {any}\n   */\n  @Input() selection: any = {};\n\n  /** rowIdKey\n   * @description row key to use as unique id for table row. If passed, table won't generate unique ids for each row but instead use key to retrieve unique id from row.\n   * @type {string}\n   */\n  @Input() rowIdKey: string | undefined;\n\n  /** generateRowId\n   * @description Whether or not to generate a unique id for each row in the table. Defaults to `true`.\n   * @type {boolean}\n   */\n  @Input() generateRowId: boolean = true;\n\n  /** trackRowByFn\n   * @description A function that returns a unique identifier for each row in the table to optimize rendering when data is added or removed.\n   * @type fn - TrackByFunction to retrieve unique id based on index and/or row. Defaults to using `row[this.rowIdKey]`.\n   */\n  @Input() set trackRowByFn(fn: TrackByFunction<TableRow>) {\n    this._trackRowByFn = fn;\n  }\n  get trackRowByFn(): TrackByFunction<TableRow> {\n    return this._trackRowByFn;\n  }\n\n  private _trackRowByFn(\n    index: number,\n    row: TableRow\n  ): TrackByFunction<TableRow> {\n    return this.rowIdKey ? row[this.rowIdKey] : row?._id;\n  }\n\n  @Input()\n  set search(string: Observable<string | null> | string | null) {\n    this._searchBy$.next(string);\n  }\n\n  @Input()\n  set config(config: Observable<TableConfig<any>> | TableConfig<any>) {\n    this._tableConfig$.next(config);\n  }\n\n  private _tableConfig: TableConfig<any> | undefined;\n\n  @Input()\n  set data(data: Observable<Array<TableRow>> | Array<TableRow> | null) {\n    if (data) {\n      this._data$.next(data);\n    }\n  }\n\n  @Input() set sortOrder(sortConfig: GtSortOrder<TableRow> | any) {\n    if (JSON.stringify(sortConfig) !== JSON.stringify(this._sortOrder$.value)) {\n      this.sortOrderChange.emit(sortConfig);\n      this._sortOrder$.next(sortConfig);\n    }\n  }\n\n  @Output() rowClick = new EventEmitter<GtRowClickEvent>();\n  @Output() rowSelect = new EventEmitter<GtRowSelectEvent>();\n  @Output() sortOrderChange = new EventEmitter<GtSortOrder<TableRow>>();\n\n  _rowClick(row: TableRow, index: number, event: MouseEvent): void {\n    this.rowClick.emit({ row, index, event });\n  }\n\n  _rowActive(row: TableRow, index: number, event: KeyboardEvent): void {\n    this.rowSelect.emit({ row, index, event });\n  }\n\n  private _rowActive$ = new ReplaySubject<GtRowActiveEvent>(1);\n  @Output() rowActive = new EventEmitter<GtRowActiveEvent>();\n  @Output() columnSort = new EventEmitter<GtSortEvent>();\n  /** page change event - emitted when current page/index changes for pagination */\n  @Output() pageChange = new EventEmitter<GtPageChangeEvent>();\n  rowActive$ = this._rowActive$.asObservable().pipe(\n    distinctUntilChanged((p, q) => {\n      if (this.rowIdKey && p.row && q.row) {\n        return p.row[this.rowIdKey] === q.row[this.rowIdKey];\n      } else if (this.generateRowId && p.row && q.row) {\n        return p.row._id === q.row._id;\n      } else {\n        return p.index === q.index;\n      }\n    }),\n    tap((event) => (this.activeRowIndex = event.index)),\n    tap((event) => this.rowActive.emit(event)),\n    shareReplay(1)\n  );\n\n  activeRowIndex: number | null = null;\n  activateRow(id: string, event?: MouseEvent | KeyboardEvent): void;\n  activateRow(index: number, event?: MouseEvent | KeyboardEvent): void;\n  activateRow(none: null, event?: MouseEvent | KeyboardEvent): void;\n  activateRow(\n    arg: string | number | null,\n    event?: MouseEvent | KeyboardEvent\n  ): void {\n    if (typeof arg === 'number') {\n      this.table$\n        .pipe(\n          pluck('data'),\n          map((data) => data[this.paginationIndex][arg]),\n          take(1),\n          takeUntil(this.unsubscribe$)\n        )\n        .subscribe((row) => this._activateRow(row, arg, event));\n    } else if (typeof arg === 'string') {\n      // TODO: implement hover by id\n    } else {\n      this._activateRow(null, null);\n    }\n  }\n  protected _activateRow(\n    row: TableRow | null,\n    index: number | null,\n    event?: MouseEvent | KeyboardEvent\n  ): void {\n    this._rowActive$.next({ row, index, event });\n  }\n\n  get loading$(): Observable<boolean> {\n    return this._loading$.pipe(\n      startWith(false),\n      map((value) => (isObservable(value) ? value : of(value))),\n      switchMap((obs) => obs),\n      shareReplay(1)\n    );\n  }\n\n  private _loading$: ReplaySubject<Observable<boolean> | boolean> =\n    new ReplaySubject(1);\n  private _sortOrder$: BehaviorSubject<GtSortOrder> =\n    new BehaviorSubject<GtSortOrder>([]);\n  private _searchBy$: ReplaySubject<Observable<string | null> | string | null> =\n    new ReplaySubject(1);\n  searchBy$: Observable<string | null> = this._searchBy$.pipe(\n    startWith(''),\n    map((value) => (isObservable(value) ? value : of(value))),\n    switchMap((obs) => obs),\n    shareReplay(1)\n  );\n\n  private _pagingInfo$ = new BehaviorSubject<GtPaginationInfo>({\n    pageCurrent: null,\n    pageNext: null,\n    pagePrevious: null,\n    pageSize: null,\n    numberOfRecords: null,\n    //recordsAfterFilter: null,\n    //recordsAfterSearch: null,\n    //recordsAll: null,\n  });\n\n  // tslint:disable-next-line:variable-name\n  private _tableConfig$: BehaviorSubject<\n    TableConfig<any> | Observable<TableConfig<any>>\n  > = new BehaviorSubject({});\n  tableConfig$ = this._tableConfig$.pipe(\n    map((value) => (isObservable(value) ? value : of(value))),\n    switchMap((obs) => obs),\n    tap((config) => (this._tableConfig = config)),\n    shareReplay(1)\n  );\n\n  private _data$: ReplaySubject<Array<TableRow> | Observable<Array<TableRow>>> =\n    new ReplaySubject(1);\n  data$: Observable<Array<TableRow>> = this._data$.pipe(\n    map((value) => (isObservable(value) ? value : of(value))),\n    switchMap((obs) => combineLatest([obs])),\n    withLatestFrom(this.tableConfig$),\n    map(([[data], config]) => {\n      // if columns or rows contains config for mapTo...\n      if (\n        (config.columns &&\n          !!Object.values(config.columns).find((column) => !!column.mapTo)) ||\n        (config.rows &&\n          !!Object.values(config.rows).find((column) => !!column.mapTo))\n      ) {\n        // ...map data to new keys on row...\n        const newData: TableRow[] = [];\n        for (let i = 0; i < data.length; i++) {\n          const row = data[i];\n          const newKeys = Object.entries(config.columns || config.rows || [])\n            .filter(([key, value]) => !!value.mapTo) // add keys for columns with mapTo config...\n            .reduce(\n              (previousValue, [key, value]) => ({\n                ...previousValue,\n                [key]: this.nestedValue(\n                  row,\n                  value.mapTo!.path,\n                  value.mapTo?.missingValue\n                ),\n              }),\n              {}\n            );\n          newData[i] = { ...row, ...newKeys };\n        }\n        data = newData;\n      }\n      if (this.generateRowId && !this.rowIdKey && data.length > 0) {\n        const dataWithId = [];\n        for (let i = 0; i < data.length; i++) {\n          dataWithId[i] = { ...data[i], _id: i };\n        }\n        data = dataWithId;\n      }\n      return { data, config };\n    }),\n    switchMap((obs) =>\n      combineLatest([of(obs), this.sortOrder$, this.searchBy$])\n    ),\n    map(([table, sortBy, searchBy]) => {\n      // create a new array reference and sort new array (prevent mutating existing state)\n      table.data = [...table.data];\n      return !sortBy?.length || table.config?.disableTableSort\n        ? searchBy && !this.tableInfo?.lazyLoaded\n          ? search(searchBy, false, table.data, table.config)\n          : table.data\n        : searchBy && !this.tableInfo?.lazyLoaded\n        ? search(searchBy, false, table.data, table.config)?.sort(\n            sortOnMultipleKeys(sortBy)\n          )\n        : table.data?.sort(sortOnMultipleKeys(sortBy));\n    }),\n    shareReplay(1)\n  );\n\n  calculations$ = combineLatest([this.data$, this.tableConfig$]).pipe(\n    map(([data, config]) => calculate(data, config)),\n    shareReplay(1)\n  );\n\n  table$: Observable<TableMeta> = combineLatest([\n    this.data$,\n    this.tableConfig$,\n    this._pagingInfo$,\n  ]).pipe(\n    map(([sorted, config, pagingInfo]) => {\n      if (\n        pagingInfo.pageCurrent !== null &&\n        pagingInfo.numberOfRecords !== null &&\n        pagingInfo.pageSize !== null\n      ) {\n        return {\n          data: [sorted],\n          config,\n          info: <TableInfo>{\n            lazyLoaded: true,\n            numberOfRecords: pagingInfo.numberOfRecords,\n            pageSize: pagingInfo.pageSize,\n            pageTotal:\n              pagingInfo.pageTotal ??\n              Math.ceil(pagingInfo.numberOfRecords / pagingInfo.pageSize),\n          },\n        };\n      }\n      // if pagination is disabled...\n      if (!config.pagination || config.pagination.length === 0) {\n        // ...return unaltered array\n        return {\n          data: [sorted],\n          config,\n          info: <TableInfo>{ numberOfRecords: sorted.length, pageTotal: 1 },\n        };\n      }\n      // return record set\n      return {\n        data: chunk(sorted, +(config.pagination.length || 0)),\n        config,\n        info: <TableInfo>{\n          numberOfRecords: sorted.length,\n          pageSize: +(config.pagination.length || 0),\n          pageTotal: Math.ceil(\n            sorted.length / +(config.pagination.length || 0)\n          ),\n        },\n      };\n    }),\n    tap((meta) => this._tableInfo$.next(meta.info)),\n    shareReplay(1)\n  );\n\n  /** tableInfo$ - returns observable for table info\n   * @return Observable<TableInfo> */\n  get tableInfo$(): Observable<TableInfo | undefined> {\n    return this._tableInfo$.asObservable().pipe(\n      filter((info) => !!info),\n      shareReplay(1)\n    );\n  }\n\n  /** tableInfo - returns the current table info\n   * @return TableInfo */\n  get tableInfo(): TableInfo | undefined {\n    return this._tableInfo$.getValue();\n  }\n\n  private _tableInfo$ = new BehaviorSubject<TableInfo | undefined>(undefined);\n\n  private _currentPaginationIndex$: BehaviorSubject<number> =\n    new BehaviorSubject(0);\n  currentPaginationIndex$ = combineLatest([\n    this._currentPaginationIndex$,\n    this.table$,\n  ]).pipe(\n    map(([page, table]: any) => {\n      // determine last page\n      const lastPage =\n        Math.ceil(\n          table.info.records /\n            (table.info.recordLength ??\n              (table.config?.pagination?.length || table.info.records))\n        ) - 1;\n      // determine min/max position\n      return +page < 0 ? 0 : +page > lastPage ? lastPage : +page;\n    }),\n    distinctUntilChanged(),\n    tap((index) => this.pageChange.emit({ index })),\n    shareReplay(1)\n  );\n\n  colspan$ = this.tableConfig$.pipe(\n    switchMap((config) =>\n      config.columns\n        ? of(\n            Object.values(config.columns || config.rows || {}).filter(\n              (value) => value.hidden !== true\n            ).length\n          )\n        : this.data$.pipe(map((data) => data.length + 1))\n    ),\n    shareReplay(1)\n  );\n\n  footerColspan$ = this.tableConfig$.pipe(\n    map((config) => {\n      let colspan = 0;\n      Object.values(config?.footer?.columns || {}).forEach((calculations) => {\n        if (\n          Object.values(calculations).filter((value) => value !== false)\n            .length >= 0\n        ) {\n          colspan += 1;\n        }\n      }, {});\n      return colspan;\n    }),\n    shareReplay(1)\n  );\n\n  /** sortByKey - Sort by key in table row\n   * @param key - key to sort by\n   * @param { MouseEvent } [$event] - Mouse event triggering sort, if shift key is pressed sort key will be added to already present sort keys\n   */\n  sortByKey(key: keyof TableRow, $event?: MouseEvent): void {\n    const shiftKey = $event?.shiftKey === true;\n    const currentOrder = this._sortOrder$.value;\n    let sortOrder: GtOrder = 'asc';\n    let newOrder: GtSortOrder = [];\n    // if shift key is pressed while sorting...\n    if (shiftKey) {\n      // ...check if key is already sorted\n      const existingSortPosition = currentOrder.findIndex(\n        (value) => value.key === key\n      );\n      if (existingSortPosition === -1) {\n        // ...if key is not sorted, add it to the end of the sort order\n        newOrder = [...currentOrder, { key, order: 'asc' }];\n      } else {\n        // ...if key is already sorted, toggle sort order\n        sortOrder = currentOrder[existingSortPosition].order;\n        const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n        newOrder = [...currentOrder];\n        newOrder[existingSortPosition] = {\n          ...newOrder[existingSortPosition],\n          order: newSortOrder,\n        };\n      }\n    } else {\n      // ...else if shift key is not pressed...\n      if (currentOrder.length > 0) {\n        // ...check if key is already sorted\n        const existingSortPosition = currentOrder.findIndex(\n          (value) => value.key === key\n        );\n        // ...if key is already sorted, toggle sort order\n        if (existingSortPosition === -1) {\n          newOrder = [{ key, order: 'asc' }];\n        } else {\n          sortOrder = currentOrder[existingSortPosition].order;\n          const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n          newOrder = [{ key, order: newSortOrder }];\n        }\n      } else {\n        // ...if key is not sorted set sort order for key to ascending\n        newOrder = [{ key, order: sortOrder }];\n      }\n    }\n    // create sort event\n    const sortEvent: GtSortEvent = {\n      key,\n      order: sortOrder,\n      currentSortOrder: newOrder,\n      addSortKey: shiftKey,\n    };\n\n    // if event is passed to sort function...\n    if ($event) {\n      // ...emit it as well\n      sortEvent.event = $event;\n    }\n    // emit sort event\n    this.columnSort.emit(sortEvent);\n\n    // if table is not lazy loaded (sorting is then handled server-side)...\n    if (!this.tableInfo?.lazyLoaded) {\n      // ...update sort order\n      this.sortOrder = newOrder;\n    }\n  }\n\n  columnOrder = (\n    a: KeyValue<string, TableColumn>,\n    b: KeyValue<string, TableColumn>\n  ): number => {\n    return (a.value.order || 0) - (b.value.order || 0);\n  };\n\n  nestedValue(\n    object: any,\n    mapTo: string,\n    missingValue: string | number | null = null\n  ): unknown {\n    const levels = mapTo.split('.');\n    return levels.reduce(\n      (previousValue, currentValue, index) =>\n        previousValue[currentValue] ||\n        (index === levels.length - 1 ? missingValue : {}),\n      object\n    );\n  }\n\n  private _unsubscribeFromKeyboardEvents$ = new Subject();\n  private _keyboardArrowEvent$ = fromEvent<KeyboardEvent>(\n    document,\n    'keydown'\n  ).pipe(\n    filter(\n      (event) =>\n        [...this._navigationKeys, ...this._selectKeys].indexOf(event.key) > -1\n    )\n  );\n\n  protected listenToKeyboardEvents(): void {\n    if (!this._tableConfig?.activateRowOnKeyboardNavigation) {\n      return;\n    }\n\n    this._unsubscribeFromKeyboardEvents$.next(true);\n    this._keyboardArrowEvent$\n      .pipe(\n        withLatestFrom(\n          this.data$,\n          this.currentPaginationIndex$,\n          this.tableInfo$\n        ),\n        takeUntil(this._unsubscribeFromKeyboardEvents$),\n        takeUntil(this.unsubscribe$)\n      )\n      .subscribe(([event, rows, currentPage, tableInfo]) => {\n        const selectEvent = this._selectKeys.includes(event.key);\n        if (selectEvent && this.activeRowIndex !== null) {\n          const rowIndex =\n            this.activeRowIndex + currentPage * (tableInfo?.pageSize ?? 0);\n          this._rowActive(rows[rowIndex], rowIndex, event);\n          return;\n        }\n\n        const navigationEvent = this._navigationKeys.includes(event.key);\n        if (navigationEvent) {\n          this._handleNavigationEvent(event, rows, currentPage, tableInfo);\n        }\n      });\n  }\n  unsubscribeFromKeyboardEvents(tableRef: HTMLTableElement): void {\n    if (!this._tableConfig?.activateRowOnKeyboardNavigation) {\n      return;\n    }\n    // only unsubscribe if table is not focused\n    if (tableRef !== document.activeElement) {\n      if (this._tableConfig?.activateRowOnHover) {\n        // unset active row\n        this.activateRow(null);\n      }\n      this._unsubscribeFromKeyboardEvents$.next(true);\n    }\n  }\n\n  private _handleNavigationEvent(\n    event: KeyboardEvent,\n    rows: any[],\n    currentPage: number,\n    tableInfo: any\n  ): void {\n    const hasPagination = (tableInfo?.pageTotal || 0) > 1 && tableInfo;\n    const lastRowIndex = rows.length - 1;\n    let newIndex = this.activeRowIndex;\n    let indexModifier = 0;\n\n    if (event.key === 'Home') {\n      this.paginationIndex = 0;\n      this.activateRow(0, event);\n      return;\n    }\n\n    if (event.key === 'End') {\n      const indexOfLastRecord = hasPagination\n        ? rows.length - (tableInfo.pageTotal - 1) * tableInfo.pageSize - 1\n        : lastRowIndex;\n      if (tableInfo?.pageTotal) {\n        this.paginationIndex = tableInfo.pageTotal - 1;\n      }\n      this.activateRow(indexOfLastRecord, event);\n      return;\n    }\n\n    if (event.key === 'ArrowDown') {\n      indexModifier = 1;\n    } else if (event.key === 'ArrowUp') {\n      indexModifier = -1;\n    }\n\n    if (newIndex === null) {\n      newIndex = 0;\n    } else if (\n      newIndex + indexModifier >= 0 &&\n      newIndex + indexModifier <= lastRowIndex\n    ) {\n      newIndex = newIndex + indexModifier;\n    }\n\n    if (hasPagination && tableInfo?.pageSize) {\n      const isNotLastPage = currentPage + 1 < tableInfo.pageTotal;\n      const recordsOnLastPage =\n        rows.length - (tableInfo.pageTotal - 1) * tableInfo.pageSize - 1;\n      const maxIndex = isNotLastPage\n        ? tableInfo?.pageSize - 1\n        : recordsOnLastPage;\n\n      if (event.key === 'ArrowLeft' && currentPage > 0) {\n        this.paginationIndex = currentPage - 1;\n        this.activateRow(newIndex, event);\n        return;\n      } else if (event.key === 'ArrowRight' && isNotLastPage) {\n        if (\n          currentPage + 1 === tableInfo.pageTotal - 1 &&\n          newIndex > recordsOnLastPage\n        ) {\n          this.activateRow(recordsOnLastPage, event);\n        }\n        this.paginationIndex = currentPage + 1;\n        this.activateRow(newIndex, event);\n        return;\n      }\n\n      if (\n        currentPage > 0 &&\n        indexModifier < 0 &&\n        newIndex + indexModifier <= lastRowIndex &&\n        (this.activeRowIndex || 0) + indexModifier < 0\n      ) {\n        // set last row of previous page as active\n        this.activateRow(tableInfo?.pageSize - 1, event);\n        this.paginationIndex = currentPage - 1;\n        return;\n      }\n\n      const pageIndex = newIndex % tableInfo?.pageSize;\n\n      if (newIndex > maxIndex && currentPage + 1 < tableInfo.pageTotal) {\n        this.paginationIndex = currentPage + 1;\n      }\n      this.activateRow(pageIndex > maxIndex ? maxIndex : pageIndex, event);\n      return;\n    }\n\n    this.activateRow(newIndex, event);\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CoreComponent } from './core.component';\nimport { CommonModule } from '@angular/common';\nimport { SortClassPipe } from './pipes/sort-class.pipe';\nimport { DashCasePipe } from './pipes/dash-case.pipe';\nimport { HighlightPipe } from './pipes/highlight.pipe';\nimport { CapitalCasePipe } from './pipes/capital-case.pipe';\nimport { DynamicPipe } from './pipes/dynamic.pipe';\nimport { GtDeltaComponent } from './gt-delta/gt-delta.component';\nimport { RowSelectionPipe } from './pipes/row-selection.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CoreComponent,\n    SortClassPipe,\n    DashCasePipe,\n    HighlightPipe,\n    RowSelectionPipe,\n    CapitalCasePipe,\n    CapitalCasePipe,\n    DynamicPipe,\n    GtDeltaComponent,\n  ],\n  exports: [CoreComponent, GtDeltaComponent],\n  declarations: [],\n})\nexport class GenericTableCoreModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  TemplateRef,\n} from '@angular/core';\nimport { TableRow } from '../models/table-row.interface';\nimport { NgIf, NgTemplateOutlet, PercentPipe } from '@angular/common';\n\nexport interface GtDelta {\n  relative: number | string;\n  absolute: number;\n}\n@Component({\n  selector: 'gt-delta',\n  template: `<span\n      *ngIf=\"value as delta\"\n      [class]=\"[\n        classes.span,\n        delta.absolute > 0\n          ? classes.positive\n          : delta.absolute < 0\n          ? classes.negative\n          : null\n      ]\"\n      [class.gt-delta-positive]=\"delta.absolute > 0\"\n      [class.gt-delta-negative]=\"delta.absolute < 0\"\n      ><ng-container\n        *ngTemplateOutlet=\"deltaTemplate || defaultTemplate; context: { delta }\"\n      ></ng-container>\n    </span>\n    <ng-template #defaultTemplate let-delta=\"delta\">\n      <span *ngIf=\"delta.relative\">{{\n        delta.relative | percent: '1.0-2'\n      }}</span>\n    </ng-template>`,\n  styles: [\n    `\n      :host {\n        display: inline-block;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [PercentPipe, NgIf, NgTemplateOutlet],\n})\nexport class GtDeltaComponent implements OnChanges {\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    this._value = value;\n  }\n  get deltaTemplate(): TemplateRef<any> {\n    return this._deltaTemplate;\n  }\n  constructor() {}\n  @Input() set deltaTemplate(deltaTemplate: TemplateRef<any>) {\n    this._deltaTemplate = deltaTemplate;\n  }\n  Math = Math;\n  Number = Number;\n  @Input() data: Array<TableRow> = [];\n  @Input() index: number = 0;\n  @Input() baseIndex?: number;\n  @Input() classes = {\n    span: 'gt-delta',\n    positive: 'text-success',\n    negative: 'text-danger',\n  };\n  @Input() key: string = 'value';\n  @Input() notApplicableValue: string | null = null;\n  @Input() initialValue: string | number | null = null;\n  private _value?: GtDelta;\n  private _deltaTemplate?: any;\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!changes.data.currentValue) {\n      return;\n    }\n    const data = changes.data?.currentValue;\n    const index = changes.index?.currentValue || this.index;\n    const baseIndex = changes.baseIndex?.currentValue;\n    const key = changes.key?.currentValue || this.key;\n    const initialValue =\n      changes.initialValue?.currentValue || this.initialValue;\n\n    const deltaValue =\n      index === 0\n        ? initialValue\n        : data[index][key] -\n          (baseIndex === undefined\n            ? data[index - 1][key]\n            : data[baseIndex][key]);\n    const baseValue =\n      index === 0\n        ? 1\n        : baseIndex === undefined\n        ? data[index - 1][key]\n        : data[baseIndex][key];\n\n    const relative =\n      index === 0\n        ? initialValue\n        : Math.sign(deltaValue) * Math.abs(deltaValue / baseValue);\n\n    this.value = {\n      relative: Number.isFinite(relative)\n        ? relative\n        : index === 0\n        ? initialValue\n        : changes.notApplicableValue?.currentValue || this.notApplicableValue,\n      absolute: deltaValue,\n    };\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { combineLatest, ReplaySubject } from 'rxjs';\nimport { map, pluck, shareReplay, switchMap } from 'rxjs/operators';\nimport { CoreComponent } from '../core.component';\nimport {\n  GtPaginationAriaLabels,\n  GtPaginationClasses,\n  GtPaginationInfo,\n} from '../models/gt-pagination';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'angular-generic-table-pagination',\n  templateUrl: './pagination.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [CommonModule],\n})\nexport class PaginationComponent {\n  get pagingInfo(): GtPaginationInfo {\n    return (\n      this._pagingInfo || {\n        pageNext: null,\n        pageCurrent: null,\n        pagePrevious: null,\n        pageSize: null,\n        numberOfRecords: null,\n        pageTotal: null,\n      }\n    );\n  }\n  /** pagingInfo\n   * @description when provided, pagination component will use this information to render pagination instead of data from table. Use this option when pagination is handled by backend (server side).\n   * @type info - metadata for pagination component\n   */\n  @Input() set pagingInfo(info: GtPaginationInfo) {\n    this._pagingInfo = info;\n  }\n  get paginationLength(): number {\n    return this._paginationLength;\n  }\n\n  /** paginationLength\n   * @description number of buttons to show in pagination\n   * @type length - number of buttons to show. Defaults to: `5`\n   */\n  @Input() set paginationLength(length: number) {\n    this._paginationLength = +length;\n  }\n  get classes(): GtPaginationClasses {\n    return this._classes;\n  }\n\n  /** classes\n   * @description classes that should be used within pagination component for different elements\n   * @type classes - classes to be used. Defaults to: `{\n   *     ul: 'pagination',\n   *     li: 'page-item',\n   *     button: 'page-link',\n   *   }`\n   */\n  @Input() set classes(classes: GtPaginationClasses) {\n    this._classes = classes;\n  }\n  get ariaLabels(): GtPaginationAriaLabels {\n    return this._ariaLabels;\n  }\n\n  /** ariaLabels\n   * @description aria labels that describe pagination component\n   * @type labels - aria labels for pagination. Defaults to: `{\n   *     nav: 'Table pagination',\n   *     button: 'Go to page ',\n   *   }`\n   */\n  @Input() set ariaLabels(labels: GtPaginationAriaLabels) {\n    this._ariaLabels = labels;\n  }\n  get table(): CoreComponent {\n    return <CoreComponent>this._table;\n  }\n\n  /** table\n   * @description table component to which pagination is attached\n   * @type tableRef - table component\n   */\n  @Input() set table(tableRef: CoreComponent) {\n    this._table = tableRef;\n    this._table$.next(tableRef);\n  }\n\n  private _pagingInfo: GtPaginationInfo | undefined;\n  private _table$: ReplaySubject<CoreComponent> = new ReplaySubject(1);\n  private _table: CoreComponent | undefined;\n  private _ariaLabels: GtPaginationAriaLabels = {\n    nav: 'Table pagination',\n    button: 'Go to page ',\n  };\n  private _classes: GtPaginationClasses = {\n    ul: 'pagination',\n    li: 'page-item',\n    button: 'page-link',\n  };\n  private _paginationLength: number = 5;\n\n  /** paginationListItems$ - observable for page numbers to show based on number of pages and current position  */\n  paginationListItems$ = this._table$.pipe(\n    switchMap((core) =>\n      combineLatest([\n        core?.table$.pipe(pluck('info')),\n        core?.currentPaginationIndex$,\n      ])\n    ),\n    map(([info, currentPage]) =>\n      this._generateList(info.pageTotal, currentPage)\n    ),\n    shareReplay(1)\n  );\n\n  /** generate list - generate an array with page numbers to show based on number of pages and current position\n   * @param numberOfPages number of pages to show\n   * @param currentPosition current position (page index) being shown in table\n   * @returns Array<number> array of page numbers to show\n   */\n  private _generateList(\n    numberOfPages: number,\n    currentPosition: number\n  ): Array<number> {\n    const middle = Math.floor(this.paginationLength / 2);\n    const length =\n      numberOfPages < this.paginationLength\n        ? numberOfPages\n        : this.paginationLength;\n\n    return Array.from({ length }, (_, i) => {\n      if (i === 0) {\n        return 1;\n      } else if (numberOfPages < this.paginationLength) {\n        return i + 1;\n      } else if (i + 1 === length) {\n        return numberOfPages;\n      } else if (\n        currentPosition > middle &&\n        currentPosition < numberOfPages - middle\n      ) {\n        return i + currentPosition - (middle - 1);\n      } else if (\n        currentPosition > middle &&\n        currentPosition < numberOfPages - (middle - 1)\n      ) {\n        return i + currentPosition - middle;\n      } else if (\n        currentPosition > middle &&\n        currentPosition === numberOfPages - (middle - 1)\n      ) {\n        return i + currentPosition - (middle + 1);\n      } else if (\n        currentPosition > middle &&\n        currentPosition === numberOfPages - 1\n      ) {\n        return i + currentPosition - (middle + 2);\n      } else {\n        return i + 1;\n      }\n    });\n  }\n\n  /** go to page\n   * @param index - page index to go to\n   */\n  goToPage(index: number): void {\n    if (this.table) {\n      this.table.paginationIndex = index - 1;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PaginationComponent } from './pagination.component';\n\n@NgModule({\n  imports: [CommonModule, PaginationComponent],\n  exports: [PaginationComponent],\n})\nexport class GenericTablePaginationModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { capitalize } from '../utilities/utilities';\n\n@Pipe({\n  name: 'capitalCase',\n  standalone: true,\n})\nexport class CapitalCasePipe implements PipeTransform {\n  transform(s: string): any {\n    return capitalize(s);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { dashed } from '../utilities/utilities';\n\n@Pipe({\n  name: 'dashCase',\n  standalone: true,\n})\nexport class DashCasePipe implements PipeTransform {\n  transform(s: string): any {\n    return dashed(s);\n  }\n}\n","import { Injector, Pipe, PipeTransform, Type } from '@angular/core';\n\n@Pipe({\n  name: 'dynamicPipe',\n  standalone: true,\n})\nexport class DynamicPipe implements PipeTransform {\n  constructor(private injector: Injector) {}\n\n  transform(value: any, requiredPipe: Type<any>, pipeArgs: any[]): any {\n    const injector = Injector.create({\n      name: 'DynamicPipe',\n      parent: this.injector,\n      providers: [{ provide: requiredPipe }],\n    });\n    const pipe = injector.get(requiredPipe);\n    return pipe.transform(value, ...(pipeArgs || []));\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'highlight',\n  standalone: true,\n})\nexport class HighlightPipe implements PipeTransform {\n  transform(text: any, searchTerm: string | null): string {\n    if (!searchTerm) {\n      return text;\n    }\n    const haystackAlwaysString = text + '';\n    let highlightedText = haystackAlwaysString; // fallback\n\n    let searchPattern;\n    try {\n      searchPattern = new RegExp(\n        '(' +\n          // @ts-ignore\n          searchTerm\n            .toLowerCase()\n            .match(/\".*?\"|[^ ]+/g) // extract words\n            .map(\n              (needle) => needle.replace(/\"(.*?)\"/, '$1') // strip away '\"'\n            )\n            .join('|') + // combine words\n          ')',\n        'ig'\n      );\n    } catch (error) {\n      return highlightedText;\n    }\n\n    const containsTagPattern = /(<.*?>)(.*)(<\\/.*?>)/gi;\n    const containsTagMatches = containsTagPattern.exec(haystackAlwaysString);\n\n    if (containsTagMatches) {\n      // tag exists in haystack\n      highlightedText =\n        containsTagMatches[1] +\n        containsTagMatches[2].replace(\n          searchPattern,\n          '<span class=\"gt-highlight-search\">$1</span>'\n        ) +\n        containsTagMatches[3];\n    } else {\n      highlightedText = haystackAlwaysString.replace(\n        searchPattern,\n        '<span class=\"gt-highlight-search\">$1</span>'\n      );\n    }\n\n    return highlightedText;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { TableRow } from '../models/table-row.interface';\n\n@Pipe({\n  name: 'rowSelection',\n  standalone: true,\n})\nexport class RowSelectionPipe implements PipeTransform {\n  transform(\n    row: TableRow,\n    selection: any,\n    comparator: (row: TableRow, selection: any) => boolean,\n    className?: string\n  ): string {\n    return className && comparator(row, selection) ? className : '';\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { GtSortOrder } from '../models/table-sort.interface';\n\n@Pipe({\n  name: 'sortClass',\n  standalone: true,\n})\nexport class SortClassPipe implements PipeTransform {\n  transform(\n    sortOrder: GtSortOrder | null,\n    key: string,\n    context: 'class' | 'aria' | 'order' = 'class'\n  ): string | null {\n    const sortIndex = sortOrder\n      ? sortOrder.findIndex((s) => s.key === key)\n      : -1;\n    if (context === 'aria') {\n      if (sortIndex === -1 || !sortOrder) {\n        return null;\n      } else {\n        return `${sortOrder[sortIndex].order}ending`;\n      }\n    } else if (context === 'class') {\n      if (sortIndex === -1 || !sortOrder) {\n        return '';\n      } else {\n        return `gt-sort-${sortOrder[sortIndex].order}`;\n      }\n    } else {\n      return (sortOrder && sortOrder?.length === 1) || sortIndex < 0\n        ? null\n        : sortIndex + 1 + '';\n    }\n  }\n}\n","import { TableRow } from '../models/table-row.interface';\nimport { TableConfig } from '../models/table-config.interface';\nimport { GtSortConfig, GtSortOrder } from '../models/table-sort.interface';\nimport { GtSortEvent } from '../models/table-events.interface';\nexport let dashed: (s: string) => string;\ndashed = (s: string) => s.replace(/[A-Z]/g, (m) => '-' + m.toLowerCase());\n\nexport let capitalize: (s: string) => string;\ncapitalize = (s) =>\n  (s.charAt(0).toUpperCase() + s.slice(1))\n    .replace(/_/g, ' ')\n    .replace(/([A-Z][a-z]+)/g, ' $1')\n    .replace(/([A-Z]{2,})/g, ' $1')\n    .replace(/\\s{2,}/g, ' ')\n    .trim();\n\nexport let chunk: (\n  array: Array<any>,\n  chunkSize: number\n) => Array<Array<TableRow>>;\nchunk = (array, chunkSize) => {\n  if (chunkSize < 0) {\n    throw new Error('Invalid chunk size');\n  }\n  if (chunkSize === 0 && !chunkSize) {\n    return [array];\n  }\n  const CHUNK = [];\n  for (let i = 0, len = array.length; i < len; i += chunkSize) {\n    CHUNK.push(array.slice(i, i + chunkSize));\n  }\n  return CHUNK;\n};\n\nexport let search: (\n  text: string,\n  caseSensitive: boolean,\n  data: Array<TableRow>,\n  config: TableConfig\n) => TableRow[];\nsearch = (\n  text: string,\n  caseSensitive: boolean,\n  data: Array<TableRow>,\n  config: TableConfig\n) => {\n  if (config.columns) {\n    const searchColumns = Object.keys(config.columns).filter(\n      // @ts-ignore\n      (key) =>\n        config.columns &&\n        !config.columns[key]?.hidden &&\n        config.columns[key]?.search !== false\n    );\n\n    const FILTERED = [];\n    for (let i = 0; i < data.length; i++) {\n      const row = data[i];\n      const match =\n        Object.entries(row)\n          .filter(([key, value]) => searchColumns.indexOf(key) !== -1)\n          .reduce((acc, [key, value], index): string => {\n            const search = config?.columns![key]?.search;\n            // if search is a function...\n            if (typeof search === 'function') {\n              // ...use search function to return value to search\n              value = search(row, key, value);\n            }\n            return (\n              acc +\n              (index === 0 ? '' : ' ? ') +\n              (caseSensitive ? value + '' : (value + '').toLowerCase())\n            );\n          }, '')\n          .indexOf(caseSensitive ? text : text.toLowerCase()) !== -1;\n      if (match) {\n        FILTERED[FILTERED.length] = row;\n      }\n    }\n    return FILTERED;\n  } else {\n    return data;\n  }\n};\n\nexport let calculate = (data: Array<TableRow>, config: TableConfig) => {\n  const CALCULATIONS: { [key: string]: boolean } = {};\n  const COLUMN_CALCULATIONS: { [key: string]: Array<string> } = {};\n  let CALCULATED = Object.entries(config.footer?.columns || {})\n    .filter(\n      ([columnName, calculations]) =>\n        Object.values(calculations || {}).filter((value) => value !== false)\n          .length >= 0\n    )\n    .reduce((acc: any, [columnName, calculations], index) => {\n      acc[columnName] = Object.entries(calculations || {})\n        .filter(([calculation, value]) => value !== false)\n        .reduce((acc: any, [calculation, value]) => {\n          if (COLUMN_CALCULATIONS[columnName]) {\n            COLUMN_CALCULATIONS[columnName].push(calculation);\n          } else if (value === true) {\n            COLUMN_CALCULATIONS[columnName] = [calculation];\n          }\n          CALCULATIONS[calculation] = true;\n          if (typeof value === 'function') {\n            value = value(data, columnName);\n          }\n          acc[calculation] = value === true ? 0 : value;\n          return acc;\n        }, {});\n      return acc;\n    }, {});\n  if (Object.keys(CALCULATED).length > 0) {\n    for (let i = 0; i < data.length; i++) {\n      Object.entries(COLUMN_CALCULATIONS).forEach(([column, calculations]) => {\n        if (calculations.indexOf('sum') > -1) {\n          CALCULATED[column].sum += data[i][column];\n        }\n        if (\n          calculations.indexOf('avg') > -1 &&\n          calculations.indexOf('sum') === -1\n        ) {\n          if (CALCULATED[column].sum === undefined) {\n            CALCULATED[column].sum = 0;\n          }\n          CALCULATED[column].sum += data[i][column];\n        }\n        if (\n          calculations.indexOf('max') > -1 &&\n          (!CALCULATED[column].max || +data[i][column] > CALCULATED[column].max)\n        ) {\n          CALCULATED[column].max = +data[i][column];\n        }\n        if (\n          calculations.indexOf('min') > -1 &&\n          (!CALCULATED[column].min || +data[i][column] < CALCULATED[column].min)\n        ) {\n          CALCULATED[column].min = +data[i][column];\n        }\n      });\n    }\n    Object.entries(COLUMN_CALCULATIONS).forEach(([column, calculations]) => {\n      if (calculations.indexOf('avg') !== -1) {\n        CALCULATED[column].avg = CALCULATED[column]?.sum / data.length;\n        // if sum is not part of calculations config...\n        if (calculations.indexOf('sum') === -1 && CALCULATED[column].sum) {\n          // ...remove it\n          delete CALCULATED[column].sum;\n        }\n      }\n      if (calculations.indexOf('count') !== -1) {\n        CALCULATED[column].count = data.length;\n      }\n    });\n  }\n  return {\n    calculated: CALCULATED,\n    calculations: Object.keys(CALCULATIONS).sort(\n      (a, b) =>\n        (config.footer?.rowOrder?.indexOf(a) || 0) -\n        (config.footer?.rowOrder?.indexOf(b) || 0)\n    ),\n    calculatedColumnsCount: Object.keys(CALCULATED).length || 0,\n  };\n};\n\n/** sortOnMultipleKeys\n * @description Sort data on multiple keys\n * @param {GtSortOrder} keys - array with sort config objects to sort on, data will be sorted according to array order\n * @returns sort function\n */\nexport const sortOnMultipleKeys = (\n  keys: GtSortOrder\n): ((a: TableRow, b: TableRow) => number) => {\n  const order = keys.map((key) => (key.order === 'desc' ? -1 : 1));\n  return (a, b) => {\n    for (let i = 0; i < keys.length; i++) {\n      const o = keys[i].key;\n      if (a[o] > b[o]) return order[i];\n      if (a[o] < b[o]) return -order[i];\n    }\n    return 0;\n  };\n};\n\n/** parseSortOrderParams\n * @description Convert sort order query param to array with sort config objects\n * @param sortParams - Query param string where each sort config object is separated by comma and order is indicated by + (ascending) or - (descending), e.g. _'name,-age'_\n * @returns GtSortOrder - Array with sort config objects\n */\nexport const parseSortOrderParams = (sortParams: string): GtSortOrder => {\n  const sortParamsArray = sortParams.split(',');\n  return sortParamsArray.map((sortParam) => {\n    const [key, order] = sortParam.split(':');\n    return {\n      key: key.replace(/^[+-]/, ''),\n      order: order === 'desc' ? 'desc' : 'asc',\n    };\n  });\n};\n\n/** sortOrderConfigToParam\n * @description Convert sort config object to string that can be used as query param when sorting is implemented server side\n * @param sortConfig - Sort config object\n * @returns string - Query param string where order is indicated by + (ascending) or - (descending), e.g. _'-name'_\n */\nexport const sortOrderConfigToParam = (\n  sortConfig: GtSortEvent | GtSortConfig\n): string => {\n  const order = sortConfig.order === 'desc' ? '-' : '+';\n  return `${order}${sortConfig.key}`;\n};\n\n/** sortOrderToParams\n * @description Convert sort order array to string that can be used as query param when sorting is implemented server side\n * @param sortOrder - Array with sort config objects\n * @returns string - Query param string where each sort config object is separated by comma and order is indicated by + (ascending) or - (descending), e.g. _'name,-age'_\n */\nexport const sortOrderToParams = (sortOrder: GtSortOrder): string => {\n  return sortOrder\n    .map((sortConfig) => sortOrderConfigToParam(sortConfig))\n    .join(',');\n};\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Story } from '@storybook/angular/types-6-0';\nimport hljs from 'highlight.js/lib/core';\nimport { HighlightResult } from 'highlight.js';\n\nimport typescript from 'highlight.js/lib/languages/typescript';\nimport xml from 'highlight.js/lib/languages/xml';\nimport scss from 'highlight.js/lib/languages/scss';\n\nhljs.registerLanguage('typescript', typescript);\nhljs.registerLanguage('scss', scss);\nhljs.registerLanguage('xml', xml);\n\n@Component({\n  selector: 'docs-tabs',\n  template: `\n    <ul class=\"nav nav-tabs mt-4 flex-nowrap text-nowrap overflow-auto\">\n      <li class=\"nav-item\" *ngFor=\"let item of content; let i = index\">\n        <button\n          class=\"nav-link btn-link\"\n          [class.active]=\"activeIndex === i\"\n          (click)=\"view(i)\"\n        >\n          {{ item.name }}\n        </button>\n      </li>\n    </ul>\n    <ng-container *ngIf=\"activeContent\">\n      <pre><code [innerHTML]=\"activeContent.value\" class=\"{{'language-' + activeContent.language}}\"></code></pre>\n    </ng-container>\n  `,\n  styleUrls: ['./tabs.component.scss'],\n})\nexport class TabsComponent implements OnInit {\n  get content(): any {\n    return this._content;\n  }\n\n  @Input() set content(value: any) {\n    this._content = value;\n  }\n  constructor() {}\n  activeIndex = 0;\n  activeContent: HighlightResult | undefined;\n\n  private _content: Array<{}> = [];\n  ngOnInit(): void {\n    this.activeContent = hljs.highlight(this.content[this.activeIndex].code, {\n      language: this.content[this.activeIndex].language,\n    });\n  }\n\n  view(index: number): void {\n    this.activeIndex = index;\n    this.activeContent = hljs.highlight(this.content[index].code, {\n      language: this.content[index].language,\n    });\n  }\n}\n\nexport const Tabs: Story<TabsComponent> = (args: TabsComponent) => ({\n  props: args,\n  component: TabsComponent,\n});\n","export const ADVANCED_DOCS = [\n  {\n    name: 'pagination.component.html',\n    code: `<form [formGroup]=\"paginationForm\">\n  <div class=\"row gy-3\">\n    <div class=\"form-group col-12 col-sm-auto\">\n      <label for=\"length_input\">Length</label>\n      <input id=\"length_input\" formControlName=\"length\" type=\"number\" class=\"form-control\">\n    </div>\n    <div class=\"form-group col-12 col-sm-auto\">\n      <label for=\"search_input\">Search</label>\n      <input id=\"search_input\" formControlName=\"search\" type=\"text\" class=\"form-control\">\n    </div>\n  </div>\n</form>\n<div class=\"mx-n3 mx-sm-0 my-3 overflow-auto\">\n  <angular-generic-table [data]=\"data$\" [config]=\"tableConfig$\" [search]=\"search$\" [loading]=\"loading$\" #table>\n    <div class=\"table-loading gt-skeleton-loader\"></div>\n    <div class=\"table-no-data alert alert-info mt-3\">\n      Table is empty\n    </div>\n  </angular-generic-table>\n</div>\n<angular-generic-table-pagination [table]=\"table\">\n</angular-generic-table-pagination>`,\n    language: 'xml',\n  },\n  {\n    name: 'pagination.component.ts',\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\nimport { FormBuilder } from '@angular/forms';\nimport { TableConfig } from '@angular-generic-table/core';\nimport { pluck, tap, withLatestFrom } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'docs-pagination',\n  templateUrl: './pagination.component.html',\n  styles: [],\n})\nexport class PaginationComponent implements OnInit {\n  constructor(private fb: FormBuilder, private http: HttpClient) {}\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n  paginationForm = this.fb.group({\n    length: [10],\n    search: [''],\n  });\n  search$ = this.paginationForm.get('search')?.valueChanges as Observable<string>;\n  loading$ = new BehaviorSubject(true);\n  data$: Observable<any> = this.http.get('https://private-730c61-generictable.apiary-mock.com/data').pipe(\n    pluck('data'),\n    tap((_) => this.loading$.next(false))\n  );\n\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\n\n  ngOnInit(): void {\n    this.paginationForm\n      .get('length')\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\n      .subscribe(([length, config]) => {\n        length = +length;\n        this.tableConfig$.next({\n          ...config,\n          pagination: { ...config.pagination, length },\n        });\n      });\n    this.tableConfig$.next({\n      class: 'table text-nowrap',\n      columns: {\n        first_name: {\n          sortable: true,\n        },\n        last_name: {\n          sortable: true,\n        },\n        gender: {\n          sortable: true,\n        },\n        birthday: {\n          sortable: true,\n          class: 'text-end',\n          transform: {\n            pipe: DatePipe,\n            args: ['longDate'],\n          },\n        },\n      },\n      pagination: {\n        length: this.paginationForm.get('length')?.value || 0,\n      },\n    });\n  }\n}`,\n    language: 'typescript',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { PaginationComponent } from './pagination.component';\nimport { GenericTableCoreModule, GenericTablePaginationModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [PaginationComponent],\n  imports: [\n    BrowserModule,\n    GenericTableCoreModule,\n    GenericTablePaginationModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  bootstrap: [PaginationComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\nimport { UntypedFormBuilder } from '@angular/forms';\nimport { TableConfig } from '@angular-generic-table/core';\nimport { pluck, tap, withLatestFrom } from 'rxjs/operators';\nimport { Story } from '@storybook/angular/types-6-0';\nimport { ADVANCED_DOCS } from './pagination.snippets';\nimport { HttpClient } from '@angular/common/http';\nimport { DatePipe, formatDate } from '@angular/common';\n\n@Component({\n  selector: 'docs-pagination',\n  templateUrl: './pagination.component.html',\n  styles: [],\n})\nexport class PaginationComponent implements OnInit {\n  constructor(private fb: UntypedFormBuilder, private http: HttpClient) {}\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n  paginationForm = this.fb.group({\n    length: [10],\n    search: [''],\n  });\n  search$ = this.paginationForm.get('search')\n    ?.valueChanges as Observable<string>;\n  loading$ = new BehaviorSubject(true);\n  data$: Observable<any> = this.http\n    .get('https://private-730c61-generictable.apiary-mock.com/data')\n    .pipe(\n      pluck('data'),\n      tap((_) => this.loading$.next(false))\n    );\n\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\n  SNIPPETS = ADVANCED_DOCS;\n\n  ngOnInit(): void {\n    this.paginationForm\n      .get('length')\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\n      .subscribe(([length, config]) => {\n        length = +length;\n        this.tableConfig$.next({\n          ...config,\n          pagination: { ...config.pagination, length },\n        });\n      });\n    this.tableConfig$.next({\n      class: 'table text-nowrap',\n      columns: {\n        first_name: {\n          sortable: true,\n        },\n        last_name: {\n          sortable: true,\n        },\n        gender: {\n          sortable: true,\n        },\n        birthday: {\n          sortable: true,\n          class: 'text-end justify-content-end',\n          search: (row, column) => formatDate(row[column], 'longDate', 'en'),\n          transform: {\n            pipe: DatePipe,\n            args: ['longDate'],\n          },\n        },\n      },\n      pagination: {\n        length: this.paginationForm.get('length')?.value || 0,\n      },\n    });\n  }\n}\n\nexport const Pagination: Story<PaginationComponent> = (\n  args: PaginationComponent\n) => ({\n  props: args,\n  component: PaginationComponent,\n});\n","import { setCompodocJson } from \"@storybook/addon-docs/angular\";\nimport docJson from \"../documentation.json\";\n\nsetCompodocJson(docJson);\n\nconst menuOrder = {\n  introduction: 0,\n  \"concepts-api-sorting\": 1,\n  examples: 2,\n};\n\nexport const parameters = {\n  actions: { argTypesRegex: \"^on[A-Z].*\" },\n  controls: {\n    matchers: {\n      color: /(background|color)$/i,\n      date: /Date$/,\n    },\n  },\n  docs: { inlineStories: true },\n  options: {\n    storySort: {\n      method: \"configure\",\n      includeNames: true,\n      order: [\n        \"Introduction\",\n        \"Examples\",\n        [\n          \"Basic\",\n          \"Sorting\",\n          \"Nested data\",\n          \"Row click & active state\",\n          \"Row selection\",\n          \"Pagination\",\n          [\"Setup\", \"Client-side\", \"Server-side\"],\n          \"Custom templates\",\n          \"Table footer\",\n          \"Horizontal layout\",\n          \"Transpose data\",\n          \"Mobile layout\",\n        ],\n      ],\n      //order: (a, b) => console.log(a, b),\n    },\n    //(a, b) =>\n    //menuOrder[a[1].componentId] < menuOrder[b[1].componentId] ? -1 : 1,\n  },\n  themes: {\n    //default: \"Swimbird - Dark\",\n    default: \"Bootstrap\",\n    clearable: false,\n    list: [\n      //{ name: \"Swimbird - Dark\", class: \"theme-sb-dark\", color: \"#00aced\" },\n      //{ name: \"Swimbird - Light\", class: \"theme-sb-light\", color: \"#00aced\" },\n      {\n        name: \"Bootstrap\",\n        class: \"theme-bootstrap\",\n        color: \"var(--bs-primary)\",\n      },\n    ],\n    onChange: (theme) => {\n      document.body.setAttribute(\"data-theme\", theme.class);\n    },\n  },\n};\n","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable import/no-unresolved */\nimport { addDecorator, addParameters, addLoader, addArgs, addArgTypes, addArgsEnhancer, addArgTypesEnhancer, setGlobalRender } from '/home/runner/work/angular-generic-table/angular-generic-table/node_modules/@storybook/client-api';\nimport * as config from '/home/runner/work/angular-generic-table/angular-generic-table/.storybook/preview.js';\nObject.keys(config).forEach(function (key) {\n  var value = config[key];\n\n  switch (key) {\n    case 'args':\n      {\n        return addArgs(value);\n      }\n\n    case 'argTypes':\n      {\n        return addArgTypes(value);\n      }\n\n    case 'decorators':\n      {\n        return value.forEach(function (decorator) {\n          return addDecorator(decorator, false);\n        });\n      }\n\n    case 'loaders':\n      {\n        return value.forEach(function (loader) {\n          return addLoader(loader, false);\n        });\n      }\n\n    case 'parameters':\n      {\n        return addParameters(_objectSpread({}, value), false);\n      }\n\n    case 'argTypesEnhancers':\n      {\n        return value.forEach(function (enhancer) {\n          return addArgTypesEnhancer(enhancer);\n        });\n      }\n\n    case 'argsEnhancers':\n      {\n        return value.forEach(function (enhancer) {\n          return addArgsEnhancer(enhancer);\n        });\n      }\n\n    case 'render':\n      {\n        return setGlobalRender(value);\n      }\n\n    case 'globals':\n    case 'globalTypes':\n      {\n        var v = {};\n        v[key] = value;\n        return addParameters(v, false);\n      }\n\n    case '__namedExportsOrder':\n    case 'decorateStory':\n    case 'renderToDOM':\n      {\n        return null; // This key is not handled directly in v6 mode.\n      }\n\n    default:\n      {\n        // eslint-disable-next-line prefer-template\n        return console.log(key + ' was not supported :( !');\n      }\n  }\n});","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta } from '@storybook/addon-docs';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Introduction\" mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"angular-generic-table-docs\"\n    }}>{`Angular Generic Table Docs`}</h1>\n    <p>{`Generic table version 5 has been rebuilt to be more efficient and to make it easier to customize and add new features. It still relies on native html tables for layout and rendering. Follow the instructions below to get started with the latest release candidate.`}</p>\n    <h2 {...{\n      \"id\": \"install\"\n    }}>{`Install`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`npm install @angular-generic-table/core@rc --save\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"import-module\"\n    }}>{`Import module`}</h2>\n    <p>{`We recommend import `}<inlineCode parentName=\"p\">{`GenericTableCoreModule`}</inlineCode>{` into a shared module eg. `}<inlineCode parentName=\"p\">{`SharedModule`}</inlineCode>{` that can be imported into other, preferably lazy loaded modules when needed.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [...],\n  imports: [\n    ...\n    GenericTableCoreModule\n  ],\n  exports: [\n    GenericTableCoreModule\n  ]\n})\nexport class SharedModule {}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"import-styling\"\n    }}>{`Import styling`}</h2>\n    <p>{`We recommend setting up your Angular project to use scss (SASS) for css preprocessing.`}</p>\n    <p>{`Once configured to use scss, it's just a matter of including the scss to your main styles file, typically it would be `}<inlineCode parentName=\"p\">{`styles.scss`}</inlineCode>{` located at the root of the `}<inlineCode parentName=\"p\">{`src`}</inlineCode>{` folder unless you've changed it.`}</p>\n    <h3 {...{\n      \"id\": \"add-scss\"\n    }}>{`Add scss`}</h3>\n    <p><inlineCode parentName=\"p\">{`{project}/src/styles.scss`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`// import base styles from angular-generic-table/core\n@use '~@angular-generic-table/core/scss' as generic-table-styles;\n@include generic-table-styles.styles(); // all styles\n\n// @include generic-table-styles.search-style(); // search (highlight) style\n// @include generic-table-styles.mobile-style(); // mobile layout style\n// @include generic-table-styles.pagination-style(); // pagination styles\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"override-scss-variables\"\n    }}>{`Override scss variables`}</h3>\n    <p>{`It's possible to override the scss variables used by generic table by passing them when importing the scss.\n`}<inlineCode parentName=\"p\">{`{project}/src/styles.scss`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`// import base styles from angular-generic-table/core and override scss variables\n@use '~@angular-generic-table/core/scss' as generic-table-styles with (\n    $highlight-background-color: purple,\n    $mobile-style-max-width: 375px\n);\n@include generic-table-styles.styles();\n`}</code></pre>\n    <p><strong parentName=\"p\">{`SCSS Variables`}</strong></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Default value`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$highlight-background-color:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`#ffdd00;`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$mobile-style-selector:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`'table.table-mobile';`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$mobile-style-max-width:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`576px;`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$mobile-style-header-font-weight:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`500;`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$mobile-style-header-background-color:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`#fff;`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$mobile-style-button-selector:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`'.btn-sm';`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$mobile-style-border-bottom:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`solid 1px #dedede;`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$mobile-style-button-font-size:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`1rem;`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$mobile-style-button-padding:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`0.5625rem 1rem;`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$pagination-ellipsis-content:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`'...';`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$pagination-active-color:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`#000;`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$pagination-justify-content:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`center;`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"have-other-needs\"\n    }}>{`Have other needs?`}</h3>\n    <p>{`More examples and use cases coming soon! In the meantime create an `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/hjalmers/angular-generic-table/issues\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }}>{`issue over at github`}</a></p>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.parameters = { docsOnly: true };\n\nconst componentMeta = { title: 'Introduction', includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","export const ADVANCED_DOCS = [\n  {\n    name: 'advanced.component.html',\n    code: `<div class=\"row gx-2 gy-3 mb-3\">\n  <div class=\"col-12 col-sm-auto\">\n    <button class=\"btn btn-primary w-100\" (click)=\"addData()\">Add random data</button>\n  </div>\n  <div class=\"col-12 col-sm-auto\">\n    <button class=\"btn btn-danger w-100\" (click)=\"removeData()\">Remove data</button>\n  </div>\n  <div class=\"col-12 col-sm-auto\">\n    <button class=\"btn btn-secondary w-100\" (click)=\"simulateLoad()\">Load</button>\n  </div>\n</div>\n<form [formGroup]=\"paginationForm\">\n  <div class=\"row\">\n    <div class=\"form-group col-12 col-sm-auto\">\n      <label for=\"length_input\">Length</label>\n      <input id=\"length_input\" formControlName=\"length\" type=\"number\" class=\"form-control\">\n    </div>\n    <div class=\"form-group col-12 col-sm-auto\">\n      <label for=\"search_input\">Search</label>\n      <input id=\"search_input\" formControlName=\"search\" type=\"text\" class=\"form-control\">\n    </div>\n  </div>\n</form>\n<div class=\"mx-n3 mx-sm-0\">\n  <angular-generic-table [data]=\"data$\" [config]=\"tableConfig$\" [page]=\"(currentPage$ | async)!\" [search]=\"search$\" [loading]=\"loading$\" #table>\n    <div class=\"table-loading gt-skeleton-loader\"></div>\n    <div class=\"table-no-data alert alert-info mt-3\">\n      Table is empty\n    </div>\n  </angular-generic-table>\n</div>\n<div class=\"row justify-content-between justify-content-sm-center align-items-center mt-3\" *ngIf=\"{current: (currentPage$ | async) || 0,total: (table.table$ | async)?.info?.pageTotal || 1\n} as pagination\">\n  <div class=\"col-auto\">\n    <button class=\"btn btn-primary\" (click)=\"prev()\" [disabled]=\"pagination.current === 0\">Prev</button>\n  </div>\n  <div class=\"col-auto\">\n    <button class=\"btn btn-primary\" (click)=\"next()\" [disabled]=\"pagination.total -1 === pagination.current\">Next</button>\n  </div>\n  <div class=\"col-auto\">Current page: {{pagination.current +1}}</div>\n  <div class=\"col-auto\">Total pages: {{pagination.total}}</div>\n  <div class=\"col-auto\">\n    Records: {{(data$ | async).length}}\n  </div>\n  <div class=\"col-auto\">\n    {{clicked}}\n  </div>\n</div>\n<ng-template #actions let-row=\"row\" let-col=\"col\" let-index=\"index\">\n  <button\n    *ngIf=\"index !== undefined\"\n    class=\"btn btn-outline-primary btn-sm\"\n    (click)=\"clickAction(row, col, index)\"\n  >\n    Click me!\n  </button>\n</ng-template>\n<ng-template #color let-row=\"row\" let-col=\"col\">\n  <div\n    [style.background]=\"row[col.key]\"\n    style=\"width: 1.5rem; height: 1.5rem; border-radius: 50%\"\n  ></div>\n</ng-template>`,\n    language: 'xml',\n  },\n  {\n    name: 'advanced.component.ts',\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\nimport { FormBuilder } from '@angular/forms';\nimport { TableColumn, TableConfig, TableRow } from '@angular-generic-table/core';\nimport { withLatestFrom } from 'rxjs/operators';\n\n@Component({\n  templateUrl: './advanced.component.html',\n})\nexport class AdvancedComponent implements OnInit {\n  get currentPage$(): Observable<number> {\n    return this._currentPage$.asObservable();\n  }\n\n  set currentPage(value: number) {\n    this._currentPage$.next(value);\n  }\n  constructor(private fb: FormBuilder) {}\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n  paginationForm = this.fb.group({\n    length: [10],\n    search: [''],\n  });\n  search$ = this.paginationForm.get('search')?.valueChanges as Observable<string>;\n  loading$ = new BehaviorSubject(true);\n  data$: BehaviorSubject<any> = new BehaviorSubject([\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteColor: '#26BFAF',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteColor: '#0f0',\n      favoriteFood: 'Pizza',\n    },\n  ]);\n\n  private _currentPage$ = new BehaviorSubject(0);\n\n  clicked: string = '';\n  maleFirstNames = ['Peter', 'Clark', 'Ruben', 'John', 'Jack', 'Roscoe'];\n  femaleFirstNames = ['Mary Jane', 'Kim', 'Sarah', 'Michelle', 'Ann'];\n  lastNames = ['Andersson', 'Smith', 'Parker', 'Kent', 'Rogers', 'Lane', 'Jackson'];\n  foods = ['Pizza', 'Pasta', 'Hamburger', 'Pancakes', 'Tacos', 'Lasagna', 'Meatloaf'];\n  colors = ['#33d60b', '#dcafff', '#3fc9ff', '#ff1600', '#5238b1', '#fff'];\n\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\n\n  addData(): void {\n    this.data$.next([...this.data$.getValue(), this.randomRecord()]);\n  }\n\n  removeData(): void {\n    this.data$.next([]);\n  }\n\n  simulateLoad(): void {\n    this.loading$.next(true);\n    // set loading state to false after 2 seconds\n    setTimeout(() => this.loading$.next(false), 2000);\n  }\n\n  clickAction(row: TableRow, column: { key: string; value: TableColumn }, index: number): void {\n    console.log('clicked row:', row, 'col:', column);\n    this.clicked = \\`clicked row number: \\${index}\\`;\n  }\n\n  randomRecord(): TableRow {\n    const random = Math.floor(Math.random() * 2);\n    const newRecord = {\n      firstName: random\n        ? this.maleFirstNames[Math.floor(Math.random() * this.maleFirstNames.length)]\n        : this.femaleFirstNames[Math.floor(Math.random() * this.femaleFirstNames.length)],\n      lastName: this.lastNames[Math.floor(Math.random() * this.lastNames.length)],\n      gender: random ? 'male' : 'female',\n      favoriteColor: this.colors[Math.floor(Math.random() * this.colors.length)],\n      favoriteFood: this.foods[Math.floor(Math.random() * this.foods.length)],\n    };\n    console.log('added new random record:', newRecord);\n\n    return newRecord;\n  }\n\n  next = () => {\n    this.currentPage = this._currentPage$.value + 1;\n  };\n  prev = () => {\n    this.currentPage = this._currentPage$.value - 1;\n  };\n\n  ngOnInit(): void {\n    this.simulateLoad();\n    this.paginationForm\n      .get('length')\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\n      .subscribe(([length, config]) => {\n        length = +length;\n        this.tableConfig$.next({\n          ...config,\n          pagination: { ...config.pagination, length },\n        });\n      });\n    this.tableConfig$.next({\n      class: 'table table-mobile text-nowrap mb-0',\n      columns: {\n        firstName: {\n          header: 'First name',\n          mobileHeader: true,\n          sortable: true,\n          order: 0,\n        },\n        lastName: {\n          header: 'Last name',\n          mobileHeader: true,\n          hidden: false,\n          sortable: true,\n        },\n        gender: {\n          mobileHeader: 'Sex',\n          sortable: true,\n          order: 1,\n        },\n        favoriteColor: {\n          header: 'Favorite color',\n          mobileHeader: true,\n          templateRef: this.color,\n          sortable: false,\n          order: 2,\n          search: false,\n          class: 'custom-class',\n        },\n        favoriteFood: {\n          mobileHeader: true,\n          header: 'Favorite food',\n          hidden: false,\n          sortable: true,\n          order: 0,\n        },\n        action: {\n          mobileHeader: false,\n          header: false,\n          templateRef: this.actions,\n          order: 6,\n        },\n      },\n      pagination: {\n        length: this.paginationForm.get('length')?.value || 0,\n      },\n      footer: {\n        columns: {\n          gender: {\n            count: (data, key) => {\n              let men = 0;\n              let women = 0;\n              for (let i = 0; i < data.length; i++) {\n                if (data[i][key] === 'female') {\n                  women++;\n                } else if (data[i][key] === 'male') {\n                  men++;\n                }\n              }\n              return \\`♂ \\${men} ♀ \\${women}\\`;\n            },\n          },\n          favoriteColor: {},\n          action: { count: (data, key) => \\`Total: \\${data.length}\\` },\n        },\n      },\n    });\n  }\n}`,\n    language: 'typescript',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AdvancedComponent } from './advanced.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [AdvancedComponent],\n  imports: [BrowserModule, ReactiveFormsModule, GenericTableCoreModule],\n  bootstrap: [AdvancedComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\nimport { UntypedFormBuilder } from '@angular/forms';\nimport {\n  TableConfig,\n  TableRow,\n  TableColumn,\n} from '@angular-generic-table/core';\nimport { withLatestFrom } from 'rxjs/operators';\nimport { Story } from '@storybook/angular/types-6-0';\nimport { ADVANCED_DOCS } from './advanced.snippets';\n\n@Component({\n  selector: 'docs-advanced',\n  templateUrl: './advanced.component.html',\n  styles: [],\n})\nexport class AdvancedComponent implements OnInit {\n  get currentPage$(): Observable<number> {\n    return this._currentPage$.asObservable();\n  }\n\n  set currentPage(value: number) {\n    this._currentPage$.next(value);\n  }\n  constructor(private fb: UntypedFormBuilder) {}\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n  paginationForm = this.fb.group({\n    length: [10],\n    search: [''],\n  });\n  search$ = this.paginationForm.get('search')\n    ?.valueChanges as Observable<string>;\n  loading$ = new BehaviorSubject(true);\n  data$: BehaviorSubject<any> = new BehaviorSubject([\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteColor: '#26BFAF',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteColor: '#0f0',\n      favoriteFood: 'Pizza',\n    },\n  ]);\n\n  private _currentPage$ = new BehaviorSubject(0);\n\n  clicked: string = '';\n  maleFirstNames = ['Peter', 'Clark', 'Ruben', 'John', 'Jack', 'Roscoe'];\n  femaleFirstNames = ['Mary Jane', 'Kim', 'Sarah', 'Michelle', 'Ann'];\n  lastNames = [\n    'Andersson',\n    'Smith',\n    'Parker',\n    'Kent',\n    'Rogers',\n    'Lane',\n    'Jackson',\n  ];\n  foods = [\n    'Pizza',\n    'Pasta',\n    'Hamburger',\n    'Pancakes',\n    'Tacos',\n    'Lasagna',\n    'Meatloaf',\n  ];\n  colors = ['#33d60b', '#dcafff', '#3fc9ff', '#ff1600', '#5238b1', '#fff'];\n\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\n  SNIPPETS = ADVANCED_DOCS;\n\n  addData(): void {\n    this.data$.next([...this.data$.getValue(), this.randomRecord()]);\n  }\n\n  removeData(): void {\n    this.data$.next([]);\n  }\n\n  simulateLoad(): void {\n    this.loading$.next(true);\n    // set loading state to false after 2 seconds\n    setTimeout(() => this.loading$.next(false), 2000);\n  }\n\n  clickAction(\n    row: TableRow,\n    column: { key: string; value: TableColumn },\n    index: number\n  ): void {\n    console.log('clicked row:', row, 'col:', column);\n    this.clicked = `clicked row number: ${index}`;\n  }\n\n  randomRecord(): TableRow {\n    const random = Math.floor(Math.random() * 2);\n    const newRecord = {\n      firstName: random\n        ? this.maleFirstNames[\n            Math.floor(Math.random() * this.maleFirstNames.length)\n          ]\n        : this.femaleFirstNames[\n            Math.floor(Math.random() * this.femaleFirstNames.length)\n          ],\n      lastName:\n        this.lastNames[Math.floor(Math.random() * this.lastNames.length)],\n      gender: random ? 'male' : 'female',\n      favoriteColor:\n        this.colors[Math.floor(Math.random() * this.colors.length)],\n      favoriteFood: this.foods[Math.floor(Math.random() * this.foods.length)],\n    };\n    console.log('added new random record:', newRecord);\n\n    return newRecord;\n  }\n\n  next = () => {\n    this.currentPage = this._currentPage$.value + 1;\n  };\n  prev = () => {\n    this.currentPage = this._currentPage$.value - 1;\n  };\n\n  ngOnInit(): void {\n    this.simulateLoad();\n    this.paginationForm\n      .get('length')\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\n      .subscribe(([length, config]) => {\n        length = +length;\n        this.tableConfig$.next({\n          ...config,\n          pagination: { ...config.pagination, length },\n        });\n      });\n    this.tableConfig$.next({\n      class: 'table text-nowrap mb-0',\n      mobileLayout: true,\n      columns: {\n        firstName: {\n          header: 'First name',\n          mobileHeader: true,\n          sortable: true,\n          order: 0,\n        },\n        lastName: {\n          header: 'Last name',\n          mobileHeader: true,\n          hidden: false,\n          sortable: true,\n        },\n        gender: {\n          mobileHeader: 'Sex',\n          sortable: true,\n          order: 1,\n        },\n        favoriteColor: {\n          header: 'Favorite color',\n          mobileHeader: true,\n          templateRef: this.color,\n          sortable: false,\n          order: 2,\n          search: false,\n          class: 'custom-class',\n        },\n        favoriteFood: {\n          mobileHeader: true,\n          header: 'Favorite food',\n          hidden: false,\n          sortable: true,\n          order: 0,\n        },\n        action: {\n          mobileHeader: false,\n          header: false,\n          templateRef: this.actions,\n          order: 6,\n          class: 'py-1 text-end',\n        },\n      },\n      pagination: {\n        length: this.paginationForm.get('length')?.value || 0,\n      },\n      footer: {\n        columns: {\n          gender: {\n            count: (data, key) => {\n              let men = 0;\n              let women = 0;\n              for (let i = 0; i < data.length; i++) {\n                if (data[i][key] === 'female') {\n                  women++;\n                } else if (data[i][key] === 'male') {\n                  men++;\n                }\n              }\n              return `♂ ${men} ♀ ${women}`;\n            },\n          },\n          favoriteColor: {},\n          action: { count: (data, key) => `Total: ${data.length}` },\n        },\n      },\n    });\n  }\n}\n\nexport const Advanced: Story<AdvancedComponent> = (\n  args: AdvancedComponent\n) => ({\n  props: args,\n  component: AdvancedComponent,\n});\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Story } from '@storybook/addon-docs';\nimport {moduleMetadata} from \"@storybook/angular\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {CommonModule} from \"@angular/common\";\nimport {GenericTableCoreModule} from \"../../../../core/src/lib/core.module\";\nimport {Advanced, AdvancedComponent} from \"../../app/examples/advanced/advanced.component\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {TabsComponent} from \"../../app/components/tabs/tabs.component\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {GenericTablePaginationModule} from \"../../../../core/src/lib/pagination/pagination.module\";\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Meta title=\"Examples/Multiple features\" decorators={[moduleMetadata({\n      declarations: [AdvancedComponent, TabsComponent],\n      imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n    })]} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"multiple-features\"\n    }}>{`Multiple features`}</h1>\n    <p>{`Example showcasing:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Sorting`}</li>\n      <li parentName=\"ul\">{`Loading state`}</li>\n      <li parentName=\"ul\">{`Empty state`}</li>\n      <li parentName=\"ul\">{`Global search`}</li>\n      <li parentName=\"ul\">{`Mobile table layout with sticky header (resize viewport to < 576px to view example)`}</li>\n      <li parentName=\"ul\">{`Custom pagination`}</li>\n      <li parentName=\"ul\">{`Add/remove data`}</li>\n      <li parentName=\"ul\">{`Custom templates`}</li>\n      <li parentName=\"ul\">{`Table footer`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h3>\n    <Story name=\"Multiple features\" mdxType=\"Story\">\n  {Advanced.bind({})}\n    </Story>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n\nexport const multipleFeatures = Advanced.bind({});\nmultipleFeatures.storyName = 'Multiple features';\nmultipleFeatures.parameters = { storySource: { source: 'Advanced.bind({})' } };\n\nconst componentMeta = { title: 'Examples/Multiple features', decorators: [moduleMetadata({\n  declarations: [AdvancedComponent, TabsComponent],\n  imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n})], includeStories: [\"multipleFeatures\"],  };\n\nconst mdxStoryNameToKey = {\"Multiple features\":\"multipleFeatures\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","export const CUSTOM_TEMPLATES_DOCS = [\n  {\n    name: 'custom-templates.component.ts',\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { TableColumn, TableConfig, TableRow } from '@angular-generic-table/core';\nimport { ReplaySubject } from 'rxjs';\n\n@Component({\n  selector: 'custom-templates',\n  templateUrl: \\`./custom-templates.component.html\\`\n})\nexport class CustomTemplatesComponent implements OnInit {\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n  clicked = '';\n\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteColor: '#26BFAF',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteColor: '#0f0',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config$: ReplaySubject<TableConfig> = new ReplaySubject(1);\n  ngOnInit(): void {\n    this.config$.next({\n      columns: {\n        firstName: {},\n        lastName: {},\n        gender: {},\n        favoriteColor: {\n          templateRef: this.color,\n        },\n        favoriteFood: {},\n        action: {\n          templateRef: this.actions,\n        },\n      },\n    });\n  }\n  clickAction(row: TableRow, column: { key: string; value: TableColumn }, index: number): void {\n    console.log('clicked row:', row, 'col:', column);\n    this.clicked = \\`clicked row number: \\${index}\\`;\n  }\n}`,\n    language: 'typescript',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { CustomTemplatesComponent } from './custom-templates-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [CustomTemplatesComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [CustomTemplatesComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n  {\n    name: 'custom-templates.component.html',\n    code: `<angular-generic-table [data]=\"data\" [config]=\"config$\"></angular-generic-table>\n<ng-template #actions let-row=\"row\" let-col=\"col\" let-index=\"index\">\n <button class=\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\" (click)=\"clickAction(row, col, index)\">Click me!</button>\n</ng-template>\n<ng-template #color let-row=\"row\" let-col=\"col\">\n <div [style.background]=\"row[col.key]\" style=\"width: 1.5rem; height: 1.5rem; border-radius: 50%\"></div>\n</ng-template>\n{{ clicked }}`,\n    language: 'xml',\n  },\n];\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { Story } from '@storybook/angular/types-6-0';\nimport {\n  TableConfig,\n  TableRow,\n  TableColumn,\n} from '@angular-generic-table/core';\nimport { ReplaySubject } from 'rxjs';\nimport { CUSTOM_TEMPLATES_DOCS } from './custom-templates.snippets';\n\n@Component({\n  selector: 'docs-custom-templates',\n  template: `\n    <div class=\"overflow-auto\">\n      <angular-generic-table\n        [data]=\"data\"\n        [config]=\"config$\"\n      ></angular-generic-table>\n    </div>\n    <ng-template #actions let-row=\"row\" let-col=\"col\" let-index=\"index\">\n      <button\n        class=\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\"\n        (click)=\"clickAction(row, col, index)\"\n      >\n        Click me!\n      </button>\n    </ng-template>\n    <ng-template #color let-row=\"row\" let-col=\"col\">\n      <div\n        [style.background]=\"row[col.key]\"\n        style=\"width: 1.5rem; height: 1.5rem; border-radius: 50%\"\n      ></div>\n    </ng-template>\n    {{ clicked }}\n    <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n  `,\n})\nexport class CustomTemplatesComponent implements OnInit {\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n  clicked = '';\n\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteColor: '#26BFAF',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteColor: '#0f0',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config$: ReplaySubject<TableConfig> = new ReplaySubject(1);\n\n  SNIPPETS = CUSTOM_TEMPLATES_DOCS;\n  ngOnInit(): void {\n    this.config$.next({\n      columns: {\n        firstName: {},\n        lastName: {},\n        gender: {},\n        favoriteColor: {\n          templateRef: this.color,\n        },\n        favoriteFood: {},\n        action: {\n          templateRef: this.actions,\n        },\n      },\n    });\n  }\n  clickAction(\n    row: TableRow,\n    column: { key: string; value: TableColumn },\n    index: number\n  ): void {\n    console.log('clicked row:', row, 'col:', column);\n    this.clicked = `clicked row number: ${index}`;\n  }\n}\n\nexport const CustomTemplates: Story<CustomTemplatesComponent> = (\n  args: CustomTemplatesComponent\n) => ({\n  props: args,\n  component: CustomTemplatesComponent,\n});\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Story } from '@storybook/addon-docs';\nimport {moduleMetadata} from \"@storybook/angular\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {CommonModule} from \"@angular/common\";\nimport {GenericTableCoreModule} from \"../../../../core/src/lib/core.module\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {TabsComponent} from \"../../app/components/tabs/tabs.component\";\nimport {CustomTemplates, CustomTemplatesComponent} from \"../../app/examples/custom-templates/custom-templates.component\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {GenericTablePaginationModule} from \"../../../../core/src/lib/pagination/pagination.module\";\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Meta title=\"Examples/Custom templates\" decorators={[moduleMetadata({\n      declarations: [CustomTemplatesComponent, TabsComponent],\n      imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n    })]} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"custom-templates\"\n    }}>{`Custom templates`}</h1>\n    <p>{`Define custom templates and assign them to different columns using the `}<inlineCode parentName=\"p\">{`templateRef`}</inlineCode>{` property when declaring `}<inlineCode parentName=\"p\">{`columns`}</inlineCode>{` in `}<inlineCode parentName=\"p\">{`config`}</inlineCode>{`.`}</p>\n    <Story name=\"Custom templates\" mdxType=\"Story\">\n  {CustomTemplates.bind({})}\n    </Story>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n\nexport const customTemplates = CustomTemplates.bind({});\ncustomTemplates.storyName = 'Custom templates';\ncustomTemplates.parameters = { storySource: { source: 'CustomTemplates.bind({})' } };\n\nconst componentMeta = { title: 'Examples/Custom templates', decorators: [moduleMetadata({\n  declarations: [CustomTemplatesComponent, TabsComponent],\n  imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n})], includeStories: [\"customTemplates\"],  };\n\nconst mdxStoryNameToKey = {\"Custom templates\":\"customTemplates\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","export const SIMPLE_SNIPPETS = [\n  {\n    name: 'footer-table.component.ts',\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { TableConfig, TableRow } from '@angular-generic-table/core';\nimport { DecimalPipe } from '@angular/common';\n\n@Component({\n  template: \\`\n    <div class=\"overflow-auto\">\n      <angular-generic-table [data]=\"data\" [config]=\"config\">\n      </angular-generic-table>\n    </div>\n    <ng-template #heightTmplRef let-row=\"row\" let-col=\"col\">\n      <ng-container *ngIf=\"row[col.key || col] as height\"\n        >{{ height }} m\n      </ng-container>\n    </ng-template>\n  \\`,\n})\nexport class FooterComponent implements OnInit {\n  @ViewChild('heightTmplRef', { static: true }) heightTmplRef:\n    | TemplateRef<any>\n    | undefined;\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n      age: 27,\n      weight: 85.457,\n      height: 1.85,\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n      age: 25,\n      weight: 60.123,\n      height: 1.65,\n    },\n  ];\n  config: TableConfig = {};\n  ngOnInit() {\n    this.config = {\n      columns: {\n        firstName: {},\n        lastName: {},\n        gender: {},\n        favoriteFood: {\n          class: 'text-end flex-end',\n        },\n        age: {\n          class: 'text-end',\n        },\n        weight: {\n          class: 'text-end',\n          transform: {\n            pipe: DecimalPipe,\n            args: ['1.0-2'],\n          },\n        },\n        height: {\n          class: 'text-end',\n          templateRef: this.heightTmplRef,\n        },\n      },\n      footer: {\n        headers: {\n          sum: 'Total',\n          numberOfWomen: 'Number of women',\n          numberOfMen: 'Number of men',\n          min: true,\n          max: true,\n          avg: true,\n          count: true,\n          static: true,\n          first: true,\n        },\n        rowOrder: [\n          'first',\n          'numberOfWomen',\n          'numberOfMen',\n          'min',\n          'max',\n          'sum',\n          'avg',\n          'count',\n        ],\n        columns: {\n          firstName: {},\n          lastName: {\n            static: 'n/a',\n          },\n          gender: {\n            numberOfWomen: (data: Array<TableRow>, key) => {\n              let count = 0;\n              for (let i = 0; i < data.length; i++) {\n                if (data[i][key] === 'female') {\n                  count++;\n                }\n              }\n              return count;\n            },\n            numberOfMen: (data: Array<TableRow>, key) => {\n              let count = 0;\n              for (let i = 0; i < data.length; i++) {\n                if (data[i][key] === 'male') {\n                  count++;\n                }\n              }\n              return count;\n            },\n          },\n          favoriteFood: {\n            first: (data: Array<TableRow>, key) => data[0][key],\n          },\n          age: {\n            sum: true,\n            avg: true,\n            count: true,\n            max: true,\n            min: true,\n          },\n          weight: {\n            sum: true,\n            avg: true,\n            min: true,\n          },\n          height: {\n            avg: true,\n            min: true,\n            max: true,\n          },\n        },\n      },\n    };\n  }\n\n}`,\n    language: 'typescript',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { BasicTableComponent } from './basic-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [BasicTableComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [BasicTableComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { Story } from '@storybook/angular/types-6-0';\nimport { SIMPLE_SNIPPETS } from './simple.snippets';\nimport { TableConfig, TableRow } from '@angular-generic-table/core';\nimport { DecimalPipe } from '@angular/common';\n\n@Component({\n  selector: 'docs-footer',\n  template: `\n    <div class=\"overflow-auto\">\n      <angular-generic-table [data]=\"data\" [config]=\"config\">\n      </angular-generic-table>\n    </div>\n    <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n    <ng-template #heightTmplRef let-row=\"row\" let-col=\"col\">\n      <ng-container *ngIf=\"row[col.key || col] as height\"\n        >{{ height }} m\n      </ng-container>\n    </ng-template>\n  `,\n})\nexport class FooterComponent implements OnInit {\n  @ViewChild('heightTmplRef', { static: true }) heightTmplRef:\n    | TemplateRef<any>\n    | undefined;\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n      age: 27,\n      weight: 85.457,\n      height: 1.85,\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n      age: 25,\n      weight: 60.123,\n      height: 1.65,\n    },\n  ];\n  config: TableConfig = {};\n\n  ngOnInit() {\n    this.config = {\n      mobileLayout: true,\n      columns: {\n        firstName: {\n          mobileHeader: true,\n        },\n        lastName: {\n          mobileHeader: true,\n        },\n        gender: {\n          mobileHeader: true,\n        },\n        favoriteFood: {\n          mobileHeader: true,\n          class: 'text-end flex-end',\n        },\n        age: {\n          mobileHeader: true,\n          class: 'text-end',\n        },\n        weight: {\n          mobileHeader: true,\n          class: 'text-end',\n          transform: {\n            pipe: DecimalPipe,\n            args: ['1.0-2'],\n          },\n        },\n        height: {\n          mobileHeader: true,\n          class: 'text-end',\n          templateRef: this.heightTmplRef,\n        },\n      },\n      footer: {\n        headers: {\n          sum: 'Total',\n          numberOfWomen: 'Number of women',\n          numberOfMen: 'Number of men',\n          min: true,\n          max: true,\n          avg: true,\n          count: true,\n          static: true,\n          first: true,\n        },\n        rowOrder: [\n          'first',\n          'numberOfWomen',\n          'numberOfMen',\n          'min',\n          'max',\n          'sum',\n          'avg',\n          'count',\n        ],\n        columns: {\n          firstName: {},\n          lastName: {\n            static: 'n/a',\n          },\n          gender: {\n            numberOfWomen: (data: Array<TableRow>, key) => {\n              let count = 0;\n              for (let i = 0; i < data.length; i++) {\n                if (data[i][key] === 'female') {\n                  count++;\n                }\n              }\n              return count;\n            },\n            numberOfMen: (data: Array<TableRow>, key) => {\n              let count = 0;\n              for (let i = 0; i < data.length; i++) {\n                if (data[i][key] === 'male') {\n                  count++;\n                }\n              }\n              return count;\n            },\n          },\n          favoriteFood: {\n            first: (data: Array<TableRow>, key) => data[0][key],\n          },\n          age: {\n            sum: true,\n            avg: true,\n            count: true,\n            max: true,\n            min: true,\n          },\n          weight: {\n            sum: true,\n            avg: true,\n            min: true,\n          },\n          height: {\n            avg: true,\n            min: true,\n            max: true,\n          },\n        },\n      },\n    };\n  }\n\n  SNIPPETS = SIMPLE_SNIPPETS;\n}\n\nexport const Footer: Story<FooterComponent> = (args: FooterComponent) => ({\n  props: args,\n  component: FooterComponent,\n});\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Story } from '@storybook/addon-docs';\nimport {moduleMetadata} from \"@storybook/angular\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {CommonModule} from \"@angular/common\";\nimport {GenericTableCoreModule} from \"../../../../core/src/lib/core.module\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {TabsComponent} from \"../../app/components/tabs/tabs.component\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {GenericTablePaginationModule} from \"../../../../core/src/lib/pagination/pagination.module\";\nimport { Footer, FooterComponent } from '../../app/examples/footer/footer.component';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst Preview = makeShortcode(\"Preview\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Meta title=\"Examples/Table footer\" decorators={[moduleMetadata({\n      declarations: [TabsComponent, FooterComponent],\n      imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n    })]} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"table-footer\"\n    }}>{`Table footer`}</h1>\n    <p>{`Use the footer config option to display accumulations like totals, count, min, max etc. or any other content for that matter in the footer of the table. Pass your own data or accumulator function or use the ones provided by Generic Table.`}</p>\n    <strong>Footer config</strong>\n    <p>{`The footer config has the following options which are described more in detail below.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"footer\": {\n    \"headers\"?: {\n      [key: 'sum'|'avg'|'count'|'max'|'min'|string]: string|boolean;\n    };\n    \"columns\"?: {\n      [key: string]: {\n        [key: 'sum'|'avg'|'count'|'max'|'min'|string]: boolean|number|string|Function;\n      };\n    };\n    \"rowOrder\"?: Array<'sum'|'avg'|'count'|'max'|'min'|string>;\n    \"emptyContent\"?: string;\n  };\n`}</code></pre>\n    <strong>Footer config options</strong>\n    <Preview mdxSource=\"%0A%3Cdiv%20class=%22overflow-auto%22%3E%0A%20%20%20%20%3Ctable%3E%0A%20%20%20%20%20%20%3Cthead%3E%0A%20%20%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%20%20%3Cth%3EOption%3C/th%3E%0A%20%20%20%20%20%20%20%20%3Cth%3EDescription%3C/th%3E%0A%20%20%20%20%20%20%3C/tr%3E%0A%20%20%20%20%20%20%3C/thead%3E%0A%20%20%20%20%20%20%3Ctbody%3E%0A%20%20%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%20%20%3Ctd%3E%3Ccode%3Eheaders%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%20%20%3Ctd%3EKey%20value%20pairs%20for%20headers,%20each%20key%20corresponds%20to%20name%20of%20accumulator.%3C/td%3E%0A%20%20%20%20%20%20%3C/tr%3E%0A%20%20%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%20%20%3Ctd%3E%3Ccode%3Ecolumns%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%20%20%3Ctd%3EKey%20value%20pairs%20with%20columns%20that%20should%20display%20content/accumulations.%20Specify%20which%20accumulator%20to%20use%20%3Ccode%3Emin%3C/code%3E,%20%3Ccode%3Emax%3C/code%3E,%20%3Ccode%3Eavg%3C/code%3E,%20%3Ccode%3Ecount%3C/code%3E,%20%3Ccode%3Esum%3C/code%3E%20or%20define%20your%20own%20one%20or%20add%20fixed%20content%20to%20display.%20%3C/td%3E%0A%20%20%20%20%20%20%3C/tr%3E%0A%20%20%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%20%20%3Ctd%3E%3Ccode%3ErowOrder%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%20%20%3Ctd%3ERow%20order%20for%20accumulators.%3C/td%3E%0A%20%20%20%20%20%20%3C/tr%3E%0A%20%20%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%20%20%3Ctd%3E%3Ccode%3EemptyContent%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%20%20%3Ctd%3EContent%20to%20display%20when%20accumulation%20is%20undefined%20or%20null%20for%20a%20field.%3C/td%3E%0A%20%20%20%20%20%20%3C/tr%3E%0A%20%20%20%20%20%20%3C/tbody%3E%0A%20%20%20%20%3C/table%3E%0A%20%20%3C/div%3E%0A\" mdxType=\"Preview\">\n  <div class=\"overflow-auto\">\n    <table>\n      <thead>\n      <tr>\n        <th>Option</th>\n        <th>Description</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr>\n        <td><code>headers</code></td>\n        <td>Key value pairs for headers, each key corresponds to name of accumulator.</td>\n      </tr>\n      <tr>\n        <td><code>columns</code></td>\n        <td>Key value pairs with columns that should display content/accumulations. Specify which accumulator to use <code>min</code>, <code>max</code>, <code>avg</code>, <code>count</code>, <code>sum</code> or define your own one or add fixed content to display. </td>\n      </tr>\n      <tr>\n        <td><code>rowOrder</code></td>\n        <td>Row order for accumulators.</td>\n      </tr>\n      <tr>\n        <td><code>emptyContent</code></td>\n        <td>Content to display when accumulation is undefined or null for a field.</td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n    </Preview>\n    <strong>Example config</strong>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"footer\": {\n  \"headers\": {\n    \"customFn\": \"Custom\",\n    \"min\": true,\n  },\n  \"columns\": {\n    \"foo\": {\n      \"min\": true,\n      \"max\": true,\n      \"customFn\": (data: Array<TableRow>, key: string) => ...,\n    }\n  },\n  \"rowOrder\": [\"min\", \"max\", \"customFn\"],\n}\n`}</code></pre>\n    <strong>Example</strong><br />\nTake a look at the <a href=\"examples?path=/docs/examples-multiple-features--multiple-features\">Multiple features example</a> to view another configuration.\n    <br />\n    <br />\n    <Story name=\"Table footer\" mdxType=\"Story\">\n  {Footer.bind({})}\n    </Story>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n\nexport const tableFooter = Footer.bind({});\ntableFooter.storyName = 'Table footer';\ntableFooter.parameters = { storySource: { source: 'Footer.bind({})' } };\n\nconst componentMeta = { title: 'Examples/Table footer', decorators: [moduleMetadata({\n  declarations: [TabsComponent, FooterComponent],\n  imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n})], includeStories: [\"tableFooter\"],  };\n\nconst mdxStoryNameToKey = {\"Table footer\":\"tableFooter\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","export const HORIZONTAL_TABLE_SNIPPETS = [\n  {\n    name: 'horizontal-table.component.ts',\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { GtDeltaComponent, TableConfig } from '@angular-generic-table/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'docs-horizontal',\n  templateUrl: './horizontal-table.component.html',\n  styles: [],\n})\nexport class TransposeComponent implements OnInit {\n  @ViewChild('feelings', { static: true }) feelings:\n    | TemplateRef<any>\n    | undefined;\n  @ViewChild('delta', { static: true }) delta: TemplateRef<GtDeltaComponent> | undefined;\n  @ViewChild('deltaIndex', { static: true }) deltaIndex:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  loading$ = new BehaviorSubject(false);\n  config: TableConfig = {};\n  data: any = [];\n\n  ngOnInit(): void {\n    this.config = {\n      stickyHeaders: {\n        row: true,\n      },\n      mobileLayout: true,\n      rows: {\n        year: {\n          class: 'text-end',\n          header: false\n        },\n        value: {\n          class: 'text-end'\n        },\n        delta: {\n          header: 'Delta %',\n          templateRef: this.delta,\n          class: 'text-end'\n        },\n        deltaIndex: {\n          header: 'Since inception %',\n          templateRef: this.deltaIndex,\n          class: 'text-end'\n        },\n        feeling: {\n          templateRef: this.feelings,\n          class: 'text-end'\n        },\n      },\n    };\n    this.load();\n  }\n  simulateLoad(): void {\n    this.loading$.next(true);\n    // set loading state to false after 2 seconds\n    setTimeout(() => this.loading$.next(false), 2000);\n  }\n  empty(): void {\n    this.data = [];\n  }\n  load(): void {\n    this.data = [\n      {\n        year: '2017',\n        value: 50,\n        feeling: 'neutral'\n      },\n      {\n        year: '2018',\n        value: 75,\n        feeling: 'positive'\n      },\n      {\n        year: '2019',\n        value: 100,\n        feeling: 'thrilled'\n      },\n      {\n        year: '2020',\n        value: 250,\n        feeling: 'thrilled'\n      },\n      {\n        year: '2021',\n        value: 50,\n        feeling: 'negative'\n      }\n    ];\n  }\n}\n`,\n    language: 'typescript',\n  },\n  {\n    name: 'horizontal-table.component.html',\n    code: `<button class=\"btn btn-outline-primary\" (click)=\"simulateLoad()\">Simulate load</button>\n<button class=\"btn btn-outline-danger mx-3\" (click)=\"empty()\">Empty</button>\n<button class=\"btn btn-outline-primary\" (click)=\"load()\">Reset</button>\n<div class=\"overflow-auto\">\n  <angular-generic-table\n    [data]=\"data\"\n    [config]=\"config\"\n    [loading]=\"loading$\"\n  >\n    <div class=\"table-loading gt-skeleton-loader\"></div>\n    <div class=\"table-no-data alert alert-info mt-3\">Table is empty</div>\n  </angular-generic-table>\n</div>\n<ng-template #feelings let-row=\"row\" let-col=\"col\">\n  <div [ngSwitch]=\"row[col.key]\">\n    <ng-container *ngSwitchCase=\"'thrilled'\">😀</ng-container>\n    <ng-container *ngSwitchCase=\"'positive'\">🙂</ng-container>\n    <ng-container *ngSwitchCase=\"'neutral'\">😐</ng-container>\n    <ng-container *ngSwitchCase=\"'negative'\">😭</ng-container>\n  </div>\n</ng-template>\n<ng-template #delta let-data=\"data\" let-index=\"index\">\n  <gt-delta [index]=\"index\" [data]=\"data\"></gt-delta>\n</ng-template>\n<ng-template #deltaIndex let-data=\"data\" let-index=\"index\">\n  <gt-delta [index]=\"index\" [baseIndex]=\"0\" [data]=\"data\"></gt-delta>\n</ng-template>`,\n    language: 'xml',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HorizontalTableComponent } from './horizontal-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [HorizontalTableComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [HorizontalTableComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { Story } from '@storybook/angular/types-6-0';\nimport { HORIZONTAL_TABLE_SNIPPETS } from './horizontal-table.snippets';\nimport { GtDeltaComponent, TableConfig } from '@angular-generic-table/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'docs-horizontal-table',\n  template: `\n    <button class=\"btn btn-outline-primary\" (click)=\"simulateLoad()\">\n      Simulate load\n    </button>\n    <button class=\"btn btn-outline-danger mx-3\" (click)=\"empty()\">Empty</button>\n    <button class=\"btn btn-outline-primary\" (click)=\"load()\">Reset</button>\n    <div class=\"overflow-auto\">\n      <angular-generic-table\n        [data]=\"data\"\n        [config]=\"config\"\n        [loading]=\"loading$\"\n      >\n        <div class=\"table-loading gt-skeleton-loader\"></div>\n        <div class=\"table-no-data alert alert-info mt-3\">Table is empty</div>\n      </angular-generic-table>\n    </div>\n    <ng-template #feelings let-row=\"row\" let-col=\"col\">\n      <div [ngSwitch]=\"row[col.key]\">\n        <ng-container *ngSwitchCase=\"'thrilled'\">😀</ng-container>\n        <ng-container *ngSwitchCase=\"'positive'\">🙂</ng-container>\n        <ng-container *ngSwitchCase=\"'neutral'\">😐</ng-container>\n        <ng-container *ngSwitchCase=\"'negative'\">😭</ng-container>\n      </div>\n    </ng-template>\n    <ng-template #delta let-data=\"data\" let-index=\"index\">\n      <gt-delta [index]=\"index\" [data]=\"data\"></gt-delta>\n    </ng-template>\n    <ng-template #deltaIndex let-data=\"data\" let-index=\"index\">\n      <gt-delta [index]=\"index\" [baseIndex]=\"0\" [data]=\"data\"></gt-delta>\n    </ng-template>\n    <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n  `,\n  styles: [],\n})\nexport class HorizontalTableComponent implements OnInit {\n  @ViewChild('feelings', { static: true }) feelings:\n    | TemplateRef<any>\n    | undefined;\n  @ViewChild('delta', { static: true }) delta:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  @ViewChild('deltaIndex', { static: true }) deltaIndex:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  loading$ = new BehaviorSubject(false);\n  config: TableConfig = {};\n  data: any = [];\n\n  ngOnInit(): void {\n    this.config = {\n      stickyHeaders: {\n        row: true,\n      },\n      mobileLayout: true,\n      rows: {\n        year: {\n          class: 'text-end',\n          header: false,\n        },\n        value: {\n          class: 'text-end',\n        },\n        delta: {\n          header: 'Delta %',\n          templateRef: this.delta,\n          class: 'text-end',\n        },\n        deltaIndex: {\n          header: 'Since inception %',\n          templateRef: this.deltaIndex,\n          class: 'text-end',\n        },\n        feeling: {\n          templateRef: this.feelings,\n          class: 'text-end',\n        },\n      },\n    };\n    this.load();\n  }\n  simulateLoad(): void {\n    this.loading$.next(true);\n    // set loading state to false after 2 seconds\n    setTimeout(() => this.loading$.next(false), 2000);\n  }\n  empty(): void {\n    this.data = [];\n  }\n  load(): void {\n    this.data = [\n      {\n        year: '2017',\n        value: 50,\n        feeling: 'neutral',\n      },\n      {\n        year: '2018',\n        value: 75,\n        feeling: 'positive',\n      },\n      {\n        year: '2019',\n        value: 100,\n        feeling: 'thrilled',\n      },\n      {\n        year: '2020',\n        value: 250,\n        feeling: 'thrilled',\n      },\n      {\n        year: '2021',\n        value: 50,\n        feeling: 'negative',\n      },\n    ];\n  }\n\n  SNIPPETS = HORIZONTAL_TABLE_SNIPPETS;\n}\n\nexport const Horizontal: Story<HorizontalTableComponent> = (\n  args: HorizontalTableComponent\n) => ({\n  props: args,\n  component: HorizontalTableComponent,\n});\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Story } from '@storybook/addon-docs';\nimport {moduleMetadata} from \"@storybook/angular\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {CommonModule} from \"@angular/common\";\nimport {GenericTableCoreModule} from \"../../../../core/src/lib/core.module\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {TabsComponent} from \"../../app/components/tabs/tabs.component\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {GenericTablePaginationModule} from \"../../../../core/src/lib/pagination/pagination.module\";\nimport {Horizontal, HorizontalTableComponent} from \"../../app/examples/horizontal-table/horizontal-table.component\";\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Meta title=\"Examples/Horizontal layout\" decorators={[moduleMetadata({\n      declarations: [HorizontalTableComponent, TabsComponent],\n      imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n    })]} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"horizontal-layout\"\n    }}>{`Horizontal layout`}</h1>\n    <p>{`Declare `}<inlineCode parentName=\"p\">{`rows`}</inlineCode>{` instead of `}<inlineCode parentName=\"p\">{`columns`}</inlineCode>{` to get a horizontal table where records are added as columns instead of rows. The example below freezes the first column by setting `}<inlineCode parentName=\"p\">{`stickyHeaders.row`}</inlineCode>{` to true, it also uses `}<inlineCode parentName=\"p\">{`<gt-delta>`}</inlineCode>{` which is a helper component to display the delta between two values (by default it compares against previous row or column).`}</p>\n    <Story name=\"Horizontal layout\" mdxType=\"Story\">\n  {Horizontal.bind({})}\n    </Story>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n\nexport const horizontalLayout = Horizontal.bind({});\nhorizontalLayout.storyName = 'Horizontal layout';\nhorizontalLayout.parameters = { storySource: { source: 'Horizontal.bind({})' } };\n\nconst componentMeta = { title: 'Examples/Horizontal layout', decorators: [moduleMetadata({\n  declarations: [HorizontalTableComponent, TabsComponent],\n  imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n})], includeStories: [\"horizontalLayout\"],  };\n\nconst mdxStoryNameToKey = {\"Horizontal layout\":\"horizontalLayout\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","export const MOBILE_LAYOUT_SNIPPETS = [\n  {\n    name: 'mobile-layout.component.ts',\n    code: `import {Component, Pipe, PipeTransform, TemplateRef, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {TableColumn, TableConfig, TableRow} from \"@angular-generic-table/core\";\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {map} from \"rxjs/operators\";\n\n@Pipe({\n  name: 'genderPipe',\n})\nexport class GenderPipe implements PipeTransform {\n  transform(gender: 'male' | 'female'): string {\n  return gender === 'male' ? '👨' : '👩';\n  }\n}\n\n@Component({\n  selector: 'docs-mobile-layout',\n  template: \\`\n    <div class=\"d-flex justify-content-end mb-1 align-items-center\">\n      {{clicked}} <button class=\"btn btn-link d-sm-none \" (click)=\"toggleLayout()\">{{(mobileLayout$ | async)? 'Desktop ' : 'Mobile '}} layout</button>\n    </div>\n    <div [class.overflow-auto]=\"(mobileLayout$ | async) === false\">\n      <angular-generic-table [data]=\"data\" [config]=\"config$\"></angular-generic-table>\n    </div>\n    <ng-template #actions let-row=\"row\" let-col=\"col\" let-index=\"index\">\n      <button class=\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\" (click)=\"clickAction(row, col, index)\">Click me!</button>\n    </ng-template>\n  \\`,\n  styles: [\\`\n    .table th {\n      white-space: nowrap;\n    }\n  \\`],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MobileLayoutComponent {\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  clicked = '';\n\n  mobileLayout$ = new BehaviorSubject(true);\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config$: Observable<TableConfig> = this.mobileLayout$.pipe(\n    map(mobileLayout => ({\n      mobileLayout,\n      columns: {\n        firstName: {\n          mobileHeader: true,\n          sortable: true\n        },\n        lastName: {\n          mobileHeader: true,\n          sortable: true\n        },\n        gender: {\n          mobileHeader: true,\n          transform: {\n            pipe: GenderPipe\n          }\n        },\n        favoriteFood: {\n          mobileHeader: true\n        },\n        action: {\n          mobileHeader: false,\n          header: false,\n          templateRef: this.actions,\n        },\n      },\n    }))\n  );\n\n  toggleLayout = (): void => {\n    this.mobileLayout$.next(!this.mobileLayout$.getValue());\n  }\n  clickAction(row: TableRow, column: { key: string; value: TableColumn }, index: number): void {\n    console.log('clicked row:', row, 'col:', column);\n    this.clicked = \\`Clicked row number: \\${index}\\`;\n  }\n}`,\n    language: 'typescript',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { MobileLayoutComponent } from './mobile-layout.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [MobileLayoutComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [MobileLayoutComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import {\n  Component,\n  Pipe,\n  PipeTransform,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Story } from '@storybook/angular/types-6-0';\nimport {\n  TableColumn,\n  TableConfig,\n  TableRow,\n} from '@angular-generic-table/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MOBILE_LAYOUT_SNIPPETS } from './mobileLayout.snippets';\n\n@Pipe({\n  name: 'genderPipe',\n})\nexport class GenderPipe implements PipeTransform {\n  transform(gender: 'male' | 'female'): string {\n    return gender === 'male' ? '👨' : '👩';\n  }\n}\n\n@Component({\n  selector: 'docs-mobile-layout',\n  template: `\n    <div class=\"d-flex justify-content-end mb-1 align-items-center\">\n      {{ clicked }}\n      <button class=\"btn btn-link d-sm-none \" (click)=\"toggleLayout()\">\n        {{ (mobileLayout$ | async) ? 'Desktop ' : 'Mobile ' }} layout\n      </button>\n    </div>\n    <div [class.overflow-auto]=\"(mobileLayout$ | async) === false\">\n      <angular-generic-table\n        [data]=\"data\"\n        [config]=\"config$\"\n      ></angular-generic-table>\n    </div>\n    <ng-template #actions let-row=\"row\" let-col=\"col\" let-index=\"index\">\n      <button\n        class=\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\"\n        (click)=\"clickAction(row, col, index)\"\n      >\n        Click me!\n      </button>\n    </ng-template>\n    <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n  `,\n  styles: [\n    `\n      .table th {\n        white-space: nowrap;\n      }\n    `,\n  ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MobileLayoutComponent {\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  clicked = '';\n\n  mobileLayout$ = new BehaviorSubject(true);\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config$: Observable<TableConfig> = this.mobileLayout$.pipe(\n    map((mobileLayout) => ({\n      mobileLayout,\n      columns: {\n        firstName: {\n          mobileHeader: true,\n          sortable: true,\n        },\n        lastName: {\n          mobileHeader: true,\n          sortable: true,\n        },\n        gender: {\n          mobileHeader: true,\n          transform: {\n            pipe: GenderPipe,\n          },\n        },\n        favoriteFood: {\n          mobileHeader: true,\n        },\n        action: {\n          mobileHeader: false,\n          header: false,\n          templateRef: this.actions,\n        },\n      },\n    }))\n  );\n\n  SNIPPETS = MOBILE_LAYOUT_SNIPPETS;\n\n  toggleLayout = (): void => {\n    this.mobileLayout$.next(!this.mobileLayout$.getValue());\n  };\n  clickAction(\n    row: TableRow,\n    column: { key: string; value: TableColumn },\n    index: number\n  ): void {\n    console.log('clicked row:', row, 'col:', column);\n    this.clicked = `Clicked row number: ${index}`;\n  }\n}\n\nexport const Mobile: Story<MobileLayoutComponent> = (\n  args: MobileLayoutComponent\n) => ({\n  props: args,\n  component: MobileLayoutComponent,\n});\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Story } from '@storybook/addon-docs';\nimport {moduleMetadata} from \"@storybook/angular\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {CommonModule} from \"@angular/common\";\nimport {GenericTableCoreModule} from \"../../../../core/src/lib/core.module\";\nimport {Mobile} from \"../../app/examples/mobile-layout/mobile-layout.component\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {TabsComponent} from \"../../app/components/tabs/tabs.component\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {GenericTablePaginationModule} from \"../../../../core/src/lib/pagination/pagination.module\";\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Meta title=\"Examples/Mobile layout\" decorators={[moduleMetadata({\n      declarations: [TabsComponent],\n      imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n    })]} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"mobile-layout\"\n    }}>{`Mobile layout`}</h1>\n    <p>{`Use mobile layout for table by setting `}<inlineCode parentName=\"p\">{`mobileLayout`}</inlineCode>{` config option to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` for table (or by adding class `}<inlineCode parentName=\"p\">{`.table-mobile`}</inlineCode>{` to table). Using config option is the preferred way as it will not only add the correct styling but also hide mobile headers automatically when option changes. Generic table uses CSS to create an layout optimized for mobiles, i.e the markup stays the same and it's still use table elements for rendering. Resize the window or view the example below on a small screen to checkout the mobile version as well as the ability toggle to desktop layout.`}</p>\n    <h3 {...{\n      \"id\": \"set-breakpoint-for-mobile-layout\"\n    }}>{`Set breakpoint for mobile layout`}</h3>\n    <p>{`Since Generic table relies solely on CSS and media queries to accomplish the mobile layout, it's just a matter of declaring a breakpoint using `}<inlineCode parentName=\"p\">{`SCSS`}</inlineCode>{`. Override the default value of `}<inlineCode parentName=\"p\">{`576px`}</inlineCode>{`\n(bootstrap breakpoint for small screens), by passing a new value for `}<inlineCode parentName=\"p\">{`$mobile-style-max-width`}</inlineCode>{` like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`@use '@angular-generic-table/core/scss' as generic-table-styles with (\n  $mobile-style-max-width: 375px\n);\n@include generic-table-styles.styles();\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h3>\n    <Story name=\"Mobile layout\" mdxType=\"Story\">\n  {Mobile.bind({})}\n    </Story>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n\nexport const mobileLayout = Mobile.bind({});\nmobileLayout.storyName = 'Mobile layout';\nmobileLayout.parameters = { storySource: { source: 'Mobile.bind({})' } };\n\nconst componentMeta = { title: 'Examples/Mobile layout', decorators: [moduleMetadata({\n  declarations: [TabsComponent],\n  imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n})], includeStories: [\"mobileLayout\"],  };\n\nconst mdxStoryNameToKey = {\"Mobile layout\":\"mobileLayout\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","export const NESTED_SNIPPETS = [\n  {\n    name: 'nested-data.component.ts',\n    code: `import {Component, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {TableConfig, TableRows} from \"@angular-generic-table/core\";\n\ninterface NestedData {\n  name: {\n    first: string;\n    last: string;\n  };\n  data: {\n    details?: {\n      gender: 'male' | 'female';\n      favoriteFood: 'Pasta' | 'Pizza';\n    };\n  };\n}\n\ninterface Data {\n  firstName: string;\n  lastName: string;\n  gender: 'male' | 'female';\n  favoriteFood: 'Pasta' | 'Pizza';\n  missing: string;\n}\n@Component({\n  selector: 'nested-data',\n  template: \\`\n    <div class=\"row gy-3\">\n      <div class=\"col col-sm-auto\">\n        <button class=\"btn btn-outline-primary mb-3\" (click)=\"loadData()\">\n          Load other data\n        </button>\n      </div>\n      <div class=\"col col-sm-auto\">\n        <button class=\"btn btn-outline-primary mb-3\" (click)=\"resetData()\">\n          Reset\n        </button>\n      </div>\n    </div>\n    <angular-generic-table [data]=\"data\" [config]=\"config\"></angular-generic-table>\n    <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n    <ng-template #gender let-row=\"row\" let-col=\"col\">\n      <div [ngSwitch]=\"row[col.key]\">\n        <ng-container *ngSwitchCase=\"'male'\">♂️</ng-container>\n        <ng-container *ngSwitchCase=\"'female'\">♀️</ng-container>\n      </div>\n    </ng-template>\n  \\`,\n  styles: [],\n})\nexport class NestedDataComponent implements OnInit {\n  @ViewChild('gender', { static: true }) gender: TemplateRef<any> | undefined;\n\n  config: TableConfig<Data> = {};\n  data: Array<NestedData> = [];\n  ngOnInit(): void {\n    this.resetData();\n    this.config = {\n      columns: {\n        firstName: {\n          sortable: true,\n          mapTo: { path: 'name.first' },\n        },\n        lastName: {\n          sortable: true,\n          mapTo: { path: 'name.last' },\n        },\n        gender: {\n          mapTo: { path: 'data.details.gender' },\n          templateRef: this.gender,\n        },\n        favoriteFood: {\n          sortable: true,\n          mapTo: { path: 'data.details.favoriteFood', missingValue: 'n/a' },\n        },\n        missing: {\n          mapTo: { path: 'data.missingKey.noMatch', missingValue: 'n/a' },\n        },\n      },\n    };\n  }\n\n  resetData() {\n    this.data = [\n      {\n        name: {\n          first: 'Peter',\n          last: 'Parker',\n        },\n        data: {\n          details: {\n            gender: 'male',\n            favoriteFood: 'Pasta',\n          },\n        },\n      },\n      {\n        name: {\n          first: 'Mary Jane',\n          last: 'Watson',\n        },\n        data: {\n          details: {\n            gender: 'female',\n            favoriteFood: 'Pizza',\n          },\n        },\n      },\n    ];\n  }\n\n  loadData(): void {\n    this.data = [\n      {\n        name: {\n          first: 'John',\n          last: 'Doe',\n        },\n        data: {\n          details: {\n            gender: 'male',\n            favoriteFood: 'Pasta',\n          },\n        },\n      },\n      {\n        name: {\n          first: 'Jane',\n          last: 'Doe',\n        },\n        data: {\n          details: {\n            gender: 'female',\n            favoriteFood: 'Pizza',\n          },\n        },\n      },\n      {\n        name: {\n          first: 'Foo',\n          last: 'Bar',\n        },\n        data: {},\n      },\n    ];\n  }\n}`,\n    language: 'typescript',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { NestedDataComponent } from './nested-data.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [NestedDataComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [NestedDataComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import { NESTED_SNIPPETS } from './nested.snippets';\nimport { Story } from '@storybook/angular/types-6-0';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { TableConfig } from '@angular-generic-table/core';\ninterface NestedData {\n  name: {\n    first: string;\n    last: string;\n  };\n  data: {\n    details?: {\n      gender: 'male' | 'female';\n      favoriteFood: 'Pasta' | 'Pizza';\n    };\n  };\n}\n\ninterface Data {\n  firstName: string;\n  lastName: string;\n  gender: 'male' | 'female';\n  favoriteFood: 'Pasta' | 'Pizza';\n  missing: string;\n}\n@Component({\n  selector: 'nested-data',\n  template: `\n    <div class=\"row gy-3\">\n      <div class=\"col col-sm-auto\">\n        <button class=\"btn btn-outline-primary mb-3\" (click)=\"loadData()\">\n          Load other data\n        </button>\n      </div>\n      <div class=\"col col-sm-auto\">\n        <button class=\"btn btn-outline-primary mb-3\" (click)=\"resetData()\">\n          Reset\n        </button>\n      </div>\n    </div>\n    <div class=\"overflow-auto\">\n      <angular-generic-table\n        [data]=\"data\"\n        [config]=\"config\"\n      ></angular-generic-table>\n    </div>\n    <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n    <ng-template #gender let-row=\"row\" let-col=\"col\">\n      <div [ngSwitch]=\"row[col.key]\">\n        <ng-container *ngSwitchCase=\"'male'\">♂️</ng-container>\n        <ng-container *ngSwitchCase=\"'female'\">♀️</ng-container>\n      </div>\n    </ng-template>\n  `,\n  styles: [],\n})\nexport class NestedDataComponent implements OnInit {\n  @ViewChild('gender', { static: true }) gender: TemplateRef<any> | undefined;\n\n  config: TableConfig<Data> = {};\n  data: Array<NestedData> = [];\n  ngOnInit(): void {\n    this.resetData();\n    this.config = {\n      columns: {\n        firstName: {\n          sortable: true,\n          mapTo: { path: 'name.first' },\n        },\n        lastName: {\n          sortable: true,\n          mapTo: { path: 'name.last' },\n        },\n        gender: {\n          mapTo: { path: 'data.details.gender' },\n          templateRef: this.gender,\n        },\n        favoriteFood: {\n          sortable: true,\n          mapTo: { path: 'data.details.favoriteFood', missingValue: 'n/a' },\n        },\n        missing: {\n          mapTo: { path: 'data.missingKey.noMatch', missingValue: 'n/a' },\n        },\n      },\n    };\n  }\n\n  resetData() {\n    this.data = [\n      {\n        name: {\n          first: 'Peter',\n          last: 'Parker',\n        },\n        data: {\n          details: {\n            gender: 'male',\n            favoriteFood: 'Pasta',\n          },\n        },\n      },\n      {\n        name: {\n          first: 'Mary Jane',\n          last: 'Watson',\n        },\n        data: {\n          details: {\n            gender: 'female',\n            favoriteFood: 'Pizza',\n          },\n        },\n      },\n    ];\n  }\n\n  loadData(): void {\n    this.data = [\n      {\n        name: {\n          first: 'John',\n          last: 'Doe',\n        },\n        data: {\n          details: {\n            gender: 'male',\n            favoriteFood: 'Pasta',\n          },\n        },\n      },\n      {\n        name: {\n          first: 'Jane',\n          last: 'Doe',\n        },\n        data: {\n          details: {\n            gender: 'female',\n            favoriteFood: 'Pizza',\n          },\n        },\n      },\n      {\n        name: {\n          first: 'Foo',\n          last: 'Bar',\n        },\n        data: {},\n      },\n    ];\n  }\n\n  SNIPPETS = NESTED_SNIPPETS;\n}\n\nexport const Nested: Story<NestedDataComponent> = (\n  args: NestedDataComponent\n) => ({\n  props: args,\n  component: NestedDataComponent,\n});\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Story } from '@storybook/addon-docs';\nimport {moduleMetadata} from \"@storybook/angular\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {CommonModule} from \"@angular/common\";\nimport {GenericTableCoreModule} from \"../../../../core/src/lib/core.module\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {TabsComponent} from \"../../app/components/tabs/tabs.component\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {GenericTablePaginationModule} from \"../../../../core/src/lib/pagination/pagination.module\";\nimport {Nested, NestedDataComponent} from \"../../app/examples/nested-data/nested-data.component\";\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Meta title=\"Examples/Nested data\" decorators={[moduleMetadata({\n      declarations: [TabsComponent, NestedDataComponent],\n      imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n    })]} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"nested-data\"\n    }}>{`Nested data`}</h1>\n    <p>{`Generic table can generate tables based on nested JSON structures, just use `}<inlineCode parentName=\"p\">{`mapTo`}</inlineCode>{` option and pass string path to object value as `}<inlineCode parentName=\"p\">{`path`}</inlineCode>{` and optionally a `}<inlineCode parentName=\"p\">{`missingValue`}</inlineCode>{` value which will be used if key is undefined.`}</p>\n    <Story name=\"Nested data\" mdxType=\"Story\">\n  {Nested.bind({})}\n    </Story>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n\nexport const nestedData = Nested.bind({});\nnestedData.storyName = 'Nested data';\nnestedData.parameters = { storySource: { source: 'Nested.bind({})' } };\n\nconst componentMeta = { title: 'Examples/Nested data', decorators: [moduleMetadata({\n  declarations: [TabsComponent, NestedDataComponent],\n  imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n})], includeStories: [\"nestedData\"],  };\n\nconst mdxStoryNameToKey = {\"Nested data\":\"nestedData\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Story } from '@storybook/addon-docs';\nimport {moduleMetadata} from \"@storybook/angular\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {CommonModule} from \"@angular/common\";\nimport {GenericTableCoreModule} from \"../../../../../core/src/lib/core.module\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {TabsComponent} from \"../../../app/components/tabs/tabs.component\";\nimport {Pagination, PaginationComponent} from \"../../../app/examples/pagination/pagination.component\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {GenericTablePaginationModule} from \"../../../../../core/src/lib/pagination/pagination.module\";\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Meta title=\"Examples/Pagination\" decorators={[moduleMetadata({\n      declarations: [PaginationComponent, TabsComponent],\n      imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n    })]} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"client-side-example\"\n    }}>{`Client side example`}</h1>\n    <p>{`The example below shows a simple example when pagination is done and handled client side, i.e. the table has all the data it can display.`}</p>\n    <h3 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h3>\n    <Story name=\"Client-side\" mdxType=\"Story\">\n  {Pagination.bind({})}\n    </Story>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n\nexport const clientSide = Pagination.bind({});\nclientSide.storyName = 'Client-side';\nclientSide.parameters = { storySource: { source: 'Pagination.bind({})' } };\n\nconst componentMeta = { title: 'Examples/Pagination', decorators: [moduleMetadata({\n  declarations: [PaginationComponent, TabsComponent],\n  imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n})], includeStories: [\"clientSide\"],  };\n\nconst mdxStoryNameToKey = {\"Client-side\":\"clientSide\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Story } from '@storybook/addon-docs';\nimport {moduleMetadata} from \"@storybook/angular\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {CommonModule} from \"@angular/common\";\nimport {GenericTableCoreModule} from \"../../../../../core/src/lib/core.module\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {TabsComponent} from \"../../../app/components/tabs/tabs.component\";\nimport {Pagination, PaginationComponent} from \"../../../app/examples/pagination/pagination.component\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {GenericTablePaginationModule} from \"../../../../../core/src/lib/pagination/pagination.module\";\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst Preview = makeShortcode(\"Preview\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Meta title=\"Examples/Pagination/Setup\" decorators={[moduleMetadata({\n      declarations: [PaginationComponent, TabsComponent],\n      imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n    })]} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"pagination---get-started\"\n    }}>{`Pagination - Get started`}</h1>\n    <p>{`What would a table be without pagination? To simplify things for you, Angular Generic Table provides a basic pagination component. Just pass a reference to the table like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-markup\"\n      }}>{`<angular-generic-table #tableRef\" .../>\n<angular-generic-table-pagination [table]=\"tableRef\"/>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"inputs\"\n    }}>{`Inputs`}</h3>\n    <Preview mdxSource=\"%0A%3Cdiv%20class=%22overflow-auto%22%3E%0A%20%20%3Ctable%3E%0A%20%20%20%20%3Cthead%3E%0A%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%3Cth%3E@Input%3C/th%3E%0A%20%20%20%20%20%20%3Cth%3EDescription%3C/th%3E%0A%20%20%20%20%20%20%3Cth%3EType%3C/th%3E%0A%20%20%20%20%20%20%3Cth%3EDefault%3C/th%3E%0A%20%20%20%20%3C/tr%3E%0A%20%20%20%20%3C/thead%3E%0A%20%20%20%20%3Ctbody%3E%0A%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3Etable%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3ETable%20connected%20to%20the%20pagination%20control.%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3ETable%20component%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3En/a%3C/code%3E%3C/td%3E%0A%20%20%20%20%3C/tr%3E%0A%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3EpagingInfo%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3EPass%20pagination%20data%20when%20pagination%20is%20done%20server-side.%0A%20%20%20%20%20%20%20%20%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20%3Ccode%3E&#123;%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20%20%20&nbsp;pagePrevious:%20null,%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20%20%20&nbsp;pageCurrent:%201,%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20%20%20&nbsp;pageNext:%202,%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20%20%20&nbsp;pageSize:%2010,%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20%20%20&nbsp;numberOfRecords:%20100%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20%20%20&#125;%0A%20%20%20%20%20%20%20%20%3C/code%3E%0A%20%20%20%20%20%20%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3EGtPaginationInfo%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3En/a%3C/code%3E%3C/td%3E%0A%20%20%20%20%3C/tr%3E%0A%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3EpaginationLength%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3ENumber%20of%20pagination%20buttons%20to%20show.%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3Enumber%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3E5%3C/code%3E%3C/td%3E%0A%20%20%20%20%3C/tr%3E%0A%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3Eclasses%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3EClasses%20for%20pagination%20elements.%20Pass%20an%20object%20with%20key%20values,%20where%20key%20is%20element%20and%20value%20is%20classes%20to%20be%20applied.%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3EGtPaginationClasses%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3E&#123;%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20&nbsp;nav:%20null,%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20&nbsp;ul:%20'pagination',%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20&nbsp;li:%20'page-item',%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20&nbsp;button:%20'page-link'%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20&#125;%0A%20%20%20%20%20%20%3C/code%3E%3C/td%3E%0A%20%20%20%20%3C/tr%3E%0A%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3EariaLabels%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3EAria%20labels%20for%20pagination%20elements.%20Pass%20an%20object%20with%20key%20values,%20where%20key%20is%20element%20and%20value%20is%20aria%20label%20to%20use.%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3EGtPaginationAriaLabels%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3E%0A%20%20%20%20%20%20%20%20&#123;%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20&nbsp;nav:%20'Table%20navigation',%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20&nbsp;button:%20'Go%20to%20page%20'%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20&#125;%0A%20%20%20%20%20%20%3C/code%3E%3C/td%3E%0A%20%20%20%20%3C/tr%3E%0A%20%20%20%20%3C/tbody%3E%0A%20%20%3C/table%3E%0A%20%20%3C/div%3E%0A\" mdxType=\"Preview\">\n  <div class=\"overflow-auto\">\n  <table>\n    <thead>\n    <tr>\n      <th>@Input</th>\n      <th>Description</th>\n      <th>Type</th>\n      <th>Default</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr>\n      <td><code>table</code></td>\n      <td>Table connected to the pagination control.</td>\n      <td>Table component</td>\n      <td><code>n/a</code></td>\n    </tr>\n    <tr>\n      <td><code>pagingInfo</code></td>\n      <td>Pass pagination data when pagination is done server-side.\n        <br />\n        <code>&#123;<br />\n          &nbsp;pagePrevious: null,<br />\n          &nbsp;pageCurrent: 1,<br />\n          &nbsp;pageNext: 2,<br />\n          &nbsp;pageSize: 10,<br />\n          &nbsp;numberOfRecords: 100<br />\n          &#125;\n        </code>\n      </td>\n      <td><code>GtPaginationInfo</code></td>\n      <td><code>n/a</code></td>\n    </tr>\n    <tr>\n      <td><code>paginationLength</code></td>\n      <td>Number of pagination buttons to show.</td>\n      <td><code>number</code></td>\n      <td><code>5</code></td>\n    </tr>\n    <tr>\n      <td><code>classes</code></td>\n      <td>Classes for pagination elements. Pass an object with key values, where key is element and value is classes to be applied.</td>\n      <td><code>GtPaginationClasses</code></td>\n      <td><code>&#123;<br />\n        &nbsp;nav: null,<br />\n        &nbsp;ul: 'pagination',<br />\n        &nbsp;li: 'page-item',<br />\n        &nbsp;button: 'page-link'<br />\n        &#125;\n      </code></td>\n    </tr>\n    <tr>\n      <td><code>ariaLabels</code></td>\n      <td>Aria labels for pagination elements. Pass an object with key values, where key is element and value is aria label to use.</td>\n      <td><code>GtPaginationAriaLabels</code></td>\n      <td><code>\n        &#123;<br />\n        &nbsp;nav: 'Table navigation',<br />\n        &nbsp;button: 'Go to page '<br />\n        &#125;\n      </code></td>\n    </tr>\n    </tbody>\n  </table>\n  </div>\n    </Preview>\n    <h3 {...{\n      \"id\": \"import-module\"\n    }}>{`Import module`}</h3>\n    <p>{`In order to use the pagination component provided by angular generic table, you need to import it.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { GenericTableCoreModule, GenericTablePaginationModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [...],\n  imports: [\n    ...\n    GenericTableCoreModule,\n    GenericTablePaginationModule\n  ],\n  exports: [\n    GenericTableCoreModule,\n    GenericTablePaginationModule\n  ]\n})\nexport class SharedModule {}\n`}</code></pre>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.parameters = { docsOnly: true };\n\nconst componentMeta = { title: 'Examples/Pagination/Setup', decorators: [moduleMetadata({\n  declarations: [PaginationComponent, TabsComponent],\n  imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n})], includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CoreService {\n  constructor() {}\n}\n","export const LAZY_LOADING_DOCS = [\n  {\n    name: 'server-side-pagination.component.html',\n    code: `<form [formGroup]=\"paginationForm\">\n  <div class=\"row gy-3\">\n    <div class=\"form-group col-12 col-sm-auto\">\n      <label for=\"search_input\">Search</label>\n      <input\n        id=\"search_input\"\n        formControlName=\"search\"\n        type=\"text\"\n        class=\"form-control\"\n      />\n    </div>\n  </div>\n</form>\n<div class=\"mx-n3 mx-sm-0 my-3 overflow-auto\">\n  <angular-generic-table\n    [data]=\"data$\"\n    [config]=\"tableConfig$\"\n    [search]=\"search$\"\n    [loading]=\"loading$\"\n    [pagingInfo]=\"paging$ | async\"\n    (pageChange)=\"onPageChange($event)\"\n    (columnSort)=\"onSortOrderChange($event)\"\n    [sortOrder]=\"sorting$ | async\"\n    #table\n  >\n    <div\n      class=\"table-loading gt-skeleton-loader\"\n      [style.--gt-skeleton-height]=\"\n        ((table.table$ | async)?.info?.pageSize ?? 0) * 41 - 11 + 'px'\n      \"\n    ></div>\n    <div class=\"table-no-data alert alert-info mt-3\">Table is empty</div>\n  </angular-generic-table>\n</div>\n<angular-generic-table-pagination [table]=\"table\">\n</angular-generic-table-pagination>`,\n    language: 'xml',\n  },\n  {\n    name: 'server-side-pagination.component.ts',\n    code: `import {\n  ChangeDetectionStrategy,\n  Component,\n  OnInit,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { DatePipe, formatDate } from '@angular/common';\nimport {\n  GtPageChangeEvent,\n  GtSortEvent,\n  GtSortOrder,\n  TableConfig,\n  GtPaginationInfo,\n  sortOrderToParams\n} from '@angular-generic-table/core';\nimport { FormBuilder } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\nimport { pluck, shareReplay, switchMap, tap } from 'rxjs/operators';\n\ninterface LazyLoadingData {\n  birthday: string;\n  email: string;\n  favorite_color: string;\n  first_name: string;\n  gender: string;\n  id: number;\n  last_name: string;\n}\n\ninterface LazyLoadingResponse {\n  data: Array<LazyLoadingData>;\n  paging: GtPaginationInfo;\n  sorting: GtSortOrder<LazyLoadingData>;\n  filters: [\n    {\n      [Property in keyof LazyLoadingResponse]: { [key: string]: any };\n    }\n  ];\n  request: any;\n  error: any;\n}\n\n@Component({\n  templateUrl: './server-side-pagination.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ServerSidePaginationComponent implements OnInit {\n  constructor(private fb: FormBuilder, private http: HttpClient) {}\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n\n paginationForm = this.fb.group({\n    search: ['']\n  });\n requestParams$ = new BehaviorSubject({\n    page: 1,\n    page_size: 10,\n    sort_by: '+id',\n });\n search$ = this.paginationForm.controls.search.valueChanges.pipe(\n    shareReplay(1)\n );\n loading$ = new BehaviorSubject(true);\n\n request$ = this.requestParams$.pipe(\n    tap((_) => this.loading$.next(true)), // show loading indicator whenever requests are changed (remove to disable loading indicator)\n    switchMap((params) =>\n      this.http.get<LazyLoadingResponse>(\n        'https://private-a6da3-generictableapi.apiary-mock.com/data',\n        {\n          params,\n        }\n      )\n    ),\n    tap((_) => this.loading$.next(false)), // hide loading indicator\n    shareReplay(1)\n );\n\n data$: Observable<Array<LazyLoadingData>> = this.request$.pipe(\n    pluck('data'),\n    shareReplay(1)\n );\n\n paging$: Observable<GtPaginationInfo> = this.request$.pipe(\n    pluck('paging'),\n    shareReplay(1)\n );\n\n sorting$ = this.request$.pipe(\n    pluck('sorting'),\n    shareReplay(1)\n );\n\n onPageChange(event: GtPageChangeEvent): void {\n    const current = { ...this.requestParams$.value };\n    if (current.page != event.index + 1) {\n      this.requestParams$.next({\n        ...current,\n        page: event.index + 1,\n      });\n    }\n  }\n\n onSortOrderChange(event: GtSortEvent): void {\n   let sort_by = sortOrderToParams([...event.currentSortOrder]);\n   const current = { ...this.requestParams$.value };\n   if (current.sort_by !== sort_by) {\n     this.requestParams$.next({\n       ...current,\n       page: 1, // reset page to 1 when sorting changes\n       sort_by,\n     });\n   }\n }\n\n tableConfig$: ReplaySubject<TableConfig<LazyLoadingData>> = new ReplaySubject(\n   1\n );\n\n ngOnInit(): void {\n   this.tableConfig$.next({\n      class: 'table text-nowrap',\n      columns: {\n        id: {\n          sortable: true,\n        },\n        first_name: {},\n        last_name: {\n          sortable: true,\n        },\n        gender: {\n          sortable: true,\n        },\n        birthday: {\n          class: 'text-end justify-content-end',\n          search: (row, column) => formatDate(row[column], 'longDate', 'en'),\n          transform: {\n            pipe: DatePipe,\n            args: ['longDate'],\n          },\n        },\n        favorite_color: {\n          hidden: true,\n        },\n        email: {\n          hidden: true,\n        },\n      },\n      pagination: {\n        length: 10,\n      },\n    });\n  }\n}\n`,\n    language: 'typescript',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { ServerSidePaginationComponent } from './server-side-pagination.component';\nimport { GenericTableCoreModule, GenericTablePaginationModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [ServerSidePaginationComponent],\n  imports: [\n    BrowserModule,\n    GenericTableCoreModule,\n    GenericTablePaginationModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  bootstrap: [ServerSidePaginationComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnInit,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { DatePipe, formatDate } from '@angular/common';\nimport {\n  GtPageChangeEvent,\n  GtSortEvent,\n  GtSortOrder,\n  TableConfig,\n  GtPaginationInfo,\n  sortOrderToParams,\n} from '@angular-generic-table/core';\nimport { FormBuilder } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\nimport { pluck, shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { Story } from '@storybook/angular/types-6-0';\nimport { LAZY_LOADING_DOCS } from './server-side-pagination.snippets';\ninterface LazyLoadingData {\n  birthday: string;\n  email: string;\n  favorite_color: string;\n  first_name: string;\n  gender: string;\n  id: number;\n  last_name: string;\n}\n\ninterface LazyLoadingResponse {\n  data: Array<LazyLoadingData>;\n  paging: GtPaginationInfo;\n  sorting: GtSortOrder<LazyLoadingData>;\n  filters: [\n    {\n      [Property in keyof LazyLoadingResponse]: { [key: string]: any };\n    }\n  ];\n  request: any;\n  error: any;\n}\n@Component({\n  selector: 'docs-lazy-loading',\n  templateUrl: './server-side-pagination.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ServerSidePaginationComponent implements OnInit {\n  constructor(private fb: FormBuilder, private http: HttpClient) {}\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n  paginationForm = this.fb.group({\n    search: [''],\n  });\n  requestParams$ = new BehaviorSubject({\n    page: 1,\n    page_size: 10,\n    sort_by: '+id',\n  });\n  search$ = this.paginationForm.controls.search.valueChanges.pipe(\n    shareReplay(1)\n  );\n  loading$ = new BehaviorSubject(true);\n\n  request$ = this.requestParams$.pipe(\n    tap((_) => this.loading$.next(true)), // show loading indicator whenever requests are changed (remove to disable loading indicator)\n    switchMap((params) =>\n      this.http.get<LazyLoadingResponse>(\n        'https://private-a6da3-generictableapi.apiary-mock.com/data',\n        {\n          params,\n        }\n      )\n    ),\n    tap((_) => this.loading$.next(false)), // hide loading indicator\n    shareReplay(1)\n  );\n\n  data$: Observable<Array<LazyLoadingData>> = this.request$.pipe(\n    pluck('data'),\n    shareReplay(1)\n  );\n  paging$: Observable<GtPaginationInfo> = this.request$.pipe(\n    pluck('paging'),\n    shareReplay(1)\n  );\n\n  sorting$ = this.request$.pipe(pluck('sorting'), shareReplay(1));\n\n  onPageChange(event: GtPageChangeEvent): void {\n    const current = { ...this.requestParams$.value };\n    if (current.page != event.index + 1) {\n      this.requestParams$.next({\n        ...current,\n        page: event.index + 1,\n      });\n    }\n  }\n\n  onSortOrderChange(event: GtSortEvent): void {\n    let sort_by = sortOrderToParams([...event.currentSortOrder]);\n    const current = { ...this.requestParams$.value };\n    if (current.sort_by !== sort_by) {\n      this.requestParams$.next({\n        ...current,\n        page: 1, // reset page to 1 when sorting changes\n        sort_by,\n      });\n    }\n  }\n\n  tableConfig$: ReplaySubject<TableConfig<LazyLoadingData>> = new ReplaySubject(\n    1\n  );\n  ngOnInit(): void {\n    this.tableConfig$.next({\n      class: 'table text-nowrap',\n      columns: {\n        id: {\n          sortable: true,\n        },\n        first_name: {},\n        last_name: {\n          sortable: true,\n        },\n        gender: {\n          sortable: true,\n        },\n        birthday: {\n          class: 'text-end justify-content-end',\n          search: (row, column) => formatDate(row[column], 'longDate', 'en'),\n          transform: {\n            pipe: DatePipe,\n            args: ['longDate'],\n          },\n        },\n        favorite_color: {\n          hidden: true,\n        },\n        email: {\n          hidden: true,\n        },\n      },\n      pagination: {\n        length: 10,\n      },\n    });\n  }\n  SNIPPETS = LAZY_LOADING_DOCS;\n}\n\nexport const ServerSidePagination: Story<ServerSidePaginationComponent> = (\n  args: ServerSidePaginationComponent\n) => ({\n  props: args,\n  component: ServerSidePaginationComponent,\n});\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Story } from '@storybook/addon-docs';\nimport {moduleMetadata} from \"@storybook/angular\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {CommonModule} from \"@angular/common\";\nimport {GenericTableCoreModule} from \"../../../../../core/src/lib/core.module\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {TabsComponent} from \"../../../app/components/tabs/tabs.component\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {GenericTablePaginationModule} from \"../../../../../core/src/lib/pagination/pagination.module\";\nimport {\n  ServerSidePaginationComponent, ServerSidePagination\n} from '../../../app/examples/server-side-pagination/server-side-pagination.component';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst Preview = makeShortcode(\"Preview\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Meta title=\"Examples/Pagination\" decorators={[moduleMetadata({\n      declarations: [ServerSidePaginationComponent, TabsComponent],\n      imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n    })]} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"server-side-example\"\n    }}>{`Server side example`}</h1>\n    <p>{`The example below shows a setup where pagination is handled server-side, i.e data for each page is returned by backend.`}</p>\n    <Preview mdxSource=\"%0A%3Cdiv%20className=%7B'alert%20alert-info'%7D%3E%0A%20%20%20%20%3Cstrong%3EMocked%20backend%3C/strong%3E%0A%20%20%20%20%3Cp%3EThe%20backend%20used%20in%20this%20example%20uses%20static%20data%20and%20not%20all%20methods%20and%20options%20have%20been%20implemented.%20For%20example,%20data%20is%20not%20correct%20for%20all%20pages%20and%20it's%20not%20possible%20to%20sort%20on%20all%20properties%20or%20use%20search%20as%20it's%20just%20meant%20to%20showcase%20how%20things%20can%20be%20implemented.%20You%20can%20view%20the%20network%20tab%20in%20your%20browser%20to%20see%20what%20requests%20are%20made%20and%20the%20response%20they%20return.%20The%20blueprint%20and%20docs%20for%20the%20API%20is%20also%20available%20%3Ca%20href=%7B'https://generictableapi.docs.apiary.io/'%7D%20target=%7B'_blank'%7D%3Ehere%3C/a%3E.%3C/p%3E%0A%20%20%20%20%3Cp%3E%3Cstrong%3ESome%20things%20that%20do%20work%20that%20you%20can%20try:%3C/strong%3E%0A%20%20%20%20%3Cul%20className=%7B'mt-3'%7D%3E%0A%20%20%20%20%20%20%3Cli%20className=%7B'text-reset'%7D%3ESort%20ascending/descending%20on%20%3Cstrong%3EId%3C/strong%3E%20(only%20first%20page%20is%20correct%20when%20sort%20is%20descending)%3C/li%3E%0A%20%20%20%20%20%20%3Cli%20className=%7B'text-reset'%7D%3ESort%20ascending%20on%20%3Cstrong%3ELast%20name%3C/strong%3E%20(only%20first%20page%20is%20correct)%3C/li%3E%0A%20%20%20%20%20%20%3Cli%20className=%7B'text-reset'%7D%3ESort%20ascending%20on%20%3Cstrong%3ELast%20name%3C/strong%3E%20followed%20by%20%3Cstrong%3EGender%3C/strong%3E%20(hold%20shift%20key%20to%20sort%20on%20second%20property,%20only%20first%20page%20is%20correct)%3C/li%3E%0A%20%20%20%20%3C/ul%3E%0A%20%20%20%20%3C/p%3E%0A%20%20%3C/div%3E%0A\" mdxType=\"Preview\">\n  <div className={'alert alert-info'}>\n    <strong>Mocked backend</strong>\n    <p>The backend used in this example uses static data and not all methods and options have been implemented. For example, data is not correct for all pages and it's not possible to sort on all properties or use search as it's just meant to showcase how things can be implemented. You can view the network tab in your browser to see what requests are made and the response they return. The blueprint and docs for the API is also available <a href={'https://generictableapi.docs.apiary.io/'} target={'_blank'}>here</a>.</p>\n    <p><strong>Some things that do work that you can try:</strong>\n    <ul className={'mt-3'}>\n      <li className={'text-reset'}>Sort ascending/descending on <strong>Id</strong> (only first page is correct when sort is descending)</li>\n      <li className={'text-reset'}>Sort ascending on <strong>Last name</strong> (only first page is correct)</li>\n      <li className={'text-reset'}>Sort ascending on <strong>Last name</strong> followed by <strong>Gender</strong> (hold shift key to sort on second property, only first page is correct)</li>\n    </ul>\n    </p>\n  </div>\n    </Preview>\n    <h3 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h3>\n    <Story name=\"Server-side\" mdxType=\"Story\">\n  {ServerSidePagination.bind({})}\n    </Story>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n\nexport const serverSide = ServerSidePagination.bind({});\nserverSide.storyName = 'Server-side';\nserverSide.parameters = { storySource: { source: 'ServerSidePagination.bind({})' } };\n\nconst componentMeta = { title: 'Examples/Pagination', decorators: [moduleMetadata({\n  declarations: [ServerSidePaginationComponent, TabsComponent],\n  imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n})], includeStories: [\"serverSide\"],  };\n\nconst mdxStoryNameToKey = {\"Server-side\":\"serverSide\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","export const ROW_HOVER_CLICK_SNIPPETS = [\n  {\n    name: 'row-hover-click.component.ts',\n    code: `import { Component } from '@angular/core';\nimport { GtRowClickEvent, GtRowHoverEvent } from '@angular-generic-table/core';\n\n\n@Component({\n  selector: 'row-hover-click-table',\n  template: '<div class=\"overflow-auto\">\n      <button class=\"btn btn-outline-primary me-3\" (click)=\"tableRef.hoverRow(1)\">\n        Mark second row as active\n      </button>\n      <button class=\"btn btn-outline-primary\" (click)=\"tableRef.hoverRow(null)\">\n        Remove active state\n      </button>\n      <angular-generic-table\n        [data]=\"data\"\n        [config]=\"config\"\n        (rowClick)=\"onRowClick($event)\"\n        (rowActive)=\"onRowHover($event)\"\n        #tableRef\n      ></angular-generic-table>\n      {{ clicked }}\n    </div>',\n  styles: [\n    \\`\n      :host ::ng-deep .gt-active {\n        background-color: var(--bs-highlight-bg);\n      }\n    \\`,\n  ],\n})\nexport class RowHoverClickComponent {\n  clicked = '';\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config = {\n    columns: {\n      firstName: {},\n      lastName: {},\n      gender: {},\n      favoriteFood: {},\n    },\n    rowClick: true,\n    activateRowOnHover: true,\n  };\n\n  onRowClick(event: GtRowClickEvent) {\n    console.log('row clicked', event);\n    this.clicked = \\`clicked row number: \\${event.index}\\`;\n  }\n  onRowHover(event: GtRowHoverEvent) {\n    console.log('row hovered', event);\n  }\n`,\n    language: 'typescript',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { RowHoverClickTableComponent } from './events-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [RowHoverClickTableComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [RowHoverClickTableComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import { Component } from '@angular/core';\nimport { Story } from '@storybook/angular/types-6-0';\nimport { ROW_HOVER_CLICK_SNIPPETS } from './row-hower-click.snippets';\nimport {\n  GtRowClickEvent,\n  GtRowActiveEvent,\n  TableConfig,\n} from '@angular-generic-table/core';\n\n@Component({\n  selector: 'docs-row-hover-click',\n  template: `\n    <div class=\"overflow-auto\">\n      <button\n        class=\"btn btn-outline-primary me-3\"\n        (click)=\"tableRef.activateRow(1)\"\n      >\n        Mark second row as active\n      </button>\n      <button\n        class=\"btn btn-outline-primary\"\n        (click)=\"tableRef.activateRow(null)\"\n      >\n        Remove active state\n      </button>\n      <angular-generic-table\n        [data]=\"data\"\n        [config]=\"config\"\n        (rowClick)=\"onRowClick($event)\"\n        (rowActive)=\"onRowHover($event)\"\n        #tableRef\n      ></angular-generic-table>\n    </div>\n    {{ clicked }}\n    <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n  `,\n  styles: [\n    `\n      :host ::ng-deep .gt-active {\n        background-color: var(--bs-highlight-bg);\n      }\n    `,\n  ],\n})\nexport class RowHoverClickComponent {\n  clicked = '';\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config: TableConfig = {\n    columns: {\n      firstName: {},\n      lastName: {},\n      gender: {},\n      favoriteFood: {},\n    },\n    rowClick: true,\n    activateRowOnHover: true,\n  };\n\n  onRowClick(event: GtRowClickEvent) {\n    console.log('row clicked', event);\n    this.clicked = `clicked row number: ${event.index}`;\n  }\n  onRowHover(event: GtRowActiveEvent) {\n    console.log('row hovered', event);\n  }\n\n  SNIPPETS = ROW_HOVER_CLICK_SNIPPETS;\n}\n\nexport const RowHoverClick: Story<RowHoverClickComponent> = (\n  args: RowHoverClickComponent\n) => ({\n  props: args,\n  component: RowHoverClickComponent,\n});\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Story } from '@storybook/addon-docs';\nimport {moduleMetadata} from \"@storybook/angular\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {CommonModule} from \"@angular/common\";\nimport {GenericTableCoreModule} from \"../../../../core/src/lib/core.module\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {TabsComponent} from \"../../app/components/tabs/tabs.component\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {GenericTablePaginationModule} from \"../../../../core/src/lib/pagination/pagination.module\";\nimport { RowHoverClick, RowHoverClickComponent } from '../../app/examples/row-hover-click/row-hover-click.component';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Meta title=\"Examples/Row click & active state\" decorators={[moduleMetadata({\n      declarations: [TabsComponent, RowHoverClickComponent],\n      imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n    })]} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"row-click-and-active-state\"\n    }}>{`Row click and active state`}</h1>\n    <p>{`Set `}<inlineCode parentName=\"p\">{`rowClick`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`activateRowOnHover`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` in `}<inlineCode parentName=\"p\">{`config`}</inlineCode>{` to enable row click and row active events which can be used to trigger actions when rows are clicked or activated on hover (mouseenter/leave). These events are emitted and declared using `}<inlineCode parentName=\"p\">{`@Output rowClick`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`@Output() rowActive`}</inlineCode>{`. It's also possible to toggle active state on a row using `}<inlineCode parentName=\"p\">{`activateRow`}</inlineCode>{` method on the table component (currently it takes a row index as argument), pass null to remove active state. The later might come in handy when you want to highlight something in the table based on an external source like a chart etc. Note that you should use css if you're only interested in styling the row on row hover, no need to listen to events or set active state to do that.`}</p>\n    <h3 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h3>\n    <Story name=\"Row click & active state\" mdxType=\"Story\">\n  {RowHoverClick.bind({})}\n    </Story>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n\nexport const rowClickActiveState = RowHoverClick.bind({});\nrowClickActiveState.storyName = 'Row click & active state';\nrowClickActiveState.parameters = { storySource: { source: 'RowHoverClick.bind({})' } };\n\nconst componentMeta = { title: 'Examples/Row click & active state', decorators: [moduleMetadata({\n  declarations: [TabsComponent, RowHoverClickComponent],\n  imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n})], includeStories: [\"rowClickActiveState\"],  };\n\nconst mdxStoryNameToKey = {\"Row click & active state\":\"rowClickActiveState\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","export const ROW_SELECT_SNIPPETS = [\n  {\n    name: 'row-select.component.ts',\n    code: `import { ChangeDetectionStrategy, Component, OnDestroy } from '@angular/core';\nimport {\n  GtRowSelectEvent,\n  GtRowClickEvent,\n  TableRow,\n  GtRowActiveEvent,\n} from '@angular-generic-table/core';\nimport { BehaviorSubject, combineLatest, Observable, Subject } from 'rxjs';\nimport {\n  map,\n  pluck,\n  shareReplay,\n  startWith,\n  take,\n  takeUntil,\n  tap,\n} from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { FormControl } from '@angular/forms';\ninterface RowData {\n  birthday: string;\n  email: string;\n  favorite_color: string;\n  first_name: string;\n  gender: 'Female' | 'Male';\n  id: number;\n  last_name: string;\n}\n@Component({\n  templateUrl: './row-select.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [\n    \\`\n      :host ::ng-deep .gt-active {\n        background-color: var(--bs-highlight-bg);\n      }\n      :host ::ng-deep .table > tbody > tr {\n        cursor: pointer;\n      }\n    \\`,\n  ],\n})\nexport class RowSelectComponent implements OnDestroy {\n  constructor(private http: HttpClient) {}\n\n  get activateOnRowHover$(): Observable<boolean> {\n    return this._activateOnRowHover$.asObservable();\n  }\n  get activateOnRowHover(): boolean {\n    return this._activateOnRowHover$.getValue();\n  }\n  toggleRowHover() {\n    this._activateOnRowHover$.next(!this.activateOnRowHover);\n  }\n  private _activateOnRowHover$ = new BehaviorSubject<boolean>(true);\n\n  get activateOnNavigation$(): Observable<boolean> {\n    return this._activateOnNavigation$.asObservable();\n  }\n  get activateOnNavigation(): boolean {\n    return this._activateOnNavigation$.getValue();\n  }\n  toggleRowNavigation() {\n    this._activateOnNavigation$.next(!this.activateOnNavigation);\n  }\n  private _activateOnNavigation$ = new BehaviorSubject<boolean>(true);\n\n  private unsubscribe$ = new Subject();\n  loading$ = new BehaviorSubject<boolean>(true);\n  customClassNames = {\n    selectedRow: 'table-active',\n  };\n  lengthCtrl = new FormControl(15);\n  data$ = this.http\n    .get<{ data: TableRow[] }>(\n      'https://private-730c61-generictable.apiary-mock.com/data'\n    )\n    .pipe(\n      pluck('data'),\n      tap((_) => this.loading$.next(false)),\n      takeUntil(this.unsubscribe$),\n      shareReplay(1)\n    );\n  config$ = combineLatest([\n    this.lengthCtrl.valueChanges.pipe(\n      startWith(this.lengthCtrl.value),\n      map((length) =>\n        length ? { pagination: { length: length < 0 ? 0 : length } } : {}\n      )\n    ),\n    this.activateOnRowHover$,\n    this.activateOnNavigation$,\n  ]).pipe(\n    map(\n      ([pagination, activateRowOnHover, activateRowOnKeyboardNavigation]) => ({\n        columns: {\n          id: {\n            sortable: true,\n          },\n          first_name: {\n            sortable: true,\n          },\n          last_name: {\n            sortable: true,\n          },\n          gender: {\n            sortable: true,\n          },\n          email: {\n            sortable: true,\n          },\n        },\n        ...pagination,\n        rowClick: true,\n        activateRowOnHover,\n        activateRowOnKeyboardNavigation,\n        rowSelect: true,\n      })\n    )\n  );\n\n  setActiveRow(event: GtRowActiveEvent) {\n    console.log(event);\n    if (event.event && event.event.type === 'keydown') {\n      // stop the event from propagating, otherwise the page will scroll\n      event.event.preventDefault();\n    }\n    this._activeRow$.next(<RowData | null>event.row);\n  }\n  get activeRow$() {\n    return this._activeRow$.asObservable();\n  }\n  private _activeRow$ = new BehaviorSubject<RowData | null>(null);\n  isSelected(row: RowData, selection: typeof this.selection) {\n    return selection[row.id];\n  }\n\n  selection: { [key: string]: boolean } = {};\n\n  selectRow(event: GtRowClickEvent | GtRowSelectEvent) {\n    const selection = { ...this.selection };\n    const row = event.row;\n    if (!row) return;\n    if (!selection[row.id]) {\n      selection[row.id] = true;\n    } else {\n      delete selection[row.id];\n    }\n    // update the selection\n    this.selection = selection;\n  }\n\n  get isAllSelected() {\n    return Object.keys(this.selection).length > 0;\n  }\n  toggleAll() {\n    if (this.isAllSelected) {\n      this.selection = {};\n      return;\n    }\n    const selection = { ...this.selection };\n    this.data$.pipe(take(1), takeUntil(this.unsubscribe$)).subscribe((data) => {\n      data.forEach((row, index) => {\n        selection[index] = true;\n      });\n    });\n    this.selection = selection;\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n};\n`,\n    language: 'typescript',\n  },\n  {\n    name: 'row-select.component.html',\n    code: `<div class=\"row gy-3 gy-sm-0 gx-2 align-items-center\">\n  <div class=\"col-12 col-sm-auto\">\n    <button\n      class=\"btn w-100\"\n      (click)=\"toggleRowHover()\"\n      [class.btn-outline-primary]=\"!activateOnRowHover\"\n      [class.btn-primary]=\"activateOnRowHover\"\n    >\n      {{ activateOnRowHover ? \"Disable on hover\" : \"Enable on hover\" }}\n    </button>\n  </div>\n  <div class=\"col-12 col-sm-auto\">\n    <button\n      class=\"btn w-100\"\n      (click)=\"toggleRowNavigation()\"\n      [class.btn-outline-primary]=\"!activateOnNavigation\"\n      [class.btn-primary]=\"activateOnNavigation\"\n    >\n      {{\n        activateOnNavigation\n          ? \"Disable on keyboard navigation\"\n          : \"Enable on keyboard navigation\"\n      }}\n    </button>\n  </div>\n  <div class=\"col-12 col-sm-auto\">\n    <button\n      class=\"btn w-100\"\n      [class.btn-outline-primary]=\"!isAllSelected\"\n      [class.btn-primary]=\"isAllSelected\"\n      (click)=\"toggleAll()\"\n    >\n      {{ isAllSelected ? \"Deselect all\" : \"Select all\" }}\n    </button>\n  </div>\n</div>\n<div class=\"row gy-3 gy-sm-0 gx-2 align-items-center mt-3\">\n  <div class=\"form-group col-12 col-sm-auto d-flex align-items-center\">\n    <label for=\"length_input\" class=\"text-nowrap me-2\">Number of rows:</label>\n    <input\n      id=\"length_input\"\n      [formControl]=\"lengthCtrl\"\n      type=\"number\"\n      class=\"form-control\"\n      style=\"max-width: 60px\"\n    />\n  </div>\n  <div class=\"col-12 col-sm-auto\">\n    Selected rows: {{ (selection | keyvalue).length }}\n  </div>\n  <div class=\"col-12 col-sm-auto\">\n    Active row id: {{ (activeRow$ | async)?.id ?? \"none\" }}\n  </div>\n</div>\n<div class=\"mx-n3 mx-sm-0 my-3 overflow-auto\">\n  <angular-generic-table\n    [data]=\"data$\"\n    [config]=\"config$\"\n    [loading]=\"loading$\"\n    [isRowSelectedFn]=\"isSelected\"\n    [customClasses]=\"customClassNames\"\n    (rowClick)=\"selectRow($event)\"\n    (rowActive)=\"setActiveRow($event)\"\n    (rowSelect)=\"selectRow($event)\"\n    [selection]=\"selection\"\n    #tableRef\n  >\n    <div class=\"table-loading gt-skeleton-loader\"></div>\n    <div class=\"table-no-data alert alert-info mt-3\">Table is empty</div>\n  </angular-generic-table>\n  <angular-generic-table-pagination [table]=\"tableRef\">\n  </angular-generic-table-pagination>\n</div>`,\n    language: 'xml',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { RowSelectComponent } from './row-select.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [RowSelectComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [RowSelectComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import { ChangeDetectionStrategy, Component, OnDestroy } from '@angular/core';\nimport {\n  GtRowSelectEvent,\n  GtRowClickEvent,\n  TableRow,\n  GtRowActiveEvent,\n} from '@angular-generic-table/core';\nimport { BehaviorSubject, combineLatest, Observable, Subject } from 'rxjs';\nimport {\n  map,\n  pluck,\n  shareReplay,\n  startWith,\n  take,\n  takeUntil,\n  tap,\n} from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { FormControl } from '@angular/forms';\nimport { Story } from '@storybook/angular/types-6-0';\nimport { CUSTOM_TEMPLATES_DOCS } from '../custom-templates/custom-templates.snippets';\nimport { ROW_SELECT_SNIPPETS } from './row-select.snippets';\ninterface RowData {\n  birthday: string;\n  email: string;\n  favorite_color: string;\n  first_name: string;\n  gender: 'Female' | 'Male';\n  id: number;\n  last_name: string;\n}\n@Component({\n  templateUrl: './row-select.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [\n    `\n      :host ::ng-deep .gt-active {\n        background-color: var(--bs-highlight-bg);\n      }\n      :host ::ng-deep .table > tbody > tr {\n        cursor: pointer;\n      }\n    `,\n  ],\n})\nexport class RowSelectComponent implements OnDestroy {\n  constructor(private http: HttpClient) {}\n\n  get activateOnRowHover$(): Observable<boolean> {\n    return this._activateOnRowHover$.asObservable();\n  }\n  get activateOnRowHover(): boolean {\n    return this._activateOnRowHover$.getValue();\n  }\n  toggleRowHover() {\n    this._activateOnRowHover$.next(!this.activateOnRowHover);\n  }\n  private _activateOnRowHover$ = new BehaviorSubject<boolean>(true);\n\n  get activateOnNavigation$(): Observable<boolean> {\n    return this._activateOnNavigation$.asObservable();\n  }\n  get activateOnNavigation(): boolean {\n    return this._activateOnNavigation$.getValue();\n  }\n  toggleRowNavigation() {\n    this._activateOnNavigation$.next(!this.activateOnNavigation);\n  }\n  private _activateOnNavigation$ = new BehaviorSubject<boolean>(true);\n\n  private unsubscribe$ = new Subject();\n  loading$ = new BehaviorSubject<boolean>(true);\n  customClassNames = {\n    selectedRow: 'table-active',\n  };\n  lengthCtrl = new FormControl(15);\n  data$ = this.http\n    .get<{ data: TableRow[] }>(\n      'https://private-730c61-generictable.apiary-mock.com/data'\n    )\n    .pipe(\n      pluck('data'),\n      tap((_) => this.loading$.next(false)),\n      takeUntil(this.unsubscribe$),\n      shareReplay(1)\n    );\n  config$ = combineLatest([\n    this.lengthCtrl.valueChanges.pipe(\n      startWith(this.lengthCtrl.value),\n      map((length) =>\n        length ? { pagination: { length: length < 0 ? 0 : length } } : {}\n      )\n    ),\n    this.activateOnRowHover$,\n    this.activateOnNavigation$,\n  ]).pipe(\n    map(\n      ([pagination, activateRowOnHover, activateRowOnKeyboardNavigation]) => ({\n        columns: {\n          id: {\n            sortable: true,\n          },\n          first_name: {\n            sortable: true,\n          },\n          last_name: {\n            sortable: true,\n          },\n          gender: {\n            sortable: true,\n          },\n          email: {\n            sortable: true,\n          },\n        },\n        ...pagination,\n        rowClick: true,\n        activateRowOnHover,\n        activateRowOnKeyboardNavigation,\n        rowSelect: true,\n      })\n    )\n  );\n\n  setActiveRow(event: GtRowActiveEvent) {\n    console.log(event);\n    if (event.event && event.event.type === 'keydown') {\n      // stop the event from propagating, otherwise the page will scroll\n      event.event.preventDefault();\n    }\n    this._activeRow$.next(<RowData | null>event.row);\n  }\n  get activeRow$() {\n    return this._activeRow$.asObservable();\n  }\n  private _activeRow$ = new BehaviorSubject<RowData | null>(null);\n  isSelected(row: RowData, selection: typeof this.selection) {\n    return selection[row.id];\n  }\n\n  selection: { [key: string]: boolean } = {};\n\n  selectRow(event: GtRowClickEvent | GtRowSelectEvent) {\n    const selection = { ...this.selection };\n    const row = event.row;\n    if (!row) return;\n    if (!selection[row.id]) {\n      selection[row.id] = true;\n    } else {\n      delete selection[row.id];\n    }\n    // update the selection\n    this.selection = selection;\n  }\n\n  get isAllSelected() {\n    return Object.keys(this.selection).length > 0;\n  }\n  toggleAll() {\n    if (this.isAllSelected) {\n      this.selection = {};\n      return;\n    }\n    const selection = { ...this.selection };\n    this.data$.pipe(take(1), takeUntil(this.unsubscribe$)).subscribe((data) => {\n      data.forEach((row, index) => {\n        selection[index] = true;\n      });\n    });\n    this.selection = selection;\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n  SNIPPETS = ROW_SELECT_SNIPPETS;\n}\n\nexport const RowSelect: Story<RowSelectComponent> = (\n  args: RowSelectComponent\n) => ({\n  props: args,\n  component: RowSelectComponent,\n});\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Story } from '@storybook/addon-docs';\nimport {moduleMetadata} from \"@storybook/angular\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {CommonModule} from \"@angular/common\";\nimport {GenericTableCoreModule} from \"../../../../core/src/lib/core.module\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {TabsComponent} from \"../../app/components/tabs/tabs.component\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {GenericTablePaginationModule} from \"../../../../core/src/lib/pagination/pagination.module\";\nimport { RowSelect, RowSelectComponent } from '../../app/examples/row-select/row-select.component';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Meta title=\"Examples/Row selection\" decorators={[moduleMetadata({\n      declarations: [TabsComponent, RowSelectComponent],\n      imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n    })]} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"row-selection\"\n    }}>{`Row selection`}</h1>\n    <h5 {...{\n      \"id\": \"determining-if-row-is-selected-or-not\"\n    }}>{`Determining if row is selected or not`}</h5>\n    <p>{`Pass a function using `}<inlineCode parentName=\"p\">{`isRowSelectedFn`}</inlineCode>{` input to determine if row is selected or not, e.g. `}<inlineCode parentName=\"p\">{`isRowSelectedFn: (row: any) => boolean = (row) => row.selected;`}</inlineCode>{` if row data contains information about selected state or `}<inlineCode parentName=\"p\">{`isRowSelectedFn: (row: any, selection: any) => boolean = (row) => selection[row.id]`}</inlineCode>{` if state is not known by row but stored separately. The active selection can be passed to the table using `}<inlineCode parentName=\"p\">{`selection`}</inlineCode>{` input. It's also possible to listen to row select events using `}<inlineCode parentName=\"p\">{`rowSelect`}</inlineCode>{` output.`}</p>\n    <h5 {...{\n      \"id\": \"keyboard-navigation-and-row-selection\"\n    }}>{`Keyboard navigation and row selection`}</h5>\n    <p>{`The example below shows one of multiple ways to implement row selection. It also shows how setting config options `}<inlineCode parentName=\"p\">{`activateRowOnHover`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`activateRowOnKeyboardNavigation`}</inlineCode>{` to true allows users to activate rows by hovering rows or using keyboard navigation (arrow keys and home and end) while table has focus. While navigating with a keyboard, rows can be selected using selection keys that can be passed using `}<inlineCode parentName=\"p\">{`selectKeys`}</inlineCode>{` input (defaults to `}<inlineCode parentName=\"p\">{`['Enter', ' ']`}</inlineCode>{`). In the example below it's also possible to select rows by clicking them.`}</p>\n    <h3 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h3>\n    <Story name=\"Row selection\" mdxType=\"Story\">\n  {RowSelect.bind({})}\n    </Story>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n\nexport const rowSelection = RowSelect.bind({});\nrowSelection.storyName = 'Row selection';\nrowSelection.parameters = { storySource: { source: 'RowSelect.bind({})' } };\n\nconst componentMeta = { title: 'Examples/Row selection', decorators: [moduleMetadata({\n  declarations: [TabsComponent, RowSelectComponent],\n  imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n})], includeStories: [\"rowSelection\"],  };\n\nconst mdxStoryNameToKey = {\"Row selection\":\"rowSelection\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","export const SIMPLE_SNIPPETS = [\n  {\n    name: 'sorting-table.component.ts',\n    code: `import { Component } from '@angular/core';\nimport { TableConfig } from '@angular-generic-table/core';\n\ninterface SortingData {\n  firstName: string;\n  lastName: string;\n  gender: 'male' | 'female';\n  favoriteFood: string;\n  birthdate: number;\n}\n\n@Component({\n  template: '<div class=\"overflow-auto\">\n      <angular-generic-table\n        #table\n        [data]=\"data\"\n        [config]=\"config\"\n        [(sortOrder)]=\"sortOrder\"\n        (columnSort)=\"logSortChange($event)\"\n      ></angular-generic-table>\n    </div>\n    <div class=\"row mb-3 gy-3\">\n      <div class=\"col-12 col-sm-auto\">\n        <button\n          class=\"btn btn-primary w-100\"\n          (click)=\"table.sortByKey('firstName', $event)\"\n        >\n          Sort on first name\n        </button>\n      </div>\n      <div class=\"col-12 col-sm-auto\">\n        <button class=\"btn btn-primary w-100\" (click)=\"resetSort()\">\n          Reset sorting\n        </button>\n      </div>\n    </div>\n    <strong>Current sort order</strong>\n    <p>\n      <code>\n        {{ sortOrder | json }}\n      </code>\n    </p>'\n})\nexport class SimpleComponent {\n  initialSortOrder: GtSortOrder<SortingData> = [\n    { key: 'birthdate', order: 'asc' },\n    { key: 'gender', order: 'asc' },\n    { key: 'firstName', order: 'desc' },\n  ];\n  sortOrder: GtSortOrder<SortingData> = this.initialSortOrder;\n  data: Array<SortingData> = [\n    {\n      firstName: 'John',\n      lastName: 'Doe',\n      gender: 'male',\n      favoriteFood: 'pizza',\n      birthdate: 946684800000,\n    },\n    {\n      firstName: 'Jane',\n      lastName: 'Smith',\n      gender: 'female',\n      favoriteFood: 'sushi',\n      birthdate: 803404800000,\n    },\n    {\n      firstName: 'Bob',\n      lastName: 'Johnson',\n      gender: 'male',\n      favoriteFood: 'burgers',\n      birthdate: 649345600000,\n    },\n    {\n      firstName: 'Emily',\n      lastName: 'Williams',\n      gender: 'female',\n      favoriteFood: 'chicken',\n      birthdate: 946684800000,\n    },\n    {\n      firstName: 'Michael',\n      lastName: 'Jones',\n      gender: 'male',\n      favoriteFood: 'steak',\n      birthdate: 803404800000,\n    },\n    {\n      firstName: 'Matthew',\n      lastName: 'Brown',\n      gender: 'male',\n      favoriteFood: 'seafood',\n      birthdate: 649345600000,\n    },\n    {\n      firstName: 'Jessica',\n      lastName: 'Miller',\n      gender: 'female',\n      favoriteFood: 'salad',\n      birthdate: 946684800000,\n    },\n    {\n      firstName: 'Jacob',\n      lastName: 'Moore',\n      gender: 'male',\n      favoriteFood: 'pasta',\n      birthdate: 803404800000,\n    },\n    {\n      firstName: 'Nicholas',\n      lastName: 'Taylor',\n      gender: 'male',\n      favoriteFood: 'soup',\n      birthdate: 649345600000,\n    },\n    {\n      firstName: 'Ashley',\n      lastName: 'Anderson',\n      gender: 'female',\n      favoriteFood: 'tacos',\n      birthdate: 946684800000,\n    },\n    {\n      firstName: 'Brandon',\n      lastName: 'Thomas',\n      gender: 'male',\n      favoriteFood: 'nachos',\n      birthdate: 803404800000,\n    },\n  ];\n  config: TableConfig<SortingData> = {\n    columns: {\n      firstName: {\n        sortable: true,\n      },\n      lastName: {\n        sortable: true,\n      },\n      gender: {\n        sortable: true,\n      },\n      favoriteFood: {\n        sortable: true,\n      },\n      birthdate: {\n        sortable: true,\n        transform: {\n          pipe: DatePipe,\n        },\n      },\n    },\n  };\n\n  logSortChange(sortEvent: GtSortEvent<SortingData>) {\n    console.log(sortEvent);\n  }\n\n  resetSort() {\n    this.sortOrder = this.initialSortOrder;\n  }\n}\n`,\n    language: 'typescript',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { SortingTableComponent } from './sorting-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [SortingTableComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [SortingTableComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import { Component } from '@angular/core';\nimport { Story } from '@storybook/angular/types-6-0';\nimport { SIMPLE_SNIPPETS } from './sorting.snippets';\nimport {\n  GtSortEvent,\n  GtSortOrder,\n  TableConfig,\n} from '@angular-generic-table/core';\nimport { DatePipe } from '@angular/common';\n\ninterface SortingData {\n  firstName: string;\n  lastName: string;\n  gender: 'male' | 'female';\n  favoriteFood: string;\n  birthdate: number;\n}\n@Component({\n  template: `\n    <div class=\"overflow-auto\">\n      <angular-generic-table\n        #table\n        [data]=\"data\"\n        [config]=\"config\"\n        [(sortOrder)]=\"sortOrder\"\n        (columnSort)=\"logSortChange($event)\"\n      ></angular-generic-table>\n    </div>\n    <div class=\"row mb-3 gy-3\">\n      <div class=\"col-12 col-sm-auto\">\n        <button\n          class=\"btn btn-primary w-100\"\n          (click)=\"table.sortByKey('firstName', $event)\"\n        >\n          Sort on first name\n        </button>\n      </div>\n      <div class=\"col-12 col-sm-auto\">\n        <button class=\"btn btn-primary w-100\" (click)=\"resetSort()\">\n          Reset sorting\n        </button>\n      </div>\n    </div>\n    <strong>Current sort order</strong>\n    <p>\n      <code>\n        {{ sortOrder | json }}\n      </code>\n    </p>\n    <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n  `,\n  styles: [],\n})\nexport class SortingComponent {\n  initialSortOrder: GtSortOrder<SortingData> = [\n    { key: 'birthdate', order: 'asc' },\n    { key: 'gender', order: 'asc' },\n    { key: 'firstName', order: 'desc' },\n  ];\n  sortOrder: GtSortOrder<SortingData> = this.initialSortOrder;\n  data: Array<SortingData> = [\n    {\n      firstName: 'John',\n      lastName: 'Doe',\n      gender: 'male',\n      favoriteFood: 'pizza',\n      birthdate: 946684800000,\n    },\n    {\n      firstName: 'Jane',\n      lastName: 'Smith',\n      gender: 'female',\n      favoriteFood: 'sushi',\n      birthdate: 803404800000,\n    },\n    {\n      firstName: 'Bob',\n      lastName: 'Johnson',\n      gender: 'male',\n      favoriteFood: 'burgers',\n      birthdate: 649345600000,\n    },\n    {\n      firstName: 'Emily',\n      lastName: 'Williams',\n      gender: 'female',\n      favoriteFood: 'chicken',\n      birthdate: 946684800000,\n    },\n    {\n      firstName: 'Michael',\n      lastName: 'Jones',\n      gender: 'male',\n      favoriteFood: 'steak',\n      birthdate: 803404800000,\n    },\n    {\n      firstName: 'Matthew',\n      lastName: 'Brown',\n      gender: 'male',\n      favoriteFood: 'seafood',\n      birthdate: 649345600000,\n    },\n    {\n      firstName: 'Jessica',\n      lastName: 'Miller',\n      gender: 'female',\n      favoriteFood: 'salad',\n      birthdate: 946684800000,\n    },\n    {\n      firstName: 'Jacob',\n      lastName: 'Moore',\n      gender: 'male',\n      favoriteFood: 'pasta',\n      birthdate: 803404800000,\n    },\n    {\n      firstName: 'Nicholas',\n      lastName: 'Taylor',\n      gender: 'male',\n      favoriteFood: 'soup',\n      birthdate: 649345600000,\n    },\n    {\n      firstName: 'Ashley',\n      lastName: 'Anderson',\n      gender: 'female',\n      favoriteFood: 'tacos',\n      birthdate: 946684800000,\n    },\n    {\n      firstName: 'Brandon',\n      lastName: 'Thomas',\n      gender: 'male',\n      favoriteFood: 'nachos',\n      birthdate: 803404800000,\n    },\n  ];\n  config: TableConfig<SortingData> = {\n    columns: {\n      firstName: {\n        sortable: true,\n      },\n      lastName: {\n        sortable: true,\n      },\n      gender: {\n        sortable: true,\n      },\n      favoriteFood: {\n        sortable: true,\n      },\n      birthdate: {\n        sortable: true,\n        transform: {\n          pipe: DatePipe,\n        },\n      },\n    },\n  };\n\n  logSortChange(sortEvent: GtSortEvent<SortingData>) {\n    console.log(sortEvent);\n  }\n\n  resetSort() {\n    this.sortOrder = this.initialSortOrder;\n  }\n\n  SNIPPETS = SIMPLE_SNIPPETS;\n}\n\nexport const Sorting: Story<SortingComponent> = (args: SortingComponent) => ({\n  props: args,\n  component: SortingComponent,\n});\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Story } from '@storybook/addon-docs';\nimport {moduleMetadata} from \"@storybook/angular\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {CommonModule} from \"@angular/common\";\nimport {GenericTableCoreModule} from \"../../../../core/src/lib/core.module\";\nimport {Sorting, SortingComponent} from \"../../app/examples/sorting/sorting.component\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {TabsComponent} from \"../../app/components/tabs/tabs.component\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {GenericTablePaginationModule} from \"../../../../core/src/lib/pagination/pagination.module\";\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Meta title=\"Examples/Sorting\" decorators={[moduleMetadata({\n      declarations: [TabsComponent, SortingComponent],\n      imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n    })]} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"sorting\"\n    }}>{`Sorting`}</h1>\n    <p><strong parentName=\"p\">{`Sort on multiple columns`}</strong><br />{`\nGeneric table supports sorting on multiple columns by holding \"shift\" key while sorting. To set or update sort order for a table use `}<inlineCode parentName=\"p\">{`sortOrder`}</inlineCode>{` input and pass `}<inlineCode parentName=\"p\">{`GtSortOrder<R>`}</inlineCode>{` which should be an array with keys and order to sort on e.g. `}<inlineCode parentName=\"p\">{`[{key: 'firstName', order: 'asc'}, {key: 'gender', order: 'desc'}]`}</inlineCode>{`.`}</p>\n    <p><strong parentName=\"p\">{`Call sort programmatically`}</strong><br />{`\nIt's also possible to call sort programmatically by calling `}<inlineCode parentName=\"p\">{`sortByKey`}</inlineCode>{` method on `}<inlineCode parentName=\"p\">{`GenericTableComponent`}</inlineCode>{` instance. The method accepts a row key and an optional mouse event as arguments e.g. `}<inlineCode parentName=\"p\">{`table.sortByKey('firstName', $event)`}</inlineCode>{`.`}</p>\n    <p><strong parentName=\"p\">{`Toggle sortable columns`}</strong><br />{`\nThe ability to sort columns by clicking on the column header is disabled by default. To enable this feature set `}<inlineCode parentName=\"p\">{`sortable`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` in the column configuration.`}</p>\n    <p><strong parentName=\"p\">{`Handle sorting externally`}</strong><br />{`\nIt's possible to disable table sorting within the component by setting `}<inlineCode parentName=\"p\">{`disableTableSort`}</inlineCode>{` in tableConfig to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{`. This is useful when sorting is handled externally e.g. for server-side pagination. The table will still use `}<inlineCode parentName=\"p\">{`sortOrder`}</inlineCode>{` to visually show how the data is sorted but keep in mind that the data should be sorted accordingly when passed to the table.`}</p>\n    <p><strong parentName=\"p\">{`Sorting events`}</strong><br />{`\nListen to `}<inlineCode parentName=\"p\">{`columnSort`}</inlineCode>{` event which emits `}<inlineCode parentName=\"p\">{`GtSortEvent<R>`}</inlineCode>{` to get notified when the sort order changes e.g. `}<inlineCode parentName=\"p\">{`(columnSort)=logSortChange($event)`}</inlineCode>{` this could be used to trigger sorting externally. `}<inlineCode parentName=\"p\">{`sortOrder`}</inlineCode>{` also supports two-way binding e.g. `}<inlineCode parentName=\"p\">{`[(sortOrder)]=sortOrder`}</inlineCode>{` to sync `}<inlineCode parentName=\"p\">{`GtSortOrder<R>`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h3>\n    <p>{`The initial sort order for the table below is set to: `}<inlineCode parentName=\"p\">{`[{ key: 'birthdate', order: 'asc' }, { key: 'gender', order: 'asc' }, { key: 'firstName', order: 'desc' }]`}</inlineCode>{` and all columns are sortable with `}<inlineCode parentName=\"p\">{`sortable`}</inlineCode>{` set to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{`. Shift + click column headers or the sort button below to sort on multiple columns. It also listens to `}<inlineCode parentName=\"p\">{`columnSort`}</inlineCode>{` events which are written to the console.`}</p>\n    <Story name=\"Sorting\" mdxType=\"Story\">\n  {Sorting.bind({})}\n    </Story>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n\nexport const sorting = Sorting.bind({});\nsorting.storyName = 'Sorting';\nsorting.parameters = { storySource: { source: 'Sorting.bind({})' } };\n\nconst componentMeta = { title: 'Examples/Sorting', decorators: [moduleMetadata({\n  declarations: [TabsComponent, SortingComponent],\n  imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n})], includeStories: [\"sorting\"],  };\n\nconst mdxStoryNameToKey = {\"Sorting\":\"sorting\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","export const SIMPLE_SNIPPETS = [\n  {\n    name: 'basic-table.component.ts',\n    code: `import { Component } from '@angular/core';\nimport { TableConfig } from '@angular-generic-table/core';\n\ninterface BasicData {\n  firstName: string;\n  lastName: string;\n  gender: 'male' | 'female';\n  favoriteFood: string;\n}\n\n@Component({\n  template: '<angular-generic-table [data]=\"data\" [config]=\"config\"></angular-generic-table>'\n})\nexport class SimpleComponent {\n  data: Array<BasicData> = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config: TableConfig<BasicData> = {\n    columns: {\n      firstName: {},\n      lastName: {},\n      gender: {},\n      favoriteFood: {},\n    },\n  };\n`,\n    language: 'typescript',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { BasicTableComponent } from './basic-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [BasicTableComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [BasicTableComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import { Component } from '@angular/core';\nimport { Story } from '@storybook/angular/types-6-0';\nimport { SIMPLE_SNIPPETS } from './simple.snippets';\nimport { TableConfig } from '@angular-generic-table/core';\ninterface BasicData {\n  firstName: string;\n  lastName: string;\n  gender: 'male' | 'female';\n  favoriteFood: string;\n}\n@Component({\n  template: `\n    <div class=\"overflow-auto\">\n      <angular-generic-table\n        [data]=\"data\"\n        [config]=\"config\"\n      ></angular-generic-table>\n    </div>\n    <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n  `,\n  styles: [],\n})\nexport class SimpleComponent {\n  data: Array<BasicData> = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config: TableConfig<BasicData> = {\n    class: 'table table-striped table-bordered',\n    columns: {\n      firstName: {},\n      lastName: {},\n      gender: {},\n      favoriteFood: {},\n    },\n  };\n\n  SNIPPETS = SIMPLE_SNIPPETS;\n}\n\nexport const Simple: Story<SimpleComponent> = (args: SimpleComponent) => ({\n  props: args,\n  component: SimpleComponent,\n});\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Story } from '@storybook/addon-docs';\nimport {moduleMetadata} from \"@storybook/angular\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {CommonModule} from \"@angular/common\";\nimport {GenericTableCoreModule} from \"../../../../core/src/lib/core.module\";\nimport {Simple, SimpleComponent} from \"../../app/examples/simple/simple.component\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {TabsComponent} from \"../../app/components/tabs/tabs.component\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {GenericTablePaginationModule} from \"../../../../core/src/lib/pagination/pagination.module\";\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Meta title=\"Examples/Basic\" decorators={[moduleMetadata({\n      declarations: [SimpleComponent, TabsComponent],\n      imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n    })]} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"basic-example\"\n    }}>{`Basic example`}</h1>\n    <p>{`Pass `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`config`}</inlineCode>{` to Generic Table to generate a table. The example below uses the minimal configuration needed to generate a table with static data.`}</p>\n    <Story name=\"Basic\" args={{\n      data: [{\n        firstName: 'Mark',\n        lastName: 'Parker',\n        gender: 'male',\n        favoriteFood: 'Pasta'\n      }, {\n        firstName: 'Mary Jane',\n        lastName: 'Watson',\n        gender: 'female',\n        favoriteFood: 'Pizza'\n      }]\n    }} mdxType=\"Story\">\n  {Simple.bind({})}\n    </Story>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n\nexport const basic = Simple.bind({});\nbasic.storyName = 'Basic';\nbasic.args = {\n  data: [{\n    firstName: 'Mark',\n    lastName: 'Parker',\n    gender: 'male',\n    favoriteFood: 'Pasta'\n  }, {\n    firstName: 'Mary Jane',\n    lastName: 'Watson',\n    gender: 'female',\n    favoriteFood: 'Pizza'\n  }]\n};\nbasic.parameters = { storySource: { source: 'Simple.bind({})' } };\n\nconst componentMeta = { title: 'Examples/Basic', decorators: [moduleMetadata({\n  declarations: [SimpleComponent, TabsComponent],\n  imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n})], includeStories: [\"basic\"],  };\n\nconst mdxStoryNameToKey = {\"Basic\":\"basic\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","export const TRANSPOSE_SNIPPETS = [\n  {\n    name: 'transpose.component.ts',\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { TableConfig, GtDeltaComponent } from '@angular-generic-table/core';\nimport { FormBuilder } from '@angular/forms';\nimport { withLatestFrom } from 'rxjs/operators';\n\ninterface RawData {\n  year: string;\n  value: number;\n}\ninterface YearData extends RawData {\n  delta: number;\n  deltaIndex: number;\n  combined: number;\n  deltaAbsolute: number;\n}\n@Component({\n  templateUrl: './transpose.component.html',\n  styles: []\n})\nexport class TransposeComponent implements OnInit {\n  @ViewChild('delta', { static: true }) delta:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  @ViewChild('deltaAbsolute', { static: true }) deltaAbsolute:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  @ViewChild('deltaIndex', { static: true }) deltaIndex:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  @ViewChild('combined', { static: true }) combined:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  loading$ = new BehaviorSubject(false);\n  reactiveForm = this.fb.group({\n    length: [10],\n    search: [''],\n  });\n  search$ = this.reactiveForm.get('search')?.valueChanges as Observable<string>;\n  tableConfig$: BehaviorSubject<TableConfig<YearData>> = new BehaviorSubject<\n    TableConfig<YearData>\n  >({});\n  data: Array<RawData> = [];\n\n  constructor(private fb: UntypedFormBuilder) {}\n\n  ngOnInit(): void {\n    this.transpose();\n    this.load();\n    this.reactiveForm\n      .get('length')\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\n      .subscribe(([length, config]) => {\n        length = +length;\n        this.tableConfig$.next({\n          ...config,\n          pagination: { ...config.pagination, length },\n        });\n      });\n  }\n\n  simulateLoad(): void {\n    this.loading$.next(true);\n    // set loading state to false after 2 seconds\n    setTimeout(() => this.loading$.next(false), 2000);\n  }\n  empty(): void {\n    this.data = [];\n  }\n  load(): void {\n    this.data = [\n      {\n        year: '2010',\n        value: 15,\n      },\n      {\n        year: '2011',\n        value: 30,\n      },\n      {\n        year: '2012',\n        value: 25,\n      },\n      {\n        year: '2013',\n        value: 0,\n      },\n      {\n        year: '2014',\n        value: 40,\n      },\n      {\n        year: '2015',\n        value: 0,\n      },\n      {\n        year: '2016',\n        value: -5,\n      },\n      {\n        year: '2018',\n        value: 75,\n      },\n      {\n        year: '2019',\n        value: 100,\n      },\n      {\n        year: '2020',\n        value: 250,\n      },\n      {\n        year: '2021',\n        value: 50,\n      },\n      {\n        year: '2022',\n        value: 60,\n      },\n    ];\n  }\n  transpose(): void {\n    if (this.tableConfig$.value.columns) {\n      this.tableConfig$.next({\n        stickyHeaders: {\n          row: true,\n          column: true,\n        },\n        rows: {\n          year: {\n            sortable: true,\n            header: false,\n            class: 'text-end',\n          },\n          value: {\n            class: 'text-end',\n          },\n          delta: {\n            header: 'Delta %',\n            templateRef: this.delta,\n            class: 'text-end',\n          },\n          deltaIndex: {\n            header: 'Since inception %',\n            templateRef: this.deltaIndex,\n            class: 'text-end',\n          },\n          deltaAbsolute: {\n            header: 'Delta',\n            templateRef: this.deltaAbsolute,\n            class: 'text-end',\n          },\n          combined: {\n            header: 'Value with change',\n            templateRef: this.combined,\n            class: 'text-end text-nowrap',\n          },\n        },\n      });\n    } else {\n      this.tableConfig$.next({\n        stickyHeaders: {\n          row: true,\n          column: true,\n        },\n        columns: {\n          year: {\n            sortable: true,\n          },\n          value: {\n            class: 'text-end',\n          },\n          delta: {\n            header: 'Delta %',\n            templateRef: this.delta,\n            class: 'text-end',\n          },\n          deltaIndex: {\n            header: 'Since inception %',\n            templateRef: this.deltaIndex,\n            class: 'text-end',\n          },\n          deltaAbsolute: {\n            header: 'Delta',\n            templateRef: this.deltaAbsolute,\n            class: 'text-end',\n          },\n          combined: {\n            header: 'Value with change',\n            templateRef: this.combined,\n            class: 'text-end text-nowrap',\n          },\n        },\n        pagination: { length: this.reactiveForm.get('length')?.value },\n      });\n    }\n  }\n}\n`,\n    language: 'typescript',\n  },\n  {\n    name: 'transpose.component.html',\n    code: `<form [formGroup]=\"reactiveForm\">\n  <div class=\"row gy-3 gx-3 align-items-end mb-3\">\n    <div class=\"form-group col-6 col-sm-auto\">\n      <label for=\"length_input\">Number of rows</label>\n      <input\n        id=\"length_input\"\n        formControlName=\"length\"\n        type=\"number\"\n        class=\"form-control\"\n      />\n    </div>\n    <div class=\"form-group col-6 col-sm-auto\">\n      <label for=\"search_input\">Search</label>\n      <input\n        id=\"search_input\"\n        formControlName=\"search\"\n        type=\"text\"\n        class=\"form-control\"\n      />\n    </div>\n    <div class=\"col-auto\">\n      <button\n        class=\"btn btn-outline-primary w-100\"\n        (click)=\"simulateLoad()\"\n      >\n        Simulate load\n      </button>\n    </div>\n    <div class=\"col col-sm-auto\">\n      <button class=\"btn btn-outline-danger w-100\" (click)=\"empty()\">\n        Empty\n      </button>\n    </div>\n    <div class=\"col col-sm-auto\">\n      <button class=\"btn btn-outline-primary w-100\" (click)=\"load()\">\n        Reset\n      </button>\n    </div>\n    <div class=\"col col-sm-auto\">\n      <button class=\"btn btn-outline-primary w-100\" (click)=\"transpose()\">\n        Transpose\n      </button>\n    </div>\n  </div>\n  <div class=\"overflow-auto\">\n    <angular-generic-table\n      #table\n      [data]=\"data\"\n      [config]=\"tableConfig$\"\n      [loading]=\"loading$\"\n      [search]=\"search$\"\n    >\n      <div class=\"table-loading gt-skeleton-loader\"></div>\n      <div class=\"table-no-data alert alert-info mt-3\">Table is empty</div>\n    </angular-generic-table>\n  </div>\n  <angular-generic-table-pagination [table]=\"table\">\n  </angular-generic-table-pagination>\n  <ng-template #delta let-index=\"index\" let-data=\"data\">\n    <gt-delta [index]=\"index\" [data]=\"data\"></gt-delta>\n  </ng-template>\n  <ng-template #deltaAbsolute let-index=\"index\" let-data=\"data\">\n    <gt-delta\n      [index]=\"index\"\n      [data]=\"data\"\n      [deltaTemplate]=\"deltaTemplate\"\n    ></gt-delta>\n  </ng-template>\n  <ng-template #deltaIndex let-index=\"index\" let-data=\"data\">\n    <gt-delta [index]=\"index\" [data]=\"data\" [baseIndex]=\"0\"></gt-delta>\n  </ng-template>\n  <ng-template\n    #combined\n    let-index=\"index\"\n    let-data=\"data\"\n    let-row=\"row\"\n    let-col=\"col\"\n  >\n    {{ row.value }}\n    <ng-container *ngIf=\"index > 0\">\n      <gt-delta [index]=\"index\" [data]=\"data\"></gt-delta>\n    </ng-container>\n  </ng-template>\n  <ng-template #deltaTemplate let-delta=\"delta\">\n    <span>{{ delta.absolute }}</span></ng-template\n  >\n  <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n</form>`,\n    language: 'xml',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HorizontalTableComponent } from './horizontal-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [HorizontalTableComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [HorizontalTableComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { TableConfig, GtDeltaComponent } from '@angular-generic-table/core';\nimport { UntypedFormBuilder } from '@angular/forms';\nimport { withLatestFrom } from 'rxjs/operators';\nimport { Story } from '@storybook/angular/types-6-0';\nimport { TRANSPOSE_SNIPPETS } from './transpose.snippets';\ninterface RawData {\n  year: string;\n  value: number;\n}\ninterface YearData extends RawData {\n  delta: number;\n  deltaIndex: number;\n  combined: number;\n  deltaAbsolute: number;\n}\n@Component({\n  selector: 'docs-transpose',\n  template: `\n    <form [formGroup]=\"reactiveForm\">\n      <div class=\"row gy-3 gx-3 align-items-end mb-3\">\n        <div class=\"form-group col-6 col-sm-auto\">\n          <label for=\"length_input\">Number of rows</label>\n          <input\n            id=\"length_input\"\n            formControlName=\"length\"\n            type=\"number\"\n            class=\"form-control\"\n          />\n        </div>\n        <div class=\"form-group col-6 col-sm-auto\">\n          <label for=\"search_input\">Search</label>\n          <input\n            id=\"search_input\"\n            formControlName=\"search\"\n            type=\"text\"\n            class=\"form-control\"\n          />\n        </div>\n        <div class=\"col-auto\">\n          <button\n            class=\"btn btn-outline-primary w-100\"\n            (click)=\"simulateLoad()\"\n          >\n            Simulate load\n          </button>\n        </div>\n        <div class=\"col col-sm-auto\">\n          <button class=\"btn btn-outline-danger w-100\" (click)=\"empty()\">\n            Empty\n          </button>\n        </div>\n        <div class=\"col col-sm-auto\">\n          <button class=\"btn btn-outline-primary w-100\" (click)=\"load()\">\n            Reset\n          </button>\n        </div>\n        <div class=\"col col-sm-auto\">\n          <button class=\"btn btn-outline-primary w-100\" (click)=\"transpose()\">\n            Transpose\n          </button>\n        </div>\n      </div>\n      <div class=\"overflow-auto\">\n        <angular-generic-table\n          #table\n          [data]=\"data\"\n          [config]=\"tableConfig$\"\n          [loading]=\"loading$\"\n          [search]=\"search$\"\n        >\n          <div class=\"table-loading gt-skeleton-loader\"></div>\n          <div class=\"table-no-data alert alert-info mt-3\">Table is empty</div>\n        </angular-generic-table>\n      </div>\n      <angular-generic-table-pagination [table]=\"table\">\n      </angular-generic-table-pagination>\n      <ng-template #delta let-index=\"index\" let-data=\"data\">\n        <gt-delta [index]=\"index\" [data]=\"data\"></gt-delta>\n      </ng-template>\n      <ng-template #deltaAbsolute let-index=\"index\" let-data=\"data\">\n        <gt-delta\n          [index]=\"index\"\n          [data]=\"data\"\n          [deltaTemplate]=\"deltaTemplate\"\n        ></gt-delta>\n      </ng-template>\n      <ng-template #deltaIndex let-index=\"index\" let-data=\"data\">\n        <gt-delta [index]=\"index\" [data]=\"data\" [baseIndex]=\"0\"></gt-delta>\n      </ng-template>\n      <ng-template\n        #combined\n        let-index=\"index\"\n        let-data=\"data\"\n        let-row=\"row\"\n        let-col=\"col\"\n      >\n        {{ row.value }}\n        <ng-container *ngIf=\"index > 0\">\n          <gt-delta [index]=\"index\" [data]=\"data\"></gt-delta>\n        </ng-container>\n      </ng-template>\n      <ng-template #deltaTemplate let-delta=\"delta\">\n        <span>{{ delta.absolute }}</span></ng-template\n      >\n      <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n    </form>\n  `,\n  styles: [],\n})\nexport class TransposeComponent implements OnInit {\n  @ViewChild('delta', { static: true }) delta:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  @ViewChild('deltaAbsolute', { static: true }) deltaAbsolute:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  @ViewChild('deltaIndex', { static: true }) deltaIndex:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  @ViewChild('combined', { static: true }) combined:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  loading$ = new BehaviorSubject(false);\n  reactiveForm = this.fb.group({\n    length: [10],\n    search: [''],\n  });\n  search$ = this.reactiveForm.get('search')?.valueChanges as Observable<string>;\n  tableConfig$: BehaviorSubject<TableConfig<YearData>> = new BehaviorSubject<\n    TableConfig<YearData>\n  >({});\n  data: Array<RawData> = [];\n\n  constructor(private fb: UntypedFormBuilder) {}\n\n  ngOnInit(): void {\n    this.transpose();\n    this.load();\n    this.reactiveForm\n      .get('length')\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\n      .subscribe(([length, config]) => {\n        length = +length;\n        this.tableConfig$.next({\n          ...config,\n          pagination: { ...config.pagination, length },\n        });\n      });\n  }\n\n  simulateLoad(): void {\n    this.loading$.next(true);\n    // set loading state to false after 2 seconds\n    setTimeout(() => this.loading$.next(false), 2000);\n  }\n  empty(): void {\n    this.data = [];\n  }\n  load(): void {\n    this.data = [\n      {\n        year: '2010',\n        value: 15,\n      },\n      {\n        year: '2011',\n        value: 30,\n      },\n      {\n        year: '2012',\n        value: 25,\n      },\n      {\n        year: '2013',\n        value: 0,\n      },\n      {\n        year: '2014',\n        value: 40,\n      },\n      {\n        year: '2015',\n        value: 0,\n      },\n      {\n        year: '2016',\n        value: -5,\n      },\n      {\n        year: '2018',\n        value: 75,\n      },\n      {\n        year: '2019',\n        value: 100,\n      },\n      {\n        year: '2020',\n        value: 250,\n      },\n      {\n        year: '2021',\n        value: 50,\n      },\n      {\n        year: '2022',\n        value: 60,\n      },\n    ];\n  }\n  transpose(): void {\n    if (this.tableConfig$.value.columns) {\n      this.tableConfig$.next({\n        stickyHeaders: {\n          row: true,\n          column: true,\n        },\n        rows: {\n          year: {\n            sortable: true,\n            header: false,\n            class: 'text-end',\n          },\n          value: {\n            class: 'text-end',\n          },\n          delta: {\n            header: 'Delta %',\n            templateRef: this.delta,\n            class: 'text-end',\n          },\n          deltaIndex: {\n            header: 'Since inception %',\n            templateRef: this.deltaIndex,\n            class: 'text-end',\n          },\n          deltaAbsolute: {\n            header: 'Delta',\n            templateRef: this.deltaAbsolute,\n            class: 'text-end',\n          },\n          combined: {\n            header: 'Value with change',\n            templateRef: this.combined,\n            class: 'text-end text-nowrap',\n          },\n        },\n      });\n    } else {\n      this.tableConfig$.next({\n        stickyHeaders: {\n          row: true,\n          column: true,\n        },\n        columns: {\n          year: {\n            sortable: true,\n          },\n          value: {\n            class: 'text-end',\n          },\n          delta: {\n            header: 'Delta %',\n            templateRef: this.delta,\n            class: 'text-end',\n          },\n          deltaIndex: {\n            header: 'Since inception %',\n            templateRef: this.deltaIndex,\n            class: 'text-end',\n          },\n          deltaAbsolute: {\n            header: 'Delta',\n            templateRef: this.deltaAbsolute,\n            class: 'text-end',\n          },\n          combined: {\n            header: 'Value with change',\n            templateRef: this.combined,\n            class: 'text-end text-nowrap',\n          },\n        },\n        pagination: { length: this.reactiveForm.get('length')?.value },\n      });\n    }\n  }\n  SNIPPETS = TRANSPOSE_SNIPPETS;\n}\n\nexport const Transpose: Story<TransposeComponent> = (\n  args: TransposeComponent\n) => ({\n  props: args,\n  component: TransposeComponent,\n});\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Story } from '@storybook/addon-docs';\nimport {moduleMetadata} from \"@storybook/angular\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {CommonModule} from \"@angular/common\";\nimport {GenericTableCoreModule} from \"../../../../core/src/lib/core.module\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {TabsComponent} from \"../../app/components/tabs/tabs.component\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {GenericTablePaginationModule} from \"../../../../core/src/lib/pagination/pagination.module\";\nimport {Transpose} from '../../app/examples/transpose/transpose.component';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Meta title=\"Examples/Transpose data\" decorators={[moduleMetadata({\n      declarations: [TabsComponent],\n      imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n    })]} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"transpose-table-flip-layout\"\n    }}>{`Transpose table (flip layout)`}</h1>\n    <p>{`Similar to `}<a href=\"examples?path=/docs/examples-horizontal-layout--horizontal-layout\">{`horizontal layout example`}</a>{` but with `}<code>{`search`}</code>{` and `}<code>{`pagination`}</code>{` enabled as well as the ability to switch between row-layout and column-layout.`}</p>\n    <Story name=\"Transpose data\" mdxType=\"Story\">\n  {Transpose.bind({})}\n    </Story>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n\nexport const transposeData = Transpose.bind({});\ntransposeData.storyName = 'Transpose data';\ntransposeData.parameters = { storySource: { source: 'Transpose.bind({})' } };\n\nconst componentMeta = { title: 'Examples/Transpose data', decorators: [moduleMetadata({\n  declarations: [TabsComponent],\n  imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n})], includeStories: [\"transposeData\"],  };\n\nconst mdxStoryNameToKey = {\"Transpose data\":\"transposeData\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n      .table th {\\n        white-space: nowrap;\\n      }\\n    \", \"\",{\"version\":3,\"sources\":[\"webpack://./projects/docs/src/app/examples/mobile-layout/mobile-layout.component.ts\"],\"names\":[],\"mappings\":\";MACM;QACE,mBAAmB;MACrB\",\"sourcesContent\":[\"\\n      .table th {\\n        white-space: nowrap;\\n      }\\n    \"],\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n      :host ::ng-deep .gt-active {\\n        background-color: var(--bs-highlight-bg);\\n      }\\n    \", \"\",{\"version\":3,\"sources\":[\"webpack://./projects/docs/src/app/examples/row-hover-click/row-hover-click.component.ts\"],\"names\":[],\"mappings\":\";MACM;QACE,wCAAwC;MAC1C\",\"sourcesContent\":[\"\\n      :host ::ng-deep .gt-active {\\n        background-color: var(--bs-highlight-bg);\\n      }\\n    \"],\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n      :host ::ng-deep .gt-active {\\n        background-color: var(--bs-highlight-bg);\\n      }\\n      :host ::ng-deep .table > tbody > tr {\\n        cursor: pointer;\\n      }\\n    \", \"\",{\"version\":3,\"sources\":[\"webpack://./projects/docs/src/app/examples/row-select/row-select.component.ts\"],\"names\":[],\"mappings\":\";MACM;QACE,wCAAwC;MAC1C;MACA;QACE,eAAe;MACjB\",\"sourcesContent\":[\"\\n      :host ::ng-deep .gt-active {\\n        background-color: var(--bs-highlight-bg);\\n      }\\n      :host ::ng-deep .table > tbody > tr {\\n        cursor: pointer;\\n      }\\n    \"],\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n      :host {\\n        display: inline-block;\\n      }\\n    \", \"\",{\"version\":3,\"sources\":[\"webpack://./projects/core/src/lib/gt-delta/gt-delta.component.ts\"],\"names\":[],\"mappings\":\";MACM;QACE,qBAAqB;MACvB\",\"sourcesContent\":[\"\\n      :host {\\n        display: inline-block;\\n      }\\n    \"],\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"pre {\\n  background-image: linear-gradient(0deg, #f8f8f8 25%, #ffffff 25%, #ffffff 50%, #f8f8f8 50%, #f8f8f8 75%, #ffffff 75%, #ffffff 100%);\\n  background-size: 84px 84px;\\n  padding: 21px 1rem;\\n}\\n\\nul {\\n  -ms-overflow-style: none; /* IE and Edge */\\n  scrollbar-width: none; /* Firefox */\\n}\\nul::-webkit-scrollbar {\\n  display: none;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./projects/docs/src/app/components/tabs/tabs.component.scss\"],\"names\":[],\"mappings\":\"AAAA;EACE,mIAAA;EACA,0BAAA;EACA,kBAAA;AACF;;AACA;EAIE,wBAAA,EAAA,gBAAA;EACA,qBAAA,EAAA,YAAA;AADF;AAHE;EACE,aAAA;AAKJ\",\"sourcesContent\":[\"pre {\\n  background-image: linear-gradient(0deg, #f8f8f8 25%, #ffffff 25%, #ffffff 50%, #f8f8f8 50%, #f8f8f8 75%, #ffffff 75%, #ffffff 100%);\\n  background-size: 84.00px 84.00px;\\n  padding: 21px 1rem;\\n}\\nul {\\n  &::-webkit-scrollbar {\\n    display: none;\\n  }\\n  -ms-overflow-style: none; /* IE and Edge */\\n  scrollbar-width: none; /* Firefox */\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"./projects/docs/src/stories sync recursive ^\\\\.(?:(?:^%7C\\\\/%7C(?:(?:(?%21(?:^%7C\\\\/)\\\\.).)*?)\\\\/)(?%21\\\\.)(?=.)[^/]*?\\\\.stories\\\\.(js%7Cjsx%7Cts%7Ctsx))$\";\nmodule.exports = webpackEmptyContext;","var map = {\n\t\"./Introduction.stories.mdx\": \"./projects/docs/src/stories/Introduction.stories.mdx\",\n\t\"./examples/Advanced.stories.mdx\": \"./projects/docs/src/stories/examples/Advanced.stories.mdx\",\n\t\"./examples/Custom-templates.stories.mdx\": \"./projects/docs/src/stories/examples/Custom-templates.stories.mdx\",\n\t\"./examples/Footer.stories.mdx\": \"./projects/docs/src/stories/examples/Footer.stories.mdx\",\n\t\"./examples/Horizontal.stories.mdx\": \"./projects/docs/src/stories/examples/Horizontal.stories.mdx\",\n\t\"./examples/Mobile.stories.mdx\": \"./projects/docs/src/stories/examples/Mobile.stories.mdx\",\n\t\"./examples/Nested-data.stories.mdx\": \"./projects/docs/src/stories/examples/Nested-data.stories.mdx\",\n\t\"./examples/Pagination/Client-side-pagination.stories.mdx\": \"./projects/docs/src/stories/examples/Pagination/Client-side-pagination.stories.mdx\",\n\t\"./examples/Pagination/Pagination-get-started.stories.mdx\": \"./projects/docs/src/stories/examples/Pagination/Pagination-get-started.stories.mdx\",\n\t\"./examples/Pagination/Server-side-pagination.stories.mdx\": \"./projects/docs/src/stories/examples/Pagination/Server-side-pagination.stories.mdx\",\n\t\"./examples/Row-events.stories.mdx\": \"./projects/docs/src/stories/examples/Row-events.stories.mdx\",\n\t\"./examples/Row-selection.stories.mdx\": \"./projects/docs/src/stories/examples/Row-selection.stories.mdx\",\n\t\"./examples/Sorting.stories.mdx\": \"./projects/docs/src/stories/examples/Sorting.stories.mdx\",\n\t\"./examples/Static.stories.mdx\": \"./projects/docs/src/stories/examples/Static.stories.mdx\",\n\t\"./examples/Transpose.stories.mdx\": \"./projects/docs/src/stories/examples/Transpose.stories.mdx\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./projects/docs/src/stories sync recursive ^\\\\.(?:(?:^%7C\\\\/%7C(?:(?:(?%21(?:^%7C\\\\/)\\\\.).)*?)\\\\/)(?%21\\\\.)(?=.)[^/]*?\\\\.stories\\\\.mdx)$\";","\"use strict\";\n\nvar _frameworkImportPath = require(\"@storybook/angular\");\n\n/* eslint-disable import/no-unresolved */\n(0, _frameworkImportPath.configure)([require.context('./projects/docs/src/stories', true, /^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.mdx)$/),require.context('./projects/docs/src/stories', true, /^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(js|jsx|ts|tsx))$/)], module, false);"],"names":["CoreComponent","constructor","unsubscribe$","Subject","_navigationKeys","_selectKeys","_customClasses","selectedRow","activeRow","selection","generateRowId","rowClick","EventEmitter","rowSelect","sortOrderChange","_rowActive$","ReplaySubject","rowActive","columnSort","pageChange","rowActive$","this","asObservable","pipe","distinctUntilChanged","p","q","rowIdKey","row","_id","index","tap","event","activeRowIndex","emit","shareReplay","_loading$","_sortOrder$","BehaviorSubject","_searchBy$","searchBy$","startWith","map","value","isObservable","of","switchMap","obs","_pagingInfo$","pageCurrent","pageNext","pagePrevious","pageSize","numberOfRecords","_tableConfig$","tableConfig$","config","_tableConfig","_data$","data$","combineLatest","withLatestFrom","data","columns","Object","values","find","column","mapTo","rows","newData","i","length","newKeys","entries","filter","key","reduce","previousValue","nestedValue","path","missingValue","dataWithId","sortOrder$","table","sortBy","searchBy","disableTableSort","tableInfo","lazyLoaded","search","sort","sortOnMultipleKeys","calculations$","calculate","table$","sorted","pagingInfo","info","pageTotal","Math","ceil","pagination","chunk","meta","_tableInfo$","next","undefined","_currentPaginationIndex$","currentPaginationIndex$","page","lastPage","records","recordLength","colspan$","hidden","footerColspan$","colspan","footer","forEach","calculations","columnOrder","a","b","order","_unsubscribeFromKeyboardEvents$","_keyboardArrowEvent$","fromEvent","document","indexOf","navigationKeys","selectKeys","loading","isLoading","paginationIndex","pageIndex","getValue","customClasses","classes","isRowSelectedFn","fn","_isRowSelectedFn","trackRowByFn","_trackRowByFn","string","sortOrder","sortConfig","JSON","stringify","_rowClick","_rowActive","activateRow","arg","pluck","take","takeUntil","subscribe","_activateRow","loading$","tableInfo$","sortByKey","$event","shiftKey","currentOrder","newOrder","existingSortPosition","findIndex","newSortOrder","sortEvent","currentSortOrder","addSortKey","object","levels","split","currentValue","listenToKeyboardEvents","activateRowOnKeyboardNavigation","currentPage","includes","rowIndex","_handleNavigationEvent","unsubscribeFromKeyboardEvents","tableRef","activeElement","activateRowOnHover","hasPagination","lastRowIndex","newIndex","indexModifier","indexOfLastRecord","isNotLastPage","recordsOnLastPage","maxIndex","ngOnDestroy","complete","Input","Output","Component","selector","template","changeDetection","ChangeDetectionStrategy","standalone","imports","CapitalCasePipe","KeyValuePipe","SortClassPipe","DashCasePipe","RowSelectionPipe","AsyncPipe","NgTemplateOutlet","SlicePipe","DynamicPipe","HighlightPipe","NgClass","NgIf","NgForOf","GenericTableCoreModule","NgModule","CommonModule","GtDeltaComponent","exports","declarations","_value","deltaTemplate","_deltaTemplate","Number","span","positive","negative","notApplicableValue","initialValue","ngOnChanges","changes","baseIndex","deltaValue","baseValue","relative","sign","abs","isFinite","absolute","PercentPipe","PaginationComponent","_table$","_ariaLabels","nav","button","_classes","ul","li","_paginationLength","paginationListItems$","core","_generateList","_pagingInfo","paginationLength","ariaLabels","labels","_table","numberOfPages","currentPosition","middle","floor","Array","from","_","goToPage","GenericTablePaginationModule","transform","s","capitalize","Pipe","name","dashed","injector","requiredPipe","pipeArgs","Injector","parent","providers","provide","get","text","searchTerm","haystackAlwaysString","searchPattern","highlightedText","RegExp","toLowerCase","match","needle","replace","join","error","containsTagMatches","exec","comparator","className","context","sortIndex","m","charAt","toUpperCase","slice","trim","array","chunkSize","Error","CHUNK","len","push","caseSensitive","searchColumns","keys","FILTERED","acc","CALCULATIONS","COLUMN_CALCULATIONS","CALCULATED","columnName","calculation","sum","max","min","avg","count","calculated","rowOrder","calculatedColumnsCount","o","sortOrderToParams","sortOrderConfigToParam","hljs","typescript","scss","xml","TabsComponent","content","_content","activeIndex","ngOnInit","activeContent","code","language","view","ADVANCED_DOCS","fb","http","paginationForm","group","search$","valueChanges","SNIPPETS","class","first_name","sortable","last_name","gender","birthday","formatDate","DatePipe","args","ViewChild","static","Pagination","props","component","setCompodocJson","docJson","parameters","actions","argTypesRegex","controls","matchers","color","date","docs","inlineStories","options","storySort","method","includeNames","themes","default","clearable","list","onChange","theme","body","setAttribute","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","apply","_defineProperty","obj","defineProperty","configurable","writable","addArgs","addArgTypes","decorator","addDecorator","loader","addLoader","addParameters","_objectSpread","target","arguments","source","getOwnPropertyDescriptors","defineProperties","enhancer","addArgTypesEnhancer","addArgsEnhancer","setGlobalRender","v","console","log","layoutProps","MDXContent","components","mdxType","title","parentName","isMDXComponent","__page","docsOnly","componentMeta","includeStories","mdxStoryNameToKey","mdxComponentAnnotations","AdvancedComponent","currentPage$","_currentPage$","firstName","lastName","favoriteColor","favoriteFood","clicked","maleFirstNames","femaleFirstNames","lastNames","foods","colors","prev","addData","randomRecord","removeData","simulateLoad","setTimeout","clickAction","random","newRecord","mobileLayout","header","mobileHeader","templateRef","action","men","women","Advanced","decorators","moduleMetadata","BrowserModule","ReactiveFormsModule","HttpClientModule","bind","multipleFeatures","storyName","storySource","CUSTOM_TEMPLATES_DOCS","CustomTemplatesComponent","config$","CustomTemplates","customTemplates","SIMPLE_SNIPPETS","FooterComponent","age","weight","height","DecimalPipe","heightTmplRef","headers","numberOfWomen","numberOfMen","first","Footer","Preview","makeShortcode","MDXDefaultShortcode","warn","mdxSource","href","tableFooter","HORIZONTAL_TABLE_SNIPPETS","HorizontalTableComponent","stickyHeaders","year","delta","deltaIndex","feeling","feelings","load","empty","Horizontal","horizontalLayout","MOBILE_LAYOUT_SNIPPETS","GenderPipe","MobileLayoutComponent","mobileLayout$","toggleLayout","encapsulation","ViewEncapsulation","Mobile","NESTED_SNIPPETS","NestedDataComponent","resetData","missing","last","details","loadData","Nested","nestedData","clientSide","CoreService","Injectable","providedIn","LAZY_LOADING_DOCS","ServerSidePaginationComponent","requestParams$","page_size","sort_by","request$","params","paging$","sorting$","onPageChange","current","onSortOrderChange","id","favorite_color","email","ServerSidePagination","serverSide","ROW_HOVER_CLICK_SNIPPETS","RowHoverClickComponent","onRowClick","onRowHover","RowHoverClick","rowClickActiveState","ROW_SELECT_SNIPPETS","RowSelectComponent","_activateOnRowHover$","_activateOnNavigation$","customClassNames","lengthCtrl","FormControl","activateOnRowHover$","activateOnNavigation$","_activeRow$","activateOnRowHover","toggleRowHover","activateOnNavigation","toggleRowNavigation","setActiveRow","type","preventDefault","activeRow$","isSelected","selectRow","isAllSelected","toggleAll","RowSelect","rowSelection","SortingComponent","initialSortOrder","birthdate","logSortChange","resetSort","Sorting","sorting","SimpleComponent","Simple","basic","TRANSPOSE_SNIPPETS","TransposeComponent","reactiveForm","transpose","deltaAbsolute","combined","Transpose","transposeData","___CSS_LOADER_API_SOURCEMAP_IMPORT___","___CSS_LOADER_EXPORT___","___CSS_LOADER_API_IMPORT___","module","toString","webpackEmptyContext","req","e","resolve","webpackContext","webpackContextResolve","__webpack_require__","webpackContextKeys","require","configure"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}