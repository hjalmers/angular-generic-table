{"version":3,"file":"939.838642ab.iframe.bundle.js","mappings":"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","sources":["./node_modules/@storybook/components/dist/esm/OverlayScrollbars-1355f44c.js"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { c as commonjsGlobal, d as __rest } from './index-681e4b07.js';\nimport React__default, { useRef, useEffect } from 'react';\nimport '@storybook/theming';\nimport 'memoizerific';\nimport '@storybook/csf';\nimport 'qs';\nimport '@storybook/client-logger';\nvar OverlayScrollbars$1 = {\n  exports: {}\n};\n/*!\r\n * OverlayScrollbars\r\n * https://github.com/KingSora/OverlayScrollbars\r\n *\r\n * Version: 1.13.0\r\n *\r\n * Copyright KingSora | Rene Haas.\r\n * https://github.com/KingSora\r\n *\r\n * Released under the MIT license.\r\n * Date: 02.08.2020\r\n */\n\n(function (module) {\n  (function (global, factory) {\n    module.exports = factory(global, global.document, undefined);\n  })(typeof window !== 'undefined' ? window : commonjsGlobal, function (window, document, undefined$1) {\n    var PLUGINNAME = 'OverlayScrollbars';\n    var TYPES = {\n      o: 'object',\n      f: 'function',\n      a: 'array',\n      s: 'string',\n      b: 'boolean',\n      n: 'number',\n      u: 'undefined',\n      z: 'null' //d : 'date',\n      //e : 'error',\n      //r : 'regexp',\n      //y : 'symbol'\n\n    };\n    var LEXICON = {\n      c: 'class',\n      s: 'style',\n      i: 'id',\n      l: 'length',\n      p: 'prototype',\n      ti: 'tabindex',\n      oH: 'offsetHeight',\n      cH: 'clientHeight',\n      sH: 'scrollHeight',\n      oW: 'offsetWidth',\n      cW: 'clientWidth',\n      sW: 'scrollWidth',\n      hOP: 'hasOwnProperty',\n      bCR: 'getBoundingClientRect'\n    };\n\n    var VENDORS = function () {\n      //https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\n      var jsCache = {};\n      var cssCache = {};\n      var cssPrefixes = ['-webkit-', '-moz-', '-o-', '-ms-'];\n      var jsPrefixes = ['WebKit', 'Moz', 'O', 'MS'];\n\n      function firstLetterToUpper(str) {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n      }\n\n      return {\n        _cssPrefixes: cssPrefixes,\n        _jsPrefixes: jsPrefixes,\n        _cssProperty: function _cssProperty(name) {\n          var result = cssCache[name];\n          if (cssCache[LEXICON.hOP](name)) return result;\n          var uppercasedName = firstLetterToUpper(name);\n          var elmStyle = document.createElement('div')[LEXICON.s];\n          var resultPossibilities;\n          var i = 0;\n          var v;\n          var currVendorWithoutDashes;\n\n          for (; i < cssPrefixes.length; i++) {\n            currVendorWithoutDashes = cssPrefixes[i].replace(/-/g, '');\n            resultPossibilities = [name, //transition\n            cssPrefixes[i] + name, //-webkit-transition\n            currVendorWithoutDashes + uppercasedName, //webkitTransition\n            firstLetterToUpper(currVendorWithoutDashes) + uppercasedName //WebkitTransition\n            ];\n\n            for (v = 0; v < resultPossibilities[LEXICON.l]; v++) {\n              if (elmStyle[resultPossibilities[v]] !== undefined$1) {\n                result = resultPossibilities[v];\n                break;\n              }\n            }\n          }\n\n          cssCache[name] = result;\n          return result;\n        },\n        _cssPropertyValue: function _cssPropertyValue(property, values, suffix) {\n          var name = property + ' ' + values;\n          var result = cssCache[name];\n          if (cssCache[LEXICON.hOP](name)) return result;\n          var dummyStyle = document.createElement('div')[LEXICON.s];\n          var possbleValues = values.split(' ');\n          var preparedSuffix = suffix || '';\n          var i = 0;\n          var v = -1;\n          var prop;\n\n          for (; i < possbleValues[LEXICON.l]; i++) {\n            for (; v < VENDORS._cssPrefixes[LEXICON.l]; v++) {\n              prop = v < 0 ? possbleValues[i] : VENDORS._cssPrefixes[v] + possbleValues[i];\n              dummyStyle.cssText = property + ':' + prop + preparedSuffix;\n\n              if (dummyStyle[LEXICON.l]) {\n                result = prop;\n                break;\n              }\n            }\n          }\n\n          cssCache[name] = result;\n          return result;\n        },\n        _jsAPI: function _jsAPI(name, isInterface, fallback) {\n          var i = 0;\n          var result = jsCache[name];\n\n          if (!jsCache[LEXICON.hOP](name)) {\n            result = window[name];\n\n            for (; i < jsPrefixes[LEXICON.l]; i++) {\n              result = result || window[(isInterface ? jsPrefixes[i] : jsPrefixes[i].toLowerCase()) + firstLetterToUpper(name)];\n            }\n\n            jsCache[name] = result;\n          }\n\n          return result || fallback;\n        }\n      };\n    }();\n\n    var COMPATIBILITY = function () {\n      function windowSize(x) {\n        return x ? window.innerWidth || document.documentElement[LEXICON.cW] || document.body[LEXICON.cW] : window.innerHeight || document.documentElement[LEXICON.cH] || document.body[LEXICON.cH];\n      }\n\n      function bind(func, thisObj) {\n        if (_typeof(func) != TYPES.f) {\n          throw \"Can't bind function!\"; // closest thing possible to the ECMAScript 5\n          // internal IsCallable function\n          //throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n        }\n\n        var proto = LEXICON.p;\n        var aArgs = Array[proto].slice.call(arguments, 2);\n\n        var fNOP = function fNOP() {};\n\n        var fBound = function fBound() {\n          return func.apply(this instanceof fNOP ? this : thisObj, aArgs.concat(Array[proto].slice.call(arguments)));\n        };\n\n        if (func[proto]) fNOP[proto] = func[proto]; // Function.prototype doesn't have a prototype property\n\n        fBound[proto] = new fNOP();\n        return fBound;\n      }\n\n      return {\n        /**\r\n         * Gets the current window width.\r\n         * @returns {Number|number} The current window width in pixel.\r\n         */\n        wW: bind(windowSize, 0, true),\n\n        /**\r\n         * Gets the current window height.\r\n         * @returns {Number|number} The current window height in pixel.\r\n         */\n        wH: bind(windowSize, 0),\n\n        /**\r\n         * Gets the MutationObserver Object or undefined if not supported.\r\n         * @returns {MutationObserver|*|undefined} The MutationsObserver Object or undefined.\r\n         */\n        mO: bind(VENDORS._jsAPI, 0, 'MutationObserver', true),\n\n        /**\r\n         * Gets the ResizeObserver Object or undefined if not supported.\r\n         * @returns {MutationObserver|*|undefined} The ResizeObserver Object or undefined.\r\n         */\n        rO: bind(VENDORS._jsAPI, 0, 'ResizeObserver', true),\n\n        /**\r\n         * Gets the RequestAnimationFrame method or it's corresponding polyfill.\r\n         * @returns {*|Function} The RequestAnimationFrame method or it's corresponding polyfill.\r\n         */\n        rAF: bind(VENDORS._jsAPI, 0, 'requestAnimationFrame', false, function (func) {\n          return window.setTimeout(func, 1000 / 60);\n        }),\n\n        /**\r\n         * Gets the CancelAnimationFrame method or it's corresponding polyfill.\r\n         * @returns {*|Function} The CancelAnimationFrame method or it's corresponding polyfill.\r\n         */\n        cAF: bind(VENDORS._jsAPI, 0, 'cancelAnimationFrame', false, function (id) {\n          return window.clearTimeout(id);\n        }),\n\n        /**\r\n         * Gets the current time.\r\n         * @returns {number} The current time.\r\n         */\n        now: function now() {\n          return Date.now && Date.now() || new Date().getTime();\n        },\n\n        /**\r\n         * Stops the propagation of the given event.\r\n         * @param event The event of which the propagation shall be stoped.\r\n         */\n        stpP: function stpP(event) {\n          if (event.stopPropagation) event.stopPropagation();else event.cancelBubble = true;\n        },\n\n        /**\r\n         * Prevents the default action of the given event.\r\n         * @param event The event of which the default action shall be prevented.\r\n         */\n        prvD: function prvD(event) {\n          if (event.preventDefault && event.cancelable) event.preventDefault();else event.returnValue = false;\n        },\n\n        /**\r\n         * Gets the pageX and pageY values of the given mouse event.\r\n         * @param event The mouse event of which the pageX and pageX shall be got.\r\n         * @returns {{x: number, y: number}} x = pageX value, y = pageY value.\r\n         */\n        page: function page(event) {\n          event = event.originalEvent || event;\n          var strPage = 'page';\n          var strClient = 'client';\n          var strX = 'X';\n          var strY = 'Y';\n          var target = event.target || event.srcElement || document;\n          var eventDoc = target.ownerDocument || document;\n          var doc = eventDoc.documentElement;\n          var body = eventDoc.body; //if touch event return return pageX/Y of it\n\n          if (event.touches !== undefined$1) {\n            var touch = event.touches[0];\n            return {\n              x: touch[strPage + strX],\n              y: touch[strPage + strY]\n            };\n          } // Calculate pageX/Y if not native supported\n\n\n          if (!event[strPage + strX] && event[strClient + strX] && event[strClient + strX] != null) {\n            return {\n              x: event[strClient + strX] + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0),\n              y: event[strClient + strY] + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0)\n            };\n          }\n\n          return {\n            x: event[strPage + strX],\n            y: event[strPage + strY]\n          };\n        },\n\n        /**\r\n         * Gets the clicked mouse button of the given mouse event.\r\n         * @param event The mouse event of which the clicked button shal be got.\r\n         * @returns {number} The number of the clicked mouse button. (0 : none | 1 : leftButton | 2 : middleButton | 3 : rightButton)\r\n         */\n        mBtn: function mBtn(event) {\n          var button = event.button;\n          if (!event.which && button !== undefined$1) return button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;else return event.which;\n        },\n\n        /**\r\n         * Checks whether a item is in the given array and returns its index.\r\n         * @param item The item of which the position in the array shall be determined.\r\n         * @param arr The array.\r\n         * @returns {number} The zero based index of the item or -1 if the item isn't in the array.\r\n         */\n        inA: function inA(item, arr) {\n          for (var i = 0; i < arr[LEXICON.l]; i++) {\n            //Sometiems in IE a \"SCRIPT70\" Permission denied error occurs if HTML elements in a iFrame are compared\n            try {\n              if (arr[i] === item) return i;\n            } catch (e) {}\n          }\n\n          return -1;\n        },\n\n        /**\r\n         * Returns true if the given value is a array.\r\n         * @param arr The potential array.\r\n         * @returns {boolean} True if the given value is a array, false otherwise.\r\n         */\n        isA: function isA(arr) {\n          var def = Array.isArray;\n          return def ? def(arr) : this.type(arr) == TYPES.a;\n        },\n\n        /**\r\n         * Determine the internal JavaScript [[Class]] of the given object.\r\n         * @param obj The object of which the type shall be determined.\r\n         * @returns {string} The type of the given object.\r\n         */\n        type: function type(obj) {\n          if (obj === undefined$1) return obj + '';\n          if (obj === null) return obj + '';\n          return Object[LEXICON.p].toString.call(obj).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\n        },\n        bind: bind\n        /**\r\n         * Gets the vendor-prefixed CSS property by the given name.\r\n         * For example the given name is \"transform\" and you're using a old Firefox browser then the returned value would be \"-moz-transform\".\r\n         * If the browser doesn't need a vendor-prefix, then the returned string is the given name.\r\n         * If the browser doesn't support the given property name at all (not even with a vendor-prefix) the returned value is null.\r\n         * @param propName The unprefixed CSS property name.\r\n         * @returns {string|null} The vendor-prefixed CSS property or null if the browser doesn't support the given CSS property.\r\n          cssProp: function(propName) {\r\n            return VENDORS._cssProperty(propName);\r\n        }\r\n        */\n\n      };\n    }();\n\n    var MATH = Math;\n    var JQUERY = window.jQuery;\n\n    var EASING = function () {\n      var _easingsMath = {\n        p: MATH.PI,\n        c: MATH.cos,\n        s: MATH.sin,\n        w: MATH.pow,\n        t: MATH.sqrt,\n        n: MATH.asin,\n        a: MATH.abs,\n        o: 1.70158\n      };\n      /*\r\n       x : current percent (0 - 1),\r\n       t : current time (duration * percent),\r\n       b : start value (from),\r\n       c : end value (to),\r\n       d : duration\r\n         easingName : function(x, t, b, c, d) { return easedValue; }\r\n       */\n\n      return {\n        swing: function swing(x, t, b, c, d) {\n          return 0.5 - _easingsMath.c(x * _easingsMath.p) / 2;\n        },\n        linear: function linear(x, t, b, c, d) {\n          return x;\n        },\n        easeInQuad: function easeInQuad(x, t, b, c, d) {\n          return c * (t /= d) * t + b;\n        },\n        easeOutQuad: function easeOutQuad(x, t, b, c, d) {\n          return -c * (t /= d) * (t - 2) + b;\n        },\n        easeInOutQuad: function easeInOutQuad(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t + b : -c / 2 * (--t * (t - 2) - 1) + b;\n        },\n        easeInCubic: function easeInCubic(x, t, b, c, d) {\n          return c * (t /= d) * t * t + b;\n        },\n        easeOutCubic: function easeOutCubic(x, t, b, c, d) {\n          return c * ((t = t / d - 1) * t * t + 1) + b;\n        },\n        easeInOutCubic: function easeInOutCubic(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t + b : c / 2 * ((t -= 2) * t * t + 2) + b;\n        },\n        easeInQuart: function easeInQuart(x, t, b, c, d) {\n          return c * (t /= d) * t * t * t + b;\n        },\n        easeOutQuart: function easeOutQuart(x, t, b, c, d) {\n          return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n        },\n        easeInOutQuart: function easeInOutQuart(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t * t + b : -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n        },\n        easeInQuint: function easeInQuint(x, t, b, c, d) {\n          return c * (t /= d) * t * t * t * t + b;\n        },\n        easeOutQuint: function easeOutQuint(x, t, b, c, d) {\n          return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n        },\n        easeInOutQuint: function easeInOutQuint(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t * t * t + b : c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n        },\n        easeInSine: function easeInSine(x, t, b, c, d) {\n          return -c * _easingsMath.c(t / d * (_easingsMath.p / 2)) + c + b;\n        },\n        easeOutSine: function easeOutSine(x, t, b, c, d) {\n          return c * _easingsMath.s(t / d * (_easingsMath.p / 2)) + b;\n        },\n        easeInOutSine: function easeInOutSine(x, t, b, c, d) {\n          return -c / 2 * (_easingsMath.c(_easingsMath.p * t / d) - 1) + b;\n        },\n        easeInExpo: function easeInExpo(x, t, b, c, d) {\n          return t == 0 ? b : c * _easingsMath.w(2, 10 * (t / d - 1)) + b;\n        },\n        easeOutExpo: function easeOutExpo(x, t, b, c, d) {\n          return t == d ? b + c : c * (-_easingsMath.w(2, -10 * t / d) + 1) + b;\n        },\n        easeInOutExpo: function easeInOutExpo(x, t, b, c, d) {\n          if (t == 0) return b;\n          if (t == d) return b + c;\n          if ((t /= d / 2) < 1) return c / 2 * _easingsMath.w(2, 10 * (t - 1)) + b;\n          return c / 2 * (-_easingsMath.w(2, -10 * --t) + 2) + b;\n        },\n        easeInCirc: function easeInCirc(x, t, b, c, d) {\n          return -c * (_easingsMath.t(1 - (t /= d) * t) - 1) + b;\n        },\n        easeOutCirc: function easeOutCirc(x, t, b, c, d) {\n          return c * _easingsMath.t(1 - (t = t / d - 1) * t) + b;\n        },\n        easeInOutCirc: function easeInOutCirc(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? -c / 2 * (_easingsMath.t(1 - t * t) - 1) + b : c / 2 * (_easingsMath.t(1 - (t -= 2) * t) + 1) + b;\n        },\n        easeInElastic: function easeInElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d) == 1) return b + c;\n          if (!p) p = d * .3;\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          return -(a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\n        },\n        easeOutElastic: function easeOutElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d) == 1) return b + c;\n          if (!p) p = d * .3;\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          return a * _easingsMath.w(2, -10 * t) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) + c + b;\n        },\n        easeInOutElastic: function easeInOutElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d / 2) == 2) return b + c;\n          if (!p) p = d * (.3 * 1.5);\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          if (t < 1) return -.5 * (a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\n          return a * _easingsMath.w(2, -10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) * .5 + c + b;\n        },\n        easeInBack: function easeInBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return c * (t /= d) * t * ((s + 1) * t - s) + b;\n        },\n        easeOutBack: function easeOutBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n        },\n        easeInOutBack: function easeInOutBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return (t /= d / 2) < 1 ? c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b : c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n        },\n        easeInBounce: function easeInBounce(x, t, b, c, d) {\n          return c - this.easeOutBounce(x, d - t, 0, c, d) + b;\n        },\n        easeOutBounce: function easeOutBounce(x, t, b, c, d) {\n          var o = 7.5625;\n\n          if ((t /= d) < 1 / 2.75) {\n            return c * (o * t * t) + b;\n          } else if (t < 2 / 2.75) {\n            return c * (o * (t -= 1.5 / 2.75) * t + .75) + b;\n          } else if (t < 2.5 / 2.75) {\n            return c * (o * (t -= 2.25 / 2.75) * t + .9375) + b;\n          } else {\n            return c * (o * (t -= 2.625 / 2.75) * t + .984375) + b;\n          }\n        },\n        easeInOutBounce: function easeInOutBounce(x, t, b, c, d) {\n          return t < d / 2 ? this.easeInBounce(x, t * 2, 0, c, d) * .5 + b : this.easeOutBounce(x, t * 2 - d, 0, c, d) * .5 + c * .5 + b;\n        }\n      };\n      /*\r\n       *\r\n       * TERMS OF USE - EASING EQUATIONS\r\n       * \r\n       * Open source under the BSD License. \r\n       * \r\n       * Copyright Â© 2001 Robert Penner\r\n       * All rights reserved.\r\n       * \r\n       * Redistribution and use in source and binary forms, with or without modification, \r\n       * are permitted provided that the following conditions are met:\r\n       * \r\n       * Redistributions of source code must retain the above copyright notice, this list of \r\n       * conditions and the following disclaimer.\r\n       * Redistributions in binary form must reproduce the above copyright notice, this list \r\n       * of conditions and the following disclaimer in the documentation and/or other materials \r\n       * provided with the distribution.\r\n       * \r\n       * Neither the name of the author nor the names of contributors may be used to endorse \r\n       * or promote products derived from this software without specific prior written permission.\r\n       * \r\n       * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \r\n       * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\n       * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\r\n       *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n       *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\r\n       *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED \r\n       * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n       *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED \r\n       * OF THE POSSIBILITY OF SUCH DAMAGE. \r\n       *\r\n       */\n    }();\n\n    var FRAMEWORK = function () {\n      var _rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\n      var _strSpace = ' ';\n      var _strEmpty = '';\n      var _strScrollLeft = 'scrollLeft';\n      var _strScrollTop = 'scrollTop';\n      var _animations = [];\n      var _type = COMPATIBILITY.type;\n      var _cssNumber = {\n        animationIterationCount: true,\n        columnCount: true,\n        fillOpacity: true,\n        flexGrow: true,\n        flexShrink: true,\n        fontWeight: true,\n        lineHeight: true,\n        opacity: true,\n        order: true,\n        orphans: true,\n        widows: true,\n        zIndex: true,\n        zoom: true\n      };\n\n      function extend() {\n        var src,\n            copyIsArray,\n            copy,\n            name,\n            options,\n            clone,\n            target = arguments[0] || {},\n            i = 1,\n            length = arguments[LEXICON.l],\n            deep = false; // Handle a deep copy situation\n\n        if (_type(target) == TYPES.b) {\n          deep = target;\n          target = arguments[1] || {}; // skip the boolean and the target\n\n          i = 2;\n        } // Handle case when target is a string or something (possible in deep copy)\n\n\n        if (_type(target) != TYPES.o && !_type(target) == TYPES.f) {\n          target = {};\n        } // extend jQuery itself if only one argument is passed\n\n\n        if (length === i) {\n          target = FakejQuery;\n          --i;\n        }\n\n        for (; i < length; i++) {\n          // Only deal with non-null/undefined values\n          if ((options = arguments[i]) != null) {\n            // Extend the base object\n            for (name in options) {\n              src = target[name];\n              copy = options[name]; // Prevent never-ending loop\n\n              if (target === copy) {\n                continue;\n              } // Recurse if we're merging plain objects or arrays\n\n\n              if (deep && copy && (isPlainObject(copy) || (copyIsArray = COMPATIBILITY.isA(copy)))) {\n                if (copyIsArray) {\n                  copyIsArray = false;\n                  clone = src && COMPATIBILITY.isA(src) ? src : [];\n                } else {\n                  clone = src && isPlainObject(src) ? src : {};\n                } // Never move original objects, clone them\n\n\n                target[name] = extend(deep, clone, copy); // Don't bring in undefined values\n              } else if (copy !== undefined$1) {\n                target[name] = copy;\n              }\n            }\n          }\n        } // Return the modified object\n\n\n        return target;\n      }\n\n      function inArray(item, arr, fromIndex) {\n        for (var i = fromIndex || 0; i < arr[LEXICON.l]; i++) {\n          if (arr[i] === item) return i;\n        }\n\n        return -1;\n      }\n\n      function isFunction(obj) {\n        return _type(obj) == TYPES.f;\n      }\n\n      function isEmptyObject(obj) {\n        for (var name in obj) {\n          return false;\n        }\n\n        return true;\n      }\n\n      function isPlainObject(obj) {\n        if (!obj || _type(obj) != TYPES.o) return false;\n        var key;\n        var proto = LEXICON.p;\n        var hasOwnProperty = Object[proto].hasOwnProperty;\n        var hasOwnConstructor = hasOwnProperty.call(obj, 'constructor');\n        var hasIsPrototypeOf = obj.constructor && obj.constructor[proto] && hasOwnProperty.call(obj.constructor[proto], 'isPrototypeOf');\n\n        if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n          return false;\n        }\n\n        for (key in obj) {\n          /**/\n        }\n\n        return _type(key) == TYPES.u || hasOwnProperty.call(obj, key);\n      }\n\n      function _each(obj, callback) {\n        var i = 0;\n\n        if (isArrayLike(obj)) {\n          for (; i < obj[LEXICON.l]; i++) {\n            if (callback.call(obj[i], i, obj[i]) === false) break;\n          }\n        } else {\n          for (i in obj) {\n            if (callback.call(obj[i], i, obj[i]) === false) break;\n          }\n        }\n\n        return obj;\n      }\n\n      function isArrayLike(obj) {\n        var length = !!obj && [LEXICON.l] in obj && obj[LEXICON.l];\n\n        var t = _type(obj);\n\n        return isFunction(t) ? false : t == TYPES.a || length === 0 || _type(length) == TYPES.n && length > 0 && length - 1 in obj;\n      }\n\n      function stripAndCollapse(value) {\n        var tokens = value.match(_rnothtmlwhite) || [];\n        return tokens.join(_strSpace);\n      }\n\n      function matches(elem, selector) {\n        var nodeList = (elem.parentNode || document).querySelectorAll(selector) || [];\n        var i = nodeList[LEXICON.l];\n\n        while (i--) {\n          if (nodeList[i] == elem) return true;\n        }\n\n        return false;\n      }\n\n      function insertAdjacentElement(el, strategy, child) {\n        if (COMPATIBILITY.isA(child)) {\n          for (var i = 0; i < child[LEXICON.l]; i++) {\n            insertAdjacentElement(el, strategy, child[i]);\n          }\n        } else if (_type(child) == TYPES.s) el.insertAdjacentHTML(strategy, child);else el.insertAdjacentElement(strategy, child.nodeType ? child : child[0]);\n      }\n\n      function setCSSVal(el, prop, val) {\n        try {\n          if (el[LEXICON.s][prop] !== undefined$1) el[LEXICON.s][prop] = parseCSSVal(prop, val);\n        } catch (e) {}\n      }\n\n      function parseCSSVal(prop, val) {\n        if (!_cssNumber[prop.toLowerCase()] && _type(val) == TYPES.n) val += 'px';\n        return val;\n      }\n\n      function startNextAnimationInQ(animObj, removeFromQ) {\n        var index;\n        var nextAnim;\n        if (removeFromQ !== false) animObj.q.splice(0, 1);\n\n        if (animObj.q[LEXICON.l] > 0) {\n          nextAnim = animObj.q[0];\n\n          _animate(animObj.el, nextAnim.props, nextAnim.duration, nextAnim.easing, nextAnim.complete, true);\n        } else {\n          index = inArray(animObj, _animations);\n          if (index > -1) _animations.splice(index, 1);\n        }\n      }\n\n      function setAnimationValue(el, prop, value) {\n        if (prop === _strScrollLeft || prop === _strScrollTop) el[prop] = value;else setCSSVal(el, prop, value);\n      }\n\n      function _animate(el, props, options, easing, complete, guaranteedNext) {\n        var hasOptions = isPlainObject(options);\n        var from = {};\n        var to = {};\n        var i = 0;\n        var key;\n        var animObj;\n        var progress;\n        var step;\n        var specialEasing;\n        var duration;\n\n        if (hasOptions) {\n          easing = options.easing;\n          progress = options.progress;\n          step = options.step;\n          specialEasing = options.specialEasing;\n          complete = options.complete;\n          duration = options.duration;\n        } else duration = options;\n\n        specialEasing = specialEasing || {};\n        duration = duration || 400;\n        easing = easing || 'swing';\n        guaranteedNext = guaranteedNext || false;\n\n        for (; i < _animations[LEXICON.l]; i++) {\n          if (_animations[i].el === el) {\n            animObj = _animations[i];\n            break;\n          }\n        }\n\n        if (!animObj) {\n          animObj = {\n            el: el,\n            q: []\n          };\n\n          _animations.push(animObj);\n        }\n\n        for (key in props) {\n          if (key === _strScrollLeft || key === _strScrollTop) from[key] = el[key];else from[key] = FakejQuery(el).css(key);\n        }\n\n        for (key in from) {\n          if (from[key] !== props[key] && props[key] !== undefined$1) to[key] = props[key];\n        }\n\n        if (!isEmptyObject(to)) {\n          var timeNow;\n          var end;\n          var percent;\n          var fromVal;\n          var toVal;\n          var easedVal;\n          var timeStart;\n\n          var _frame;\n\n          var elapsed;\n          var qPos = guaranteedNext ? 0 : inArray(qObj, animObj.q);\n          var qObj = {\n            props: to,\n            duration: hasOptions ? options : duration,\n            easing: easing,\n            complete: complete\n          };\n\n          if (qPos === -1) {\n            qPos = animObj.q[LEXICON.l];\n            animObj.q.push(qObj);\n          }\n\n          if (qPos === 0) {\n            if (duration > 0) {\n              timeStart = COMPATIBILITY.now();\n\n              _frame = function frame() {\n                timeNow = COMPATIBILITY.now();\n                elapsed = timeNow - timeStart;\n                end = qObj.stop || elapsed >= duration;\n                percent = 1 - (MATH.max(0, timeStart + duration - timeNow) / duration || 0);\n\n                for (key in to) {\n                  fromVal = parseFloat(from[key]);\n                  toVal = parseFloat(to[key]);\n                  easedVal = (toVal - fromVal) * EASING[specialEasing[key] || easing](percent, percent * duration, 0, 1, duration) + fromVal;\n                  setAnimationValue(el, key, easedVal);\n\n                  if (isFunction(step)) {\n                    step(easedVal, {\n                      elem: el,\n                      prop: key,\n                      start: fromVal,\n                      now: easedVal,\n                      end: toVal,\n                      pos: percent,\n                      options: {\n                        easing: easing,\n                        speacialEasing: specialEasing,\n                        duration: duration,\n                        complete: complete,\n                        step: step\n                      },\n                      startTime: timeStart\n                    });\n                  }\n                }\n\n                if (isFunction(progress)) progress({}, percent, MATH.max(0, duration - elapsed));\n\n                if (end) {\n                  startNextAnimationInQ(animObj);\n                  if (isFunction(complete)) complete();\n                } else qObj.frame = COMPATIBILITY.rAF()(_frame);\n              };\n\n              qObj.frame = COMPATIBILITY.rAF()(_frame);\n            } else {\n              for (key in to) {\n                setAnimationValue(el, key, to[key]);\n              }\n\n              startNextAnimationInQ(animObj);\n            }\n          }\n        } else if (guaranteedNext) startNextAnimationInQ(animObj);\n      }\n\n      function _stop(el, clearQ, jumpToEnd) {\n        var animObj;\n        var qObj;\n        var key;\n        var i = 0;\n\n        for (; i < _animations[LEXICON.l]; i++) {\n          animObj = _animations[i];\n\n          if (animObj.el === el) {\n            if (animObj.q[LEXICON.l] > 0) {\n              qObj = animObj.q[0];\n              qObj.stop = true;\n              COMPATIBILITY.cAF()(qObj.frame);\n              animObj.q.splice(0, 1);\n              if (jumpToEnd) for (key in qObj.props) {\n                setAnimationValue(el, key, qObj.props[key]);\n              }\n              if (clearQ) animObj.q = [];else startNextAnimationInQ(animObj, false);\n            }\n\n            break;\n          }\n        }\n      }\n\n      function elementIsVisible(el) {\n        return !!(el[LEXICON.oW] || el[LEXICON.oH] || el.getClientRects()[LEXICON.l]);\n      }\n\n      function FakejQuery(selector) {\n        if (arguments[LEXICON.l] === 0) return this;\n        var base = new FakejQuery();\n        var elements = selector;\n        var i = 0;\n        var elms;\n        var el;\n\n        if (_type(selector) == TYPES.s) {\n          elements = [];\n\n          if (selector.charAt(0) === '<') {\n            el = document.createElement('div');\n            el.innerHTML = selector;\n            elms = el.children;\n          } else {\n            elms = document.querySelectorAll(selector);\n          }\n\n          for (; i < elms[LEXICON.l]; i++) {\n            elements.push(elms[i]);\n          }\n        }\n\n        if (elements) {\n          if (_type(elements) != TYPES.s && (!isArrayLike(elements) || elements === window || elements === elements.self)) elements = [elements];\n\n          for (i = 0; i < elements[LEXICON.l]; i++) {\n            base[i] = elements[i];\n          }\n\n          base[LEXICON.l] = elements[LEXICON.l];\n        }\n\n        return base;\n      }\n\n      FakejQuery[LEXICON.p] = {\n        //EVENTS:\n        on: function on(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          var eventNameLength = eventName[LEXICON.l];\n          var i = 0;\n          var el;\n          return this.each(function () {\n            el = this;\n\n            try {\n              if (el.addEventListener) {\n                for (; i < eventNameLength; i++) {\n                  el.addEventListener(eventName[i], handler);\n                }\n              } else if (el.detachEvent) {\n                for (; i < eventNameLength; i++) {\n                  el.attachEvent('on' + eventName[i], handler);\n                }\n              }\n            } catch (e) {}\n          });\n        },\n        off: function off(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          var eventNameLength = eventName[LEXICON.l];\n          var i = 0;\n          var el;\n          return this.each(function () {\n            el = this;\n\n            try {\n              if (el.removeEventListener) {\n                for (; i < eventNameLength; i++) {\n                  el.removeEventListener(eventName[i], handler);\n                }\n              } else if (el.detachEvent) {\n                for (; i < eventNameLength; i++) {\n                  el.detachEvent('on' + eventName[i], handler);\n                }\n              }\n            } catch (e) {}\n          });\n        },\n        one: function one(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          return this.each(function () {\n            var el = FakejQuery(this);\n            FakejQuery.each(eventName, function (i, oneEventName) {\n              var oneHandler = function oneHandler(e) {\n                handler.call(this, e);\n                el.off(oneEventName, oneHandler);\n              };\n\n              el.on(oneEventName, oneHandler);\n            });\n          });\n        },\n        trigger: function trigger(eventName) {\n          var el;\n          var event;\n          return this.each(function () {\n            el = this;\n\n            if (document.createEvent) {\n              event = document.createEvent('HTMLEvents');\n              event.initEvent(eventName, true, false);\n              el.dispatchEvent(event);\n            } else {\n              el.fireEvent('on' + eventName);\n            }\n          });\n        },\n        //DOM NODE INSERTING / REMOVING:\n        append: function append(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'beforeend', child);\n          });\n        },\n        prepend: function prepend(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'afterbegin', child);\n          });\n        },\n        before: function before(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'beforebegin', child);\n          });\n        },\n        after: function after(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'afterend', child);\n          });\n        },\n        remove: function remove() {\n          return this.each(function () {\n            var el = this;\n            var parentNode = el.parentNode;\n            if (parentNode != null) parentNode.removeChild(el);\n          });\n        },\n        unwrap: function unwrap() {\n          var parents = [];\n          var i;\n          var el;\n          var parent;\n          this.each(function () {\n            parent = this.parentNode;\n            if (inArray(parent, parents) === -1) parents.push(parent);\n          });\n\n          for (i = 0; i < parents[LEXICON.l]; i++) {\n            el = parents[i];\n            parent = el.parentNode;\n\n            while (el.firstChild) {\n              parent.insertBefore(el.firstChild, el);\n            }\n\n            parent.removeChild(el);\n          }\n\n          return this;\n        },\n        wrapAll: function wrapAll(wrapperHTML) {\n          var i;\n          var nodes = this;\n          var wrapper = FakejQuery(wrapperHTML)[0];\n          var deepest = wrapper;\n          var parent = nodes[0].parentNode;\n          var previousSibling = nodes[0].previousSibling;\n\n          while (deepest.childNodes[LEXICON.l] > 0) {\n            deepest = deepest.childNodes[0];\n          }\n\n          for (i = 0; nodes[LEXICON.l] - i; deepest.firstChild === nodes[0] && i++) {\n            deepest.appendChild(nodes[i]);\n          }\n\n          var nextSibling = previousSibling ? previousSibling.nextSibling : parent.firstChild;\n          parent.insertBefore(wrapper, nextSibling);\n          return this;\n        },\n        wrapInner: function wrapInner(wrapperHTML) {\n          return this.each(function () {\n            var el = FakejQuery(this);\n            var contents = el.contents();\n            if (contents[LEXICON.l]) contents.wrapAll(wrapperHTML);else el.append(wrapperHTML);\n          });\n        },\n        wrap: function wrap(wrapperHTML) {\n          return this.each(function () {\n            FakejQuery(this).wrapAll(wrapperHTML);\n          });\n        },\n        //DOM NODE MANIPULATION / INFORMATION:\n        css: function css(styles, val) {\n          var el;\n          var key;\n          var cptStyle;\n          var getCptStyle = window.getComputedStyle;\n\n          if (_type(styles) == TYPES.s) {\n            if (val === undefined$1) {\n              el = this[0];\n              cptStyle = getCptStyle ? getCptStyle(el, null) : el.currentStyle[styles]; //https://bugzilla.mozilla.org/show_bug.cgi?id=548397 can be null sometimes if iframe with display: none (firefox only!)\n\n              return getCptStyle ? cptStyle != null ? cptStyle.getPropertyValue(styles) : el[LEXICON.s][styles] : cptStyle;\n            } else {\n              return this.each(function () {\n                setCSSVal(this, styles, val);\n              });\n            }\n          } else {\n            return this.each(function () {\n              for (key in styles) {\n                setCSSVal(this, key, styles[key]);\n              }\n            });\n          }\n        },\n        hasClass: function hasClass(className) {\n          var elem,\n              i = 0;\n          var classNamePrepared = _strSpace + className + _strSpace;\n          var classList;\n\n          while (elem = this[i++]) {\n            classList = elem.classList;\n            if (classList && classList.contains(className)) return true;else if (elem.nodeType === 1 && (_strSpace + stripAndCollapse(elem.className + _strEmpty) + _strSpace).indexOf(classNamePrepared) > -1) return true;\n          }\n\n          return false;\n        },\n        addClass: function addClass(className) {\n          var classes;\n          var elem;\n          var cur;\n          var curValue;\n          var clazz;\n          var finalValue;\n          var supportClassList;\n          var elmClassList;\n          var i = 0;\n          var v = 0;\n\n          if (className) {\n            classes = className.match(_rnothtmlwhite) || [];\n\n            while (elem = this[i++]) {\n              elmClassList = elem.classList;\n              if (supportClassList === undefined$1) supportClassList = elmClassList !== undefined$1;\n\n              if (supportClassList) {\n                while (clazz = classes[v++]) {\n                  elmClassList.add(clazz);\n                }\n              } else {\n                curValue = elem.className + _strEmpty;\n                cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;\n\n                if (cur) {\n                  while (clazz = classes[v++]) {\n                    if (cur.indexOf(_strSpace + clazz + _strSpace) < 0) cur += clazz + _strSpace;\n                  }\n\n                  finalValue = stripAndCollapse(cur);\n                  if (curValue !== finalValue) elem.className = finalValue;\n                }\n              }\n            }\n          }\n\n          return this;\n        },\n        removeClass: function removeClass(className) {\n          var classes;\n          var elem;\n          var cur;\n          var curValue;\n          var clazz;\n          var finalValue;\n          var supportClassList;\n          var elmClassList;\n          var i = 0;\n          var v = 0;\n\n          if (className) {\n            classes = className.match(_rnothtmlwhite) || [];\n\n            while (elem = this[i++]) {\n              elmClassList = elem.classList;\n              if (supportClassList === undefined$1) supportClassList = elmClassList !== undefined$1;\n\n              if (supportClassList) {\n                while (clazz = classes[v++]) {\n                  elmClassList.remove(clazz);\n                }\n              } else {\n                curValue = elem.className + _strEmpty;\n                cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;\n\n                if (cur) {\n                  while (clazz = classes[v++]) {\n                    while (cur.indexOf(_strSpace + clazz + _strSpace) > -1) {\n                      cur = cur.replace(_strSpace + clazz + _strSpace, _strSpace);\n                    }\n                  }\n\n                  finalValue = stripAndCollapse(cur);\n                  if (curValue !== finalValue) elem.className = finalValue;\n                }\n              }\n            }\n          }\n\n          return this;\n        },\n        hide: function hide() {\n          return this.each(function () {\n            this[LEXICON.s].display = 'none';\n          });\n        },\n        show: function show() {\n          return this.each(function () {\n            this[LEXICON.s].display = 'block';\n          });\n        },\n        attr: function attr(attrName, value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el.getAttribute(attrName);\n            el.setAttribute(attrName, value);\n          }\n\n          return this;\n        },\n        removeAttr: function removeAttr(attrName) {\n          return this.each(function () {\n            this.removeAttribute(attrName);\n          });\n        },\n        offset: function offset() {\n          var el = this[0];\n          var rect = el[LEXICON.bCR]();\n          var scrollLeft = window.pageXOffset || document.documentElement[_strScrollLeft];\n          var scrollTop = window.pageYOffset || document.documentElement[_strScrollTop];\n          return {\n            top: rect.top + scrollTop,\n            left: rect.left + scrollLeft\n          };\n        },\n        position: function position() {\n          var el = this[0];\n          return {\n            top: el.offsetTop,\n            left: el.offsetLeft\n          };\n        },\n        scrollLeft: function scrollLeft(value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el[_strScrollLeft];\n            el[_strScrollLeft] = value;\n          }\n\n          return this;\n        },\n        scrollTop: function scrollTop(value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el[_strScrollTop];\n            el[_strScrollTop] = value;\n          }\n\n          return this;\n        },\n        val: function val(value) {\n          var el = this[0];\n          if (!value) return el.value;\n          el.value = value;\n          return this;\n        },\n        //DOM TRAVERSAL / FILTERING:\n        first: function first() {\n          return this.eq(0);\n        },\n        last: function last() {\n          return this.eq(-1);\n        },\n        eq: function eq(index) {\n          return FakejQuery(this[index >= 0 ? index : this[LEXICON.l] + index]);\n        },\n        find: function find(selector) {\n          var children = [];\n          var i;\n          this.each(function () {\n            var el = this;\n            var ch = el.querySelectorAll(selector);\n\n            for (i = 0; i < ch[LEXICON.l]; i++) {\n              children.push(ch[i]);\n            }\n          });\n          return FakejQuery(children);\n        },\n        children: function children(selector) {\n          var children = [];\n          var el;\n          var ch;\n          var i;\n          this.each(function () {\n            ch = this.children;\n\n            for (i = 0; i < ch[LEXICON.l]; i++) {\n              el = ch[i];\n\n              if (selector) {\n                if (el.matches && el.matches(selector) || matches(el, selector)) children.push(el);\n              } else children.push(el);\n            }\n          });\n          return FakejQuery(children);\n        },\n        parent: function parent(selector) {\n          var parents = [];\n          var parent;\n          this.each(function () {\n            parent = this.parentNode;\n            if (selector ? FakejQuery(parent).is(selector) : true) parents.push(parent);\n          });\n          return FakejQuery(parents);\n        },\n        is: function is(selector) {\n          var el;\n          var i;\n\n          for (i = 0; i < this[LEXICON.l]; i++) {\n            el = this[i];\n            if (selector === ':visible') return elementIsVisible(el);\n            if (selector === ':hidden') return !elementIsVisible(el);\n            if (el.matches && el.matches(selector) || matches(el, selector)) return true;\n          }\n\n          return false;\n        },\n        contents: function contents() {\n          var contents = [];\n          var childs;\n          var i;\n          this.each(function () {\n            childs = this.childNodes;\n\n            for (i = 0; i < childs[LEXICON.l]; i++) {\n              contents.push(childs[i]);\n            }\n          });\n          return FakejQuery(contents);\n        },\n        each: function each(callback) {\n          return _each(this, callback);\n        },\n        //ANIMATION:\n        animate: function animate(props, duration, easing, complete) {\n          return this.each(function () {\n            _animate(this, props, duration, easing, complete);\n          });\n        },\n        stop: function stop(clearQ, jump) {\n          return this.each(function () {\n            _stop(this, clearQ, jump);\n          });\n        }\n      };\n      extend(FakejQuery, {\n        extend: extend,\n        inArray: inArray,\n        isEmptyObject: isEmptyObject,\n        isPlainObject: isPlainObject,\n        each: _each\n      });\n      return FakejQuery;\n    }();\n\n    var INSTANCES = function () {\n      var _targets = [];\n      var _instancePropertyString = '__overlayScrollbars__';\n      /**\r\n       * Register, unregister or get a certain (or all) instances.\r\n       * Register: Pass the target and the instance.\r\n       * Unregister: Pass the target and null.\r\n       * Get Instance: Pass the target from which the instance shall be got.\r\n       * Get Targets: Pass no arguments.\r\n       * @param target The target to which the instance shall be registered / from which the instance shall be unregistered / the instance shall be got\r\n       * @param instance The instance.\r\n       * @returns {*|void} Returns the instance from the given target.\r\n       */\n\n      return function (target, instance) {\n        var argLen = arguments[LEXICON.l];\n\n        if (argLen < 1) {\n          //return all targets\n          return _targets;\n        } else {\n          if (instance) {\n            //register instance\n            target[_instancePropertyString] = instance;\n\n            _targets.push(target);\n          } else {\n            var index = COMPATIBILITY.inA(target, _targets);\n\n            if (index > -1) {\n              if (argLen > 1) {\n                //unregister instance\n                delete target[_instancePropertyString];\n\n                _targets.splice(index, 1);\n              } else {\n                //get instance from target\n                return _targets[index][_instancePropertyString];\n              }\n            }\n          }\n        }\n      };\n    }();\n\n    var PLUGIN = function () {\n      var _plugin;\n\n      var _pluginsGlobals;\n\n      var _pluginsAutoUpdateLoop;\n\n      var _pluginsExtensions = [];\n\n      var _pluginsOptions = function () {\n        var type = COMPATIBILITY.type;\n        var possibleTemplateTypes = [TYPES.b, //boolean\n        TYPES.n, //number\n        TYPES.s, //string\n        TYPES.a, //array\n        TYPES.o, //object\n        TYPES.f, //function\n        TYPES.z //null\n        ];\n        var restrictedStringsSplit = ' ';\n        var restrictedStringsPossibilitiesSplit = ':';\n        var classNameAllowedValues = [TYPES.z, TYPES.s];\n        var numberAllowedValues = TYPES.n;\n        var booleanNullAllowedValues = [TYPES.z, TYPES.b];\n        var booleanTrueTemplate = [true, TYPES.b];\n        var booleanFalseTemplate = [false, TYPES.b];\n        var callbackTemplate = [null, [TYPES.z, TYPES.f]];\n        var updateOnLoadTemplate = [['img'], [TYPES.s, TYPES.a, TYPES.z]];\n        var inheritedAttrsTemplate = [['style', 'class'], [TYPES.s, TYPES.a, TYPES.z]];\n        var resizeAllowedValues = 'n:none b:both h:horizontal v:vertical';\n        var overflowBehaviorAllowedValues = 'v-h:visible-hidden v-s:visible-scroll s:scroll h:hidden';\n        var scrollbarsVisibilityAllowedValues = 'v:visible h:hidden a:auto';\n        var scrollbarsAutoHideAllowedValues = 'n:never s:scroll l:leave m:move';\n        var optionsDefaultsAndTemplate = {\n          className: ['os-theme-dark', classNameAllowedValues],\n          //null || string\n          resize: ['none', resizeAllowedValues],\n          //none || both  || horizontal || vertical || n || b || h || v\n          sizeAutoCapable: booleanTrueTemplate,\n          //true || false\n          clipAlways: booleanTrueTemplate,\n          //true || false\n          normalizeRTL: booleanTrueTemplate,\n          //true || false\n          paddingAbsolute: booleanFalseTemplate,\n          //true || false\n          autoUpdate: [null, booleanNullAllowedValues],\n          //true || false || null\n          autoUpdateInterval: [33, numberAllowedValues],\n          //number\n          updateOnLoad: updateOnLoadTemplate,\n          //string || array || null\n          nativeScrollbarsOverlaid: {\n            showNativeScrollbars: booleanFalseTemplate,\n            //true || false\n            initialize: booleanTrueTemplate //true || false\n\n          },\n          overflowBehavior: {\n            x: ['scroll', overflowBehaviorAllowedValues],\n            //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\n            y: ['scroll', overflowBehaviorAllowedValues] //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\n\n          },\n          scrollbars: {\n            visibility: ['auto', scrollbarsVisibilityAllowedValues],\n            //visible || hidden || auto || v || h || a\n            autoHide: ['never', scrollbarsAutoHideAllowedValues],\n            //never || scroll || leave || move || n || s || l || m\n            autoHideDelay: [800, numberAllowedValues],\n            //number\n            dragScrolling: booleanTrueTemplate,\n            //true || false\n            clickScrolling: booleanFalseTemplate,\n            //true || false\n            touchSupport: booleanTrueTemplate,\n            //true || false\n            snapHandle: booleanFalseTemplate //true || false\n\n          },\n          textarea: {\n            dynWidth: booleanFalseTemplate,\n            //true || false\n            dynHeight: booleanFalseTemplate,\n            //true || false\n            inheritedAttrs: inheritedAttrsTemplate //string || array || null\n\n          },\n          callbacks: {\n            onInitialized: callbackTemplate,\n            //null || function\n            onInitializationWithdrawn: callbackTemplate,\n            //null || function\n            onDestroyed: callbackTemplate,\n            //null || function\n            onScrollStart: callbackTemplate,\n            //null || function\n            onScroll: callbackTemplate,\n            //null || function\n            onScrollStop: callbackTemplate,\n            //null || function\n            onOverflowChanged: callbackTemplate,\n            //null || function\n            onOverflowAmountChanged: callbackTemplate,\n            //null || function\n            onDirectionChanged: callbackTemplate,\n            //null || function\n            onContentSizeChanged: callbackTemplate,\n            //null || function\n            onHostSizeChanged: callbackTemplate,\n            //null || function\n            onUpdated: callbackTemplate //null || function\n\n          }\n        };\n\n        var convert = function convert(template) {\n          var recursive = function recursive(obj) {\n            var key;\n            var val;\n            var valType;\n\n            for (key in obj) {\n              if (!obj[LEXICON.hOP](key)) continue;\n              val = obj[key];\n              valType = type(val);\n              if (valType == TYPES.a) obj[key] = val[template ? 1 : 0];else if (valType == TYPES.o) obj[key] = recursive(val);\n            }\n\n            return obj;\n          };\n\n          return recursive(FRAMEWORK.extend(true, {}, optionsDefaultsAndTemplate));\n        };\n\n        return {\n          _defaults: convert(),\n          _template: convert(true),\n\n          /**\r\n           * Validates the passed object by the passed template.\r\n           * @param obj The object which shall be validated.\r\n           * @param template The template which defines the allowed values and types.\r\n           * @param writeErrors True if errors shall be logged to the console.\r\n           * @param diffObj If a object is passed then only valid differences to this object will be returned.\r\n           * @returns {{}} A object which contains two objects called \"default\" and \"prepared\" which contains only the valid properties of the passed original object and discards not different values compared to the passed diffObj.\r\n           */\n          _validate: function _validate(obj, template, writeErrors, diffObj) {\n            var validatedOptions = {};\n            var validatedOptionsPrepared = {};\n            var objectCopy = FRAMEWORK.extend(true, {}, obj);\n            var inArray = FRAMEWORK.inArray;\n            var isEmptyObj = FRAMEWORK.isEmptyObject;\n\n            var checkObjectProps = function checkObjectProps(data, template, diffData, validatedOptions, validatedOptionsPrepared, prevPropName) {\n              for (var prop in template) {\n                if (template[LEXICON.hOP](prop) && data[LEXICON.hOP](prop)) {\n                  var isValid = false;\n                  var isDiff = false;\n                  var templateValue = template[prop];\n                  var templateValueType = type(templateValue);\n                  var templateIsComplex = templateValueType == TYPES.o;\n                  var templateTypes = !COMPATIBILITY.isA(templateValue) ? [templateValue] : templateValue;\n                  var dataDiffValue = diffData[prop];\n                  var dataValue = data[prop];\n                  var dataValueType = type(dataValue);\n                  var propPrefix = prevPropName ? prevPropName + '.' : '';\n                  var error = \"The option \\\"\" + propPrefix + prop + \"\\\" wasn't set, because\";\n                  var errorPossibleTypes = [];\n                  var errorRestrictedStrings = [];\n                  var restrictedStringValuesSplit;\n                  var restrictedStringValuesPossibilitiesSplit;\n                  var isRestrictedValue;\n                  var mainPossibility;\n                  var currType;\n                  var i;\n                  var v;\n                  var j;\n                  dataDiffValue = dataDiffValue === undefined$1 ? {} : dataDiffValue; //if the template has a object as value, it means that the options are complex (verschachtelt)\n\n                  if (templateIsComplex && dataValueType == TYPES.o) {\n                    validatedOptions[prop] = {};\n                    validatedOptionsPrepared[prop] = {};\n                    checkObjectProps(dataValue, templateValue, dataDiffValue, validatedOptions[prop], validatedOptionsPrepared[prop], propPrefix + prop);\n                    FRAMEWORK.each([data, validatedOptions, validatedOptionsPrepared], function (index, value) {\n                      if (isEmptyObj(value[prop])) {\n                        delete value[prop];\n                      }\n                    });\n                  } else if (!templateIsComplex) {\n                    for (i = 0; i < templateTypes[LEXICON.l]; i++) {\n                      currType = templateTypes[i];\n                      templateValueType = type(currType); //if currtype is string and starts with restrictedStringPrefix and end with restrictedStringSuffix\n\n                      isRestrictedValue = templateValueType == TYPES.s && inArray(currType, possibleTemplateTypes) === -1;\n\n                      if (isRestrictedValue) {\n                        errorPossibleTypes.push(TYPES.s); //split it into a array which contains all possible values for example: [\"y:yes\", \"n:no\", \"m:maybe\"]\n\n                        restrictedStringValuesSplit = currType.split(restrictedStringsSplit);\n                        errorRestrictedStrings = errorRestrictedStrings.concat(restrictedStringValuesSplit);\n\n                        for (v = 0; v < restrictedStringValuesSplit[LEXICON.l]; v++) {\n                          //split the possible values into their possibiliteis for example: [\"y\", \"yes\"] -> the first is always the mainPossibility\n                          restrictedStringValuesPossibilitiesSplit = restrictedStringValuesSplit[v].split(restrictedStringsPossibilitiesSplit);\n                          mainPossibility = restrictedStringValuesPossibilitiesSplit[0];\n\n                          for (j = 0; j < restrictedStringValuesPossibilitiesSplit[LEXICON.l]; j++) {\n                            //if any possibility matches with the dataValue, its valid\n                            if (dataValue === restrictedStringValuesPossibilitiesSplit[j]) {\n                              isValid = true;\n                              break;\n                            }\n                          }\n\n                          if (isValid) break;\n                        }\n                      } else {\n                        errorPossibleTypes.push(currType);\n\n                        if (dataValueType === currType) {\n                          isValid = true;\n                          break;\n                        }\n                      }\n                    }\n\n                    if (isValid) {\n                      isDiff = dataValue !== dataDiffValue;\n                      if (isDiff) validatedOptions[prop] = dataValue;\n                      if (isRestrictedValue ? inArray(dataDiffValue, restrictedStringValuesPossibilitiesSplit) < 0 : isDiff) validatedOptionsPrepared[prop] = isRestrictedValue ? mainPossibility : dataValue;\n                    } else if (writeErrors) {\n                      console.warn(error + \" it doesn't accept the type [ \" + dataValueType.toUpperCase() + \" ] with the value of \\\"\" + dataValue + \"\\\".\\r\\n\" + \"Accepted types are: [ \" + errorPossibleTypes.join(', ').toUpperCase() + \" ].\" + (errorRestrictedStrings[length] > 0 ? \"\\r\\nValid strings are: [ \" + errorRestrictedStrings.join(', ').split(restrictedStringsPossibilitiesSplit).join(', ') + \" ].\" : ''));\n                    }\n\n                    delete data[prop];\n                  }\n                }\n              }\n            };\n\n            checkObjectProps(objectCopy, template, diffObj || {}, validatedOptions, validatedOptionsPrepared); //add values which aren't specified in the template to the finished validated object to prevent them from being discarded\n\n            /*\r\n            if(keepForeignProps) {\r\n                FRAMEWORK.extend(true, validatedOptions, objectCopy);\r\n                FRAMEWORK.extend(true, validatedOptionsPrepared, objectCopy);\r\n            }\r\n            */\n\n            if (!isEmptyObj(objectCopy) && writeErrors) console.warn('The following options are discarded due to invalidity:\\r\\n' + window.JSON.stringify(objectCopy, null, 2));\n            return {\n              _default: validatedOptions,\n              _prepared: validatedOptionsPrepared\n            };\n          }\n        };\n      }();\n      /**\r\n       * Initializes the object which contains global information about the plugin and each instance of it.\r\n       */\n\n\n      function initOverlayScrollbarsStatics() {\n        if (!_pluginsGlobals) _pluginsGlobals = new OverlayScrollbarsGlobals(_pluginsOptions._defaults);\n        if (!_pluginsAutoUpdateLoop) _pluginsAutoUpdateLoop = new OverlayScrollbarsAutoUpdateLoop(_pluginsGlobals);\n      }\n      /**\r\n       * The global object for the OverlayScrollbars objects. It contains resources which every OverlayScrollbars object needs. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n       * @param defaultOptions\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsGlobals(defaultOptions) {\n        var _base = this;\n\n        var strOverflow = 'overflow';\n        var strHidden = 'hidden';\n        var strScroll = 'scroll';\n        var bodyElement = FRAMEWORK('body');\n        var scrollbarDummyElement = FRAMEWORK('<div id=\"os-dummy-scrollbar-size\"><div></div></div>');\n        var scrollbarDummyElement0 = scrollbarDummyElement[0];\n        var dummyContainerChild = FRAMEWORK(scrollbarDummyElement.children('div').eq(0));\n        bodyElement.append(scrollbarDummyElement);\n        scrollbarDummyElement.hide().show(); //fix IE8 bug (incorrect measuring)\n\n        var nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement0);\n        var nativeScrollbarIsOverlaid = {\n          x: nativeScrollbarSize.x === 0,\n          y: nativeScrollbarSize.y === 0\n        };\n\n        var msie = function () {\n          var ua = window.navigator.userAgent;\n          var strIndexOf = 'indexOf';\n          var strSubString = 'substring';\n          var msie = ua[strIndexOf]('MSIE ');\n          var trident = ua[strIndexOf]('Trident/');\n          var edge = ua[strIndexOf]('Edge/');\n          var rv = ua[strIndexOf]('rv:');\n          var result;\n          var parseIntFunc = parseInt; // IE 10 or older => return version number\n\n          if (msie > 0) result = parseIntFunc(ua[strSubString](msie + 5, ua[strIndexOf]('.', msie)), 10); // IE 11 => return version number\n          else if (trident > 0) result = parseIntFunc(ua[strSubString](rv + 3, ua[strIndexOf]('.', rv)), 10); // Edge (IE 12+) => return version number\n          else if (edge > 0) result = parseIntFunc(ua[strSubString](edge + 5, ua[strIndexOf]('.', edge)), 10); // other browser\n\n          return result;\n        }();\n\n        FRAMEWORK.extend(_base, {\n          defaultOptions: defaultOptions,\n          msie: msie,\n          autoUpdateLoop: false,\n          autoUpdateRecommended: !COMPATIBILITY.mO(),\n          nativeScrollbarSize: nativeScrollbarSize,\n          nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\n          nativeScrollbarStyling: function () {\n            var result = false;\n            scrollbarDummyElement.addClass('os-viewport-native-scrollbars-invisible');\n\n            try {\n              result = scrollbarDummyElement.css('scrollbar-width') === 'none' && (msie > 9 || !msie) || window.getComputedStyle(scrollbarDummyElement0, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\n            } catch (ex) {} //fix opera bug: scrollbar styles will only appear if overflow value is scroll or auto during the activation of the style.\n            //and set overflow to scroll\n            //scrollbarDummyElement.css(strOverflow, strHidden).hide().css(strOverflow, strScroll).show();\n            //return (scrollbarDummyElement0[LEXICON.oH] - scrollbarDummyElement0[LEXICON.cH]) === 0 && (scrollbarDummyElement0[LEXICON.oW] - scrollbarDummyElement0[LEXICON.cW]) === 0;\n\n\n            return result;\n          }(),\n          overlayScrollbarDummySize: {\n            x: 30,\n            y: 30\n          },\n          cssCalc: VENDORS._cssPropertyValue('width', 'calc', '(1px)') || null,\n          restrictedMeasuring: function () {\n            //https://bugzilla.mozilla.org/show_bug.cgi?id=1439305\n            //since 1.11.0 always false -> fixed via CSS (hopefully)\n            scrollbarDummyElement.css(strOverflow, strHidden);\n            var scrollSize = {\n              w: scrollbarDummyElement0[LEXICON.sW],\n              h: scrollbarDummyElement0[LEXICON.sH]\n            };\n            scrollbarDummyElement.css(strOverflow, 'visible');\n            var scrollSize2 = {\n              w: scrollbarDummyElement0[LEXICON.sW],\n              h: scrollbarDummyElement0[LEXICON.sH]\n            };\n            return scrollSize.w - scrollSize2.w !== 0 || scrollSize.h - scrollSize2.h !== 0;\n          }(),\n          rtlScrollBehavior: function () {\n            scrollbarDummyElement.css({\n              'overflow-y': strHidden,\n              'overflow-x': strScroll,\n              'direction': 'rtl'\n            }).scrollLeft(0);\n            var dummyContainerOffset = scrollbarDummyElement.offset();\n            var dummyContainerChildOffset = dummyContainerChild.offset(); //https://github.com/KingSora/OverlayScrollbars/issues/187\n\n            scrollbarDummyElement.scrollLeft(-999);\n            var dummyContainerChildOffsetAfterScroll = dummyContainerChild.offset();\n            return {\n              //origin direction = determines if the zero scroll position is on the left or right side\n              //'i' means 'invert' (i === true means that the axis must be inverted to be correct)\n              //true = on the left side\n              //false = on the right side\n              i: dummyContainerOffset.left === dummyContainerChildOffset.left,\n              //negative = determines if the maximum scroll is positive or negative\n              //'n' means 'negate' (n === true means that the axis must be negated to be correct)\n              //true = negative\n              //false = positive\n              n: dummyContainerChildOffset.left !== dummyContainerChildOffsetAfterScroll.left\n            };\n          }(),\n          supportTransform: !!VENDORS._cssProperty('transform'),\n          supportTransition: !!VENDORS._cssProperty('transition'),\n          supportPassiveEvents: function () {\n            var supportsPassive = false;\n\n            try {\n              window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n                get: function get() {\n                  supportsPassive = true;\n                }\n              }));\n            } catch (e) {}\n\n            return supportsPassive;\n          }(),\n          supportResizeObserver: !!COMPATIBILITY.rO(),\n          supportMutationObserver: !!COMPATIBILITY.mO()\n        });\n        scrollbarDummyElement.removeAttr(LEXICON.s).remove(); //Catch zoom event:\n\n        (function () {\n          if (nativeScrollbarIsOverlaid.x && nativeScrollbarIsOverlaid.y) return;\n          var abs = MATH.abs;\n          var windowWidth = COMPATIBILITY.wW();\n          var windowHeight = COMPATIBILITY.wH();\n          var windowDpr = getWindowDPR();\n\n          var onResize = function onResize() {\n            if (INSTANCES().length > 0) {\n              var newW = COMPATIBILITY.wW();\n              var newH = COMPATIBILITY.wH();\n              var deltaW = newW - windowWidth;\n              var deltaH = newH - windowHeight;\n              if (deltaW === 0 && deltaH === 0) return;\n              var deltaWRatio = MATH.round(newW / (windowWidth / 100.0));\n              var deltaHRatio = MATH.round(newH / (windowHeight / 100.0));\n              var absDeltaW = abs(deltaW);\n              var absDeltaH = abs(deltaH);\n              var absDeltaWRatio = abs(deltaWRatio);\n              var absDeltaHRatio = abs(deltaHRatio);\n              var newDPR = getWindowDPR();\n              var deltaIsBigger = absDeltaW > 2 && absDeltaH > 2;\n              var difference = !differenceIsBiggerThanOne(absDeltaWRatio, absDeltaHRatio);\n              var dprChanged = newDPR !== windowDpr && windowDpr > 0;\n              var isZoom = deltaIsBigger && difference && dprChanged;\n              var oldScrollbarSize = _base.nativeScrollbarSize;\n              var newScrollbarSize;\n\n              if (isZoom) {\n                bodyElement.append(scrollbarDummyElement);\n                newScrollbarSize = _base.nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement[0]);\n                scrollbarDummyElement.remove();\n\n                if (oldScrollbarSize.x !== newScrollbarSize.x || oldScrollbarSize.y !== newScrollbarSize.y) {\n                  FRAMEWORK.each(INSTANCES(), function () {\n                    if (INSTANCES(this)) INSTANCES(this).update('zoom');\n                  });\n                }\n              }\n\n              windowWidth = newW;\n              windowHeight = newH;\n              windowDpr = newDPR;\n            }\n          };\n\n          function differenceIsBiggerThanOne(valOne, valTwo) {\n            var absValOne = abs(valOne);\n            var absValTwo = abs(valTwo);\n            return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\n          }\n\n          function getWindowDPR() {\n            var dDPI = window.screen.deviceXDPI || 0;\n            var sDPI = window.screen.logicalXDPI || 1;\n            return window.devicePixelRatio || dDPI / sDPI;\n          }\n\n          FRAMEWORK(window).on('resize', onResize);\n        })();\n\n        function calcNativeScrollbarSize(measureElement) {\n          return {\n            x: measureElement[LEXICON.oH] - measureElement[LEXICON.cH],\n            y: measureElement[LEXICON.oW] - measureElement[LEXICON.cW]\n          };\n        }\n      }\n      /**\r\n       * The object which manages the auto update loop for all OverlayScrollbars objects. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsAutoUpdateLoop(globals) {\n        var _base = this;\n\n        var _inArray = FRAMEWORK.inArray;\n        var _getNow = COMPATIBILITY.now;\n        var _strAutoUpdate = 'autoUpdate';\n\n        var _strAutoUpdateInterval = _strAutoUpdate + 'Interval';\n\n        var _strLength = LEXICON.l;\n        var _loopingInstances = [];\n        var _loopingInstancesIntervalCache = [];\n        var _loopIsActive = false;\n        var _loopIntervalDefault = 33;\n        var _loopInterval = _loopIntervalDefault;\n\n        var _loopTimeOld = _getNow();\n\n        var _loopID;\n        /**\r\n         * The auto update loop which will run every 50 milliseconds or less if the update interval of a instance is lower than 50 milliseconds.\r\n         */\n\n\n        var loop = function loop() {\n          if (_loopingInstances[_strLength] > 0 && _loopIsActive) {\n            _loopID = COMPATIBILITY.rAF()(function () {\n              loop();\n            });\n\n            var timeNew = _getNow();\n\n            var timeDelta = timeNew - _loopTimeOld;\n            var lowestInterval;\n            var instance;\n            var instanceOptions;\n            var instanceAutoUpdateAllowed;\n            var instanceAutoUpdateInterval;\n            var now;\n\n            if (timeDelta > _loopInterval) {\n              _loopTimeOld = timeNew - timeDelta % _loopInterval;\n              lowestInterval = _loopIntervalDefault;\n\n              for (var i = 0; i < _loopingInstances[_strLength]; i++) {\n                instance = _loopingInstances[i];\n\n                if (instance !== undefined$1) {\n                  instanceOptions = instance.options();\n                  instanceAutoUpdateAllowed = instanceOptions[_strAutoUpdate];\n                  instanceAutoUpdateInterval = MATH.max(1, instanceOptions[_strAutoUpdateInterval]);\n                  now = _getNow();\n\n                  if ((instanceAutoUpdateAllowed === true || instanceAutoUpdateAllowed === null) && now - _loopingInstancesIntervalCache[i] > instanceAutoUpdateInterval) {\n                    instance.update('auto');\n                    _loopingInstancesIntervalCache[i] = new Date(now += instanceAutoUpdateInterval);\n                  }\n\n                  lowestInterval = MATH.max(1, MATH.min(lowestInterval, instanceAutoUpdateInterval));\n                }\n              }\n\n              _loopInterval = lowestInterval;\n            }\n          } else {\n            _loopInterval = _loopIntervalDefault;\n          }\n        };\n        /**\r\n         * Add OverlayScrollbars instance to the auto update loop. Only successful if the instance isn't already added.\r\n         * @param instance The instance which shall be updated in a loop automatically.\r\n         */\n\n\n        _base.add = function (instance) {\n          if (_inArray(instance, _loopingInstances) === -1) {\n            _loopingInstances.push(instance);\n\n            _loopingInstancesIntervalCache.push(_getNow());\n\n            if (_loopingInstances[_strLength] > 0 && !_loopIsActive) {\n              _loopIsActive = true;\n              globals.autoUpdateLoop = _loopIsActive;\n              loop();\n            }\n          }\n        };\n        /**\r\n         * Remove OverlayScrollbars instance from the auto update loop. Only successful if the instance was added before.\r\n         * @param instance The instance which shall be updated in a loop automatically.\r\n         */\n\n\n        _base.remove = function (instance) {\n          var index = _inArray(instance, _loopingInstances);\n\n          if (index > -1) {\n            //remove from loopingInstances list\n            _loopingInstancesIntervalCache.splice(index, 1);\n\n            _loopingInstances.splice(index, 1); //correct update loop behavior\n\n\n            if (_loopingInstances[_strLength] === 0 && _loopIsActive) {\n              _loopIsActive = false;\n              globals.autoUpdateLoop = _loopIsActive;\n\n              if (_loopID !== undefined$1) {\n                COMPATIBILITY.cAF()(_loopID);\n                _loopID = -1;\n              }\n            }\n          }\n        };\n      }\n      /**\r\n       * A object which manages the scrollbars visibility of the target element.\r\n       * @param pluginTargetElement The element from which the scrollbars shall be hidden.\r\n       * @param options The custom options.\r\n       * @param extensions The custom extensions.\r\n       * @param globals\r\n       * @param autoUpdateLoop\r\n       * @returns {*}\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsInstance(pluginTargetElement, options, extensions, globals, autoUpdateLoop) {\n        //shortcuts\n        var type = COMPATIBILITY.type;\n        var inArray = FRAMEWORK.inArray;\n        var each = FRAMEWORK.each; //make correct instanceof\n\n        var _base = new _plugin();\n\n        var _frameworkProto = FRAMEWORK[LEXICON.p]; //if passed element is no HTML element: skip and return\n\n        if (!isHTMLElement(pluginTargetElement)) return; //if passed element is already initialized: set passed options if there are any and return its instance\n\n        if (INSTANCES(pluginTargetElement)) {\n          var inst = INSTANCES(pluginTargetElement);\n          inst.options(options);\n          return inst;\n        } //globals:\n\n\n        var _nativeScrollbarIsOverlaid;\n\n        var _overlayScrollbarDummySize;\n\n        var _rtlScrollBehavior;\n\n        var _autoUpdateRecommended;\n\n        var _msieVersion;\n\n        var _nativeScrollbarStyling;\n\n        var _cssCalc;\n\n        var _nativeScrollbarSize;\n\n        var _supportTransition;\n\n        var _supportTransform;\n\n        var _supportPassiveEvents;\n\n        var _supportResizeObserver;\n\n        var _supportMutationObserver;\n\n        var _initialized;\n\n        var _destroyed;\n\n        var _isTextarea;\n\n        var _isBody;\n\n        var _documentMixed;\n\n        var _domExists; //general:\n\n\n        var _isBorderBox;\n\n        var _sizeAutoObserverAdded;\n\n        var _paddingX;\n\n        var _paddingY;\n\n        var _borderX;\n\n        var _borderY;\n\n        var _marginX;\n\n        var _marginY;\n\n        var _isRTL;\n\n        var _sleeping;\n\n        var _contentBorderSize = {};\n        var _scrollHorizontalInfo = {};\n        var _scrollVerticalInfo = {};\n        var _viewportSize = {};\n        var _nativeScrollbarMinSize = {}; //naming:\t\n\n        var _strMinusHidden = '-hidden';\n        var _strMarginMinus = 'margin-';\n        var _strPaddingMinus = 'padding-';\n        var _strBorderMinus = 'border-';\n        var _strTop = 'top';\n        var _strRight = 'right';\n        var _strBottom = 'bottom';\n        var _strLeft = 'left';\n        var _strMinMinus = 'min-';\n        var _strMaxMinus = 'max-';\n        var _strWidth = 'width';\n        var _strHeight = 'height';\n        var _strFloat = 'float';\n        var _strEmpty = '';\n        var _strAuto = 'auto';\n        var _strSync = 'sync';\n        var _strScroll = 'scroll';\n        var _strHundredPercent = '100%';\n        var _strX = 'x';\n        var _strY = 'y';\n        var _strDot = '.';\n        var _strSpace = ' ';\n        var _strScrollbar = 'scrollbar';\n        var _strMinusHorizontal = '-horizontal';\n        var _strMinusVertical = '-vertical';\n\n        var _strScrollLeft = _strScroll + 'Left';\n\n        var _strScrollTop = _strScroll + 'Top';\n\n        var _strMouseTouchDownEvent = 'mousedown touchstart';\n        var _strMouseTouchUpEvent = 'mouseup touchend touchcancel';\n        var _strMouseTouchMoveEvent = 'mousemove touchmove';\n        var _strMouseEnter = 'mouseenter';\n        var _strMouseLeave = 'mouseleave';\n        var _strKeyDownEvent = 'keydown';\n        var _strKeyUpEvent = 'keyup';\n        var _strSelectStartEvent = 'selectstart';\n        var _strTransitionEndEvent = 'transitionend webkitTransitionEnd oTransitionEnd';\n        var _strResizeObserverProperty = '__overlayScrollbarsRO__'; //class names:\t\n\n        var _cassNamesPrefix = 'os-';\n\n        var _classNameHTMLElement = _cassNamesPrefix + 'html';\n\n        var _classNameHostElement = _cassNamesPrefix + 'host';\n\n        var _classNameHostElementForeign = _classNameHostElement + '-foreign';\n\n        var _classNameHostTextareaElement = _classNameHostElement + '-textarea';\n\n        var _classNameHostScrollbarHorizontalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusHorizontal + _strMinusHidden;\n\n        var _classNameHostScrollbarVerticalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusVertical + _strMinusHidden;\n\n        var _classNameHostTransition = _classNameHostElement + '-transition';\n\n        var _classNameHostRTL = _classNameHostElement + '-rtl';\n\n        var _classNameHostResizeDisabled = _classNameHostElement + '-resize-disabled';\n\n        var _classNameHostScrolling = _classNameHostElement + '-scrolling';\n\n        var _classNameHostOverflow = _classNameHostElement + '-overflow';\n\n        var _classNameHostOverflow = _classNameHostElement + '-overflow';\n\n        var _classNameHostOverflowX = _classNameHostOverflow + '-x';\n\n        var _classNameHostOverflowY = _classNameHostOverflow + '-y';\n\n        var _classNameTextareaElement = _cassNamesPrefix + 'textarea';\n\n        var _classNameTextareaCoverElement = _classNameTextareaElement + '-cover';\n\n        var _classNamePaddingElement = _cassNamesPrefix + 'padding';\n\n        var _classNameViewportElement = _cassNamesPrefix + 'viewport';\n\n        var _classNameViewportNativeScrollbarsInvisible = _classNameViewportElement + '-native-scrollbars-invisible';\n\n        var _classNameViewportNativeScrollbarsOverlaid = _classNameViewportElement + '-native-scrollbars-overlaid';\n\n        var _classNameContentElement = _cassNamesPrefix + 'content';\n\n        var _classNameContentArrangeElement = _cassNamesPrefix + 'content-arrange';\n\n        var _classNameContentGlueElement = _cassNamesPrefix + 'content-glue';\n\n        var _classNameSizeAutoObserverElement = _cassNamesPrefix + 'size-auto-observer';\n\n        var _classNameResizeObserverElement = _cassNamesPrefix + 'resize-observer';\n\n        var _classNameResizeObserverItemElement = _cassNamesPrefix + 'resize-observer-item';\n\n        var _classNameResizeObserverItemFinalElement = _classNameResizeObserverItemElement + '-final';\n\n        var _classNameTextInherit = _cassNamesPrefix + 'text-inherit';\n\n        var _classNameScrollbar = _cassNamesPrefix + _strScrollbar;\n\n        var _classNameScrollbarTrack = _classNameScrollbar + '-track';\n\n        var _classNameScrollbarTrackOff = _classNameScrollbarTrack + '-off';\n\n        var _classNameScrollbarHandle = _classNameScrollbar + '-handle';\n\n        var _classNameScrollbarHandleOff = _classNameScrollbarHandle + '-off';\n\n        var _classNameScrollbarUnusable = _classNameScrollbar + '-unusable';\n\n        var _classNameScrollbarAutoHidden = _classNameScrollbar + '-' + _strAuto + _strMinusHidden;\n\n        var _classNameScrollbarCorner = _classNameScrollbar + '-corner';\n\n        var _classNameScrollbarCornerResize = _classNameScrollbarCorner + '-resize';\n\n        var _classNameScrollbarCornerResizeB = _classNameScrollbarCornerResize + '-both';\n\n        var _classNameScrollbarCornerResizeH = _classNameScrollbarCornerResize + _strMinusHorizontal;\n\n        var _classNameScrollbarCornerResizeV = _classNameScrollbarCornerResize + _strMinusVertical;\n\n        var _classNameScrollbarHorizontal = _classNameScrollbar + _strMinusHorizontal;\n\n        var _classNameScrollbarVertical = _classNameScrollbar + _strMinusVertical;\n\n        var _classNameDragging = _cassNamesPrefix + 'dragging';\n\n        var _classNameThemeNone = _cassNamesPrefix + 'theme-none';\n\n        var _classNamesDynamicDestroy = [_classNameViewportNativeScrollbarsInvisible, _classNameViewportNativeScrollbarsOverlaid, _classNameScrollbarTrackOff, _classNameScrollbarHandleOff, _classNameScrollbarUnusable, _classNameScrollbarAutoHidden, _classNameScrollbarCornerResize, _classNameScrollbarCornerResizeB, _classNameScrollbarCornerResizeH, _classNameScrollbarCornerResizeV, _classNameDragging].join(_strSpace); //callbacks:\t\n\n\n        var _callbacksInitQeueue = []; //attrs viewport shall inherit from target\t\n\n        var _viewportAttrsFromTarget = [LEXICON.ti]; //options:\t\n\n        var _defaultOptions;\n\n        var _currentOptions;\n\n        var _currentPreparedOptions; //extensions:\t\n\n\n        var _extensions = {};\n        var _extensionsPrivateMethods = 'added removed on contract'; //update\t\n\n        var _lastUpdateTime;\n\n        var _swallowedUpdateHints = {};\n\n        var _swallowedUpdateTimeout;\n\n        var _swallowUpdateLag = 42;\n        var _updateOnLoadEventName = 'load';\n        var _updateOnLoadElms = []; //DOM elements:\t\n\n        var _windowElement;\n\n        var _documentElement;\n\n        var _htmlElement;\n\n        var _bodyElement;\n\n        var _targetElement; //the target element of this OverlayScrollbars object\t\n\n\n        var _hostElement; //the host element of this OverlayScrollbars object -> may be the same as targetElement\t\n\n\n        var _sizeAutoObserverElement; //observes size auto changes\t\n\n\n        var _sizeObserverElement; //observes size and padding changes\t\n\n\n        var _paddingElement; //manages the padding\t\n\n\n        var _viewportElement; //is the viewport of our scrollbar model\t\n\n\n        var _contentElement; //the element which holds the content\t\n\n\n        var _contentArrangeElement; //is needed for correct sizing of the content element (only if native scrollbars are overlays)\t\n\n\n        var _contentGlueElement; //has always the size of the content element\t\n\n\n        var _textareaCoverElement; //only applied if target is a textarea element. Used for correct size calculation and for prevention of uncontrolled scrolling\t\n\n\n        var _scrollbarCornerElement;\n\n        var _scrollbarHorizontalElement;\n\n        var _scrollbarHorizontalTrackElement;\n\n        var _scrollbarHorizontalHandleElement;\n\n        var _scrollbarVerticalElement;\n\n        var _scrollbarVerticalTrackElement;\n\n        var _scrollbarVerticalHandleElement;\n\n        var _windowElementNative;\n\n        var _documentElementNative;\n\n        var _targetElementNative;\n\n        var _hostElementNative;\n\n        var _sizeAutoObserverElementNative;\n\n        var _sizeObserverElementNative;\n\n        var _paddingElementNative;\n\n        var _viewportElementNative;\n\n        var _contentElementNative; //Cache:\t\n\n\n        var _hostSizeCache;\n\n        var _contentScrollSizeCache;\n\n        var _arrangeContentSizeCache;\n\n        var _hasOverflowCache;\n\n        var _hideOverflowCache;\n\n        var _widthAutoCache;\n\n        var _heightAutoCache;\n\n        var _cssBoxSizingCache;\n\n        var _cssPaddingCache;\n\n        var _cssBorderCache;\n\n        var _cssMarginCache;\n\n        var _cssDirectionCache;\n\n        var _cssDirectionDetectedCache;\n\n        var _paddingAbsoluteCache;\n\n        var _clipAlwaysCache;\n\n        var _contentGlueSizeCache;\n\n        var _overflowBehaviorCache;\n\n        var _overflowAmountCache;\n\n        var _ignoreOverlayScrollbarHidingCache;\n\n        var _autoUpdateCache;\n\n        var _sizeAutoCapableCache;\n\n        var _contentElementScrollSizeChangeDetectedCache;\n\n        var _hostElementSizeChangeDetectedCache;\n\n        var _scrollbarsVisibilityCache;\n\n        var _scrollbarsAutoHideCache;\n\n        var _scrollbarsClickScrollingCache;\n\n        var _scrollbarsDragScrollingCache;\n\n        var _resizeCache;\n\n        var _normalizeRTLCache;\n\n        var _classNameCache;\n\n        var _oldClassName;\n\n        var _textareaAutoWrappingCache;\n\n        var _textareaInfoCache;\n\n        var _textareaSizeCache;\n\n        var _textareaDynHeightCache;\n\n        var _textareaDynWidthCache;\n\n        var _bodyMinSizeCache;\n\n        var _updateAutoCache = {}; //MutationObserver:\t\n\n        var _mutationObserverHost;\n\n        var _mutationObserverContent;\n\n        var _mutationObserverHostCallback;\n\n        var _mutationObserverContentCallback;\n\n        var _mutationObserversConnected;\n\n        var _mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\n\n        var _mutationObserverAttrsHost = [LEXICON.i, LEXICON.c, LEXICON.s, 'open'].concat(_viewportAttrsFromTarget); //events:\t\n\n\n        var _destroyEvents = []; //textarea:\t\n\n        var _textareaHasFocus; //scrollbars:\t\n\n\n        var _scrollbarsAutoHideTimeoutId;\n\n        var _scrollbarsAutoHideMoveTimeoutId;\n\n        var _scrollbarsAutoHideDelay;\n\n        var _scrollbarsAutoHideNever;\n\n        var _scrollbarsAutoHideScroll;\n\n        var _scrollbarsAutoHideMove;\n\n        var _scrollbarsAutoHideLeave;\n\n        var _scrollbarsHandleHovered;\n\n        var _scrollbarsHandlesDefineScrollPos; //resize\t\n\n\n        var _resizeNone;\n\n        var _resizeBoth;\n\n        var _resizeHorizontal;\n\n        var _resizeVertical; //==== Event Listener ====//\t\n\n        /**\t\r\n         * Adds or removes a event listener from the given element. \t\r\n         * @param element The element to which the event listener shall be applied or removed.\t\r\n         * @param eventNames The name(s) of the events.\t\r\n         * @param listener The method which shall be called.\t\r\n         * @param remove True if the handler shall be removed, false or undefined if the handler shall be added.\t\r\n         * @param passiveOrOptions The options for the event.\r\n         */\n\n\n        function setupResponsiveEventListener(element, eventNames, listener, remove, passiveOrOptions) {\n          var collected = COMPATIBILITY.isA(eventNames) && COMPATIBILITY.isA(listener);\n          var method = remove ? 'removeEventListener' : 'addEventListener';\n          var onOff = remove ? 'off' : 'on';\n          var events = collected ? false : eventNames.split(_strSpace);\n          var i = 0;\n          var passiveOrOptionsIsObj = FRAMEWORK.isPlainObject(passiveOrOptions);\n          var passive = _supportPassiveEvents && (passiveOrOptionsIsObj ? passiveOrOptions._passive : passiveOrOptions) || false;\n          var capture = passiveOrOptionsIsObj && (passiveOrOptions._capture || false);\n          var nativeParam = _supportPassiveEvents ? {\n            passive: passive,\n            capture: capture\n          } : capture;\n\n          if (collected) {\n            for (; i < eventNames[LEXICON.l]; i++) {\n              setupResponsiveEventListener(element, eventNames[i], listener[i], remove, passiveOrOptions);\n            }\n          } else {\n            for (; i < events[LEXICON.l]; i++) {\n              if (_supportPassiveEvents) {\n                element[0][method](events[i], listener, nativeParam);\n              } else {\n                element[onOff](events[i], listener);\n              }\n            }\n          }\n        }\n\n        function addDestroyEventListener(element, eventNames, listener, passive) {\n          setupResponsiveEventListener(element, eventNames, listener, false, passive);\n\n          _destroyEvents.push(COMPATIBILITY.bind(setupResponsiveEventListener, 0, element, eventNames, listener, true, passive));\n        } //==== Resize Observer ====//\n\n        /**\r\n         * Adds or removes a resize observer from the given element.\r\n         * @param targetElement The element to which the resize observer shall be added or removed.\r\n         * @param onElementResizedCallback The callback which is fired every time the resize observer registers a size change or false / undefined if the resizeObserver shall be removed.\r\n         */\n\n\n        function setupResizeObserver(targetElement, onElementResizedCallback) {\n          if (targetElement) {\n            var resizeObserver = COMPATIBILITY.rO();\n            var strAnimationStartEvent = 'animationstart mozAnimationStart webkitAnimationStart MSAnimationStart';\n            var strChildNodes = 'childNodes';\n            var constScroll = 3333333;\n\n            var callback = function callback() {\n              targetElement[_strScrollTop](constScroll)[_strScrollLeft](_isRTL ? _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll : constScroll);\n\n              onElementResizedCallback();\n            }; //add resize observer:\n\n\n            if (onElementResizedCallback) {\n              if (_supportResizeObserver) {\n                var element = targetElement.addClass('observed').append(generateDiv(_classNameResizeObserverElement)).contents()[0];\n                var observer = element[_strResizeObserverProperty] = new resizeObserver(callback);\n                observer.observe(element);\n              } else {\n                if (_msieVersion > 9 || !_autoUpdateRecommended) {\n                  targetElement.prepend(generateDiv(_classNameResizeObserverElement, generateDiv({\n                    c: _classNameResizeObserverItemElement,\n                    dir: 'ltr'\n                  }, generateDiv(_classNameResizeObserverItemElement, generateDiv(_classNameResizeObserverItemFinalElement)) + generateDiv(_classNameResizeObserverItemElement, generateDiv({\n                    c: _classNameResizeObserverItemFinalElement,\n                    style: 'width: 200%; height: 200%'\n                  })))));\n                  var observerElement = targetElement[0][strChildNodes][0][strChildNodes][0];\n                  var shrinkElement = FRAMEWORK(observerElement[strChildNodes][1]);\n                  var expandElement = FRAMEWORK(observerElement[strChildNodes][0]);\n                  var expandElementChild = FRAMEWORK(expandElement[0][strChildNodes][0]);\n                  var widthCache = observerElement[LEXICON.oW];\n                  var heightCache = observerElement[LEXICON.oH];\n                  var isDirty;\n                  var rAFId;\n                  var currWidth;\n                  var currHeight;\n                  var factor = 2;\n                  var nativeScrollbarSize = globals.nativeScrollbarSize; //care don't make changes to this object!!!\n\n                  var reset = function reset() {\n                    /*\r\n                     var sizeResetWidth = observerElement[LEXICON.oW] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                     var sizeResetHeight = observerElement[LEXICON.oH] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                     var expandChildCSS = {};\r\n                     expandChildCSS[_strWidth] = sizeResetWidth;\r\n                     expandChildCSS[_strHeight] = sizeResetHeight;\r\n                     expandElementChild.css(expandChildCSS);\r\n                         expandElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                     shrinkElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                     */\n                    expandElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\n\n                    shrinkElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\n                  };\n\n                  var onResized = function onResized() {\n                    rAFId = 0;\n                    if (!isDirty) return;\n                    widthCache = currWidth;\n                    heightCache = currHeight;\n                    callback();\n                  };\n\n                  var onScroll = function onScroll(event) {\n                    currWidth = observerElement[LEXICON.oW];\n                    currHeight = observerElement[LEXICON.oH];\n                    isDirty = currWidth != widthCache || currHeight != heightCache;\n\n                    if (event && isDirty && !rAFId) {\n                      COMPATIBILITY.cAF()(rAFId);\n                      rAFId = COMPATIBILITY.rAF()(onResized);\n                    } else if (!event) onResized();\n\n                    reset();\n\n                    if (event) {\n                      COMPATIBILITY.prvD(event);\n                      COMPATIBILITY.stpP(event);\n                    }\n\n                    return false;\n                  };\n\n                  var expandChildCSS = {};\n                  var observerElementCSS = {};\n                  setTopRightBottomLeft(observerElementCSS, _strEmpty, [-((nativeScrollbarSize.y + 1) * factor), nativeScrollbarSize.x * -factor, nativeScrollbarSize.y * -factor, -((nativeScrollbarSize.x + 1) * factor)]);\n                  FRAMEWORK(observerElement).css(observerElementCSS);\n                  expandElement.on(_strScroll, onScroll);\n                  shrinkElement.on(_strScroll, onScroll);\n                  targetElement.on(strAnimationStartEvent, function () {\n                    onScroll(false);\n                  }); //lets assume that the divs will never be that large and a constant value is enough\n\n                  expandChildCSS[_strWidth] = constScroll;\n                  expandChildCSS[_strHeight] = constScroll;\n                  expandElementChild.css(expandChildCSS);\n                  reset();\n                } else {\n                  var attachEvent = _documentElementNative.attachEvent;\n                  var isIE = _msieVersion !== undefined$1;\n\n                  if (attachEvent) {\n                    targetElement.prepend(generateDiv(_classNameResizeObserverElement));\n                    findFirst(targetElement, _strDot + _classNameResizeObserverElement)[0].attachEvent('onresize', callback);\n                  } else {\n                    var obj = _documentElementNative.createElement(TYPES.o);\n\n                    obj.setAttribute(LEXICON.ti, '-1');\n                    obj.setAttribute(LEXICON.c, _classNameResizeObserverElement);\n\n                    obj.onload = function () {\n                      var wnd = this.contentDocument.defaultView;\n                      wnd.addEventListener('resize', callback);\n                      wnd.document.documentElement.style.display = 'none';\n                    };\n\n                    obj.type = 'text/html';\n                    if (isIE) targetElement.prepend(obj);\n                    obj.data = 'about:blank';\n                    if (!isIE) targetElement.prepend(obj);\n                    targetElement.on(strAnimationStartEvent, callback);\n                  }\n                }\n              }\n\n              if (targetElement[0] === _sizeObserverElementNative) {\n                var directionChanged = function directionChanged() {\n                  var dir = _hostElement.css('direction');\n\n                  var css = {};\n                  var scrollLeftValue = 0;\n                  var result = false;\n\n                  if (dir !== _cssDirectionDetectedCache) {\n                    if (dir === 'ltr') {\n                      css[_strLeft] = 0;\n                      css[_strRight] = _strAuto;\n                      scrollLeftValue = constScroll;\n                    } else {\n                      css[_strLeft] = _strAuto;\n                      css[_strRight] = 0;\n                      scrollLeftValue = _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll;\n                    } //execution order is important for IE!!!\n\n\n                    _sizeObserverElement.children().eq(0).css(css);\n\n                    _sizeObserverElement[_strScrollLeft](scrollLeftValue)[_strScrollTop](constScroll);\n\n                    _cssDirectionDetectedCache = dir;\n                    result = true;\n                  }\n\n                  return result;\n                };\n\n                directionChanged();\n                addDestroyEventListener(targetElement, _strScroll, function (event) {\n                  if (directionChanged()) update();\n                  COMPATIBILITY.prvD(event);\n                  COMPATIBILITY.stpP(event);\n                  return false;\n                });\n              }\n            } //remove resize observer:\n            else {\n              if (_supportResizeObserver) {\n                var element = targetElement.contents()[0];\n                var resizeObserverObj = element[_strResizeObserverProperty];\n\n                if (resizeObserverObj) {\n                  resizeObserverObj.disconnect();\n                  delete element[_strResizeObserverProperty];\n                }\n              } else {\n                remove(targetElement.children(_strDot + _classNameResizeObserverElement).eq(0));\n              }\n            }\n          }\n        }\n        /**\r\n         * Freezes or unfreezes the given resize observer.\r\n         * @param targetElement The element to which the target resize observer is applied.\r\n         * @param freeze True if the resize observer shall be frozen, false otherwise.\r\n         \r\n        function freezeResizeObserver(targetElement, freeze) {\r\n            if (targetElement !== undefined) {\r\n                if(freeze) {\r\n                    if (_supportResizeObserver) {\r\n                        var element = targetElement.contents()[0];\r\n                        element[_strResizeObserverProperty].unobserve(element);\r\n                    }\r\n                    else {\r\n                        targetElement = targetElement.children(_strDot + _classNameResizeObserverElement).eq(0);\r\n                        var w = targetElement.css(_strWidth);\r\n                        var h = targetElement.css(_strHeight);\r\n                        var css = {};\r\n                        css[_strWidth] = w;\r\n                        css[_strHeight] = h;\r\n                        targetElement.css(css);\r\n                    }\r\n                }\r\n                else {\r\n                    if (_supportResizeObserver) {\r\n                        var element = targetElement.contents()[0];\r\n                        element[_strResizeObserverProperty].observe(element);\r\n                    }\r\n                    else {\r\n                        var css = { };\r\n                        css[_strHeight] = _strEmpty;\r\n                        css[_strWidth] = _strEmpty;\r\n                        targetElement.children(_strDot + _classNameResizeObserverElement).eq(0).css(css);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        */\n        //==== Mutation Observers ====//\n\n        /**\r\n         * Creates MutationObservers for the host and content Element if they are supported.\r\n         */\n\n\n        function createMutationObservers() {\n          if (_supportMutationObserver) {\n            var mutationObserverContentLag = 11;\n            var mutationObserver = COMPATIBILITY.mO();\n            var contentLastUpdate = COMPATIBILITY.now();\n            var mutationTarget;\n            var mutationAttrName;\n            var mutationIsClass;\n            var oldMutationVal;\n            var newClassVal;\n            var hostClassNameRegex;\n            var contentTimeout;\n            var now;\n            var sizeAuto;\n            var action;\n\n            _mutationObserverHostCallback = function _mutationObserverHostCallback(mutations) {\n              var doUpdate = false;\n              var doUpdateForce = false;\n              var mutation;\n              var mutatedAttrs = [];\n\n              if (_initialized && !_sleeping) {\n                each(mutations, function () {\n                  mutation = this;\n                  mutationTarget = mutation.target;\n                  mutationAttrName = mutation.attributeName;\n                  mutationIsClass = mutationAttrName === LEXICON.c;\n                  oldMutationVal = mutation.oldValue;\n                  newClassVal = mutationTarget.className;\n\n                  if (_domExists && mutationIsClass && !doUpdateForce) {\n                    // if old class value contains _classNameHostElementForeign and new class value doesn't\n                    if (oldMutationVal.indexOf(_classNameHostElementForeign) > -1 && newClassVal.indexOf(_classNameHostElementForeign) < 0) {\n                      hostClassNameRegex = createHostClassNameRegExp(true);\n                      _hostElementNative.className = newClassVal.split(_strSpace).concat(oldMutationVal.split(_strSpace).filter(function (name) {\n                        return name.match(hostClassNameRegex);\n                      })).join(_strSpace);\n                      doUpdate = doUpdateForce = true;\n                    }\n                  }\n\n                  if (!doUpdate) {\n                    doUpdate = mutationIsClass ? hostClassNamesChanged(oldMutationVal, newClassVal) : mutationAttrName === LEXICON.s ? oldMutationVal !== mutationTarget[LEXICON.s].cssText : true;\n                  }\n\n                  mutatedAttrs.push(mutationAttrName);\n                });\n                updateViewportAttrsFromTarget(mutatedAttrs);\n                if (doUpdate) _base.update(doUpdateForce || _strAuto);\n              }\n\n              return doUpdate;\n            };\n\n            _mutationObserverContentCallback = function _mutationObserverContentCallback(mutations) {\n              var doUpdate = false;\n              var mutation;\n\n              if (_initialized && !_sleeping) {\n                each(mutations, function () {\n                  mutation = this;\n                  doUpdate = isUnknownMutation(mutation);\n                  return !doUpdate;\n                });\n\n                if (doUpdate) {\n                  now = COMPATIBILITY.now();\n                  sizeAuto = _heightAutoCache || _widthAutoCache;\n\n                  action = function action() {\n                    if (!_destroyed) {\n                      contentLastUpdate = now; //if cols, rows or wrap attr was changed\n\n                      if (_isTextarea) textareaUpdate();\n                      if (sizeAuto) update();else _base.update(_strAuto);\n                    }\n                  };\n\n                  clearTimeout(contentTimeout);\n                  if (mutationObserverContentLag <= 0 || now - contentLastUpdate > mutationObserverContentLag || !sizeAuto) action();else contentTimeout = setTimeout(action, mutationObserverContentLag);\n                }\n              }\n\n              return doUpdate;\n            };\n\n            _mutationObserverHost = new mutationObserver(_mutationObserverHostCallback);\n            _mutationObserverContent = new mutationObserver(_mutationObserverContentCallback);\n          }\n        }\n        /**\r\n         * Connects the MutationObservers if they are supported.\r\n         */\n\n\n        function connectMutationObservers() {\n          if (_supportMutationObserver && !_mutationObserversConnected) {\n            _mutationObserverHost.observe(_hostElementNative, {\n              attributes: true,\n              attributeOldValue: true,\n              attributeFilter: _mutationObserverAttrsHost\n            });\n\n            _mutationObserverContent.observe(_isTextarea ? _targetElementNative : _contentElementNative, {\n              attributes: true,\n              attributeOldValue: true,\n              subtree: !_isTextarea,\n              childList: !_isTextarea,\n              characterData: !_isTextarea,\n              attributeFilter: _isTextarea ? _mutationObserverAttrsTextarea : _mutationObserverAttrsHost\n            });\n\n            _mutationObserversConnected = true;\n          }\n        }\n        /**\r\n         * Disconnects the MutationObservers if they are supported.\r\n         */\n\n\n        function disconnectMutationObservers() {\n          if (_supportMutationObserver && _mutationObserversConnected) {\n            _mutationObserverHost.disconnect();\n\n            _mutationObserverContent.disconnect();\n\n            _mutationObserversConnected = false;\n          }\n        } //==== Events of elements ====//\n\n        /**\r\n         * This method gets called every time the host element gets resized. IMPORTANT: Padding changes are detected too!!\r\n         * It refreshes the hostResizedEventArgs and the hostSizeResizeCache.\r\n         * If there are any size changes, the update method gets called.\r\n         */\n\n\n        function hostOnResized() {\n          if (!_sleeping) {\n            var changed;\n            var hostSize = {\n              w: _sizeObserverElementNative[LEXICON.sW],\n              h: _sizeObserverElementNative[LEXICON.sH]\n            };\n            changed = checkCache(hostSize, _hostElementSizeChangeDetectedCache);\n            _hostElementSizeChangeDetectedCache = hostSize;\n            if (changed) update({\n              _hostSizeChanged: true\n            });\n          }\n        }\n        /**\r\n         * The mouse enter event of the host element. This event is only needed for the autoHide feature.\r\n         */\n\n\n        function hostOnMouseEnter() {\n          if (_scrollbarsAutoHideLeave) refreshScrollbarsAutoHide(true);\n        }\n        /**\r\n         * The mouse leave event of the host element. This event is only needed for the autoHide feature.\r\n         */\n\n\n        function hostOnMouseLeave() {\n          if (_scrollbarsAutoHideLeave && !_bodyElement.hasClass(_classNameDragging)) refreshScrollbarsAutoHide(false);\n        }\n        /**\r\n         * The mouse move event of the host element. This event is only needed for the autoHide \"move\" feature.\r\n         */\n\n\n        function hostOnMouseMove() {\n          if (_scrollbarsAutoHideMove) {\n            refreshScrollbarsAutoHide(true);\n            clearTimeout(_scrollbarsAutoHideMoveTimeoutId);\n            _scrollbarsAutoHideMoveTimeoutId = setTimeout(function () {\n              if (_scrollbarsAutoHideMove && !_destroyed) refreshScrollbarsAutoHide(false);\n            }, 100);\n          }\n        }\n        /**\r\n         * Prevents text from deselection if attached to the document element on the mousedown event of a DOM element.\r\n         * @param event The select start event.\r\n         */\n\n\n        function documentOnSelectStart(event) {\n          COMPATIBILITY.prvD(event);\n          return false;\n        }\n        /**\t\r\n         * A callback which will be called after a element has loaded.\t\r\n         */\n\n\n        function updateOnLoadCallback(event) {\n          var elm = FRAMEWORK(event.target);\n          eachUpdateOnLoad(function (i, updateOnLoadSelector) {\n            if (elm.is(updateOnLoadSelector)) {\n              update({\n                _contentSizeChanged: true\n              });\n            }\n          });\n        }\n        /**\r\n        * Adds or removes mouse & touch events of the host element. (for handling auto-hiding of the scrollbars)\r\n        * @param destroy Indicates whether the events shall be added or removed.\r\n        */\n\n\n        function setupHostMouseTouchEvents(destroy) {\n          if (!destroy) setupHostMouseTouchEvents(true);\n          setupResponsiveEventListener(_hostElement, _strMouseTouchMoveEvent.split(_strSpace)[0], hostOnMouseMove, !_scrollbarsAutoHideMove || destroy, true);\n          setupResponsiveEventListener(_hostElement, [_strMouseEnter, _strMouseLeave], [hostOnMouseEnter, hostOnMouseLeave], !_scrollbarsAutoHideLeave || destroy, true); //if the plugin is initialized and the mouse is over the host element, make the scrollbars visible\n\n          if (!_initialized && !destroy) _hostElement.one('mouseover', hostOnMouseEnter);\n        } //==== Update Detection ====//\n\n        /**\r\n         * Measures the min width and min height of the body element and refreshes the related cache.\r\n         * @returns {boolean} True if the min width or min height has changed, false otherwise.\r\n         */\n\n\n        function bodyMinSizeChanged() {\n          var bodyMinSize = {};\n\n          if (_isBody && _contentArrangeElement) {\n            bodyMinSize.w = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strWidth));\n            bodyMinSize.h = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strHeight));\n            bodyMinSize.c = checkCache(bodyMinSize, _bodyMinSizeCache);\n            bodyMinSize.f = true; //flag for \"measured at least once\"\n          }\n\n          _bodyMinSizeCache = bodyMinSize;\n          return !!bodyMinSize.c;\n        }\n        /**\r\n         * Returns true if the class names really changed (new class without plugin host prefix)\r\n         * @param oldClassNames The old ClassName string or array.\r\n         * @param newClassNames The new ClassName string or array.\r\n         * @returns {boolean} True if the class names has really changed, false otherwise.\r\n         */\n\n\n        function hostClassNamesChanged(oldClassNames, newClassNames) {\n          var currClasses = _typeof(newClassNames) == TYPES.s ? newClassNames.split(_strSpace) : [];\n          var oldClasses = _typeof(oldClassNames) == TYPES.s ? oldClassNames.split(_strSpace) : [];\n          var diff = getArrayDifferences(oldClasses, currClasses); // remove none theme from diff list to prevent update\n\n          var idx = inArray(_classNameThemeNone, diff);\n          var i;\n          var regex;\n          if (idx > -1) diff.splice(idx, 1);\n\n          if (diff[LEXICON.l] > 0) {\n            regex = createHostClassNameRegExp(true, true);\n\n            for (i = 0; i < diff.length; i++) {\n              if (!diff[i].match(regex)) {\n                return true;\n              }\n            }\n          }\n\n          return false;\n        }\n        /**\r\n         * Returns true if the given mutation is not from a from the plugin generated element. If the target element is a textarea the mutation is always unknown.\r\n         * @param mutation The mutation which shall be checked.\r\n         * @returns {boolean} True if the mutation is from a unknown element, false otherwise.\r\n         */\n\n\n        function isUnknownMutation(mutation) {\n          var attributeName = mutation.attributeName;\n          var mutationTarget = mutation.target;\n          var mutationType = mutation.type;\n          var strClosest = 'closest';\n          if (mutationTarget === _contentElementNative) return attributeName === null;\n\n          if (mutationType === 'attributes' && (attributeName === LEXICON.c || attributeName === LEXICON.s) && !_isTextarea) {\n            //ignore className changes by the plugin\t\n            if (attributeName === LEXICON.c && FRAMEWORK(mutationTarget).hasClass(_classNameHostElement)) return hostClassNamesChanged(mutation.oldValue, mutationTarget.className); //only do it of browser support it natively\t\n\n            if (_typeof(mutationTarget[strClosest]) != TYPES.f) return true;\n            if (mutationTarget[strClosest](_strDot + _classNameResizeObserverElement) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbar) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbarCorner) !== null) return false;\n          }\n\n          return true;\n        }\n        /**\r\n         * Returns true if the content size was changed since the last time this method was called.\r\n         * @returns {boolean} True if the content size was changed, false otherwise.\r\n         */\n\n\n        function updateAutoContentSizeChanged() {\n          if (_sleeping) return false;\n          var contentMeasureElement = getContentMeasureElement();\n          var textareaValueLength = _isTextarea && _widthAutoCache && !_textareaAutoWrappingCache ? _targetElement.val().length : 0;\n          var setCSS = !_mutationObserversConnected && _widthAutoCache && !_isTextarea;\n          var css = {};\n          var float;\n          var bodyMinSizeC;\n          var changed;\n          var contentElementScrollSize;\n\n          if (setCSS) {\n            float = _contentElement.css(_strFloat);\n            css[_strFloat] = _isRTL ? _strRight : _strLeft;\n            css[_strWidth] = _strAuto;\n\n            _contentElement.css(css);\n          }\n\n          contentElementScrollSize = {\n            w: contentMeasureElement[LEXICON.sW] + textareaValueLength,\n            h: contentMeasureElement[LEXICON.sH] + textareaValueLength\n          };\n\n          if (setCSS) {\n            css[_strFloat] = float;\n            css[_strWidth] = _strHundredPercent;\n\n            _contentElement.css(css);\n          }\n\n          bodyMinSizeC = bodyMinSizeChanged();\n          changed = checkCache(contentElementScrollSize, _contentElementScrollSizeChangeDetectedCache);\n          _contentElementScrollSizeChangeDetectedCache = contentElementScrollSize;\n          return changed || bodyMinSizeC;\n        }\n        /**\r\n         * Returns true when a attribute which the MutationObserver would observe has changed.  \r\n         * @returns {boolean} True if one of the attributes which a MutationObserver would observe has changed, false or undefined otherwise.\r\n         */\n\n\n        function meaningfulAttrsChanged() {\n          if (_sleeping || _mutationObserversConnected) return;\n          var elem;\n          var curr;\n          var cache;\n          var changedAttrs = [];\n          var checks = [{\n            _elem: _hostElement,\n            _attrs: _mutationObserverAttrsHost.concat(':visible')\n          }, {\n            _elem: _isTextarea ? _targetElement : undefined$1,\n            _attrs: _mutationObserverAttrsTextarea\n          }];\n          each(checks, function (index, check) {\n            elem = check._elem;\n\n            if (elem) {\n              each(check._attrs, function (index, attr) {\n                curr = attr.charAt(0) === ':' ? elem.is(attr) : elem.attr(attr);\n                cache = _updateAutoCache[attr];\n\n                if (checkCache(curr, cache)) {\n                  changedAttrs.push(attr);\n                }\n\n                _updateAutoCache[attr] = curr;\n              });\n            }\n          });\n          updateViewportAttrsFromTarget(changedAttrs);\n          return changedAttrs[LEXICON.l] > 0;\n        }\n        /**\r\n         * Checks is a CSS Property of a child element is affecting the scroll size of the content.\r\n         * @param propertyName The CSS property name.\r\n         * @returns {boolean} True if the property is affecting the content scroll size, false otherwise.\r\n         */\n\n\n        function isSizeAffectingCSSProperty(propertyName) {\n          if (!_initialized) return true;\n          var flexGrow = 'flex-grow';\n          var flexShrink = 'flex-shrink';\n          var flexBasis = 'flex-basis';\n          var affectingPropsX = [_strWidth, _strMinMinus + _strWidth, _strMaxMinus + _strWidth, _strMarginMinus + _strLeft, _strMarginMinus + _strRight, _strLeft, _strRight, 'font-weight', 'word-spacing', flexGrow, flexShrink, flexBasis];\n          var affectingPropsXContentBox = [_strPaddingMinus + _strLeft, _strPaddingMinus + _strRight, _strBorderMinus + _strLeft + _strWidth, _strBorderMinus + _strRight + _strWidth];\n          var affectingPropsY = [_strHeight, _strMinMinus + _strHeight, _strMaxMinus + _strHeight, _strMarginMinus + _strTop, _strMarginMinus + _strBottom, _strTop, _strBottom, 'line-height', flexGrow, flexShrink, flexBasis];\n          var affectingPropsYContentBox = [_strPaddingMinus + _strTop, _strPaddingMinus + _strBottom, _strBorderMinus + _strTop + _strWidth, _strBorderMinus + _strBottom + _strWidth];\n          var _strS = 's';\n          var _strVS = 'v-s';\n          var checkX = _overflowBehaviorCache.x === _strS || _overflowBehaviorCache.x === _strVS;\n          var checkY = _overflowBehaviorCache.y === _strS || _overflowBehaviorCache.y === _strVS;\n          var sizeIsAffected = false;\n\n          var checkPropertyName = function checkPropertyName(arr, name) {\n            for (var i = 0; i < arr[LEXICON.l]; i++) {\n              if (arr[i] === name) return true;\n            }\n\n            return false;\n          };\n\n          if (checkY) {\n            sizeIsAffected = checkPropertyName(affectingPropsY, propertyName);\n            if (!sizeIsAffected && !_isBorderBox) sizeIsAffected = checkPropertyName(affectingPropsYContentBox, propertyName);\n          }\n\n          if (checkX && !sizeIsAffected) {\n            sizeIsAffected = checkPropertyName(affectingPropsX, propertyName);\n            if (!sizeIsAffected && !_isBorderBox) sizeIsAffected = checkPropertyName(affectingPropsXContentBox, propertyName);\n          }\n\n          return sizeIsAffected;\n        } //==== Update ====//\n\n        /**\r\n         * Sets the attribute values of the viewport element to the values from the target element.\r\n         * The value of a attribute is only set if the attribute is whitelisted.\r\n         * @attrs attrs The array of attributes which shall be set or undefined if all whitelisted shall be set.\r\n         */\n\n\n        function updateViewportAttrsFromTarget(attrs) {\n          attrs = attrs || _viewportAttrsFromTarget;\n          each(attrs, function (index, attr) {\n            if (COMPATIBILITY.inA(attr, _viewportAttrsFromTarget) > -1) {\n              var targetAttr = _targetElement.attr(attr);\n\n              if (type(targetAttr) == TYPES.s) {\n                _viewportElement.attr(attr, targetAttr);\n              } else {\n                _viewportElement.removeAttr(attr);\n              }\n            }\n          });\n        }\n        /**\r\n         * Updates the variables and size of the textarea element, and manages the scroll on new line or new character.\r\n         */\n\n\n        function textareaUpdate() {\n          if (!_sleeping) {\n            var wrapAttrOff = !_textareaAutoWrappingCache;\n            var minWidth = _viewportSize.w;\n            var minHeight = _viewportSize.h;\n            var css = {};\n            var doMeasure = _widthAutoCache || wrapAttrOff;\n            var origWidth;\n            var width;\n            var origHeight;\n            var height; //reset min size\n\n            css[_strMinMinus + _strWidth] = _strEmpty;\n            css[_strMinMinus + _strHeight] = _strEmpty; //set width auto\n\n            css[_strWidth] = _strAuto;\n\n            _targetElement.css(css); //measure width\n\n\n            origWidth = _targetElementNative[LEXICON.oW];\n            width = doMeasure ? MATH.max(origWidth, _targetElementNative[LEXICON.sW] - 1) : 1;\n            /*width += (_widthAutoCache ? _marginX + (!_isBorderBox ? wrapAttrOff ? 0 : _paddingX + _borderX : 0) : 0);*/\n            //set measured width\n\n            css[_strWidth] = _widthAutoCache ? _strAuto\n            /*width*/\n            : _strHundredPercent;\n            css[_strMinMinus + _strWidth] = _strHundredPercent; //set height auto\n\n            css[_strHeight] = _strAuto;\n\n            _targetElement.css(css); //measure height\n\n\n            origHeight = _targetElementNative[LEXICON.oH];\n            height = MATH.max(origHeight, _targetElementNative[LEXICON.sH] - 1); //append correct size values\n\n            css[_strWidth] = width;\n            css[_strHeight] = height;\n\n            _textareaCoverElement.css(css); //apply min width / min height to prevent textarea collapsing\n\n\n            css[_strMinMinus + _strWidth] = minWidth\n            /*+ (!_isBorderBox && _widthAutoCache ? _paddingX + _borderX : 0)*/\n            ;\n            css[_strMinMinus + _strHeight] = minHeight\n            /*+ (!_isBorderBox && _heightAutoCache ? _paddingY + _borderY : 0)*/\n            ;\n\n            _targetElement.css(css);\n\n            return {\n              _originalWidth: origWidth,\n              _originalHeight: origHeight,\n              _dynamicWidth: width,\n              _dynamicHeight: height\n            };\n          }\n        }\n        /**\r\n         * Updates the plugin and DOM to the current options.\r\n         * This method should only be called if a update is 100% required.\r\n         * @param updateHints A objects which contains hints for this update:\r\n         * {\r\n         *   _hostSizeChanged : boolean,\r\n         *   _contentSizeChanged : boolean,\r\n         *   _force : boolean,                             == preventSwallowing\r\n         *   _changedOptions : { },                        == preventSwallowing && preventSleep\r\n        *  }\r\n         */\n\n\n        function update(updateHints) {\n          clearTimeout(_swallowedUpdateTimeout);\n          updateHints = updateHints || {};\n          _swallowedUpdateHints._hostSizeChanged |= updateHints._hostSizeChanged;\n          _swallowedUpdateHints._contentSizeChanged |= updateHints._contentSizeChanged;\n          _swallowedUpdateHints._force |= updateHints._force;\n          var now = COMPATIBILITY.now();\n          var hostSizeChanged = !!_swallowedUpdateHints._hostSizeChanged;\n          var contentSizeChanged = !!_swallowedUpdateHints._contentSizeChanged;\n          var force = !!_swallowedUpdateHints._force;\n          var changedOptions = updateHints._changedOptions;\n          var swallow = _initialized && !_destroyed && !force && !changedOptions && now - _lastUpdateTime < _swallowUpdateLag && !_heightAutoCache && !_widthAutoCache;\n          var displayIsHidden;\n          if (swallow) _swallowedUpdateTimeout = setTimeout(update, _swallowUpdateLag); //abort update due to:\n          //destroyed\n          //swallowing\n          //sleeping\n          //host is hidden or has false display\n\n          if (_destroyed || swallow || _sleeping && !changedOptions || _initialized && !force && (displayIsHidden = _hostElement.is(':hidden')) || _hostElement.css('display') === 'inline') return;\n          _lastUpdateTime = now;\n          _swallowedUpdateHints = {}; //if scrollbar styling is possible and native scrollbars aren't overlaid the scrollbar styling will be applied which hides the native scrollbars completely.\n\n          if (_nativeScrollbarStyling && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\n            //native scrollbars are hidden, so change the values to zero\n            _nativeScrollbarSize.x = 0;\n            _nativeScrollbarSize.y = 0;\n          } else {\n            //refresh native scrollbar size (in case of zoom)\n            _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\n          } // Scrollbar padding is needed for firefox, because firefox hides scrollbar automatically if the size of the div is too small.\n          // The calculation: [scrollbar size +3 *3]\n          // (+3 because of possible decoration e.g. borders, margins etc., but only if native scrollbar is NOT a overlaid scrollbar)\n          // (*3 because (1)increase / (2)decrease -button and (3)resize handle)\n\n\n          _nativeScrollbarMinSize = {\n            x: (_nativeScrollbarSize.x + (_nativeScrollbarIsOverlaid.x ? 0 : 3)) * 3,\n            y: (_nativeScrollbarSize.y + (_nativeScrollbarIsOverlaid.y ? 0 : 3)) * 3\n          };\n          changedOptions = changedOptions || {}; //freezeResizeObserver(_sizeObserverElement, true);\n          //freezeResizeObserver(_sizeAutoObserverElement, true);\n\n          var checkCacheAutoForce = function checkCacheAutoForce() {\n            return checkCache.apply(this, [].slice.call(arguments).concat([force]));\n          }; //save current scroll offset\n\n\n          var currScroll = {\n            x: _viewportElement[_strScrollLeft](),\n            y: _viewportElement[_strScrollTop]()\n          };\n          var currentPreparedOptionsScrollbars = _currentPreparedOptions.scrollbars;\n          var currentPreparedOptionsTextarea = _currentPreparedOptions.textarea; //scrollbars visibility:\n\n          var scrollbarsVisibility = currentPreparedOptionsScrollbars.visibility;\n          var scrollbarsVisibilityChanged = checkCacheAutoForce(scrollbarsVisibility, _scrollbarsVisibilityCache); //scrollbars autoHide:\n\n          var scrollbarsAutoHide = currentPreparedOptionsScrollbars.autoHide;\n          var scrollbarsAutoHideChanged = checkCacheAutoForce(scrollbarsAutoHide, _scrollbarsAutoHideCache); //scrollbars click scrolling\n\n          var scrollbarsClickScrolling = currentPreparedOptionsScrollbars.clickScrolling;\n          var scrollbarsClickScrollingChanged = checkCacheAutoForce(scrollbarsClickScrolling, _scrollbarsClickScrollingCache); //scrollbars drag scrolling\n\n          var scrollbarsDragScrolling = currentPreparedOptionsScrollbars.dragScrolling;\n          var scrollbarsDragScrollingChanged = checkCacheAutoForce(scrollbarsDragScrolling, _scrollbarsDragScrollingCache); //className\n\n          var className = _currentPreparedOptions.className;\n          var classNameChanged = checkCacheAutoForce(className, _classNameCache); //resize\n\n          var resize = _currentPreparedOptions.resize;\n          var resizeChanged = checkCacheAutoForce(resize, _resizeCache) && !_isBody; //body can't be resized since the window itself acts as resize possibility.\n          //paddingAbsolute\n\n          var paddingAbsolute = _currentPreparedOptions.paddingAbsolute;\n          var paddingAbsoluteChanged = checkCacheAutoForce(paddingAbsolute, _paddingAbsoluteCache); //clipAlways\n\n          var clipAlways = _currentPreparedOptions.clipAlways;\n          var clipAlwaysChanged = checkCacheAutoForce(clipAlways, _clipAlwaysCache); //sizeAutoCapable\n\n          var sizeAutoCapable = _currentPreparedOptions.sizeAutoCapable && !_isBody; //body can never be size auto, because it shall be always as big as the viewport.\n\n          var sizeAutoCapableChanged = checkCacheAutoForce(sizeAutoCapable, _sizeAutoCapableCache); //showNativeScrollbars\n\n          var ignoreOverlayScrollbarHiding = _currentPreparedOptions.nativeScrollbarsOverlaid.showNativeScrollbars;\n          var ignoreOverlayScrollbarHidingChanged = checkCacheAutoForce(ignoreOverlayScrollbarHiding, _ignoreOverlayScrollbarHidingCache); //autoUpdate\n\n          var autoUpdate = _currentPreparedOptions.autoUpdate;\n          var autoUpdateChanged = checkCacheAutoForce(autoUpdate, _autoUpdateCache); //overflowBehavior\n\n          var overflowBehavior = _currentPreparedOptions.overflowBehavior;\n          var overflowBehaviorChanged = checkCacheAutoForce(overflowBehavior, _overflowBehaviorCache, force); //dynWidth:\n\n          var textareaDynWidth = currentPreparedOptionsTextarea.dynWidth;\n          var textareaDynWidthChanged = checkCacheAutoForce(_textareaDynWidthCache, textareaDynWidth); //dynHeight:\n\n          var textareaDynHeight = currentPreparedOptionsTextarea.dynHeight;\n          var textareaDynHeightChanged = checkCacheAutoForce(_textareaDynHeightCache, textareaDynHeight); //scrollbars visibility\n\n          _scrollbarsAutoHideNever = scrollbarsAutoHide === 'n';\n          _scrollbarsAutoHideScroll = scrollbarsAutoHide === 's';\n          _scrollbarsAutoHideMove = scrollbarsAutoHide === 'm';\n          _scrollbarsAutoHideLeave = scrollbarsAutoHide === 'l'; //scrollbars autoHideDelay\n\n          _scrollbarsAutoHideDelay = currentPreparedOptionsScrollbars.autoHideDelay; //old className\n\n          _oldClassName = _classNameCache; //resize\n\n          _resizeNone = resize === 'n';\n          _resizeBoth = resize === 'b';\n          _resizeHorizontal = resize === 'h';\n          _resizeVertical = resize === 'v'; //normalizeRTL\n\n          _normalizeRTLCache = _currentPreparedOptions.normalizeRTL; //ignore overlay scrollbar hiding\n\n          ignoreOverlayScrollbarHiding = ignoreOverlayScrollbarHiding && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y; //refresh options cache\n\n          _scrollbarsVisibilityCache = scrollbarsVisibility;\n          _scrollbarsAutoHideCache = scrollbarsAutoHide;\n          _scrollbarsClickScrollingCache = scrollbarsClickScrolling;\n          _scrollbarsDragScrollingCache = scrollbarsDragScrolling;\n          _classNameCache = className;\n          _resizeCache = resize;\n          _paddingAbsoluteCache = paddingAbsolute;\n          _clipAlwaysCache = clipAlways;\n          _sizeAutoCapableCache = sizeAutoCapable;\n          _ignoreOverlayScrollbarHidingCache = ignoreOverlayScrollbarHiding;\n          _autoUpdateCache = autoUpdate;\n          _overflowBehaviorCache = extendDeep({}, overflowBehavior);\n          _textareaDynWidthCache = textareaDynWidth;\n          _textareaDynHeightCache = textareaDynHeight;\n          _hasOverflowCache = _hasOverflowCache || {\n            x: false,\n            y: false\n          }; //set correct class name to the host element\n\n          if (classNameChanged) {\n            removeClass(_hostElement, _oldClassName + _strSpace + _classNameThemeNone);\n            addClass(_hostElement, className !== undefined$1 && className !== null && className.length > 0 ? className : _classNameThemeNone);\n          } //set correct auto Update\n\n\n          if (autoUpdateChanged) {\n            if (autoUpdate === true || autoUpdate === null && _autoUpdateRecommended) {\n              disconnectMutationObservers();\n              autoUpdateLoop.add(_base);\n            } else {\n              autoUpdateLoop.remove(_base);\n              connectMutationObservers();\n            }\n          } //activate or deactivate size auto capability\n\n\n          if (sizeAutoCapableChanged) {\n            if (sizeAutoCapable) {\n              if (_contentGlueElement) {\n                _contentGlueElement.show();\n              } else {\n                _contentGlueElement = FRAMEWORK(generateDiv(_classNameContentGlueElement));\n\n                _paddingElement.before(_contentGlueElement);\n              }\n\n              if (_sizeAutoObserverAdded) {\n                _sizeAutoObserverElement.show();\n              } else {\n                _sizeAutoObserverElement = FRAMEWORK(generateDiv(_classNameSizeAutoObserverElement));\n                _sizeAutoObserverElementNative = _sizeAutoObserverElement[0];\n\n                _contentGlueElement.before(_sizeAutoObserverElement);\n\n                var oldSize = {\n                  w: -1,\n                  h: -1\n                };\n                setupResizeObserver(_sizeAutoObserverElement, function () {\n                  var newSize = {\n                    w: _sizeAutoObserverElementNative[LEXICON.oW],\n                    h: _sizeAutoObserverElementNative[LEXICON.oH]\n                  };\n\n                  if (checkCache(newSize, oldSize)) {\n                    if (_initialized && _heightAutoCache && newSize.h > 0 || _widthAutoCache && newSize.w > 0) {\n                      update();\n                    } else if (_initialized && !_heightAutoCache && newSize.h === 0 || !_widthAutoCache && newSize.w === 0) {\n                      update();\n                    }\n                  }\n\n                  oldSize = newSize;\n                });\n                _sizeAutoObserverAdded = true; //fix heightAuto detector bug if height is fixed but contentHeight is 0.\n                //the probability this bug will ever happen is very very low, thats why its ok if we use calc which isn't supported in IE8.\n\n                if (_cssCalc !== null) _sizeAutoObserverElement.css(_strHeight, _cssCalc + '(100% + 1px)');\n              }\n            } else {\n              if (_sizeAutoObserverAdded) _sizeAutoObserverElement.hide();\n              if (_contentGlueElement) _contentGlueElement.hide();\n            }\n          } //if force, update all resizeObservers too\n\n\n          if (force) {\n            _sizeObserverElement.find('*').trigger(_strScroll);\n\n            if (_sizeAutoObserverAdded) _sizeAutoObserverElement.find('*').trigger(_strScroll);\n          } //display hidden:\n\n\n          displayIsHidden = displayIsHidden === undefined$1 ? _hostElement.is(':hidden') : displayIsHidden; //textarea AutoWrapping:\n\n          var textareaAutoWrapping = _isTextarea ? _targetElement.attr('wrap') !== 'off' : false;\n          var textareaAutoWrappingChanged = checkCacheAutoForce(textareaAutoWrapping, _textareaAutoWrappingCache); //detect direction:\n\n          var cssDirection = _hostElement.css('direction');\n\n          var cssDirectionChanged = checkCacheAutoForce(cssDirection, _cssDirectionCache); //detect box-sizing:\n\n          var boxSizing = _hostElement.css('box-sizing');\n\n          var boxSizingChanged = checkCacheAutoForce(boxSizing, _cssBoxSizingCache); //detect padding:\n\n          var padding = getTopRightBottomLeftHost(_strPaddingMinus); //width + height auto detecting var:\n\n          var sizeAutoObserverElementBCRect; //exception occurs in IE8 sometimes (unknown exception)\n\n          try {\n            sizeAutoObserverElementBCRect = _sizeAutoObserverAdded ? _sizeAutoObserverElementNative[LEXICON.bCR]() : null;\n          } catch (ex) {\n            return;\n          }\n\n          _isRTL = cssDirection === 'rtl';\n          _isBorderBox = boxSizing === 'border-box';\n          var isRTLLeft = _isRTL ? _strLeft : _strRight;\n          var isRTLRight = _isRTL ? _strRight : _strLeft; //detect width auto:\n\n          var widthAutoResizeDetection = false;\n          var widthAutoObserverDetection = _sizeAutoObserverAdded && _hostElement.css(_strFloat) !== 'none'\n          /*|| _isTextarea */\n          ? MATH.round(sizeAutoObserverElementBCRect.right - sizeAutoObserverElementBCRect.left) === 0 && (!paddingAbsolute ? _hostElementNative[LEXICON.cW] - _paddingX > 0 : true) : false;\n\n          if (sizeAutoCapable && !widthAutoObserverDetection) {\n            var tmpCurrHostWidth = _hostElementNative[LEXICON.oW];\n\n            var tmpCurrContentGlueWidth = _contentGlueElement.css(_strWidth);\n\n            _contentGlueElement.css(_strWidth, _strAuto);\n\n            var tmpNewHostWidth = _hostElementNative[LEXICON.oW];\n\n            _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\n\n            widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\n\n            if (!widthAutoResizeDetection) {\n              _contentGlueElement.css(_strWidth, tmpCurrHostWidth + 1);\n\n              tmpNewHostWidth = _hostElementNative[LEXICON.oW];\n\n              _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\n\n              widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\n            }\n          }\n\n          var widthAuto = (widthAutoObserverDetection || widthAutoResizeDetection) && sizeAutoCapable && !displayIsHidden;\n          var widthAutoChanged = checkCacheAutoForce(widthAuto, _widthAutoCache);\n          var wasWidthAuto = !widthAuto && _widthAutoCache; //detect height auto:\n\n          var heightAuto = _sizeAutoObserverAdded && sizeAutoCapable && !displayIsHidden ? MATH.round(sizeAutoObserverElementBCRect.bottom - sizeAutoObserverElementBCRect.top) === 0\n          /* && (!paddingAbsolute && (_msieVersion > 9 || !_msieVersion) ? true : true) */\n          : false;\n          var heightAutoChanged = checkCacheAutoForce(heightAuto, _heightAutoCache);\n          var wasHeightAuto = !heightAuto && _heightAutoCache; //detect border:\n          //we need the border only if border box and auto size\n\n          var updateBorderX = widthAuto && _isBorderBox || !_isBorderBox;\n          var updateBorderY = heightAuto && _isBorderBox || !_isBorderBox;\n          var border = getTopRightBottomLeftHost(_strBorderMinus, '-' + _strWidth, !updateBorderX, !updateBorderY); //detect margin:\n\n          var margin = getTopRightBottomLeftHost(_strMarginMinus); //vars to apply correct css\n\n          var contentElementCSS = {};\n          var contentGlueElementCSS = {}; //funcs\n\n          var getHostSize = function getHostSize() {\n            //has to be clientSize because offsetSize respect borders\n            return {\n              w: _hostElementNative[LEXICON.cW],\n              h: _hostElementNative[LEXICON.cH]\n            };\n          };\n\n          var getViewportSize = function getViewportSize() {\n            //viewport size is padding container because it never has padding, margin and a border\n            //determine zoom rounding error -> sometimes scrollWidth/Height is smaller than clientWidth/Height\n            //if this happens add the difference to the viewportSize to compensate the rounding error\n            return {\n              w: _paddingElementNative[LEXICON.oW] + MATH.max(0, _contentElementNative[LEXICON.cW] - _contentElementNative[LEXICON.sW]),\n              h: _paddingElementNative[LEXICON.oH] + MATH.max(0, _contentElementNative[LEXICON.cH] - _contentElementNative[LEXICON.sH])\n            };\n          }; //set info for padding\n\n\n          var paddingAbsoluteX = _paddingX = padding.l + padding.r;\n          var paddingAbsoluteY = _paddingY = padding.t + padding.b;\n          paddingAbsoluteX *= paddingAbsolute ? 1 : 0;\n          paddingAbsoluteY *= paddingAbsolute ? 1 : 0;\n          padding.c = checkCacheAutoForce(padding, _cssPaddingCache); //set info for border\n\n          _borderX = border.l + border.r;\n          _borderY = border.t + border.b;\n          border.c = checkCacheAutoForce(border, _cssBorderCache); //set info for margin\n\n          _marginX = margin.l + margin.r;\n          _marginY = margin.t + margin.b;\n          margin.c = checkCacheAutoForce(margin, _cssMarginCache); //refresh cache\n\n          _textareaAutoWrappingCache = textareaAutoWrapping;\n          _cssDirectionCache = cssDirection;\n          _cssBoxSizingCache = boxSizing;\n          _widthAutoCache = widthAuto;\n          _heightAutoCache = heightAuto;\n          _cssPaddingCache = padding;\n          _cssBorderCache = border;\n          _cssMarginCache = margin; //IEFix direction changed\n\n          if (cssDirectionChanged && _sizeAutoObserverAdded) _sizeAutoObserverElement.css(_strFloat, isRTLRight); //apply padding:\n\n          if (padding.c || cssDirectionChanged || paddingAbsoluteChanged || widthAutoChanged || heightAutoChanged || boxSizingChanged || sizeAutoCapableChanged) {\n            var paddingElementCSS = {};\n            var textareaCSS = {};\n            var paddingValues = [padding.t, padding.r, padding.b, padding.l];\n            setTopRightBottomLeft(contentGlueElementCSS, _strMarginMinus, [-padding.t, -padding.r, -padding.b, -padding.l]);\n\n            if (paddingAbsolute) {\n              setTopRightBottomLeft(paddingElementCSS, _strEmpty, paddingValues);\n              setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus);\n            } else {\n              setTopRightBottomLeft(paddingElementCSS, _strEmpty);\n              setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus, paddingValues);\n            }\n\n            _paddingElement.css(paddingElementCSS);\n\n            _targetElement.css(textareaCSS);\n          } //viewport size is padding container because it never has padding, margin and a border.\n\n\n          _viewportSize = getViewportSize(); //update Textarea\n\n          var textareaSize = _isTextarea ? textareaUpdate() : false;\n\n          var textareaSizeChanged = _isTextarea && checkCacheAutoForce(textareaSize, _textareaSizeCache);\n\n          var textareaDynOrigSize = _isTextarea && textareaSize ? {\n            w: textareaDynWidth ? textareaSize._dynamicWidth : textareaSize._originalWidth,\n            h: textareaDynHeight ? textareaSize._dynamicHeight : textareaSize._originalHeight\n          } : {};\n          _textareaSizeCache = textareaSize; //fix height auto / width auto in cooperation with current padding & boxSizing behavior:\n\n          if (heightAuto && (heightAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c)) {\n            contentElementCSS[_strHeight] = _strAuto;\n          } else if (heightAutoChanged || paddingAbsoluteChanged) {\n            contentElementCSS[_strHeight] = _strHundredPercent;\n          }\n\n          if (widthAuto && (widthAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c || cssDirectionChanged)) {\n            contentElementCSS[_strWidth] = _strAuto;\n            contentGlueElementCSS[_strMaxMinus + _strWidth] = _strHundredPercent; //IE Fix\n          } else if (widthAutoChanged || paddingAbsoluteChanged) {\n            contentElementCSS[_strWidth] = _strHundredPercent;\n            contentElementCSS[_strFloat] = _strEmpty;\n            contentGlueElementCSS[_strMaxMinus + _strWidth] = _strEmpty; //IE Fix\n          }\n\n          if (widthAuto) {\n            //textareaDynOrigSize.w || _strAuto :: doesnt works because applied margin will shift width\n            contentGlueElementCSS[_strWidth] = _strAuto;\n            contentElementCSS[_strWidth] = VENDORS._cssPropertyValue(_strWidth, 'max-content intrinsic') || _strAuto;\n            contentElementCSS[_strFloat] = isRTLRight;\n          } else {\n            contentGlueElementCSS[_strWidth] = _strEmpty;\n          }\n\n          if (heightAuto) {\n            //textareaDynOrigSize.h || _contentElementNative[LEXICON.cH] :: use for anti scroll jumping\n            contentGlueElementCSS[_strHeight] = textareaDynOrigSize.h || _contentElementNative[LEXICON.cH];\n          } else {\n            contentGlueElementCSS[_strHeight] = _strEmpty;\n          }\n\n          if (sizeAutoCapable) _contentGlueElement.css(contentGlueElementCSS);\n\n          _contentElement.css(contentElementCSS); //CHECKPOINT HERE ~\n\n\n          contentElementCSS = {};\n          contentGlueElementCSS = {}; //if [content(host) client / scroll size, or target element direction, or content(host) max-sizes] changed, or force is true\n\n          if (hostSizeChanged || contentSizeChanged || textareaSizeChanged || cssDirectionChanged || boxSizingChanged || paddingAbsoluteChanged || widthAutoChanged || widthAuto || heightAutoChanged || heightAuto || ignoreOverlayScrollbarHidingChanged || overflowBehaviorChanged || clipAlwaysChanged || resizeChanged || scrollbarsVisibilityChanged || scrollbarsAutoHideChanged || scrollbarsDragScrollingChanged || scrollbarsClickScrollingChanged || textareaDynWidthChanged || textareaDynHeightChanged || textareaAutoWrappingChanged) {\n            var strOverflow = 'overflow';\n            var strOverflowX = strOverflow + '-x';\n            var strOverflowY = strOverflow + '-y';\n            var strHidden = 'hidden';\n            var strVisible = 'visible'; //Reset the viewport (very important for natively overlaid scrollbars and zoom change\n            //don't change the overflow prop as it is very expensive and affects performance !A LOT!\n\n            if (!_nativeScrollbarStyling) {\n              var viewportElementResetCSS = {};\n              var resetXTmp = _hasOverflowCache.y && _hideOverflowCache.ys && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.y ? _viewportElement.css(isRTLLeft) : -_nativeScrollbarSize.y : 0;\n              var resetBottomTmp = _hasOverflowCache.x && _hideOverflowCache.xs && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.x ? _viewportElement.css(_strBottom) : -_nativeScrollbarSize.x : 0;\n              setTopRightBottomLeft(viewportElementResetCSS, _strEmpty);\n\n              _viewportElement.css(viewportElementResetCSS);\n            } //measure several sizes:\n\n\n            var contentMeasureElement = getContentMeasureElement(); //in Firefox content element has to have overflow hidden, else element margins aren't calculated properly, this element prevents this bug, but only if scrollbars aren't overlaid\n\n            var contentSize = {\n              //use clientSize because natively overlaidScrollbars add borders\n              w: textareaDynOrigSize.w || contentMeasureElement[LEXICON.cW],\n              h: textareaDynOrigSize.h || contentMeasureElement[LEXICON.cH]\n            };\n            var scrollSize = {\n              w: contentMeasureElement[LEXICON.sW],\n              h: contentMeasureElement[LEXICON.sH]\n            }; //apply the correct viewport style and measure viewport size\n\n            if (!_nativeScrollbarStyling) {\n              viewportElementResetCSS[_strBottom] = wasHeightAuto ? _strEmpty : resetBottomTmp;\n              viewportElementResetCSS[isRTLLeft] = wasWidthAuto ? _strEmpty : resetXTmp;\n\n              _viewportElement.css(viewportElementResetCSS);\n            }\n\n            _viewportSize = getViewportSize(); //measure and correct several sizes\n\n            var hostSize = getHostSize();\n            var hostAbsoluteRectSize = {\n              w: hostSize.w - _marginX - _borderX - (_isBorderBox ? 0 : _paddingX),\n              h: hostSize.h - _marginY - _borderY - (_isBorderBox ? 0 : _paddingY)\n            };\n            var contentGlueSize = {\n              //client/scrollSize + AbsolutePadding -> because padding is only applied to the paddingElement if its absolute, so you have to add it manually\n              //hostSize is clientSize -> so padding should be added manually, right? FALSE! Because content glue is inside hostElement, so we don't have to worry about padding\n              w: MATH.max((widthAuto ? contentSize.w : scrollSize.w) + paddingAbsoluteX, hostAbsoluteRectSize.w),\n              h: MATH.max((heightAuto ? contentSize.h : scrollSize.h) + paddingAbsoluteY, hostAbsoluteRectSize.h)\n            };\n            contentGlueSize.c = checkCacheAutoForce(contentGlueSize, _contentGlueSizeCache);\n            _contentGlueSizeCache = contentGlueSize; //apply correct contentGlue size\n\n            if (sizeAutoCapable) {\n              //size contentGlue correctly to make sure the element has correct size if the sizing switches to auto\n              if (contentGlueSize.c || heightAuto || widthAuto) {\n                contentGlueElementCSS[_strWidth] = contentGlueSize.w;\n                contentGlueElementCSS[_strHeight] = contentGlueSize.h; //textarea-sizes are already calculated correctly at this point\n\n                if (!_isTextarea) {\n                  contentSize = {\n                    //use clientSize because natively overlaidScrollbars add borders\n                    w: contentMeasureElement[LEXICON.cW],\n                    h: contentMeasureElement[LEXICON.cH]\n                  };\n                }\n              }\n\n              var textareaCoverCSS = {};\n\n              var setContentGlueElementCSSfunction = function setContentGlueElementCSSfunction(horizontal) {\n                var scrollbarVars = getScrollbarVars(horizontal);\n                var wh = scrollbarVars._w_h;\n                var strWH = scrollbarVars._width_height;\n                var autoSize = horizontal ? widthAuto : heightAuto;\n                var borderSize = horizontal ? _borderX : _borderY;\n                var paddingSize = horizontal ? _paddingX : _paddingY;\n                var marginSize = horizontal ? _marginX : _marginY;\n                var viewportSize = _viewportSize[wh] - borderSize - marginSize - (_isBorderBox ? 0 : paddingSize); //make contentGlue size -1 if element is not auto sized, to make sure that a resize event happens when the element shrinks\n\n                if (!autoSize || !autoSize && border.c) contentGlueElementCSS[strWH] = hostAbsoluteRectSize[wh] - 1; //if size is auto and host is smaller than size as min size, make content glue size -1 to make sure size changes will be detected (this is only needed if padding is 0)\n\n                if (autoSize && contentSize[wh] < viewportSize && (horizontal && _isTextarea ? !textareaAutoWrapping : true)) {\n                  if (_isTextarea) textareaCoverCSS[strWH] = parseToZeroOrNumber(_textareaCoverElement.css(strWH)) - 1;\n                  contentGlueElementCSS[strWH] -= 1;\n                } //make sure content glue size is at least 1\n\n\n                if (contentSize[wh] > 0) contentGlueElementCSS[strWH] = MATH.max(1, contentGlueElementCSS[strWH]);\n              };\n\n              setContentGlueElementCSSfunction(true);\n              setContentGlueElementCSSfunction(false);\n              if (_isTextarea) _textareaCoverElement.css(textareaCoverCSS);\n\n              _contentGlueElement.css(contentGlueElementCSS);\n            }\n\n            if (widthAuto) contentElementCSS[_strWidth] = _strHundredPercent;\n            if (widthAuto && !_isBorderBox && !_mutationObserversConnected) contentElementCSS[_strFloat] = 'none'; //apply and reset content style\n\n            _contentElement.css(contentElementCSS);\n\n            contentElementCSS = {}; //measure again, but this time all correct sizes:\n\n            var contentScrollSize = {\n              w: contentMeasureElement[LEXICON.sW],\n              h: contentMeasureElement[LEXICON.sH]\n            };\n            contentScrollSize.c = contentSizeChanged = checkCacheAutoForce(contentScrollSize, _contentScrollSizeCache);\n            _contentScrollSizeCache = contentScrollSize; //refresh viewport size after correct measuring\n\n            _viewportSize = getViewportSize();\n            hostSize = getHostSize();\n            hostSizeChanged = checkCacheAutoForce(hostSize, _hostSizeCache);\n            _hostSizeCache = hostSize;\n            var hideOverflowForceTextarea = _isTextarea && (_viewportSize.w === 0 || _viewportSize.h === 0);\n            var previousOverflowAmount = _overflowAmountCache;\n            var overflowBehaviorIsVS = {};\n            var overflowBehaviorIsVH = {};\n            var overflowBehaviorIsS = {};\n            var overflowAmount = {};\n            var hasOverflow = {};\n            var hideOverflow = {};\n            var canScroll = {};\n\n            var viewportRect = _paddingElementNative[LEXICON.bCR]();\n\n            var setOverflowVariables = function setOverflowVariables(horizontal) {\n              var scrollbarVars = getScrollbarVars(horizontal);\n              var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n              var xyI = scrollbarVarsInverted._x_y;\n              var xy = scrollbarVars._x_y;\n              var wh = scrollbarVars._w_h;\n              var widthHeight = scrollbarVars._width_height;\n              var scrollMax = _strScroll + scrollbarVars._Left_Top + 'Max';\n              var fractionalOverflowAmount = viewportRect[widthHeight] ? MATH.abs(viewportRect[widthHeight] - _viewportSize[wh]) : 0;\n              var checkFractionalOverflowAmount = previousOverflowAmount && previousOverflowAmount[xy] > 0 && _viewportElementNative[scrollMax] === 0;\n              overflowBehaviorIsVS[xy] = overflowBehavior[xy] === 'v-s';\n              overflowBehaviorIsVH[xy] = overflowBehavior[xy] === 'v-h';\n              overflowBehaviorIsS[xy] = overflowBehavior[xy] === 's';\n              overflowAmount[xy] = MATH.max(0, MATH.round((contentScrollSize[wh] - _viewportSize[wh]) * 100) / 100);\n              overflowAmount[xy] *= hideOverflowForceTextarea || checkFractionalOverflowAmount && fractionalOverflowAmount > 0 && fractionalOverflowAmount < 1 ? 0 : 1;\n              hasOverflow[xy] = overflowAmount[xy] > 0; //hideOverflow:\n              //x || y : true === overflow is hidden by \"overflow: scroll\" OR \"overflow: hidden\"\n              //xs || ys : true === overflow is hidden by \"overflow: scroll\"\n\n              hideOverflow[xy] = overflowBehaviorIsVS[xy] || overflowBehaviorIsVH[xy] ? hasOverflow[xyI] && !overflowBehaviorIsVS[xyI] && !overflowBehaviorIsVH[xyI] : hasOverflow[xy];\n              hideOverflow[xy + 's'] = hideOverflow[xy] ? overflowBehaviorIsS[xy] || overflowBehaviorIsVS[xy] : false;\n              canScroll[xy] = hasOverflow[xy] && hideOverflow[xy + 's'];\n            };\n\n            setOverflowVariables(true);\n            setOverflowVariables(false);\n            overflowAmount.c = checkCacheAutoForce(overflowAmount, _overflowAmountCache);\n            _overflowAmountCache = overflowAmount;\n            hasOverflow.c = checkCacheAutoForce(hasOverflow, _hasOverflowCache);\n            _hasOverflowCache = hasOverflow;\n            hideOverflow.c = checkCacheAutoForce(hideOverflow, _hideOverflowCache);\n            _hideOverflowCache = hideOverflow; //if native scrollbar is overlay at x OR y axis, prepare DOM\n\n            if (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) {\n              var borderDesign = 'px solid transparent';\n              var contentArrangeElementCSS = {};\n              var arrangeContent = {};\n              var arrangeChanged = force;\n              var setContentElementCSS;\n\n              if (hasOverflow.x || hasOverflow.y) {\n                arrangeContent.w = _nativeScrollbarIsOverlaid.y && hasOverflow.y ? contentScrollSize.w + _overlayScrollbarDummySize.y : _strEmpty;\n                arrangeContent.h = _nativeScrollbarIsOverlaid.x && hasOverflow.x ? contentScrollSize.h + _overlayScrollbarDummySize.x : _strEmpty;\n                arrangeChanged = checkCacheAutoForce(arrangeContent, _arrangeContentSizeCache);\n                _arrangeContentSizeCache = arrangeContent;\n              }\n\n              if (hasOverflow.c || hideOverflow.c || contentScrollSize.c || cssDirectionChanged || widthAutoChanged || heightAutoChanged || widthAuto || heightAuto || ignoreOverlayScrollbarHidingChanged) {\n                contentElementCSS[_strMarginMinus + isRTLRight] = contentElementCSS[_strBorderMinus + isRTLRight] = _strEmpty;\n\n                setContentElementCSS = function setContentElementCSS(horizontal) {\n                  var scrollbarVars = getScrollbarVars(horizontal);\n                  var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n                  var xy = scrollbarVars._x_y;\n                  var strDirection = horizontal ? _strBottom : isRTLLeft;\n                  var invertedAutoSize = horizontal ? heightAuto : widthAuto;\n\n                  if (_nativeScrollbarIsOverlaid[xy] && hasOverflow[xy] && hideOverflow[xy + 's']) {\n                    contentElementCSS[_strMarginMinus + strDirection] = invertedAutoSize ? ignoreOverlayScrollbarHiding ? _strEmpty : _overlayScrollbarDummySize[xy] : _strEmpty;\n                    contentElementCSS[_strBorderMinus + strDirection] = (horizontal ? !invertedAutoSize : true) && !ignoreOverlayScrollbarHiding ? _overlayScrollbarDummySize[xy] + borderDesign : _strEmpty;\n                  } else {\n                    arrangeContent[scrollbarVarsInverted._w_h] = contentElementCSS[_strMarginMinus + strDirection] = contentElementCSS[_strBorderMinus + strDirection] = _strEmpty;\n                    arrangeChanged = true;\n                  }\n                };\n\n                if (_nativeScrollbarStyling) {\n                  addRemoveClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible, !ignoreOverlayScrollbarHiding);\n                } else {\n                  setContentElementCSS(true);\n                  setContentElementCSS(false);\n                }\n              }\n\n              if (ignoreOverlayScrollbarHiding) {\n                arrangeContent.w = arrangeContent.h = _strEmpty;\n                arrangeChanged = true;\n              }\n\n              if (arrangeChanged && !_nativeScrollbarStyling) {\n                contentArrangeElementCSS[_strWidth] = hideOverflow.y ? arrangeContent.w : _strEmpty;\n                contentArrangeElementCSS[_strHeight] = hideOverflow.x ? arrangeContent.h : _strEmpty;\n\n                if (!_contentArrangeElement) {\n                  _contentArrangeElement = FRAMEWORK(generateDiv(_classNameContentArrangeElement));\n\n                  _viewportElement.prepend(_contentArrangeElement);\n                }\n\n                _contentArrangeElement.css(contentArrangeElementCSS);\n              }\n\n              _contentElement.css(contentElementCSS);\n            }\n\n            var viewportElementCSS = {};\n            var paddingElementCSS = {};\n            var setViewportCSS;\n\n            if (hostSizeChanged || hasOverflow.c || hideOverflow.c || contentScrollSize.c || overflowBehaviorChanged || boxSizingChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged || clipAlwaysChanged || heightAutoChanged) {\n              viewportElementCSS[isRTLRight] = _strEmpty;\n\n              setViewportCSS = function setViewportCSS(horizontal) {\n                var scrollbarVars = getScrollbarVars(horizontal);\n                var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n                var xy = scrollbarVars._x_y;\n                var XY = scrollbarVars._X_Y;\n                var strDirection = horizontal ? _strBottom : isRTLLeft;\n\n                var reset = function reset() {\n                  viewportElementCSS[strDirection] = _strEmpty;\n                  _contentBorderSize[scrollbarVarsInverted._w_h] = 0;\n                };\n\n                if (hasOverflow[xy] && hideOverflow[xy + 's']) {\n                  viewportElementCSS[strOverflow + XY] = _strScroll;\n\n                  if (ignoreOverlayScrollbarHiding || _nativeScrollbarStyling) {\n                    reset();\n                  } else {\n                    viewportElementCSS[strDirection] = -(_nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[xy] : _nativeScrollbarSize[xy]);\n                    _contentBorderSize[scrollbarVarsInverted._w_h] = _nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[scrollbarVarsInverted._x_y] : 0;\n                  }\n                } else {\n                  viewportElementCSS[strOverflow + XY] = _strEmpty;\n                  reset();\n                }\n              };\n\n              setViewportCSS(true);\n              setViewportCSS(false); // if the scroll container is too small and if there is any overflow with no overlay scrollbar (and scrollbar styling isn't possible), \n              // make viewport element greater in size (Firefox hide Scrollbars fix)\n              // because firefox starts hiding scrollbars on too small elements\n              // with this behavior the overflow calculation may be incorrect or the scrollbars would appear suddenly\n              // https://bugzilla.mozilla.org/show_bug.cgi?id=292284\n\n              if (!_nativeScrollbarStyling && (_viewportSize.h < _nativeScrollbarMinSize.x || _viewportSize.w < _nativeScrollbarMinSize.y) && (hasOverflow.x && hideOverflow.x && !_nativeScrollbarIsOverlaid.x || hasOverflow.y && hideOverflow.y && !_nativeScrollbarIsOverlaid.y)) {\n                viewportElementCSS[_strPaddingMinus + _strTop] = _nativeScrollbarMinSize.x;\n                viewportElementCSS[_strMarginMinus + _strTop] = -_nativeScrollbarMinSize.x;\n                viewportElementCSS[_strPaddingMinus + isRTLRight] = _nativeScrollbarMinSize.y;\n                viewportElementCSS[_strMarginMinus + isRTLRight] = -_nativeScrollbarMinSize.y;\n              } else {\n                viewportElementCSS[_strPaddingMinus + _strTop] = viewportElementCSS[_strMarginMinus + _strTop] = viewportElementCSS[_strPaddingMinus + isRTLRight] = viewportElementCSS[_strMarginMinus + isRTLRight] = _strEmpty;\n              }\n\n              viewportElementCSS[_strPaddingMinus + isRTLLeft] = viewportElementCSS[_strMarginMinus + isRTLLeft] = _strEmpty; //if there is any overflow (x OR y axis) and this overflow shall be hidden, make overflow hidden, else overflow visible\n\n              if (hasOverflow.x && hideOverflow.x || hasOverflow.y && hideOverflow.y || hideOverflowForceTextarea) {\n                //only hide if is Textarea\n                if (_isTextarea && hideOverflowForceTextarea) {\n                  paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = strHidden;\n                }\n              } else {\n                if (!clipAlways || overflowBehaviorIsVH.x || overflowBehaviorIsVS.x || overflowBehaviorIsVH.y || overflowBehaviorIsVS.y) {\n                  //only un-hide if Textarea\n                  if (_isTextarea) {\n                    paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = _strEmpty;\n                  }\n\n                  viewportElementCSS[strOverflowX] = viewportElementCSS[strOverflowY] = strVisible;\n                }\n              }\n\n              _paddingElement.css(paddingElementCSS);\n\n              _viewportElement.css(viewportElementCSS);\n\n              viewportElementCSS = {}; //force soft redraw in webkit because without the scrollbars will may appear because DOM wont be redrawn under special conditions\n\n              if ((hasOverflow.c || boxSizingChanged || widthAutoChanged || heightAutoChanged) && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\n                var elementStyle = _contentElementNative[LEXICON.s];\n                elementStyle.webkitTransform = 'scale(1)';\n                elementStyle.display = 'run-in';\n                elementStyle.display = _strEmpty; //|| dump; //use dump to prevent it from deletion if minify\n\n                elementStyle.webkitTransform = _strEmpty;\n              }\n              /*\r\n              //force hard redraw in webkit if native overlaid scrollbars shall appear\r\n              if (ignoreOverlayScrollbarHidingChanged && ignoreOverlayScrollbarHiding) {\r\n                  _hostElement.hide();\r\n                  var dump = _hostElementNative[LEXICON.oH];\r\n                  _hostElement.show();\r\n              }\r\n              */\n\n            } //change to direction RTL and width auto Bugfix in Webkit\n            //without this fix, the DOM still thinks the scrollbar is LTR and thus the content is shifted to the left\n\n\n            contentElementCSS = {};\n\n            if (cssDirectionChanged || widthAutoChanged || heightAutoChanged) {\n              if (_isRTL && widthAuto) {\n                var floatTmp = _contentElement.css(_strFloat);\n\n                var posLeftWithoutFloat = MATH.round(_contentElement.css(_strFloat, _strEmpty).css(_strLeft, _strEmpty).position().left);\n\n                _contentElement.css(_strFloat, floatTmp);\n\n                var posLeftWithFloat = MATH.round(_contentElement.position().left);\n                if (posLeftWithoutFloat !== posLeftWithFloat) contentElementCSS[_strLeft] = posLeftWithoutFloat;\n              } else {\n                contentElementCSS[_strLeft] = _strEmpty;\n              }\n            }\n\n            _contentElement.css(contentElementCSS); //handle scroll position\n\n\n            if (_isTextarea && contentSizeChanged) {\n              var textareaInfo = getTextareaInfo();\n\n              if (textareaInfo) {\n                var textareaRowsChanged = _textareaInfoCache === undefined$1 ? true : textareaInfo._rows !== _textareaInfoCache._rows;\n                var cursorRow = textareaInfo._cursorRow;\n                var cursorCol = textareaInfo._cursorColumn;\n                var widestRow = textareaInfo._widestRow;\n                var lastRow = textareaInfo._rows;\n                var lastCol = textareaInfo._columns;\n                var cursorPos = textareaInfo._cursorPosition;\n                var cursorMax = textareaInfo._cursorMax;\n                var cursorIsLastPosition = cursorPos >= cursorMax && _textareaHasFocus;\n                var textareaScrollAmount = {\n                  x: !textareaAutoWrapping && cursorCol === lastCol && cursorRow === widestRow ? _overflowAmountCache.x : -1,\n                  y: (textareaAutoWrapping ? cursorIsLastPosition || textareaRowsChanged && (previousOverflowAmount ? currScroll.y === previousOverflowAmount.y : false) : (cursorIsLastPosition || textareaRowsChanged) && cursorRow === lastRow) ? _overflowAmountCache.y : -1\n                };\n                currScroll.x = textareaScrollAmount.x > -1 ? _isRTL && _normalizeRTLCache && _rtlScrollBehavior.i ? 0 : textareaScrollAmount.x : currScroll.x; //if inverted, scroll to 0 -> normalized this means to max scroll offset.\n\n                currScroll.y = textareaScrollAmount.y > -1 ? textareaScrollAmount.y : currScroll.y;\n              }\n\n              _textareaInfoCache = textareaInfo;\n            }\n\n            if (_isRTL && _rtlScrollBehavior.i && _nativeScrollbarIsOverlaid.y && hasOverflow.x && _normalizeRTLCache) currScroll.x += _contentBorderSize.w || 0;\n            if (widthAuto) _hostElement[_strScrollLeft](0);\n            if (heightAuto) _hostElement[_strScrollTop](0);\n\n            _viewportElement[_strScrollLeft](currScroll.x)[_strScrollTop](currScroll.y); //scrollbars management:\n\n\n            var scrollbarsVisibilityVisible = scrollbarsVisibility === 'v';\n            var scrollbarsVisibilityHidden = scrollbarsVisibility === 'h';\n            var scrollbarsVisibilityAuto = scrollbarsVisibility === 'a';\n\n            var refreshScrollbarsVisibility = function refreshScrollbarsVisibility(showX, showY) {\n              showY = showY === undefined$1 ? showX : showY;\n              refreshScrollbarAppearance(true, showX, canScroll.x);\n              refreshScrollbarAppearance(false, showY, canScroll.y);\n            }; //manage class name which indicates scrollable overflow\n\n\n            addRemoveClass(_hostElement, _classNameHostOverflow, hideOverflow.x || hideOverflow.y);\n            addRemoveClass(_hostElement, _classNameHostOverflowX, hideOverflow.x);\n            addRemoveClass(_hostElement, _classNameHostOverflowY, hideOverflow.y); //add or remove rtl class name for styling purposes except when its body, then the scrollbar stays\n\n            if (cssDirectionChanged && !_isBody) {\n              addRemoveClass(_hostElement, _classNameHostRTL, _isRTL);\n            } //manage the resize feature (CSS3 resize \"polyfill\" for this plugin)\n\n\n            if (_isBody) addClass(_hostElement, _classNameHostResizeDisabled);\n\n            if (resizeChanged) {\n              addRemoveClass(_hostElement, _classNameHostResizeDisabled, _resizeNone);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResize, !_resizeNone);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeB, _resizeBoth);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeH, _resizeHorizontal);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeV, _resizeVertical);\n            } //manage the scrollbars general visibility + the scrollbar interactivity (unusable class name)\n\n\n            if (scrollbarsVisibilityChanged || overflowBehaviorChanged || hideOverflow.c || hasOverflow.c || ignoreOverlayScrollbarHidingChanged) {\n              if (ignoreOverlayScrollbarHiding) {\n                if (ignoreOverlayScrollbarHidingChanged) {\n                  removeClass(_hostElement, _classNameHostScrolling);\n\n                  if (ignoreOverlayScrollbarHiding) {\n                    refreshScrollbarsVisibility(false);\n                  }\n                }\n              } else if (scrollbarsVisibilityAuto) {\n                refreshScrollbarsVisibility(canScroll.x, canScroll.y);\n              } else if (scrollbarsVisibilityVisible) {\n                refreshScrollbarsVisibility(true);\n              } else if (scrollbarsVisibilityHidden) {\n                refreshScrollbarsVisibility(false);\n              }\n            } //manage the scrollbars auto hide feature (auto hide them after specific actions)\n\n\n            if (scrollbarsAutoHideChanged || ignoreOverlayScrollbarHidingChanged) {\n              setupHostMouseTouchEvents(!_scrollbarsAutoHideLeave && !_scrollbarsAutoHideMove);\n              refreshScrollbarsAutoHide(_scrollbarsAutoHideNever, !_scrollbarsAutoHideNever);\n            } //manage scrollbars handle length & offset - don't remove!\n\n\n            if (hostSizeChanged || overflowAmount.c || heightAutoChanged || widthAutoChanged || resizeChanged || boxSizingChanged || paddingAbsoluteChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged) {\n              refreshScrollbarHandleLength(true);\n              refreshScrollbarHandleOffset(true);\n              refreshScrollbarHandleLength(false);\n              refreshScrollbarHandleOffset(false);\n            } //manage interactivity\n\n\n            if (scrollbarsClickScrollingChanged) refreshScrollbarsInteractive(true, scrollbarsClickScrolling);\n            if (scrollbarsDragScrollingChanged) refreshScrollbarsInteractive(false, scrollbarsDragScrolling); //callbacks:\n\n            dispatchCallback('onDirectionChanged', {\n              isRTL: _isRTL,\n              dir: cssDirection\n            }, cssDirectionChanged);\n            dispatchCallback('onHostSizeChanged', {\n              width: _hostSizeCache.w,\n              height: _hostSizeCache.h\n            }, hostSizeChanged);\n            dispatchCallback('onContentSizeChanged', {\n              width: _contentScrollSizeCache.w,\n              height: _contentScrollSizeCache.h\n            }, contentSizeChanged);\n            dispatchCallback('onOverflowChanged', {\n              x: hasOverflow.x,\n              y: hasOverflow.y,\n              xScrollable: hideOverflow.xs,\n              yScrollable: hideOverflow.ys,\n              clipped: hideOverflow.x || hideOverflow.y\n            }, hasOverflow.c || hideOverflow.c);\n            dispatchCallback('onOverflowAmountChanged', {\n              x: overflowAmount.x,\n              y: overflowAmount.y\n            }, overflowAmount.c);\n          } //fix body min size\n\n\n          if (_isBody && _bodyMinSizeCache && (_hasOverflowCache.c || _bodyMinSizeCache.c)) {\n            //its possible that no min size was measured until now, because the content arrange element was just added now, in this case, measure now the min size.\n            if (!_bodyMinSizeCache.f) bodyMinSizeChanged();\n            if (_nativeScrollbarIsOverlaid.y && _hasOverflowCache.x) _contentElement.css(_strMinMinus + _strWidth, _bodyMinSizeCache.w + _overlayScrollbarDummySize.y);\n            if (_nativeScrollbarIsOverlaid.x && _hasOverflowCache.y) _contentElement.css(_strMinMinus + _strHeight, _bodyMinSizeCache.h + _overlayScrollbarDummySize.x);\n            _bodyMinSizeCache.c = false;\n          }\n\n          if (_initialized && changedOptions.updateOnLoad) {\n            updateElementsOnLoad();\n          } //freezeResizeObserver(_sizeObserverElement, false);\n          //freezeResizeObserver(_sizeAutoObserverElement, false);\n\n\n          dispatchCallback('onUpdated', {\n            forced: force\n          });\n        }\n        /**\r\n         * Updates the found elements of which the load event shall be handled.\r\n         */\n\n\n        function updateElementsOnLoad() {\n          if (!_isTextarea) {\n            eachUpdateOnLoad(function (i, updateOnLoadSelector) {\n              _contentElement.find(updateOnLoadSelector).each(function (i, el) {\n                // if element doesn't have a updateOnLoadCallback applied\n                if (COMPATIBILITY.inA(el, _updateOnLoadElms) < 0) {\n                  _updateOnLoadElms.push(el);\n\n                  FRAMEWORK(el).off(_updateOnLoadEventName, updateOnLoadCallback).on(_updateOnLoadEventName, updateOnLoadCallback);\n                }\n              });\n            });\n          }\n        } //==== Options ====//\n\n        /**\r\n         * Sets new options but doesn't call the update method.\r\n         * @param newOptions The object which contains the new options.\r\n         * @returns {*} A object which contains the changed options.\r\n         */\n\n\n        function setOptions(newOptions) {\n          var validatedOpts = _pluginsOptions._validate(newOptions, _pluginsOptions._template, true, _currentOptions);\n\n          _currentOptions = extendDeep({}, _currentOptions, validatedOpts._default);\n          _currentPreparedOptions = extendDeep({}, _currentPreparedOptions, validatedOpts._prepared);\n          return validatedOpts._prepared;\n        } //==== Structure ====//\n\n        /**\r\n         * Builds or destroys the wrapper and helper DOM elements.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n        /**\r\n         * Builds or destroys the wrapper and helper DOM elements.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupStructureDOM(destroy) {\n          var strParent = 'parent';\n          var classNameResizeObserverHost = 'os-resize-observer-host';\n          var classNameTextareaElementFull = _classNameTextareaElement + _strSpace + _classNameTextInherit;\n          var textareaClass = _isTextarea ? _strSpace + _classNameTextInherit : _strEmpty;\n          var adoptAttrs = _currentPreparedOptions.textarea.inheritedAttrs;\n          var adoptAttrsMap = {};\n\n          var applyAdoptedAttrs = function applyAdoptedAttrs() {\n            var applyAdoptedAttrsElm = destroy ? _targetElement : _hostElement;\n            each(adoptAttrsMap, function (key, value) {\n              if (type(value) == TYPES.s) {\n                if (key == LEXICON.c) applyAdoptedAttrsElm.addClass(value);else applyAdoptedAttrsElm.attr(key, value);\n              }\n            });\n          };\n\n          var hostElementClassNames = [_classNameHostElement, _classNameHostElementForeign, _classNameHostTextareaElement, _classNameHostResizeDisabled, _classNameHostRTL, _classNameHostScrollbarHorizontalHidden, _classNameHostScrollbarVerticalHidden, _classNameHostTransition, _classNameHostScrolling, _classNameHostOverflow, _classNameHostOverflowX, _classNameHostOverflowY, _classNameThemeNone, _classNameTextareaElement, _classNameTextInherit, _classNameCache].join(_strSpace);\n          var hostElementCSS = {}; //get host element as first element, because that's the most upper element and required for the other elements\n\n          _hostElement = _hostElement || (_isTextarea ? _domExists ? _targetElement[strParent]()[strParent]()[strParent]()[strParent]() : FRAMEWORK(generateDiv(_classNameHostTextareaElement)) : _targetElement);\n          _contentElement = _contentElement || selectOrGenerateDivByClass(_classNameContentElement + textareaClass);\n          _viewportElement = _viewportElement || selectOrGenerateDivByClass(_classNameViewportElement + textareaClass);\n          _paddingElement = _paddingElement || selectOrGenerateDivByClass(_classNamePaddingElement + textareaClass);\n          _sizeObserverElement = _sizeObserverElement || selectOrGenerateDivByClass(classNameResizeObserverHost);\n          _textareaCoverElement = _textareaCoverElement || (_isTextarea ? selectOrGenerateDivByClass(_classNameTextareaCoverElement) : undefined$1); //add this class to workaround class changing issues with UI frameworks especially Vue\n\n          if (_domExists) addClass(_hostElement, _classNameHostElementForeign); //on destroy, remove all generated class names from the host element before collecting the adopted attributes \n          //to prevent adopting generated class names\n\n          if (destroy) removeClass(_hostElement, hostElementClassNames); //collect all adopted attributes\n\n          adoptAttrs = type(adoptAttrs) == TYPES.s ? adoptAttrs.split(_strSpace) : adoptAttrs;\n\n          if (COMPATIBILITY.isA(adoptAttrs) && _isTextarea) {\n            each(adoptAttrs, function (i, v) {\n              if (type(v) == TYPES.s) {\n                adoptAttrsMap[v] = destroy ? _hostElement.attr(v) : _targetElement.attr(v);\n              }\n            });\n          }\n\n          if (!destroy) {\n            if (_isTextarea) {\n              if (!_currentPreparedOptions.sizeAutoCapable) {\n                hostElementCSS[_strWidth] = _targetElement.css(_strWidth);\n                hostElementCSS[_strHeight] = _targetElement.css(_strHeight);\n              }\n\n              if (!_domExists) _targetElement.addClass(_classNameTextInherit).wrap(_hostElement); //jQuery clones elements in wrap functions, so we have to select them again\n\n              _hostElement = _targetElement[strParent]().css(hostElementCSS);\n            }\n\n            if (!_domExists) {\n              //add the correct class to the target element\n              addClass(_targetElement, _isTextarea ? classNameTextareaElementFull : _classNameHostElement); //wrap the content into the generated elements to create the required DOM\n\n              _hostElement.wrapInner(_contentElement).wrapInner(_viewportElement).wrapInner(_paddingElement).prepend(_sizeObserverElement); //jQuery clones elements in wrap functions, so we have to select them again\n\n\n              _contentElement = findFirst(_hostElement, _strDot + _classNameContentElement);\n              _viewportElement = findFirst(_hostElement, _strDot + _classNameViewportElement);\n              _paddingElement = findFirst(_hostElement, _strDot + _classNamePaddingElement);\n\n              if (_isTextarea) {\n                _contentElement.prepend(_textareaCoverElement);\n\n                applyAdoptedAttrs();\n              }\n            }\n\n            if (_nativeScrollbarStyling) addClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible);\n            if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y) addClass(_viewportElement, _classNameViewportNativeScrollbarsOverlaid);\n            if (_isBody) addClass(_htmlElement, _classNameHTMLElement);\n            _sizeObserverElementNative = _sizeObserverElement[0];\n            _hostElementNative = _hostElement[0];\n            _paddingElementNative = _paddingElement[0];\n            _viewportElementNative = _viewportElement[0];\n            _contentElementNative = _contentElement[0];\n            updateViewportAttrsFromTarget();\n          } else {\n            if (_domExists && _initialized) {\n              //clear size observer\n              _sizeObserverElement.children().remove(); //remove the style property and classes from already generated elements\n\n\n              each([_paddingElement, _viewportElement, _contentElement, _textareaCoverElement], function (i, elm) {\n                if (elm) {\n                  removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n                }\n              }); //add classes to the host element which was removed previously to match the expected DOM\n\n              addClass(_hostElement, _isTextarea ? _classNameHostTextareaElement : _classNameHostElement);\n            } else {\n              //remove size observer\n              remove(_sizeObserverElement); //unwrap the content to restore DOM\n\n              _contentElement.contents().unwrap().unwrap().unwrap();\n\n              if (_isTextarea) {\n                _targetElement.unwrap();\n\n                remove(_hostElement);\n                remove(_textareaCoverElement);\n                applyAdoptedAttrs();\n              }\n            }\n\n            if (_isTextarea) _targetElement.removeAttr(LEXICON.s);\n            if (_isBody) removeClass(_htmlElement, _classNameHTMLElement);\n          }\n        }\n        /**\r\n         * Adds or removes all wrapper elements interactivity events.\r\n         * @param destroy Indicates whether the Events shall be added or removed.\r\n         */\n\n\n        function setupStructureEvents() {\n          var textareaKeyDownRestrictedKeyCodes = [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, //F1 to F12\n          33, 34, //page up, page down\n          37, 38, 39, 40, //left, up, right, down arrows\n          16, 17, 18, 19, 20, 144 //Shift, Ctrl, Alt, Pause, CapsLock, NumLock\n          ];\n          var textareaKeyDownKeyCodesList = [];\n          var textareaUpdateIntervalID;\n          var scrollStopTimeoutId;\n          var scrollStopDelay = 175;\n          var strFocus = 'focus';\n\n          function updateTextarea(doClearInterval) {\n            textareaUpdate();\n\n            _base.update(_strAuto);\n\n            if (doClearInterval && _autoUpdateRecommended) clearInterval(textareaUpdateIntervalID);\n          }\n\n          function textareaOnScroll(event) {\n            _targetElement[_strScrollLeft](_rtlScrollBehavior.i && _normalizeRTLCache ? 9999999 : 0);\n\n            _targetElement[_strScrollTop](0);\n\n            COMPATIBILITY.prvD(event);\n            COMPATIBILITY.stpP(event);\n            return false;\n          }\n\n          function textareaOnDrop(event) {\n            setTimeout(function () {\n              if (!_destroyed) updateTextarea();\n            }, 50);\n          }\n\n          function textareaOnFocus() {\n            _textareaHasFocus = true;\n            addClass(_hostElement, strFocus);\n          }\n\n          function textareaOnFocusout() {\n            _textareaHasFocus = false;\n            textareaKeyDownKeyCodesList = [];\n            removeClass(_hostElement, strFocus);\n            updateTextarea(true);\n          }\n\n          function textareaOnKeyDown(event) {\n            var keyCode = event.keyCode;\n\n            if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\n              if (!textareaKeyDownKeyCodesList[LEXICON.l]) {\n                updateTextarea();\n                textareaUpdateIntervalID = setInterval(updateTextarea, 1000 / 60);\n              }\n\n              if (inArray(keyCode, textareaKeyDownKeyCodesList) < 0) textareaKeyDownKeyCodesList.push(keyCode);\n            }\n          }\n\n          function textareaOnKeyUp(event) {\n            var keyCode = event.keyCode;\n            var index = inArray(keyCode, textareaKeyDownKeyCodesList);\n\n            if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\n              if (index > -1) textareaKeyDownKeyCodesList.splice(index, 1);\n              if (!textareaKeyDownKeyCodesList[LEXICON.l]) updateTextarea(true);\n            }\n          }\n\n          function contentOnTransitionEnd(event) {\n            if (_autoUpdateCache === true) return;\n            event = event.originalEvent || event;\n            if (isSizeAffectingCSSProperty(event.propertyName)) _base.update(_strAuto);\n          }\n\n          function viewportOnScroll(event) {\n            if (!_sleeping) {\n              if (scrollStopTimeoutId !== undefined$1) clearTimeout(scrollStopTimeoutId);else {\n                if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(true);\n                if (!nativeOverlayScrollbarsAreActive()) addClass(_hostElement, _classNameHostScrolling);\n                dispatchCallback('onScrollStart', event);\n              } //if a scrollbars handle gets dragged, the mousemove event is responsible for refreshing the handle offset\n              //because if CSS scroll-snap is used, the handle offset gets only refreshed on every snap point\n              //this looks laggy & clunky, it looks much better if the offset refreshes with the mousemove\n\n              if (!_scrollbarsHandlesDefineScrollPos) {\n                refreshScrollbarHandleOffset(true);\n                refreshScrollbarHandleOffset(false);\n              }\n\n              dispatchCallback('onScroll', event);\n              scrollStopTimeoutId = setTimeout(function () {\n                if (!_destroyed) {\n                  //OnScrollStop:\n                  clearTimeout(scrollStopTimeoutId);\n                  scrollStopTimeoutId = undefined$1;\n                  if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n                  if (!nativeOverlayScrollbarsAreActive()) removeClass(_hostElement, _classNameHostScrolling);\n                  dispatchCallback('onScrollStop', event);\n                }\n              }, scrollStopDelay);\n            }\n          }\n\n          if (_isTextarea) {\n            if (_msieVersion > 9 || !_autoUpdateRecommended) {\n              addDestroyEventListener(_targetElement, 'input', updateTextarea);\n            } else {\n              addDestroyEventListener(_targetElement, [_strKeyDownEvent, _strKeyUpEvent], [textareaOnKeyDown, textareaOnKeyUp]);\n            }\n\n            addDestroyEventListener(_targetElement, [_strScroll, 'drop', strFocus, strFocus + 'out'], [textareaOnScroll, textareaOnDrop, textareaOnFocus, textareaOnFocusout]);\n          } else {\n            addDestroyEventListener(_contentElement, _strTransitionEndEvent, contentOnTransitionEnd);\n          }\n\n          addDestroyEventListener(_viewportElement, _strScroll, viewportOnScroll, true);\n        } //==== Scrollbars ====//\n\n        /**\r\n         * Builds or destroys all scrollbar DOM elements (scrollbar, track, handle)\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupScrollbarsDOM(destroy) {\n          var selectOrGenerateScrollbarDOM = function selectOrGenerateScrollbarDOM(isHorizontal) {\n            var scrollbarClassName = isHorizontal ? _classNameScrollbarHorizontal : _classNameScrollbarVertical;\n            var scrollbar = selectOrGenerateDivByClass(_classNameScrollbar + _strSpace + scrollbarClassName, true);\n            var track = selectOrGenerateDivByClass(_classNameScrollbarTrack, scrollbar);\n            var handle = selectOrGenerateDivByClass(_classNameScrollbarHandle, scrollbar);\n\n            if (!_domExists && !destroy) {\n              scrollbar.append(track);\n              track.append(handle);\n            }\n\n            return {\n              _scrollbar: scrollbar,\n              _track: track,\n              _handle: handle\n            };\n          };\n\n          function resetScrollbarDOM(isHorizontal) {\n            var scrollbarVars = getScrollbarVars(isHorizontal);\n            var scrollbar = scrollbarVars._scrollbar;\n            var track = scrollbarVars._track;\n            var handle = scrollbarVars._handle;\n\n            if (_domExists && _initialized) {\n              each([scrollbar, track, handle], function (i, elm) {\n                removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n              });\n            } else {\n              remove(scrollbar || selectOrGenerateScrollbarDOM(isHorizontal)._scrollbar);\n            }\n          }\n\n          var horizontalElements;\n          var verticalElements;\n\n          if (!destroy) {\n            horizontalElements = selectOrGenerateScrollbarDOM(true);\n            verticalElements = selectOrGenerateScrollbarDOM();\n            _scrollbarHorizontalElement = horizontalElements._scrollbar;\n            _scrollbarHorizontalTrackElement = horizontalElements._track;\n            _scrollbarHorizontalHandleElement = horizontalElements._handle;\n            _scrollbarVerticalElement = verticalElements._scrollbar;\n            _scrollbarVerticalTrackElement = verticalElements._track;\n            _scrollbarVerticalHandleElement = verticalElements._handle;\n\n            if (!_domExists) {\n              _paddingElement.after(_scrollbarVerticalElement);\n\n              _paddingElement.after(_scrollbarHorizontalElement);\n            }\n          } else {\n            resetScrollbarDOM(true);\n            resetScrollbarDOM();\n          }\n        }\n        /**\r\n         * Initializes all scrollbar interactivity events. (track and handle dragging, clicking, scrolling)\r\n         * @param isHorizontal True if the target scrollbar is the horizontal scrollbar, false if the target scrollbar is the vertical scrollbar.\r\n         */\n\n\n        function setupScrollbarEvents(isHorizontal) {\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var insideIFrame = _windowElementNative.top !== _windowElementNative;\n          var xy = scrollbarVars._x_y;\n          var XY = scrollbarVars._X_Y;\n          var scroll = _strScroll + scrollbarVars._Left_Top;\n          var strActive = 'active';\n          var strSnapHandle = 'snapHandle';\n          var strClickEvent = 'click';\n          var scrollDurationFactor = 1;\n          var increaseDecreaseScrollAmountKeyCodes = [16, 17]; //shift, ctrl\n\n          var trackTimeout;\n          var mouseDownScroll;\n          var mouseDownOffset;\n          var mouseDownInvertedScale;\n\n          function getPointerPosition(event) {\n            return _msieVersion && insideIFrame ? event['screen' + XY] : COMPATIBILITY.page(event)[xy]; //use screen coordinates in EDGE & IE because the page values are incorrect in frames.\n          }\n\n          function getPreparedScrollbarsOption(name) {\n            return _currentPreparedOptions.scrollbars[name];\n          }\n\n          function increaseTrackScrollAmount() {\n            scrollDurationFactor = 0.5;\n          }\n\n          function decreaseTrackScrollAmount() {\n            scrollDurationFactor = 1;\n          }\n\n          function stopClickEventPropagation(event) {\n            COMPATIBILITY.stpP(event);\n          }\n\n          function documentKeyDown(event) {\n            if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1) increaseTrackScrollAmount();\n          }\n\n          function documentKeyUp(event) {\n            if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1) decreaseTrackScrollAmount();\n          }\n\n          function onMouseTouchDownContinue(event) {\n            var originalEvent = event.originalEvent || event;\n            var isTouchEvent = originalEvent.touches !== undefined$1;\n            return _sleeping || _destroyed || nativeOverlayScrollbarsAreActive() || !_scrollbarsDragScrollingCache || isTouchEvent && !getPreparedScrollbarsOption('touchSupport') ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\n          }\n\n          function documentDragMove(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var trackLength = scrollbarVarsInfo._trackLength;\n              var handleLength = scrollbarVarsInfo._handleLength;\n              var scrollRange = scrollbarVarsInfo._maxScroll;\n              var scrollRaw = (getPointerPosition(event) - mouseDownOffset) * mouseDownInvertedScale;\n              var scrollDeltaPercent = scrollRaw / (trackLength - handleLength);\n              var scrollDelta = scrollRange * scrollDeltaPercent;\n              scrollDelta = isFinite(scrollDelta) ? scrollDelta : 0;\n              if (_isRTL && isHorizontal && !_rtlScrollBehavior.i) scrollDelta *= -1;\n\n              _viewportElement[scroll](MATH.round(mouseDownScroll + scrollDelta));\n\n              if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, mouseDownScroll + scrollDelta);\n              if (!_supportPassiveEvents) COMPATIBILITY.prvD(event);\n            } else documentMouseTouchUp(event);\n          }\n\n          function documentMouseTouchUp(event) {\n            event = event || event.originalEvent;\n            setupResponsiveEventListener(_documentElement, [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent], [documentDragMove, documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart], true);\n            COMPATIBILITY.rAF()(function () {\n              setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, true, {\n                _capture: true\n              });\n            });\n            if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, true);\n            _scrollbarsHandlesDefineScrollPos = false;\n            removeClass(_bodyElement, _classNameDragging);\n            removeClass(scrollbarVars._handle, strActive);\n            removeClass(scrollbarVars._track, strActive);\n            removeClass(scrollbarVars._scrollbar, strActive);\n            mouseDownScroll = undefined$1;\n            mouseDownOffset = undefined$1;\n            mouseDownInvertedScale = 1;\n            decreaseTrackScrollAmount();\n\n            if (trackTimeout !== undefined$1) {\n              _base.scrollStop();\n\n              clearTimeout(trackTimeout);\n              trackTimeout = undefined$1;\n            }\n\n            if (event) {\n              var rect = _hostElementNative[LEXICON.bCR]();\n\n              var mouseInsideHost = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom; //if mouse is outside host element\n\n              if (!mouseInsideHost) hostOnMouseLeave();\n              if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n            }\n          }\n\n          function onHandleMouseTouchDown(event) {\n            if (onMouseTouchDownContinue(event)) onHandleMouseTouchDownAction(event);\n          }\n\n          function onHandleMouseTouchDownAction(event) {\n            mouseDownScroll = _viewportElement[scroll]();\n            mouseDownScroll = isNaN(mouseDownScroll) ? 0 : mouseDownScroll;\n            if (_isRTL && isHorizontal && !_rtlScrollBehavior.n || !_isRTL) mouseDownScroll = mouseDownScroll < 0 ? 0 : mouseDownScroll;\n            mouseDownInvertedScale = getHostElementInvertedScale()[xy];\n            mouseDownOffset = getPointerPosition(event);\n            _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\n            addClass(_bodyElement, _classNameDragging);\n            addClass(scrollbarVars._handle, strActive);\n            addClass(scrollbarVars._scrollbar, strActive);\n            setupResponsiveEventListener(_documentElement, [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strSelectStartEvent], [documentDragMove, documentMouseTouchUp, documentOnSelectStart]);\n            COMPATIBILITY.rAF()(function () {\n              setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, false, {\n                _capture: true\n              });\n            });\n            if (_msieVersion || !_documentMixed) COMPATIBILITY.prvD(event);\n            COMPATIBILITY.stpP(event);\n          }\n\n          function onTrackMouseTouchDown(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var handleToViewportRatio = scrollbarVars._info._handleLength / Math.round(MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]) * scrollbarVars._info._trackLength);\n              var scrollDistance = MATH.round(_viewportSize[scrollbarVars._w_h] * handleToViewportRatio);\n              var scrollBaseDuration = 270 * handleToViewportRatio;\n              var scrollFirstIterationDelay = 400 * handleToViewportRatio;\n\n              var trackOffset = scrollbarVars._track.offset()[scrollbarVars._left_top];\n\n              var ctrlKey = event.ctrlKey;\n              var instantScroll = event.shiftKey;\n              var instantScrollTransition = instantScroll && ctrlKey;\n              var isFirstIteration = true;\n              var easing = 'linear';\n              var decreaseScroll;\n              var finishedCondition;\n\n              var scrollActionFinsished = function scrollActionFinsished(transition) {\n                if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, transition);\n              };\n\n              var scrollActionInstantFinished = function scrollActionInstantFinished() {\n                scrollActionFinsished();\n                onHandleMouseTouchDownAction(event);\n              };\n\n              var scrollAction = function scrollAction() {\n                if (!_destroyed) {\n                  var mouseOffset = (mouseDownOffset - trackOffset) * mouseDownInvertedScale;\n                  var handleOffset = scrollbarVarsInfo._handleOffset;\n                  var trackLength = scrollbarVarsInfo._trackLength;\n                  var handleLength = scrollbarVarsInfo._handleLength;\n                  var scrollRange = scrollbarVarsInfo._maxScroll;\n                  var currScroll = scrollbarVarsInfo._currentScroll;\n                  var scrollDuration = scrollBaseDuration * scrollDurationFactor;\n                  var timeoutDelay = isFirstIteration ? MATH.max(scrollFirstIterationDelay, scrollDuration) : scrollDuration;\n                  var instantScrollPosition = scrollRange * ((mouseOffset - handleLength / 2) / (trackLength - handleLength)); // 100% * positionPercent\n\n                  var rtlIsNormal = _isRTL && isHorizontal && (!_rtlScrollBehavior.i && !_rtlScrollBehavior.n || _normalizeRTLCache);\n                  var decreaseScrollCondition = rtlIsNormal ? handleOffset < mouseOffset : handleOffset > mouseOffset;\n                  var scrollObj = {};\n                  var animationObj = {\n                    easing: easing,\n                    step: function step(now) {\n                      if (_scrollbarsHandlesDefineScrollPos) {\n                        _viewportElement[scroll](now); //https://github.com/jquery/jquery/issues/4340\n\n\n                        refreshScrollbarHandleOffset(isHorizontal, now);\n                      }\n                    }\n                  };\n                  instantScrollPosition = isFinite(instantScrollPosition) ? instantScrollPosition : 0;\n                  instantScrollPosition = _isRTL && isHorizontal && !_rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition; //_base.scrollStop();\n\n                  if (instantScroll) {\n                    _viewportElement[scroll](instantScrollPosition); //scroll instantly to new position\n\n\n                    if (instantScrollTransition) {\n                      //get the scroll position after instant scroll (in case CSS Snap Points are used) to get the correct snapped scroll position\n                      //and the animation stops at the correct point\n                      instantScrollPosition = _viewportElement[scroll](); //scroll back to the position before instant scrolling so animation can be performed\n\n                      _viewportElement[scroll](currScroll);\n\n                      instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition;\n                      instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.n ? -instantScrollPosition : instantScrollPosition;\n                      scrollObj[xy] = instantScrollPosition;\n\n                      _base.scroll(scrollObj, extendDeep(animationObj, {\n                        duration: 130,\n                        complete: scrollActionInstantFinished\n                      }));\n                    } else scrollActionInstantFinished();\n                  } else {\n                    decreaseScroll = isFirstIteration ? decreaseScrollCondition : decreaseScroll;\n                    finishedCondition = rtlIsNormal ? decreaseScroll ? handleOffset + handleLength >= mouseOffset : handleOffset <= mouseOffset : decreaseScroll ? handleOffset <= mouseOffset : handleOffset + handleLength >= mouseOffset;\n\n                    if (finishedCondition) {\n                      clearTimeout(trackTimeout);\n\n                      _base.scrollStop();\n\n                      trackTimeout = undefined$1;\n                      scrollActionFinsished(true);\n                    } else {\n                      trackTimeout = setTimeout(scrollAction, timeoutDelay);\n                      scrollObj[xy] = (decreaseScroll ? '-=' : '+=') + scrollDistance;\n\n                      _base.scroll(scrollObj, extendDeep(animationObj, {\n                        duration: scrollDuration\n                      }));\n                    }\n\n                    isFirstIteration = false;\n                  }\n                }\n              };\n\n              if (ctrlKey) increaseTrackScrollAmount();\n              mouseDownInvertedScale = getHostElementInvertedScale()[xy];\n              mouseDownOffset = COMPATIBILITY.page(event)[xy];\n              _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\n              addClass(_bodyElement, _classNameDragging);\n              addClass(scrollbarVars._track, strActive);\n              addClass(scrollbarVars._scrollbar, strActive);\n              setupResponsiveEventListener(_documentElement, [_strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent], [documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart]);\n              scrollAction();\n              COMPATIBILITY.prvD(event);\n              COMPATIBILITY.stpP(event);\n            }\n          }\n\n          function onTrackMouseTouchEnter(event) {\n            //make sure both scrollbars will stay visible if one scrollbar is hovered if autoHide is \"scroll\" or \"move\".\n            _scrollbarsHandleHovered = true;\n            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(true);\n          }\n\n          function onTrackMouseTouchLeave(event) {\n            _scrollbarsHandleHovered = false;\n            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n          }\n\n          function onScrollbarMouseTouchDown(event) {\n            COMPATIBILITY.stpP(event);\n          }\n\n          addDestroyEventListener(scrollbarVars._handle, _strMouseTouchDownEvent, onHandleMouseTouchDown);\n          addDestroyEventListener(scrollbarVars._track, [_strMouseTouchDownEvent, _strMouseEnter, _strMouseLeave], [onTrackMouseTouchDown, onTrackMouseTouchEnter, onTrackMouseTouchLeave]);\n          addDestroyEventListener(scrollbarVars._scrollbar, _strMouseTouchDownEvent, onScrollbarMouseTouchDown);\n\n          if (_supportTransition) {\n            addDestroyEventListener(scrollbarVars._scrollbar, _strTransitionEndEvent, function (event) {\n              if (event.target !== scrollbarVars._scrollbar[0]) return;\n              refreshScrollbarHandleLength(isHorizontal);\n              refreshScrollbarHandleOffset(isHorizontal);\n            });\n          }\n        }\n        /**\r\n         * Shows or hides the given scrollbar and applied a class name which indicates if the scrollbar is scrollable or not.\r\n         * @param isHorizontal True if the horizontal scrollbar is the target, false if the vertical scrollbar is the target.\r\n         * @param shallBeVisible True if the scrollbar shall be shown, false if hidden.\r\n         * @param canScroll True if the scrollbar is scrollable, false otherwise.\r\n         */\n\n\n        function refreshScrollbarAppearance(isHorizontal, shallBeVisible, canScroll) {\n          var scrollbarHiddenClassName = isHorizontal ? _classNameHostScrollbarHorizontalHidden : _classNameHostScrollbarVerticalHidden;\n          var scrollbarElement = isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement;\n          addRemoveClass(_hostElement, scrollbarHiddenClassName, !shallBeVisible);\n          addRemoveClass(scrollbarElement, _classNameScrollbarUnusable, !canScroll);\n        }\n        /**\r\n         * Autoshows / autohides both scrollbars with.\r\n         * @param shallBeVisible True if the scrollbars shall be autoshown (only the case if they are hidden by a autohide), false if the shall be auto hidden.\r\n         * @param delayfree True if the scrollbars shall be hidden without a delay, false or undefined otherwise.\r\n         */\n\n\n        function refreshScrollbarsAutoHide(shallBeVisible, delayfree) {\n          clearTimeout(_scrollbarsAutoHideTimeoutId);\n\n          if (shallBeVisible) {\n            //if(_hasOverflowCache.x && _hideOverflowCache.xs)\n            removeClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden); //if(_hasOverflowCache.y && _hideOverflowCache.ys)\n\n            removeClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\n          } else {\n            var anyActive;\n            var strActive = 'active';\n\n            var hide = function hide() {\n              if (!_scrollbarsHandleHovered && !_destroyed) {\n                anyActive = _scrollbarHorizontalHandleElement.hasClass(strActive) || _scrollbarVerticalHandleElement.hasClass(strActive);\n                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave)) addClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\n                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave)) addClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\n              }\n            };\n\n            if (_scrollbarsAutoHideDelay > 0 && delayfree !== true) _scrollbarsAutoHideTimeoutId = setTimeout(hide, _scrollbarsAutoHideDelay);else hide();\n          }\n        }\n        /**\r\n         * Refreshes the handle length of the given scrollbar.\r\n         * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n         */\n\n\n        function refreshScrollbarHandleLength(isHorizontal) {\n          var handleCSS = {};\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var digit = 1000000; //get and apply intended handle length\n\n          var handleRatio = MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]);\n          handleCSS[scrollbarVars._width_height] = MATH.floor(handleRatio * 100 * digit) / digit + '%'; //the last * digit / digit is for flooring to the 4th digit\n\n          if (!nativeOverlayScrollbarsAreActive()) scrollbarVars._handle.css(handleCSS); //measure the handle length to respect min & max length\n\n          scrollbarVarsInfo._handleLength = scrollbarVars._handle[0]['offset' + scrollbarVars._Width_Height];\n          scrollbarVarsInfo._handleLengthRatio = handleRatio;\n        }\n        /**\r\n         * Refreshes the handle offset of the given scrollbar.\r\n         * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n         * @param scrollOrTransition The scroll position of the given scrollbar axis to which the handle shall be moved or a boolean which indicates whether a transition shall be applied. If undefined or boolean if the current scroll-offset is taken. (if isHorizontal ? scrollLeft : scrollTop)\r\n         */\n\n\n        function refreshScrollbarHandleOffset(isHorizontal, scrollOrTransition) {\n          var transition = type(scrollOrTransition) == TYPES.b;\n          var transitionDuration = 250;\n          var isRTLisHorizontal = _isRTL && isHorizontal;\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var strTranslateBrace = 'translate(';\n\n          var strTransform = VENDORS._cssProperty('transform');\n\n          var strTransition = VENDORS._cssProperty('transition');\n\n          var nativeScroll = isHorizontal ? _viewportElement[_strScrollLeft]() : _viewportElement[_strScrollTop]();\n          var currentScroll = scrollOrTransition === undefined$1 || transition ? nativeScroll : scrollOrTransition; //measure the handle length to respect min & max length\n\n          var handleLength = scrollbarVarsInfo._handleLength;\n          var trackLength = scrollbarVars._track[0]['offset' + scrollbarVars._Width_Height];\n          var handleTrackDiff = trackLength - handleLength;\n          var handleCSS = {};\n          var transformOffset;\n          var translateValue; //DONT use the variable '_contentScrollSizeCache[scrollbarVars._w_h]' instead of '_viewportElement[0]['scroll' + scrollbarVars._Width_Height]'\n          // because its a bit behind during the small delay when content size updates\n          //(delay = mutationObserverContentLag, if its 0 then this var could be used)\n\n          var maxScroll = (_viewportElementNative[_strScroll + scrollbarVars._Width_Height] - _viewportElementNative['client' + scrollbarVars._Width_Height]) * (_rtlScrollBehavior.n && isRTLisHorizontal ? -1 : 1); //* -1 if rtl scroll max is negative\n\n          var getScrollRatio = function getScrollRatio(base) {\n            return isNaN(base / maxScroll) ? 0 : MATH.max(0, MATH.min(1, base / maxScroll));\n          };\n\n          var getHandleOffset = function getHandleOffset(scrollRatio) {\n            var offset = handleTrackDiff * scrollRatio;\n            offset = isNaN(offset) ? 0 : offset;\n            offset = isRTLisHorizontal && !_rtlScrollBehavior.i ? trackLength - handleLength - offset : offset;\n            offset = MATH.max(0, offset);\n            return offset;\n          };\n\n          var scrollRatio = getScrollRatio(nativeScroll);\n          var unsnappedScrollRatio = getScrollRatio(currentScroll);\n          var handleOffset = getHandleOffset(unsnappedScrollRatio);\n          var snappedHandleOffset = getHandleOffset(scrollRatio);\n          scrollbarVarsInfo._maxScroll = maxScroll;\n          scrollbarVarsInfo._currentScroll = nativeScroll;\n          scrollbarVarsInfo._currentScrollRatio = scrollRatio;\n\n          if (_supportTransform) {\n            transformOffset = isRTLisHorizontal ? -(trackLength - handleLength - handleOffset) : handleOffset; //in px\n            //transformOffset = (transformOffset / trackLength * 100) * (trackLength / handleLength); //in %\n\n            translateValue = isHorizontal ? strTranslateBrace + transformOffset + 'px, 0)' : strTranslateBrace + '0, ' + transformOffset + 'px)';\n            handleCSS[strTransform] = translateValue; //apply or clear up transition\n\n            if (_supportTransition) handleCSS[strTransition] = transition && MATH.abs(handleOffset - scrollbarVarsInfo._handleOffset) > 1 ? getCSSTransitionString(scrollbarVars._handle) + ', ' + (strTransform + _strSpace + transitionDuration + 'ms') : _strEmpty;\n          } else handleCSS[scrollbarVars._left_top] = handleOffset; //only apply css if offset has changed and overflow exists.\n\n\n          if (!nativeOverlayScrollbarsAreActive()) {\n            scrollbarVars._handle.css(handleCSS); //clear up transition\n\n\n            if (_supportTransform && _supportTransition && transition) {\n              scrollbarVars._handle.one(_strTransitionEndEvent, function () {\n                if (!_destroyed) scrollbarVars._handle.css(strTransition, _strEmpty);\n              });\n            }\n          }\n\n          scrollbarVarsInfo._handleOffset = handleOffset;\n          scrollbarVarsInfo._snappedHandleOffset = snappedHandleOffset;\n          scrollbarVarsInfo._trackLength = trackLength;\n        }\n        /**\r\n         * Refreshes the interactivity of the given scrollbar element.\r\n         * @param isTrack True if the track element is the target, false if the handle element is the target.\r\n         * @param value True for interactivity false for no interactivity.\r\n         */\n\n\n        function refreshScrollbarsInteractive(isTrack, value) {\n          var action = value ? 'removeClass' : 'addClass';\n          var element1 = isTrack ? _scrollbarHorizontalTrackElement : _scrollbarHorizontalHandleElement;\n          var element2 = isTrack ? _scrollbarVerticalTrackElement : _scrollbarVerticalHandleElement;\n          var className = isTrack ? _classNameScrollbarTrackOff : _classNameScrollbarHandleOff;\n          element1[action](className);\n          element2[action](className);\n        }\n        /**\r\n         * Returns a object which is used for fast access for specific variables.\r\n         * @param isHorizontal True if the horizontal scrollbar vars shall be accessed, false if the vertical scrollbar vars shall be accessed.\r\n         * @returns {{wh: string, WH: string, lt: string, _wh: string, _lt: string, t: *, h: *, c: {}, s: *}}\r\n         */\n\n\n        function getScrollbarVars(isHorizontal) {\n          return {\n            _width_height: isHorizontal ? _strWidth : _strHeight,\n            _Width_Height: isHorizontal ? 'Width' : 'Height',\n            _left_top: isHorizontal ? _strLeft : _strTop,\n            _Left_Top: isHorizontal ? 'Left' : 'Top',\n            _x_y: isHorizontal ? _strX : _strY,\n            _X_Y: isHorizontal ? 'X' : 'Y',\n            _w_h: isHorizontal ? 'w' : 'h',\n            _l_t: isHorizontal ? 'l' : 't',\n            _track: isHorizontal ? _scrollbarHorizontalTrackElement : _scrollbarVerticalTrackElement,\n            _handle: isHorizontal ? _scrollbarHorizontalHandleElement : _scrollbarVerticalHandleElement,\n            _scrollbar: isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement,\n            _info: isHorizontal ? _scrollHorizontalInfo : _scrollVerticalInfo\n          };\n        } //==== Scrollbar Corner ====//\n\n        /**\r\n         * Builds or destroys the scrollbar corner DOM element.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupScrollbarCornerDOM(destroy) {\n          _scrollbarCornerElement = _scrollbarCornerElement || selectOrGenerateDivByClass(_classNameScrollbarCorner, true);\n\n          if (!destroy) {\n            if (!_domExists) {\n              _hostElement.append(_scrollbarCornerElement);\n            }\n          } else {\n            if (_domExists && _initialized) {\n              removeClass(_scrollbarCornerElement.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n            } else {\n              remove(_scrollbarCornerElement);\n            }\n          }\n        }\n        /**\r\n         * Initializes all scrollbar corner interactivity events.\r\n         */\n\n\n        function setupScrollbarCornerEvents() {\n          var insideIFrame = _windowElementNative.top !== _windowElementNative;\n          var mouseDownPosition = {};\n          var mouseDownSize = {};\n          var mouseDownInvertedScale = {};\n          var reconnectMutationObserver;\n\n          function documentDragMove(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var pageOffset = getCoordinates(event);\n              var hostElementCSS = {};\n              if (_resizeHorizontal || _resizeBoth) hostElementCSS[_strWidth] = mouseDownSize.w + (pageOffset.x - mouseDownPosition.x) * mouseDownInvertedScale.x;\n              if (_resizeVertical || _resizeBoth) hostElementCSS[_strHeight] = mouseDownSize.h + (pageOffset.y - mouseDownPosition.y) * mouseDownInvertedScale.y;\n\n              _hostElement.css(hostElementCSS);\n\n              COMPATIBILITY.stpP(event);\n            } else {\n              documentMouseTouchUp(event);\n            }\n          }\n\n          function documentMouseTouchUp(event) {\n            var eventIsTrusted = event !== undefined$1;\n            setupResponsiveEventListener(_documentElement, [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent], [documentOnSelectStart, documentDragMove, documentMouseTouchUp], true);\n            removeClass(_bodyElement, _classNameDragging);\n            if (_scrollbarCornerElement.releaseCapture) _scrollbarCornerElement.releaseCapture();\n\n            if (eventIsTrusted) {\n              if (reconnectMutationObserver) connectMutationObservers();\n\n              _base.update(_strAuto);\n            }\n\n            reconnectMutationObserver = false;\n          }\n\n          function onMouseTouchDownContinue(event) {\n            var originalEvent = event.originalEvent || event;\n            var isTouchEvent = originalEvent.touches !== undefined$1;\n            return _sleeping || _destroyed ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\n          }\n\n          function getCoordinates(event) {\n            return _msieVersion && insideIFrame ? {\n              x: event.screenX,\n              y: event.screenY\n            } : COMPATIBILITY.page(event);\n          }\n\n          addDestroyEventListener(_scrollbarCornerElement, _strMouseTouchDownEvent, function (event) {\n            if (onMouseTouchDownContinue(event) && !_resizeNone) {\n              if (_mutationObserversConnected) {\n                reconnectMutationObserver = true;\n                disconnectMutationObservers();\n              }\n\n              mouseDownPosition = getCoordinates(event);\n              mouseDownSize.w = _hostElementNative[LEXICON.oW] - (!_isBorderBox ? _paddingX : 0);\n              mouseDownSize.h = _hostElementNative[LEXICON.oH] - (!_isBorderBox ? _paddingY : 0);\n              mouseDownInvertedScale = getHostElementInvertedScale();\n              setupResponsiveEventListener(_documentElement, [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent], [documentOnSelectStart, documentDragMove, documentMouseTouchUp]);\n              addClass(_bodyElement, _classNameDragging);\n              if (_scrollbarCornerElement.setCapture) _scrollbarCornerElement.setCapture();\n              COMPATIBILITY.prvD(event);\n              COMPATIBILITY.stpP(event);\n            }\n          });\n        } //==== Utils ====//\n\n        /**\r\n         * Calls the callback with the given name. The Context of this callback is always _base (this).\r\n         * @param name The name of the target which shall be called.\r\n         * @param args The args with which the callback shall be called.\r\n         * @param dependent Boolean which decides whether the callback shall be fired, undefined is like a \"true\" value.\r\n         */\n\n\n        function dispatchCallback(name, args, dependent) {\n          if (dependent === false) return;\n\n          if (_initialized) {\n            var callback = _currentPreparedOptions.callbacks[name];\n            var extensionOnName = name;\n            var ext;\n            if (extensionOnName.substr(0, 2) === 'on') extensionOnName = extensionOnName.substr(2, 1).toLowerCase() + extensionOnName.substr(3);\n            if (type(callback) == TYPES.f) callback.call(_base, args);\n            each(_extensions, function () {\n              ext = this;\n              if (type(ext.on) == TYPES.f) ext.on(extensionOnName, args);\n            });\n          } else if (!_destroyed) _callbacksInitQeueue.push({\n            n: name,\n            a: args\n          });\n        }\n        /**\r\n         * Sets the \"top, right, bottom, left\" properties, with a given prefix, of the given css object.\r\n         * @param targetCSSObject The css object to which the values shall be applied.\r\n         * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n         * @param values A array of values which shall be applied to the \"top, right, bottom, left\" -properties. The array order is [top, right, bottom, left].\r\n         * If this argument is undefined the value '' (empty string) will be applied to all properties.\r\n         */\n\n\n        function setTopRightBottomLeft(targetCSSObject, prefix, values) {\n          prefix = prefix || _strEmpty;\n          values = values || [_strEmpty, _strEmpty, _strEmpty, _strEmpty];\n          targetCSSObject[prefix + _strTop] = values[0];\n          targetCSSObject[prefix + _strRight] = values[1];\n          targetCSSObject[prefix + _strBottom] = values[2];\n          targetCSSObject[prefix + _strLeft] = values[3];\n        }\n        /**\r\n         * Gets the \"top, right, bottom, left\" CSS properties of the CSS property with the given prefix from the host element.\r\n         * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n         * @param suffix The suffix of the \"top, right, bottom, left\" css properties. (example: 'border-' is a valid prefix with '-width' is a valid suffix)\r\n         * @param zeroX True if the x axis shall be 0.\r\n         * @param zeroY True if the y axis shall be 0.\r\n         * @returns {{}} The object which contains the numbers of the read CSS properties.\r\n         */\n\n\n        function getTopRightBottomLeftHost(prefix, suffix, zeroX, zeroY) {\n          suffix = suffix || _strEmpty;\n          prefix = prefix || _strEmpty;\n          return {\n            t: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strTop + suffix)),\n            r: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strRight + suffix)),\n            b: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strBottom + suffix)),\n            l: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strLeft + suffix))\n          };\n        }\n        /**\r\n         * Returns the computed CSS transition string from the given element.\r\n         * @param element The element from which the transition string shall be returned.\r\n         * @returns {string} The CSS transition string from the given element.\r\n         */\n\n\n        function getCSSTransitionString(element) {\n          var transitionStr = VENDORS._cssProperty('transition');\n\n          var assembledValue = element.css(transitionStr);\n          if (assembledValue) return assembledValue;\n          var regExpString = '\\\\s*(' + '([^,(]+(\\\\(.+?\\\\))?)+' + ')[\\\\s,]*';\n          var regExpMain = new RegExp(regExpString);\n          var regExpValidate = new RegExp('^(' + regExpString + ')+$');\n          var properties = 'property duration timing-function delay'.split(' ');\n          var result = [];\n          var strResult;\n          var valueArray;\n          var i = 0;\n          var j;\n\n          var splitCssStyleByComma = function splitCssStyleByComma(str) {\n            strResult = [];\n            if (!str.match(regExpValidate)) return str;\n\n            while (str.match(regExpMain)) {\n              strResult.push(RegExp.$1);\n              str = str.replace(regExpMain, _strEmpty);\n            }\n\n            return strResult;\n          };\n\n          for (; i < properties[LEXICON.l]; i++) {\n            valueArray = splitCssStyleByComma(element.css(transitionStr + '-' + properties[i]));\n\n            for (j = 0; j < valueArray[LEXICON.l]; j++) {\n              result[j] = (result[j] ? result[j] + _strSpace : _strEmpty) + valueArray[j];\n            }\n          }\n\n          return result.join(', ');\n        }\n        /**\r\n         * Generates a Regular Expression which matches with a string which starts with 'os-host'.\r\n         * @param {boolean} withCurrClassNameOption The Regular Expression also matches if the string is the current ClassName option (multiple values splitted by space possible).\r\n         * @param {boolean} withOldClassNameOption The Regular Expression also matches if the string is the old ClassName option (multiple values splitted by space possible).\r\n         */\n\n\n        function createHostClassNameRegExp(withCurrClassNameOption, withOldClassNameOption) {\n          var i;\n          var split;\n          var appendix;\n\n          var appendClasses = function appendClasses(classes, condition) {\n            appendix = '';\n\n            if (condition && _typeof(classes) == TYPES.s) {\n              split = classes.split(_strSpace);\n\n              for (i = 0; i < split[LEXICON.l]; i++) {\n                appendix += '|' + split[i] + '$';\n              } // split[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') for escaping regex characters\n\n            }\n\n            return appendix;\n          };\n\n          return new RegExp('(^' + _classNameHostElement + '([-_].+|)$)' + appendClasses(_classNameCache, withCurrClassNameOption) + appendClasses(_oldClassName, withOldClassNameOption), 'g');\n        }\n        /**\r\n         * Calculates the host-elements inverted scale. (invertedScale = 1 / scale)\r\n         * @returns {{x: number, y: number}} The scale of the host-element.\r\n         */\n\n\n        function getHostElementInvertedScale() {\n          var rect = _paddingElementNative[LEXICON.bCR]();\n\n          return {\n            x: _supportTransform ? 1 / (MATH.round(rect.width) / _paddingElementNative[LEXICON.oW]) || 1 : 1,\n            y: _supportTransform ? 1 / (MATH.round(rect.height) / _paddingElementNative[LEXICON.oH]) || 1 : 1\n          };\n        }\n        /**\r\n         * Checks whether the given object is a HTMLElement.\r\n         * @param o The object which shall be checked.\r\n         * @returns {boolean} True the given object is a HTMLElement, false otherwise.\r\n         */\n\n\n        function isHTMLElement(o) {\n          var strOwnerDocument = 'ownerDocument';\n          var strHTMLElement = 'HTMLElement';\n          var wnd = o && o[strOwnerDocument] ? o[strOwnerDocument].parentWindow || window : window;\n          return _typeof(wnd[strHTMLElement]) == TYPES.o ? o instanceof wnd[strHTMLElement] : //DOM2\n          o && _typeof(o) == TYPES.o && o !== null && o.nodeType === 1 && _typeof(o.nodeName) == TYPES.s;\n        }\n        /**\r\n         * Compares 2 arrays and returns the differences between them as a array.\r\n         * @param a1 The first array which shall be compared.\r\n         * @param a2 The second array which shall be compared.\r\n         * @returns {Array} The differences between the two arrays.\r\n         */\n\n\n        function getArrayDifferences(a1, a2) {\n          var a = [];\n          var diff = [];\n          var i;\n          var k;\n\n          for (i = 0; i < a1.length; i++) {\n            a[a1[i]] = true;\n          }\n\n          for (i = 0; i < a2.length; i++) {\n            if (a[a2[i]]) delete a[a2[i]];else a[a2[i]] = true;\n          }\n\n          for (k in a) {\n            diff.push(k);\n          }\n\n          return diff;\n        }\n        /**\r\n         * Returns Zero or the number to which the value can be parsed.\r\n         * @param value The value which shall be parsed.\r\n         * @param toFloat Indicates whether the number shall be parsed to a float.\r\n         */\n\n\n        function parseToZeroOrNumber(value, toFloat) {\n          var num = toFloat ? parseFloat(value) : parseInt(value, 10);\n          return isNaN(num) ? 0 : num;\n        }\n        /**\r\n         * Gets several information of the textarea and returns them as a object or undefined if the browser doesn't support it.\r\n         * @returns {{cursorRow: Number, cursorCol, rows: Number, cols: number, wRow: number, pos: number, max : number}} or undefined if not supported.\r\n         */\n\n\n        function getTextareaInfo() {\n          //read needed values\n          var textareaCursorPosition = _targetElementNative.selectionStart;\n          if (textareaCursorPosition === undefined$1) return;\n\n          var textareaValue = _targetElement.val();\n\n          var textareaLength = textareaValue[LEXICON.l];\n          var textareaRowSplit = textareaValue.split('\\n');\n          var textareaLastRow = textareaRowSplit[LEXICON.l];\n          var textareaCurrentCursorRowSplit = textareaValue.substr(0, textareaCursorPosition).split('\\n');\n          var widestRow = 0;\n          var textareaLastCol = 0;\n          var cursorRow = textareaCurrentCursorRowSplit[LEXICON.l];\n          var cursorCol = textareaCurrentCursorRowSplit[textareaCurrentCursorRowSplit[LEXICON.l] - 1][LEXICON.l];\n          var rowCols;\n          var i; //get widest Row and the last column of the textarea\n\n          for (i = 0; i < textareaRowSplit[LEXICON.l]; i++) {\n            rowCols = textareaRowSplit[i][LEXICON.l];\n\n            if (rowCols > textareaLastCol) {\n              widestRow = i + 1;\n              textareaLastCol = rowCols;\n            }\n          }\n\n          return {\n            _cursorRow: cursorRow,\n            //cursorRow\n            _cursorColumn: cursorCol,\n            //cursorCol\n            _rows: textareaLastRow,\n            //rows\n            _columns: textareaLastCol,\n            //cols\n            _widestRow: widestRow,\n            //wRow\n            _cursorPosition: textareaCursorPosition,\n            //pos\n            _cursorMax: textareaLength //max\n\n          };\n        }\n        /**\r\n         * Determines whether native overlay scrollbars are active.\r\n         * @returns {boolean} True if native overlay scrollbars are active, false otherwise.\r\n         */\n\n\n        function nativeOverlayScrollbarsAreActive() {\n          return _ignoreOverlayScrollbarHidingCache && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y;\n        }\n        /**\r\n         * Gets the element which is used to measure the content size.\r\n         * @returns {*} TextareaCover if target element is textarea else the ContentElement.\r\n         */\n\n\n        function getContentMeasureElement() {\n          return _isTextarea ? _textareaCoverElement[0] : _contentElementNative;\n        }\n        /**\r\n         * Generates a string which represents a HTML div with the given classes or attributes.\r\n         * @param classesOrAttrs The class of the div as string or a object which represents the attributes of the div. (The class attribute can also be written as \"className\".)\r\n         * @param content The content of the div as string.\r\n         * @returns {string} The concated string which represents a HTML div and its content.\r\n         */\n\n\n        function generateDiv(classesOrAttrs, content) {\n          return '<div ' + (classesOrAttrs ? type(classesOrAttrs) == TYPES.s ? 'class=\"' + classesOrAttrs + '\"' : function () {\n            var key;\n            var attrs = _strEmpty;\n\n            if (FRAMEWORK.isPlainObject(classesOrAttrs)) {\n              for (key in classesOrAttrs) {\n                attrs += (key === 'c' ? 'class' : key) + '=\"' + classesOrAttrs[key] + '\" ';\n              }\n            }\n\n            return attrs;\n          }() : _strEmpty) + '>' + (content || _strEmpty) + '</div>';\n        }\n        /**\r\n         * Selects or generates a div with the given class attribute.\r\n         * @param className The class names (divided by spaces) of the div which shall be selected or generated.\r\n         * @param selectParentOrOnlyChildren The parent element from which of the element shall be selected. (if undefined or boolean its hostElement)\r\n         * If its a boolean it decides whether only the children of the host element shall be selected.\r\n         * @returns {*} The generated or selected element.\r\n         */\n\n\n        function selectOrGenerateDivByClass(className, selectParentOrOnlyChildren) {\n          var onlyChildren = type(selectParentOrOnlyChildren) == TYPES.b;\n          var selectParent = onlyChildren ? _hostElement : selectParentOrOnlyChildren || _hostElement;\n          return _domExists && !selectParent[LEXICON.l] ? null : _domExists ? selectParent[onlyChildren ? 'children' : 'find'](_strDot + className.replace(/\\s/g, _strDot)).eq(0) : FRAMEWORK(generateDiv(className));\n        }\n        /**\r\n         * Gets the value of the given property from the given object.\r\n         * @param obj The object from which the property value shall be got.\r\n         * @param path The property of which the value shall be got.\r\n         * @returns {*} Returns the value of the searched property or undefined of the property wasn't found.\r\n         */\n\n\n        function getObjectPropVal(obj, path) {\n          var splits = path.split(_strDot);\n          var i = 0;\n          var val;\n\n          for (; i < splits.length; i++) {\n            if (!obj[LEXICON.hOP](splits[i])) return;\n            val = obj[splits[i]];\n            if (i < splits.length && type(val) == TYPES.o) obj = val;\n          }\n\n          return val;\n        }\n        /**\r\n         * Sets the value of the given property from the given object.\r\n         * @param obj The object from which the property value shall be set.\r\n         * @param path The property of which the value shall be set.\r\n         * @param val The value of the property which shall be set.\r\n         */\n\n\n        function setObjectPropVal(obj, path, val) {\n          var splits = path.split(_strDot);\n          var splitsLength = splits.length;\n          var i = 0;\n          var extendObj = {};\n          var extendObjRoot = extendObj;\n\n          for (; i < splitsLength; i++) {\n            extendObj = extendObj[splits[i]] = i + 1 < splitsLength ? {} : val;\n          }\n\n          FRAMEWORK.extend(obj, extendObjRoot, true);\n        }\n        /**\t\r\n         * Runs a action for each selector inside the updateOnLoad option.\t\r\n         * @param {Function} action The action for each updateOnLoad selector, the arguments the function takes is the index and the value (the selector).\t\r\n         */\n\n\n        function eachUpdateOnLoad(action) {\n          var updateOnLoad = _currentPreparedOptions.updateOnLoad;\n          updateOnLoad = type(updateOnLoad) == TYPES.s ? updateOnLoad.split(_strSpace) : updateOnLoad;\n\n          if (COMPATIBILITY.isA(updateOnLoad) && !_destroyed) {\n            each(updateOnLoad, action);\n          }\n        } //==== Utils Cache ====//\n\n        /**\r\n         * Compares two values or objects and returns true if they aren't equal.\r\n         * @param current The first value or object which shall be compared.\r\n         * @param cache The second value or object which shall be compared.\r\n         * @param force If true the returned value is always true.\r\n         * @returns {boolean} True if both values or objects aren't equal or force is true, false otherwise.\r\n         */\n\n\n        function checkCache(current, cache, force) {\n          if (force) return force;\n\n          if (type(current) == TYPES.o && type(cache) == TYPES.o) {\n            for (var prop in current) {\n              if (prop !== 'c') {\n                if (current[LEXICON.hOP](prop) && cache[LEXICON.hOP](prop)) {\n                  if (checkCache(current[prop], cache[prop])) return true;\n                } else {\n                  return true;\n                }\n              }\n            }\n          } else {\n            return current !== cache;\n          }\n\n          return false;\n        } //==== Shortcuts ====//\n\n        /**\r\n         * jQuery extend method shortcut with a appended \"true\" as first argument.\r\n         */\n\n\n        function extendDeep() {\n          return FRAMEWORK.extend.apply(this, [true].concat([].slice.call(arguments)));\n        }\n        /**\r\n         * jQuery addClass method shortcut.\r\n         */\n\n\n        function addClass(el, classes) {\n          return _frameworkProto.addClass.call(el, classes);\n        }\n        /**\r\n         * jQuery removeClass method shortcut.\r\n         */\n\n\n        function removeClass(el, classes) {\n          return _frameworkProto.removeClass.call(el, classes);\n        }\n        /**\r\n         * Adds or removes the given classes dependent on the boolean value. True for add, false for remove.\r\n         */\n\n\n        function addRemoveClass(el, classes, doAdd) {\n          return doAdd ? addClass(el, classes) : removeClass(el, classes);\n        }\n        /**\r\n         * jQuery remove method shortcut.\r\n         */\n\n\n        function remove(el) {\n          return _frameworkProto.remove.call(el);\n        }\n        /**\r\n         * Finds the first child element with the given selector of the given element.\r\n         * @param el The root element from which the selector shall be valid.\r\n         * @param selector The selector of the searched element.\r\n         * @returns {*} The first element which is a child of the given element and matches the givens selector.\r\n         */\n\n\n        function findFirst(el, selector) {\n          return _frameworkProto.find.call(el, selector).eq(0);\n        } //==== API ====//\n\n        /**\r\n         * Puts the instance to sleep. It wont respond to any changes in the DOM and won't update. Scrollbar Interactivity is also disabled as well as the resize handle.\r\n         * This behavior can be reset by calling the update method.\r\n         */\n\n\n        _base.sleep = function () {\n          _sleeping = true;\n        };\n        /**\r\n         * Updates the plugin and DOM to the current options.\r\n         * This method should only be called if a update is 100% required.\r\n         * @param force True if every property shall be updated and the cache shall be ignored.\r\n         * !INTERNAL USAGE! : force can be a string \"auto\", \"sync\" or \"zoom\" too\r\n         * if \"auto\" then before a real update the content size and host element attributes gets checked, and if they changed only then the update method will be called.\r\n         * if \"sync\" then the async update process (MutationObserver or UpdateLoop) gets synchronized and a corresponding update takes place if one was needed due to pending changes.\r\n         * if \"zoom\" then a update takes place where it's assumed that content and host size changed\r\n         * @returns {boolean|undefined} \r\n         * If force is \"sync\" then a boolean is returned which indicates whether a update was needed due to pending changes.\r\n         * If force is \"auto\" then a boolean is returned whether a update was needed due to attribute or size changes.\r\n         * undefined otherwise.\r\n         */\n\n\n        _base.update = function (force) {\n          if (_destroyed) return;\n          var attrsChanged;\n          var contentSizeC;\n          var isString = type(force) == TYPES.s;\n          var doUpdateAuto;\n          var mutHost;\n          var mutContent;\n\n          if (isString) {\n            if (force === _strAuto) {\n              attrsChanged = meaningfulAttrsChanged();\n              contentSizeC = updateAutoContentSizeChanged();\n              doUpdateAuto = attrsChanged || contentSizeC;\n\n              if (doUpdateAuto) {\n                update({\n                  _contentSizeChanged: contentSizeC,\n                  _changedOptions: _initialized ? undefined$1 : _currentPreparedOptions\n                });\n              }\n            } else if (force === _strSync) {\n              if (_mutationObserversConnected) {\n                mutHost = _mutationObserverHostCallback(_mutationObserverHost.takeRecords());\n                mutContent = _mutationObserverContentCallback(_mutationObserverContent.takeRecords());\n              } else {\n                mutHost = _base.update(_strAuto);\n              }\n            } else if (force === 'zoom') {\n              update({\n                _hostSizeChanged: true,\n                _contentSizeChanged: true\n              });\n            }\n          } else {\n            force = _sleeping || force;\n            _sleeping = false;\n            if (!_base.update(_strSync) || force) update({\n              _force: force\n            });\n          }\n\n          updateElementsOnLoad();\n          return doUpdateAuto || mutHost || mutContent;\n        };\n        /**\r\n         Gets or sets the current options. The update method will be called automatically if new options were set.\r\n         * @param newOptions If new options are given, then the new options will be set, if new options aren't given (undefined or a not a plain object) then the current options will be returned.\r\n         * @param value If new options is a property path string, then this value will be used to set the option to which the property path string leads.\r\n         * @returns {*}\r\n         */\n\n\n        _base.options = function (newOptions, value) {\n          var option = {};\n          var changedOps; //return current options if newOptions are undefined or empty\n\n          if (FRAMEWORK.isEmptyObject(newOptions) || !FRAMEWORK.isPlainObject(newOptions)) {\n            if (type(newOptions) == TYPES.s) {\n              if (arguments.length > 1) {\n                setObjectPropVal(option, newOptions, value);\n                changedOps = setOptions(option);\n              } else return getObjectPropVal(_currentOptions, newOptions);\n            } else return _currentOptions;\n          } else {\n            changedOps = setOptions(newOptions);\n          }\n\n          if (!FRAMEWORK.isEmptyObject(changedOps)) {\n            update({\n              _changedOptions: changedOps\n            });\n          }\n        };\n        /**\r\n         * Restore the DOM, disconnects all observers, remove all resize observers and put the instance to sleep.\r\n         */\n\n\n        _base.destroy = function () {\n          if (_destroyed) return; //remove this instance from auto update loop\n\n          autoUpdateLoop.remove(_base); //disconnect all mutation observers\n\n          disconnectMutationObservers(); //remove all resize observers\n\n          setupResizeObserver(_sizeObserverElement);\n          setupResizeObserver(_sizeAutoObserverElement); //remove all extensions\n\n          for (var extName in _extensions) {\n            _base.removeExt(extName);\n          } //remove all 'destroy' events\n\n\n          while (_destroyEvents[LEXICON.l] > 0) {\n            _destroyEvents.pop()();\n          } //remove all events from host element\n\n\n          setupHostMouseTouchEvents(true); //remove all helper / detection elements\n\n          if (_contentGlueElement) remove(_contentGlueElement);\n          if (_contentArrangeElement) remove(_contentArrangeElement);\n          if (_sizeAutoObserverAdded) remove(_sizeAutoObserverElement); //remove all generated DOM\n\n          setupScrollbarsDOM(true);\n          setupScrollbarCornerDOM(true);\n          setupStructureDOM(true); //remove all generated image load events\n\n          for (var i = 0; i < _updateOnLoadElms[LEXICON.l]; i++) {\n            FRAMEWORK(_updateOnLoadElms[i]).off(_updateOnLoadEventName, updateOnLoadCallback);\n          }\n\n          _updateOnLoadElms = undefined$1;\n          _destroyed = true;\n          _sleeping = true; //remove this instance from the instances list\n\n          INSTANCES(pluginTargetElement, 0);\n          dispatchCallback('onDestroyed'); //remove all properties and methods\n          //for (var property in _base)\n          //    delete _base[property];\n          //_base = undefined;\n        };\n        /**\r\n         * Scrolls to a given position or element.\r\n         * @param coordinates\r\n         * 1. Can be \"coordinates\" which looks like:\r\n         *    { x : ?, y : ? } OR          Object with x and y properties\r\n         *    { left : ?, top : ? } OR     Object with left and top properties\r\n         *    { l : ?, t : ? } OR          Object with l and t properties\r\n         *    [ ?, ? ] OR                  Array where the first two element are the coordinates (first is x, second is y)\r\n         *    ?                            A single value which stays for both axis\r\n         *    A value can be a number, a string or a calculation.\r\n         *\r\n         *    Operators:\r\n         *    [NONE]  The current scroll will be overwritten by the value.\r\n         *    '+='    The value will be added to the current scroll offset\r\n         *    '-='    The value will be subtracted from the current scroll offset\r\n         *    '*='    The current scroll wil be multiplicated by the value.\r\n         *    '/='    The current scroll wil be divided by the value.\r\n         *\r\n         *    Units:\r\n         *    [NONE]  The value is the final scroll amount.                   final = (value * 1)\r\n         *    'px'    Same as none\r\n         *    '%'     The value is dependent on the current scroll value.     final = ((currentScrollValue / 100) * value)\r\n         *    'vw'    The value is multiplicated by the viewport width.       final = (value * viewportWidth)\r\n         *    'vh'    The value is multiplicated by the viewport height.      final = (value * viewportHeight)\r\n         *\r\n         *    example final values:\r\n         *    200, '200px', '50%', '1vw', '1vh', '+=200', '/=1vw', '*=2px', '-=5vh', '+=33%', '+= 50% - 2px', '-= 1vw - 50%'\r\n         *\r\n         * 2. Can be a HTML or jQuery element:\r\n         *    The final scroll offset is the offset (without margin) of the given HTML / jQuery element.\r\n         *\r\n         * 3. Can be a object with a HTML or jQuery element with additional settings:\r\n         *    {\r\n         *      el : [HTMLElement, jQuery element],             MUST be specified, else this object isn't valid.\r\n         *      scroll : [string, array, object],               Default value is 'always'.\r\n         *      block : [string, array, object],                Default value is 'begin'.\r\n         *      margin : [number, boolean, array, object]       Default value is false.\r\n         *    }\r\n         *\r\n         *    Possible scroll settings are:\r\n         *    'always'      Scrolls always.\r\n         *    'ifneeded'    Scrolls only if the element isnt fully in view.\r\n         *    'never'       Scrolls never.\r\n         *\r\n         *    Possible block settings are:\r\n         *    'begin'   Both axis shall be docked to the \"begin\" edge. - The element will be docked to the top and left edge of the viewport.\r\n         *    'end'     Both axis shall be docked to the \"end\" edge. - The element will be docked to the bottom and right edge of the viewport. (If direction is RTL to the bottom and left edge.)\r\n         *    'center'  Both axis shall be docked to \"center\". - The element will be centered in the viewport.\r\n         *    'nearest' The element will be docked to the nearest edge(s).\r\n         *\r\n         *    Possible margin settings are: -- The actual margin of the element wont be affect, this option affects only the final scroll offset.\r\n         *    [BOOLEAN]                                         If true the css margin of the element will be used, if false no margin will be used.\r\n         *    [NUMBER]                                          The margin will be used for all edges.\r\n         *\r\n         * @param duration The duration of the scroll animation, OR a jQuery animation configuration object.\r\n         * @param easing The animation easing.\r\n         * @param complete The animation complete callback.\r\n         * @returns {{\r\n         *   position: {x: number, y: number},\r\n         *   ratio: {x: number, y: number},\r\n         *   max: {x: number, y: number},\r\n         *   handleOffset: {x: number, y: number},\r\n         *   handleLength: {x: number, y: number},\r\n         *   handleLengthRatio: {x: number, y: number}, t\r\n         *   rackLength: {x: number, y: number},\r\n         *   isRTL: boolean,\r\n         *   isRTLNormalized: boolean\r\n         *  }}\r\n         */\n\n\n        _base.scroll = function (coordinates, duration, easing, complete) {\n          if (arguments.length === 0 || coordinates === undefined$1) {\n            var infoX = _scrollHorizontalInfo;\n            var infoY = _scrollVerticalInfo;\n            var normalizeInvert = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.i;\n            var normalizeNegate = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.n;\n            var scrollX = infoX._currentScroll;\n            var scrollXRatio = infoX._currentScrollRatio;\n            var maxScrollX = infoX._maxScroll;\n            scrollXRatio = normalizeInvert ? 1 - scrollXRatio : scrollXRatio;\n            scrollX = normalizeInvert ? maxScrollX - scrollX : scrollX;\n            scrollX *= normalizeNegate ? -1 : 1;\n            maxScrollX *= normalizeNegate ? -1 : 1;\n            return {\n              position: {\n                x: scrollX,\n                y: infoY._currentScroll\n              },\n              ratio: {\n                x: scrollXRatio,\n                y: infoY._currentScrollRatio\n              },\n              max: {\n                x: maxScrollX,\n                y: infoY._maxScroll\n              },\n              handleOffset: {\n                x: infoX._handleOffset,\n                y: infoY._handleOffset\n              },\n              handleLength: {\n                x: infoX._handleLength,\n                y: infoY._handleLength\n              },\n              handleLengthRatio: {\n                x: infoX._handleLengthRatio,\n                y: infoY._handleLengthRatio\n              },\n              trackLength: {\n                x: infoX._trackLength,\n                y: infoY._trackLength\n              },\n              snappedHandleOffset: {\n                x: infoX._snappedHandleOffset,\n                y: infoY._snappedHandleOffset\n              },\n              isRTL: _isRTL,\n              isRTLNormalized: _normalizeRTLCache\n            };\n          }\n\n          _base.update(_strSync);\n\n          var normalizeRTL = _normalizeRTLCache;\n          var coordinatesXAxisProps = [_strX, _strLeft, 'l'];\n          var coordinatesYAxisProps = [_strY, _strTop, 't'];\n          var coordinatesOperators = ['+=', '-=', '*=', '/='];\n          var durationIsObject = type(duration) == TYPES.o;\n          var completeCallback = durationIsObject ? duration.complete : complete;\n          var i;\n          var finalScroll = {};\n          var specialEasing = {};\n          var doScrollLeft;\n          var doScrollTop;\n          var animationOptions;\n          var strEnd = 'end';\n          var strBegin = 'begin';\n          var strCenter = 'center';\n          var strNearest = 'nearest';\n          var strAlways = 'always';\n          var strNever = 'never';\n          var strIfNeeded = 'ifneeded';\n          var strLength = LEXICON.l;\n          var settingsAxis;\n          var settingsScroll;\n          var settingsBlock;\n          var settingsMargin;\n          var finalElement;\n          var elementObjSettingsAxisValues = [_strX, _strY, 'xy', 'yx'];\n          var elementObjSettingsBlockValues = [strBegin, strEnd, strCenter, strNearest];\n          var elementObjSettingsScrollValues = [strAlways, strNever, strIfNeeded];\n          var coordinatesIsElementObj = coordinates[LEXICON.hOP]('el');\n          var possibleElement = coordinatesIsElementObj ? coordinates.el : coordinates;\n          var possibleElementIsJQuery = possibleElement instanceof FRAMEWORK || JQUERY ? possibleElement instanceof JQUERY : false;\n          var possibleElementIsHTMLElement = possibleElementIsJQuery ? false : isHTMLElement(possibleElement);\n\n          var updateScrollbarInfos = function updateScrollbarInfos() {\n            if (doScrollLeft) refreshScrollbarHandleOffset(true);\n            if (doScrollTop) refreshScrollbarHandleOffset(false);\n          };\n\n          var proxyCompleteCallback = type(completeCallback) != TYPES.f ? undefined$1 : function () {\n            updateScrollbarInfos();\n            completeCallback();\n          };\n\n          function checkSettingsStringValue(currValue, allowedValues) {\n            for (i = 0; i < allowedValues[strLength]; i++) {\n              if (currValue === allowedValues[i]) return true;\n            }\n\n            return false;\n          }\n\n          function getRawScroll(isX, coordinates) {\n            var coordinateProps = isX ? coordinatesXAxisProps : coordinatesYAxisProps;\n            coordinates = type(coordinates) == TYPES.s || type(coordinates) == TYPES.n ? [coordinates, coordinates] : coordinates;\n            if (COMPATIBILITY.isA(coordinates)) return isX ? coordinates[0] : coordinates[1];else if (type(coordinates) == TYPES.o) {\n              //decides RTL normalization \"hack\" with .n\n              //normalizeRTL = type(coordinates.n) == TYPES.b ? coordinates.n : normalizeRTL; \n              for (i = 0; i < coordinateProps[strLength]; i++) {\n                if (coordinateProps[i] in coordinates) return coordinates[coordinateProps[i]];\n              }\n            }\n          }\n\n          function getFinalScroll(isX, rawScroll) {\n            var isString = type(rawScroll) == TYPES.s;\n            var operator;\n            var amount;\n            var scrollInfo = isX ? _scrollHorizontalInfo : _scrollVerticalInfo;\n            var currScroll = scrollInfo._currentScroll;\n            var maxScroll = scrollInfo._maxScroll;\n            var mult = ' * ';\n            var finalValue;\n            var isRTLisX = _isRTL && isX;\n            var normalizeShortcuts = isRTLisX && _rtlScrollBehavior.n && !normalizeRTL;\n            var strReplace = 'replace';\n            var evalFunc = eval;\n            var possibleOperator;\n\n            if (isString) {\n              //check operator\n              if (rawScroll[strLength] > 2) {\n                possibleOperator = rawScroll.substr(0, 2);\n                if (inArray(possibleOperator, coordinatesOperators) > -1) operator = possibleOperator;\n              } //calculate units and shortcuts\n\n\n              rawScroll = operator ? rawScroll.substr(2) : rawScroll;\n              rawScroll = rawScroll[strReplace](/min/g, 0) //'min' = 0%\n              [strReplace](/</g, 0) //'<'   = 0%\n              [strReplace](/max/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent) //'max' = 100%\n              [strReplace](/>/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent) //'>'   = 100%\n              [strReplace](/px/g, _strEmpty)[strReplace](/%/g, mult + maxScroll * (isRTLisX && _rtlScrollBehavior.n ? -1 : 1) / 100.0)[strReplace](/vw/g, mult + _viewportSize.w)[strReplace](/vh/g, mult + _viewportSize.h);\n              amount = parseToZeroOrNumber(isNaN(rawScroll) ? parseToZeroOrNumber(evalFunc(rawScroll), true).toFixed() : rawScroll);\n            } else {\n              amount = rawScroll;\n            }\n\n            if (amount !== undefined$1 && !isNaN(amount) && type(amount) == TYPES.n) {\n              var normalizeIsRTLisX = normalizeRTL && isRTLisX;\n              var operatorCurrScroll = currScroll * (normalizeIsRTLisX && _rtlScrollBehavior.n ? -1 : 1);\n              var invert = normalizeIsRTLisX && _rtlScrollBehavior.i;\n              var negate = normalizeIsRTLisX && _rtlScrollBehavior.n;\n              operatorCurrScroll = invert ? maxScroll - operatorCurrScroll : operatorCurrScroll;\n\n              switch (operator) {\n                case '+=':\n                  finalValue = operatorCurrScroll + amount;\n                  break;\n\n                case '-=':\n                  finalValue = operatorCurrScroll - amount;\n                  break;\n\n                case '*=':\n                  finalValue = operatorCurrScroll * amount;\n                  break;\n\n                case '/=':\n                  finalValue = operatorCurrScroll / amount;\n                  break;\n\n                default:\n                  finalValue = amount;\n                  break;\n              }\n\n              finalValue = invert ? maxScroll - finalValue : finalValue;\n              finalValue *= negate ? -1 : 1;\n              finalValue = isRTLisX && _rtlScrollBehavior.n ? MATH.min(0, MATH.max(maxScroll, finalValue)) : MATH.max(0, MATH.min(maxScroll, finalValue));\n            }\n\n            return finalValue === currScroll ? undefined$1 : finalValue;\n          }\n\n          function getPerAxisValue(value, valueInternalType, defaultValue, allowedValues) {\n            var resultDefault = [defaultValue, defaultValue];\n            var valueType = type(value);\n            var valueArrLength;\n            var valueArrItem; //value can be [ string, or array of two strings ]\n\n            if (valueType == valueInternalType) {\n              value = [value, value];\n            } else if (valueType == TYPES.a) {\n              valueArrLength = value[strLength];\n              if (valueArrLength > 2 || valueArrLength < 1) value = resultDefault;else {\n                if (valueArrLength === 1) value[1] = defaultValue;\n\n                for (i = 0; i < valueArrLength; i++) {\n                  valueArrItem = value[i];\n\n                  if (type(valueArrItem) != valueInternalType || !checkSettingsStringValue(valueArrItem, allowedValues)) {\n                    value = resultDefault;\n                    break;\n                  }\n                }\n              }\n            } else if (valueType == TYPES.o) value = [value[_strX] || defaultValue, value[_strY] || defaultValue];else value = resultDefault;\n\n            return {\n              x: value[0],\n              y: value[1]\n            };\n          }\n\n          function generateMargin(marginTopRightBottomLeftArray) {\n            var result = [];\n            var currValue;\n            var currValueType;\n            var valueDirections = [_strTop, _strRight, _strBottom, _strLeft];\n\n            for (i = 0; i < marginTopRightBottomLeftArray[strLength]; i++) {\n              if (i === valueDirections[strLength]) break;\n              currValue = marginTopRightBottomLeftArray[i];\n              currValueType = type(currValue);\n              if (currValueType == TYPES.b) result.push(currValue ? parseToZeroOrNumber(finalElement.css(_strMarginMinus + valueDirections[i])) : 0);else result.push(currValueType == TYPES.n ? currValue : 0);\n            }\n\n            return result;\n          }\n\n          if (possibleElementIsJQuery || possibleElementIsHTMLElement) {\n            //get settings\n            var margin = coordinatesIsElementObj ? coordinates.margin : 0;\n            var axis = coordinatesIsElementObj ? coordinates.axis : 0;\n            var scroll = coordinatesIsElementObj ? coordinates.scroll : 0;\n            var block = coordinatesIsElementObj ? coordinates.block : 0;\n            var marginDefault = [0, 0, 0, 0];\n            var marginType = type(margin);\n            var marginLength;\n            finalElement = possibleElementIsJQuery ? possibleElement : FRAMEWORK(possibleElement);\n\n            if (finalElement[strLength] > 0) {\n              //margin can be [ boolean, number, array of 2, array of 4, object ]\n              if (marginType == TYPES.n || marginType == TYPES.b) margin = generateMargin([margin, margin, margin, margin]);else if (marginType == TYPES.a) {\n                marginLength = margin[strLength];\n                if (marginLength === 2) margin = generateMargin([margin[0], margin[1], margin[0], margin[1]]);else if (marginLength >= 4) margin = generateMargin(margin);else margin = marginDefault;\n              } else if (marginType == TYPES.o) margin = generateMargin([margin[_strTop], margin[_strRight], margin[_strBottom], margin[_strLeft]]);else margin = marginDefault; //block = type(block) === TYPES.b ? block ? [ strNearest, strBegin ] : [ strNearest, strEnd ] : block;\n\n              settingsAxis = checkSettingsStringValue(axis, elementObjSettingsAxisValues) ? axis : 'xy';\n              settingsScroll = getPerAxisValue(scroll, TYPES.s, strAlways, elementObjSettingsScrollValues);\n              settingsBlock = getPerAxisValue(block, TYPES.s, strBegin, elementObjSettingsBlockValues);\n              settingsMargin = margin;\n              var viewportScroll = {\n                l: _scrollHorizontalInfo._currentScroll,\n                t: _scrollVerticalInfo._currentScroll\n              }; // use padding element instead of viewport element because padding element has never padding, margin or position applied.\n\n              var viewportOffset = _paddingElement.offset(); //get coordinates\n\n\n              var elementOffset = finalElement.offset();\n              var doNotScroll = {\n                x: settingsScroll.x == strNever || settingsAxis == _strY,\n                y: settingsScroll.y == strNever || settingsAxis == _strX\n              };\n              elementOffset[_strTop] -= settingsMargin[0];\n              elementOffset[_strLeft] -= settingsMargin[3];\n              var elementScrollCoordinates = {\n                x: MATH.round(elementOffset[_strLeft] - viewportOffset[_strLeft] + viewportScroll.l),\n                y: MATH.round(elementOffset[_strTop] - viewportOffset[_strTop] + viewportScroll.t)\n              };\n\n              if (_isRTL) {\n                if (!_rtlScrollBehavior.n && !_rtlScrollBehavior.i) elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + viewportScroll.l);\n                if (_rtlScrollBehavior.n && normalizeRTL) elementScrollCoordinates.x *= -1;\n                if (_rtlScrollBehavior.i && normalizeRTL) elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + (_scrollHorizontalInfo._maxScroll - viewportScroll.l));\n              } //measuring is required\n\n\n              if (settingsBlock.x != strBegin || settingsBlock.y != strBegin || settingsScroll.x == strIfNeeded || settingsScroll.y == strIfNeeded || _isRTL) {\n                var measuringElm = finalElement[0];\n                var rawElementSize = _supportTransform ? measuringElm[LEXICON.bCR]() : {\n                  width: measuringElm[LEXICON.oW],\n                  height: measuringElm[LEXICON.oH]\n                };\n                var elementSize = {\n                  w: rawElementSize[_strWidth] + settingsMargin[3] + settingsMargin[1],\n                  h: rawElementSize[_strHeight] + settingsMargin[0] + settingsMargin[2]\n                };\n\n                var finalizeBlock = function finalizeBlock(isX) {\n                  var vars = getScrollbarVars(isX);\n                  var wh = vars._w_h;\n                  var lt = vars._left_top;\n                  var xy = vars._x_y;\n                  var blockIsEnd = settingsBlock[xy] == (isX ? _isRTL ? strBegin : strEnd : strEnd);\n                  var blockIsCenter = settingsBlock[xy] == strCenter;\n                  var blockIsNearest = settingsBlock[xy] == strNearest;\n                  var scrollNever = settingsScroll[xy] == strNever;\n                  var scrollIfNeeded = settingsScroll[xy] == strIfNeeded;\n                  var vpSize = _viewportSize[wh];\n                  var vpOffset = viewportOffset[lt];\n                  var elSize = elementSize[wh];\n                  var elOffset = elementOffset[lt];\n                  var divide = blockIsCenter ? 2 : 1;\n                  var elementCenterOffset = elOffset + elSize / 2;\n                  var viewportCenterOffset = vpOffset + vpSize / 2;\n                  var isInView = elSize <= vpSize && elOffset >= vpOffset && elOffset + elSize <= vpOffset + vpSize;\n                  if (scrollNever) doNotScroll[xy] = true;else if (!doNotScroll[xy]) {\n                    if (blockIsNearest || scrollIfNeeded) {\n                      doNotScroll[xy] = scrollIfNeeded ? isInView : false;\n                      blockIsEnd = elSize < vpSize ? elementCenterOffset > viewportCenterOffset : elementCenterOffset < viewportCenterOffset;\n                    }\n\n                    elementScrollCoordinates[xy] -= blockIsEnd || blockIsCenter ? (vpSize / divide - elSize / divide) * (isX && _isRTL && normalizeRTL ? -1 : 1) : 0;\n                  }\n                };\n\n                finalizeBlock(true);\n                finalizeBlock(false);\n              }\n\n              if (doNotScroll.y) delete elementScrollCoordinates.y;\n              if (doNotScroll.x) delete elementScrollCoordinates.x;\n              coordinates = elementScrollCoordinates;\n            }\n          }\n\n          finalScroll[_strScrollLeft] = getFinalScroll(true, getRawScroll(true, coordinates));\n          finalScroll[_strScrollTop] = getFinalScroll(false, getRawScroll(false, coordinates));\n          doScrollLeft = finalScroll[_strScrollLeft] !== undefined$1;\n          doScrollTop = finalScroll[_strScrollTop] !== undefined$1;\n\n          if ((doScrollLeft || doScrollTop) && (duration > 0 || durationIsObject)) {\n            if (durationIsObject) {\n              duration.complete = proxyCompleteCallback;\n\n              _viewportElement.animate(finalScroll, duration);\n            } else {\n              animationOptions = {\n                duration: duration,\n                complete: proxyCompleteCallback\n              };\n\n              if (COMPATIBILITY.isA(easing) || FRAMEWORK.isPlainObject(easing)) {\n                specialEasing[_strScrollLeft] = easing[0] || easing.x;\n                specialEasing[_strScrollTop] = easing[1] || easing.y;\n                animationOptions.specialEasing = specialEasing;\n              } else {\n                animationOptions.easing = easing;\n              }\n\n              _viewportElement.animate(finalScroll, animationOptions);\n            }\n          } else {\n            if (doScrollLeft) _viewportElement[_strScrollLeft](finalScroll[_strScrollLeft]);\n            if (doScrollTop) _viewportElement[_strScrollTop](finalScroll[_strScrollTop]);\n            updateScrollbarInfos();\n          }\n        };\n        /**\r\n         * Stops all scroll animations.\r\n         * @returns {*} The current OverlayScrollbars instance (for chaining).\r\n         */\n\n\n        _base.scrollStop = function (param1, param2, param3) {\n          _viewportElement.stop(param1, param2, param3);\n\n          return _base;\n        };\n        /**\r\n         * Returns all relevant elements.\r\n         * @param elementName The name of the element which shall be returned.\r\n         * @returns {{target: *, host: *, padding: *, viewport: *, content: *, scrollbarHorizontal: {scrollbar: *, track: *, handle: *}, scrollbarVertical: {scrollbar: *, track: *, handle: *}, scrollbarCorner: *} | *}\r\n         */\n\n\n        _base.getElements = function (elementName) {\n          var obj = {\n            target: _targetElementNative,\n            host: _hostElementNative,\n            padding: _paddingElementNative,\n            viewport: _viewportElementNative,\n            content: _contentElementNative,\n            scrollbarHorizontal: {\n              scrollbar: _scrollbarHorizontalElement[0],\n              track: _scrollbarHorizontalTrackElement[0],\n              handle: _scrollbarHorizontalHandleElement[0]\n            },\n            scrollbarVertical: {\n              scrollbar: _scrollbarVerticalElement[0],\n              track: _scrollbarVerticalTrackElement[0],\n              handle: _scrollbarVerticalHandleElement[0]\n            },\n            scrollbarCorner: _scrollbarCornerElement[0]\n          };\n          return type(elementName) == TYPES.s ? getObjectPropVal(obj, elementName) : obj;\n        };\n        /**\r\n         * Returns a object which describes the current state of this instance.\r\n         * @param stateProperty A specific property from the state object which shall be returned.\r\n         * @returns {{widthAuto, heightAuto, overflowAmount, hideOverflow, hasOverflow, contentScrollSize, viewportSize, hostSize, autoUpdate} | *}\r\n         */\n\n\n        _base.getState = function (stateProperty) {\n          function prepare(obj) {\n            if (!FRAMEWORK.isPlainObject(obj)) return obj;\n            var extended = extendDeep({}, obj);\n\n            var changePropertyName = function changePropertyName(from, to) {\n              if (extended[LEXICON.hOP](from)) {\n                extended[to] = extended[from];\n                delete extended[from];\n              }\n            };\n\n            changePropertyName('w', _strWidth); //change w to width\n\n            changePropertyName('h', _strHeight); //change h to height\n\n            delete extended.c; //delete c (the 'changed' prop)\n\n            return extended;\n          }\n\n          var obj = {\n            destroyed: !!prepare(_destroyed),\n            sleeping: !!prepare(_sleeping),\n            autoUpdate: prepare(!_mutationObserversConnected),\n            widthAuto: prepare(_widthAutoCache),\n            heightAuto: prepare(_heightAutoCache),\n            padding: prepare(_cssPaddingCache),\n            overflowAmount: prepare(_overflowAmountCache),\n            hideOverflow: prepare(_hideOverflowCache),\n            hasOverflow: prepare(_hasOverflowCache),\n            contentScrollSize: prepare(_contentScrollSizeCache),\n            viewportSize: prepare(_viewportSize),\n            hostSize: prepare(_hostSizeCache),\n            documentMixed: prepare(_documentMixed)\n          };\n          return type(stateProperty) == TYPES.s ? getObjectPropVal(obj, stateProperty) : obj;\n        };\n        /**\r\n         * Gets all or specific extension instance.\r\n         * @param extName The name of the extension from which the instance shall be got.\r\n         * @returns {{}} The instance of the extension with the given name or undefined if the instance couldn't be found.\r\n         */\n\n\n        _base.ext = function (extName) {\n          var result;\n\n          var privateMethods = _extensionsPrivateMethods.split(' ');\n\n          var i = 0;\n\n          if (type(extName) == TYPES.s) {\n            if (_extensions[LEXICON.hOP](extName)) {\n              result = extendDeep({}, _extensions[extName]);\n\n              for (; i < privateMethods.length; i++) {\n                delete result[privateMethods[i]];\n              }\n            }\n          } else {\n            result = {};\n\n            for (i in _extensions) {\n              result[i] = extendDeep({}, _base.ext(i));\n            }\n          }\n\n          return result;\n        };\n        /**\r\n         * Adds a extension to this instance.\r\n         * @param extName The name of the extension which shall be added.\r\n         * @param extensionOptions The extension options which shall be used.\r\n         * @returns {{}} The instance of the added extension or undefined if the extension couldn't be added properly.\r\n         */\n\n\n        _base.addExt = function (extName, extensionOptions) {\n          var registeredExtensionObj = _plugin.extension(extName);\n\n          var instance;\n          var instanceAdded;\n          var instanceContract;\n          var contractResult;\n          var contractFulfilled = true;\n\n          if (registeredExtensionObj) {\n            if (!_extensions[LEXICON.hOP](extName)) {\n              instance = registeredExtensionObj.extensionFactory.call(_base, extendDeep({}, registeredExtensionObj.defaultOptions), FRAMEWORK, COMPATIBILITY);\n\n              if (instance) {\n                instanceContract = instance.contract;\n\n                if (type(instanceContract) == TYPES.f) {\n                  contractResult = instanceContract(window);\n                  contractFulfilled = type(contractResult) == TYPES.b ? contractResult : contractFulfilled;\n                }\n\n                if (contractFulfilled) {\n                  _extensions[extName] = instance;\n                  instanceAdded = instance.added;\n                  if (type(instanceAdded) == TYPES.f) instanceAdded(extensionOptions);\n                  return _base.ext(extName);\n                }\n              }\n            } else return _base.ext(extName);\n          } else console.warn(\"A extension with the name \\\"\" + extName + \"\\\" isn't registered.\");\n        };\n        /**\r\n         * Removes a extension from this instance.\r\n         * @param extName The name of the extension which shall be removed.\r\n         * @returns {boolean} True if the extension was removed, false otherwise e.g. if the extension wasn't added before.\r\n         */\n\n\n        _base.removeExt = function (extName) {\n          var instance = _extensions[extName];\n          var instanceRemoved;\n\n          if (instance) {\n            delete _extensions[extName];\n            instanceRemoved = instance.removed;\n            if (type(instanceRemoved) == TYPES.f) instanceRemoved();\n            return true;\n          }\n\n          return false;\n        };\n        /**\r\n         * Constructs the plugin.\r\n         * @param targetElement The element to which the plugin shall be applied.\r\n         * @param options The initial options of the plugin.\r\n         * @param extensions The extension(s) which shall be added right after the initialization.\r\n         * @returns {boolean} True if the plugin was successfully initialized, false otherwise.\r\n         */\n\n\n        function construct(targetElement, options, extensions) {\n          _defaultOptions = globals.defaultOptions;\n          _nativeScrollbarStyling = globals.nativeScrollbarStyling;\n          _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\n          _nativeScrollbarIsOverlaid = extendDeep({}, globals.nativeScrollbarIsOverlaid);\n          _overlayScrollbarDummySize = extendDeep({}, globals.overlayScrollbarDummySize);\n          _rtlScrollBehavior = extendDeep({}, globals.rtlScrollBehavior); //parse & set options but don't update\n\n          setOptions(extendDeep({}, _defaultOptions, options));\n          _cssCalc = globals.cssCalc;\n          _msieVersion = globals.msie;\n          _autoUpdateRecommended = globals.autoUpdateRecommended;\n          _supportTransition = globals.supportTransition;\n          _supportTransform = globals.supportTransform;\n          _supportPassiveEvents = globals.supportPassiveEvents;\n          _supportResizeObserver = globals.supportResizeObserver;\n          _supportMutationObserver = globals.supportMutationObserver;\n          _documentElement = FRAMEWORK(targetElement.ownerDocument);\n          _documentElementNative = _documentElement[0];\n          _windowElement = FRAMEWORK(_documentElementNative.defaultView || _documentElementNative.parentWindow);\n          _windowElementNative = _windowElement[0];\n          _htmlElement = findFirst(_documentElement, 'html');\n          _bodyElement = findFirst(_htmlElement, 'body');\n          _targetElement = FRAMEWORK(targetElement);\n          _targetElementNative = _targetElement[0];\n          _isTextarea = _targetElement.is('textarea');\n          _isBody = _targetElement.is('body');\n          _documentMixed = _documentElementNative !== document;\n          /* On a div Element The if checks only whether:\r\n           * - the targetElement has the class \"os-host\"\r\n           * - the targetElement has a a child with the class \"os-padding\"\r\n           * \r\n           * If that's the case, its assumed the DOM has already the following structure:\r\n           * (The \".os-host\" element is the targetElement)\r\n           *\r\n           *  <div class=\"os-host\">\r\n           *      <div class=\"os-resize-observer-host\"></div>\r\n           *      <div class=\"os-padding\">\r\n           *          <div class=\"os-viewport\">\r\n           *              <div class=\"os-content\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar-corner\"></div>\r\n           *  </div>\r\n           *\r\n           * =====================================================================================\r\n           * \r\n           * On a Textarea Element The if checks only whether:\r\n           * - the targetElement has the class \"os-textarea\" \r\n           * - the targetElement is inside a element with the class \"os-content\" \r\n           * \r\n           * If that's the case, its assumed the DOM has already the following structure:\r\n           * (The \".os-textarea\" (textarea) element is the targetElement)\r\n           *\r\n           *  <div class=\"os-host-textarea\">\r\n           *      <div class=\"os-resize-observer-host\"></div>\r\n           *      <div class=\"os-padding os-text-inherit\">\r\n           *          <div class=\"os-viewport os-text-inherit\">\r\n           *              <div class=\"os-content os-text-inherit\">\r\n           *                  <div class=\"os-textarea-cover\"></div>\r\n           *                  <textarea class=\"os-textarea os-text-inherit\"></textarea>\r\n           *              </div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar-corner\"></div>\r\n           *  </div>\r\n           */\n\n          _domExists = _isTextarea ? _targetElement.hasClass(_classNameTextareaElement) && _targetElement.parent().hasClass(_classNameContentElement) : _targetElement.hasClass(_classNameHostElement) && _targetElement.children(_strDot + _classNamePaddingElement)[LEXICON.l];\n          var initBodyScroll;\n\n          var _bodyMouseTouchDownListener; //check if the plugin hasn't to be initialized\n\n\n          if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y && !_currentPreparedOptions.nativeScrollbarsOverlaid.initialize) {\n            dispatchCallback('onInitializationWithdrawn');\n\n            if (_domExists) {\n              setupStructureDOM(true);\n              setupScrollbarsDOM(true);\n              setupScrollbarCornerDOM(true);\n            }\n\n            _destroyed = true;\n            _sleeping = true;\n            return _base;\n          }\n\n          if (_isBody) {\n            initBodyScroll = {};\n            initBodyScroll.l = MATH.max(_targetElement[_strScrollLeft](), _htmlElement[_strScrollLeft](), _windowElement[_strScrollLeft]());\n            initBodyScroll.t = MATH.max(_targetElement[_strScrollTop](), _htmlElement[_strScrollTop](), _windowElement[_strScrollTop]());\n\n            _bodyMouseTouchDownListener = function bodyMouseTouchDownListener() {\n              _viewportElement.removeAttr(LEXICON.ti);\n\n              setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, _bodyMouseTouchDownListener, true, true);\n            };\n          } //build OverlayScrollbars DOM\n\n\n          setupStructureDOM();\n          setupScrollbarsDOM();\n          setupScrollbarCornerDOM(); //create OverlayScrollbars events\n\n          setupStructureEvents();\n          setupScrollbarEvents(true);\n          setupScrollbarEvents(false);\n          setupScrollbarCornerEvents(); //create mutation observers\n\n          createMutationObservers(); //build resize observer for the host element\n\n          setupResizeObserver(_sizeObserverElement, hostOnResized);\n\n          if (_isBody) {\n            //apply the body scroll to handle it right in the update method\n            _viewportElement[_strScrollLeft](initBodyScroll.l)[_strScrollTop](initBodyScroll.t); //set the focus on the viewport element so you dont have to click on the page to use keyboard keys (up / down / space) for scrolling\n\n\n            if (document.activeElement == targetElement && _viewportElementNative.focus) {\n              //set a tabindex to make the viewportElement focusable\n              _viewportElement.attr(LEXICON.ti, '-1');\n\n              _viewportElementNative.focus();\n              /* the tabindex has to be removed due to;\r\n               * If you set the tabindex attribute on an <div>, then its child content cannot be scrolled with the arrow keys unless you set tabindex on the content, too\r\n               * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\r\n               */\n\n\n              setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, _bodyMouseTouchDownListener, false, true);\n            }\n          } //update for the first time & initialize cache\n\n\n          _base.update(_strAuto); //the plugin is initialized now!\n\n\n          _initialized = true;\n          dispatchCallback('onInitialized'); //call all callbacks which would fire before the initialized was complete\n\n          each(_callbacksInitQeueue, function (index, value) {\n            dispatchCallback(value.n, value.a);\n          });\n          _callbacksInitQeueue = []; //add extensions\n\n          if (type(extensions) == TYPES.s) extensions = [extensions];\n          if (COMPATIBILITY.isA(extensions)) each(extensions, function (index, value) {\n            _base.addExt(value);\n          });else if (FRAMEWORK.isPlainObject(extensions)) each(extensions, function (key, value) {\n            _base.addExt(key, value);\n          }); //add the transition class for transitions AFTER the first update & AFTER the applied extensions (for preventing unwanted transitions)\n\n          setTimeout(function () {\n            if (_supportTransition && !_destroyed) addClass(_hostElement, _classNameHostTransition);\n          }, 333);\n          return _base;\n        }\n\n        if (_plugin.valid(construct(pluginTargetElement, options, extensions))) {\n          INSTANCES(pluginTargetElement, _base);\n        }\n\n        return _base;\n      }\n      /**\r\n       * Initializes a new OverlayScrollbarsInstance object or changes options if already initialized or returns the current instance.\r\n       * @param pluginTargetElements The elements to which the Plugin shall be initialized.\r\n       * @param options The custom options with which the plugin shall be initialized.\r\n       * @param extensions The extension(s) which shall be added right after initialization.\r\n       * @returns {*}\r\n       */\n\n\n      _plugin = window[PLUGINNAME] = function (pluginTargetElements, options, extensions) {\n        if (arguments[LEXICON.l] === 0) return this;\n        var arr = [];\n        var optsIsPlainObj = FRAMEWORK.isPlainObject(options);\n        var inst;\n        var result; //pluginTargetElements is null or undefined\n\n        if (!pluginTargetElements) return optsIsPlainObj || !options ? result : arr;\n        /*\r\n           pluginTargetElements will be converted to:\r\n           1. A jQueryElement Array\r\n           2. A HTMLElement Array\r\n           3. A Array with a single HTML Element\r\n           so pluginTargetElements is always a array.\r\n        */\n\n        pluginTargetElements = pluginTargetElements[LEXICON.l] != undefined$1 ? pluginTargetElements : [pluginTargetElements[0] || pluginTargetElements];\n        initOverlayScrollbarsStatics();\n\n        if (pluginTargetElements[LEXICON.l] > 0) {\n          if (optsIsPlainObj) {\n            FRAMEWORK.each(pluginTargetElements, function (i, v) {\n              inst = v;\n              if (inst !== undefined$1) arr.push(OverlayScrollbarsInstance(inst, options, extensions, _pluginsGlobals, _pluginsAutoUpdateLoop));\n            });\n          } else {\n            FRAMEWORK.each(pluginTargetElements, function (i, v) {\n              inst = INSTANCES(v);\n              if (options === '!' && _plugin.valid(inst) || COMPATIBILITY.type(options) == TYPES.f && options(v, inst)) arr.push(inst);else if (options === undefined$1) arr.push(inst);\n            });\n          }\n\n          result = arr[LEXICON.l] === 1 ? arr[0] : arr;\n        }\n\n        return result;\n      };\n      /**\r\n       * Returns a object which contains global information about the plugin and each instance of it.\r\n       * The returned object is just a copy, that means that changes to the returned object won't have any effect to the original object.\r\n       */\n\n\n      _plugin.globals = function () {\n        initOverlayScrollbarsStatics();\n        var globals = FRAMEWORK.extend(true, {}, _pluginsGlobals);\n        delete globals['msie'];\n        return globals;\n      };\n      /**\r\n       * Gets or Sets the default options for each new plugin initialization.\r\n       * @param newDefaultOptions The object with which the default options shall be extended.\r\n       */\n\n\n      _plugin.defaultOptions = function (newDefaultOptions) {\n        initOverlayScrollbarsStatics();\n        var currDefaultOptions = _pluginsGlobals.defaultOptions;\n        if (newDefaultOptions === undefined$1) return FRAMEWORK.extend(true, {}, currDefaultOptions); //set the new default options\n\n        _pluginsGlobals.defaultOptions = FRAMEWORK.extend(true, {}, currDefaultOptions, _pluginsOptions._validate(newDefaultOptions, _pluginsOptions._template, true, currDefaultOptions)._default);\n      };\n      /**\r\n       * Checks whether the passed instance is a non-destroyed OverlayScrollbars instance.\r\n       * @param osInstance The potential OverlayScrollbars instance which shall be checked.\r\n       * @returns {boolean} True if the passed value is a non-destroyed OverlayScrollbars instance, false otherwise.\r\n       */\n\n\n      _plugin.valid = function (osInstance) {\n        return osInstance instanceof _plugin && !osInstance.getState().destroyed;\n      };\n      /**\r\n       * Registers, Unregisters or returns a extension.\r\n       * Register: Pass the name and the extension. (defaultOptions is optional)\r\n       * Unregister: Pass the name and anything except a function as extension parameter.\r\n       * Get extension: Pass the name of the extension which shall be got.\r\n       * Get all extensions: Pass no arguments.\r\n       * @param extensionName The name of the extension which shall be registered, unregistered or returned.\r\n       * @param extension A function which generates the instance of the extension or anything other to remove a already registered extension.\r\n       * @param defaultOptions The default options which shall be used for the registered extension.\r\n       */\n\n\n      _plugin.extension = function (extensionName, extension, defaultOptions) {\n        var extNameTypeString = COMPATIBILITY.type(extensionName) == TYPES.s;\n        var argLen = arguments[LEXICON.l];\n        var i = 0;\n\n        if (argLen < 1 || !extNameTypeString) {\n          //return a copy of all extension objects\n          return FRAMEWORK.extend(true, {\n            length: _pluginsExtensions[LEXICON.l]\n          }, _pluginsExtensions);\n        } else if (extNameTypeString) {\n          if (COMPATIBILITY.type(extension) == TYPES.f) {\n            //register extension\n            _pluginsExtensions.push({\n              name: extensionName,\n              extensionFactory: extension,\n              defaultOptions: defaultOptions\n            });\n          } else {\n            for (; i < _pluginsExtensions[LEXICON.l]; i++) {\n              if (_pluginsExtensions[i].name === extensionName) {\n                if (argLen > 1) _pluginsExtensions.splice(i, 1); //remove extension\n                else return FRAMEWORK.extend(true, {}, _pluginsExtensions[i]); //return extension with the given name\n              }\n            }\n          }\n        }\n      };\n\n      return _plugin;\n    }();\n\n    if (JQUERY && JQUERY.fn) {\n      /**\r\n       * The jQuery initialization interface.\r\n       * @param options The initial options for the construction of the plugin. To initialize the plugin, this option has to be a object! If it isn't a object, the instance(s) are returned and the plugin wont be initialized.\r\n       * @param extensions The extension(s) which shall be added right after initialization.\r\n       * @returns {*} After initialization it returns the jQuery element array, else it returns the instance(s) of the elements which are selected.\r\n       */\n      JQUERY.fn.overlayScrollbars = function (options, extensions) {\n        var _elements = this;\n\n        if (JQUERY.isPlainObject(options)) {\n          JQUERY.each(_elements, function () {\n            PLUGIN(this, options, extensions);\n          });\n          return _elements;\n        } else return PLUGIN(_elements, options);\n      };\n    }\n\n    return PLUGIN;\n  });\n})(OverlayScrollbars$1);\n\nvar OverlayScrollbars = OverlayScrollbars$1.exports;\n/**\n * Using overlayscrollbars-react component results use the esm modules\n * which doesn't go through babel leading to IE 11 uncompatibility\n * A PR is submitted that may fix this:\n * https://github.com/KingSora/OverlayScrollbars/pull/218\n * */\n\nvar OverlayScrollbarsComponent = function OverlayScrollbarsComponent(_a) {\n  var _a$options = _a.options,\n      options = _a$options === void 0 ? {} : _a$options,\n      extensions = _a.extensions,\n      className = _a.className,\n      children = _a.children,\n      rest = __rest(_a, [\"options\", \"extensions\", \"className\", \"children\"]);\n\n  var osTargetRef = useRef();\n  var osInstance = useRef();\n  useEffect(function () {\n    osInstance.current = OverlayScrollbars(osTargetRef.current, options, extensions);\n    mergeHostClassNames(osInstance.current, className);\n    return function () {\n      if (OverlayScrollbars.valid(osInstance.current)) {\n        osInstance.current.destroy();\n        osInstance.current = null;\n      }\n    };\n  }, []);\n  useEffect(function () {\n    if (OverlayScrollbars.valid(osInstance.current)) {\n      osInstance.current.options(options);\n    }\n  }, [options]);\n  useEffect(function () {\n    if (OverlayScrollbars.valid(osInstance.current)) {\n      mergeHostClassNames(osInstance.current, className);\n    }\n  }, [className]);\n  return React__default.createElement(\"div\", Object.assign({\n    className: \"os-host\"\n  }, rest, {\n    ref: osTargetRef\n  }), React__default.createElement(\"div\", {\n    className: \"os-resize-observer-host\"\n  }), React__default.createElement(\"div\", {\n    className: \"os-padding\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-viewport\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-content\"\n  }, children))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar os-scrollbar-horizontal \"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-track\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-handle\"\n  }))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar os-scrollbar-vertical\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-track\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-handle\"\n  }))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar-corner\"\n  }));\n};\n\nfunction mergeHostClassNames(osInstance, className) {\n  if (OverlayScrollbars.valid(osInstance)) {\n    var _osInstance$getElemen = osInstance.getElements(),\n        host = _osInstance$getElemen.host;\n\n    var regex = new RegExp(\"(^os-host([-_].+|)$)|\".concat(osInstance.options().className.replace(/\\s/g, '$|'), \"$\"), 'g');\n    var osClassNames = host.className.split(' ').filter(function (name) {\n      return name.match(regex);\n    }).join(' ');\n    host.className = \"\".concat(osClassNames, \" \").concat(className || '');\n  }\n}\n\nexport { OverlayScrollbarsComponent, OverlayScrollbarsComponent as default };\n"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","module","global","OverlayScrollbars$1","exports","window","commonjsGlobal","document","undefined$1","_targets","_instancePropertyString","_easingsMath","PLUGINNAME","TYPES","o","f","a","s","b","n","u","z","LEXICON","c","i","l","p","ti","oH","cH","sH","oW","cW","sW","hOP","bCR","VENDORS","jsCache","cssCache","cssPrefixes","jsPrefixes","firstLetterToUpper","str","charAt","toUpperCase","slice","_cssPrefixes","_jsPrefixes","_cssProperty","name","result","resultPossibilities","v","currVendorWithoutDashes","uppercasedName","elmStyle","createElement","length","replace","_cssPropertyValue","property","values","suffix","prop","dummyStyle","possbleValues","split","preparedSuffix","cssText","_jsAPI","isInterface","fallback","toLowerCase","COMPATIBILITY","windowSize","x","innerWidth","documentElement","body","innerHeight","bind","func","thisObj","proto","aArgs","Array","call","arguments","fNOP","fBound","apply","this","concat","wW","wH","mO","rO","rAF","setTimeout","cAF","id","clearTimeout","now","Date","getTime","stpP","event","stopPropagation","cancelBubble","prvD","preventDefault","cancelable","returnValue","page","strPage","strClient","strX","strY","eventDoc","originalEvent","target","srcElement","ownerDocument","doc","touches","touch","y","scrollLeft","clientLeft","scrollTop","clientTop","mBtn","button","which","inA","item","arr","e","isA","def","isArray","type","Object","toString","MATH","Math","JQUERY","jQuery","EASING","PI","cos","sin","w","pow","t","sqrt","asin","abs","swing","d","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","FRAMEWORK","_rnothtmlwhite","_strSpace","_strEmpty","_strScrollLeft","_strScrollTop","_animations","_type","_cssNumber","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","fontWeight","lineHeight","opacity","order","orphans","widows","zIndex","zoom","extend","src","copyIsArray","copy","options","clone","deep","FakejQuery","isPlainObject","inArray","fromIndex","isFunction","isEmptyObject","key","hasOwnProperty","hasOwnConstructor","hasIsPrototypeOf","_each","callback","isArrayLike","stripAndCollapse","value","match","join","matches","elem","selector","nodeList","parentNode","querySelectorAll","insertAdjacentElement","el","strategy","child","insertAdjacentHTML","nodeType","setCSSVal","val","parseCSSVal","startNextAnimationInQ","animObj","removeFromQ","index","nextAnim","q","splice","_animate","props","duration","easing","complete","setAnimationValue","guaranteedNext","progress","step","specialEasing","hasOptions","from","to","push","css","timeNow","end","percent","fromVal","toVal","easedVal","timeStart","_frame","elapsed","qPos","qObj","frame","stop","max","parseFloat","start","pos","speacialEasing","startTime","_stop","clearQ","jumpToEnd","elementIsVisible","getClientRects","elms","base","elements","innerHTML","children","self","on","eventName","handler","eventNameLength","each","addEventListener","detachEvent","attachEvent","off","removeEventListener","one","oneEventName","oneHandler","trigger","createEvent","initEvent","dispatchEvent","fireEvent","append","prepend","before","after","remove","removeChild","unwrap","parent","parents","firstChild","insertBefore","wrapAll","wrapperHTML","nodes","wrapper","deepest","previousSibling","childNodes","appendChild","nextSibling","wrapInner","contents","wrap","styles","cptStyle","getCptStyle","getComputedStyle","currentStyle","getPropertyValue","hasClass","className","classList","classNamePrepared","contains","indexOf","addClass","classes","cur","curValue","clazz","finalValue","supportClassList","elmClassList","add","removeClass","hide","display","show","attr","attrName","getAttribute","setAttribute","removeAttr","removeAttribute","offset","rect","pageXOffset","pageYOffset","top","left","position","offsetTop","offsetLeft","first","eq","last","find","ch","is","childs","animate","jump","INSTANCES","instance","argLen","PLUGIN","_plugin","_pluginsGlobals","_pluginsAutoUpdateLoop","possibleTemplateTypes","restrictedStringsSplit","restrictedStringsPossibilitiesSplit","classNameAllowedValues","numberAllowedValues","booleanNullAllowedValues","booleanTrueTemplate","booleanFalseTemplate","callbackTemplate","overflowBehaviorAllowedValues","optionsDefaultsAndTemplate","convert","_pluginsExtensions","_pluginsOptions","resize","sizeAutoCapable","clipAlways","normalizeRTL","paddingAbsolute","autoUpdate","autoUpdateInterval","updateOnLoad","nativeScrollbarsOverlaid","showNativeScrollbars","initialize","overflowBehavior","scrollbars","visibility","autoHide","autoHideDelay","dragScrolling","clickScrolling","touchSupport","snapHandle","textarea","dynWidth","dynHeight","inheritedAttrs","callbacks","onInitialized","onInitializationWithdrawn","onDestroyed","onScrollStart","onScroll","onScrollStop","onOverflowChanged","onOverflowAmountChanged","onDirectionChanged","onContentSizeChanged","onHostSizeChanged","onUpdated","_defaults","template","recursive","valType","_template","_validate","writeErrors","diffObj","validatedOptions","validatedOptionsPrepared","objectCopy","isEmptyObj","checkObjectProps","data","diffData","prevPropName","restrictedStringValuesSplit","restrictedStringValuesPossibilitiesSplit","isRestrictedValue","mainPossibility","currType","j","isValid","isDiff","templateValue","templateValueType","templateIsComplex","templateTypes","dataDiffValue","dataValue","dataValueType","propPrefix","error","errorPossibleTypes","errorRestrictedStrings","console","warn","JSON","stringify","_default","_prepared","initOverlayScrollbarsStatics","OverlayScrollbarsGlobals","OverlayScrollbarsAutoUpdateLoop","defaultOptions","_base","strOverflow","strHidden","strScroll","bodyElement","scrollbarDummyElement","scrollbarDummyElement0","dummyContainerChild","nativeScrollbarSize","calcNativeScrollbarSize","nativeScrollbarIsOverlaid","msie","ua","navigator","userAgent","strIndexOf","strSubString","trident","edge","rv","parseIntFunc","parseInt","measureElement","autoUpdateLoop","autoUpdateRecommended","nativeScrollbarStyling","ex","overlayScrollbarDummySize","cssCalc","restrictedMeasuring","scrollSize","h","scrollSize2","rtlScrollBehavior","dummyContainerOffset","dummyContainerChildOffset","dummyContainerChildOffsetAfterScroll","supportTransform","supportTransition","supportPassiveEvents","supportsPassive","defineProperty","get","supportResizeObserver","supportMutationObserver","windowWidth","windowHeight","windowDpr","getWindowDPR","onResize","newW","newH","deltaW","deltaH","newScrollbarSize","deltaWRatio","round","deltaHRatio","absDeltaW","absDeltaH","absDeltaWRatio","absDeltaHRatio","newDPR","deltaIsBigger","difference","differenceIsBiggerThanOne","isZoom","oldScrollbarSize","update","valOne","valTwo","absValOne","absValTwo","dDPI","screen","deviceXDPI","sDPI","logicalXDPI","devicePixelRatio","globals","_loopID","_inArray","_getNow","_strAutoUpdate","_strAutoUpdateInterval","_strLength","_loopingInstances","_loopingInstancesIntervalCache","_loopIsActive","_loopIntervalDefault","_loopInterval","_loopTimeOld","loop","lowestInterval","instanceOptions","instanceAutoUpdateAllowed","instanceAutoUpdateInterval","timeNew","timeDelta","min","OverlayScrollbarsInstance","pluginTargetElement","extensions","_frameworkProto","isHTMLElement","inst","_nativeScrollbarIsOverlaid","_overlayScrollbarDummySize","_rtlScrollBehavior","_autoUpdateRecommended","_msieVersion","_nativeScrollbarStyling","_cssCalc","_nativeScrollbarSize","_supportTransition","_supportTransform","_supportPassiveEvents","_supportResizeObserver","_supportMutationObserver","_initialized","_destroyed","_isTextarea","_isBody","_documentMixed","_domExists","_isBorderBox","_sizeAutoObserverAdded","_paddingX","_paddingY","_borderX","_borderY","_marginX","_marginY","_isRTL","_sleeping","_defaultOptions","_currentOptions","_currentPreparedOptions","_lastUpdateTime","_swallowedUpdateTimeout","_windowElement","_documentElement","_htmlElement","_bodyElement","_targetElement","_hostElement","_sizeAutoObserverElement","_sizeObserverElement","_paddingElement","_viewportElement","_contentElement","_contentArrangeElement","_contentGlueElement","_textareaCoverElement","_scrollbarCornerElement","_scrollbarHorizontalElement","_scrollbarHorizontalTrackElement","_scrollbarHorizontalHandleElement","_scrollbarVerticalElement","_scrollbarVerticalTrackElement","_scrollbarVerticalHandleElement","_windowElementNative","_documentElementNative","_targetElementNative","_hostElementNative","_sizeAutoObserverElementNative","_sizeObserverElementNative","_paddingElementNative","_viewportElementNative","_contentElementNative","_hostSizeCache","_contentScrollSizeCache","_arrangeContentSizeCache","_hasOverflowCache","_hideOverflowCache","_widthAutoCache","_heightAutoCache","_cssBoxSizingCache","_cssPaddingCache","_cssBorderCache","_cssMarginCache","_cssDirectionCache","_cssDirectionDetectedCache","_paddingAbsoluteCache","_clipAlwaysCache","_contentGlueSizeCache","_overflowBehaviorCache","_overflowAmountCache","_ignoreOverlayScrollbarHidingCache","_autoUpdateCache","_sizeAutoCapableCache","_contentElementScrollSizeChangeDetectedCache","_hostElementSizeChangeDetectedCache","_scrollbarsVisibilityCache","_scrollbarsAutoHideCache","_scrollbarsClickScrollingCache","_scrollbarsDragScrollingCache","_resizeCache","_normalizeRTLCache","_classNameCache","_oldClassName","_textareaAutoWrappingCache","_textareaInfoCache","_textareaSizeCache","_textareaDynHeightCache","_textareaDynWidthCache","_bodyMinSizeCache","_mutationObserverHost","_mutationObserverContent","_mutationObserverHostCallback","_mutationObserverContentCallback","_mutationObserversConnected","_textareaHasFocus","_scrollbarsAutoHideTimeoutId","_scrollbarsAutoHideMoveTimeoutId","_scrollbarsAutoHideDelay","_scrollbarsAutoHideNever","_scrollbarsAutoHideScroll","_scrollbarsAutoHideMove","_scrollbarsAutoHideLeave","_scrollbarsHandleHovered","_scrollbarsHandlesDefineScrollPos","_resizeNone","_resizeBoth","_resizeHorizontal","_resizeVertical","_contentBorderSize","_scrollHorizontalInfo","_scrollVerticalInfo","_viewportSize","_nativeScrollbarMinSize","_strMinusHidden","_strMarginMinus","_strPaddingMinus","_strBorderMinus","_strTop","_strRight","_strBottom","_strLeft","_strMinMinus","_strMaxMinus","_strWidth","_strHeight","_strFloat","_strAuto","_strSync","_strScroll","_strHundredPercent","_strX","_strY","_strDot","_strScrollbar","_strMinusHorizontal","_strMinusVertical","_strMouseTouchDownEvent","_strMouseTouchUpEvent","_strMouseTouchMoveEvent","_strMouseEnter","_strMouseLeave","_strKeyDownEvent","_strKeyUpEvent","_strSelectStartEvent","_strTransitionEndEvent","_strResizeObserverProperty","_cassNamesPrefix","_classNameHTMLElement","_classNameHostElement","_classNameHostElementForeign","_classNameHostTextareaElement","_classNameHostScrollbarHorizontalHidden","_classNameHostScrollbarVerticalHidden","_classNameHostTransition","_classNameHostRTL","_classNameHostResizeDisabled","_classNameHostScrolling","_classNameHostOverflow","_classNameHostOverflowX","_classNameHostOverflowY","_classNameTextareaElement","_classNameTextareaCoverElement","_classNamePaddingElement","_classNameViewportElement","_classNameViewportNativeScrollbarsInvisible","_classNameViewportNativeScrollbarsOverlaid","_classNameContentElement","_classNameContentArrangeElement","_classNameContentGlueElement","_classNameSizeAutoObserverElement","_classNameResizeObserverElement","_classNameResizeObserverItemElement","_classNameResizeObserverItemFinalElement","_classNameTextInherit","_classNameScrollbar","_classNameScrollbarTrack","_classNameScrollbarTrackOff","_classNameScrollbarHandle","_classNameScrollbarHandleOff","_classNameScrollbarUnusable","_classNameScrollbarAutoHidden","_classNameScrollbarCorner","_classNameScrollbarCornerResize","_classNameScrollbarCornerResizeB","_classNameScrollbarCornerResizeH","_classNameScrollbarCornerResizeV","_classNameScrollbarHorizontal","_classNameScrollbarVertical","_classNameDragging","_classNameThemeNone","_classNamesDynamicDestroy","_callbacksInitQeueue","_viewportAttrsFromTarget","_extensions","_extensionsPrivateMethods","_swallowedUpdateHints","_swallowUpdateLag","_updateOnLoadEventName","_updateOnLoadElms","_updateAutoCache","_mutationObserverAttrsTextarea","_mutationObserverAttrsHost","_destroyEvents","sleep","force","attrsChanged","contentSizeC","doUpdateAuto","mutHost","mutContent","meaningfulAttrsChanged","updateAutoContentSizeChanged","_contentSizeChanged","_changedOptions","takeRecords","_hostSizeChanged","_force","updateElementsOnLoad","newOptions","changedOps","option","getObjectPropVal","setObjectPropVal","setOptions","destroy","extName","disconnectMutationObservers","setupResizeObserver","removeExt","pop","setupHostMouseTouchEvents","setupScrollbarsDOM","setupScrollbarCornerDOM","setupStructureDOM","updateOnLoadCallback","dispatchCallback","scroll","coordinates","infoX","infoY","normalizeInvert","normalizeNegate","scrollX","_currentScroll","scrollXRatio","_currentScrollRatio","maxScrollX","_maxScroll","ratio","handleOffset","_handleOffset","handleLength","_handleLength","handleLengthRatio","_handleLengthRatio","trackLength","_trackLength","snappedHandleOffset","_snappedHandleOffset","isRTL","isRTLNormalized","doScrollLeft","doScrollTop","animationOptions","settingsAxis","settingsScroll","settingsBlock","settingsMargin","finalElement","coordinatesXAxisProps","coordinatesYAxisProps","coordinatesOperators","durationIsObject","completeCallback","finalScroll","strEnd","strBegin","strCenter","strNearest","strAlways","strNever","strIfNeeded","strLength","elementObjSettingsAxisValues","elementObjSettingsBlockValues","elementObjSettingsScrollValues","coordinatesIsElementObj","possibleElement","possibleElementIsJQuery","possibleElementIsHTMLElement","updateScrollbarInfos","refreshScrollbarHandleOffset","proxyCompleteCallback","checkSettingsStringValue","currValue","allowedValues","getRawScroll","isX","coordinateProps","getFinalScroll","rawScroll","operator","amount","possibleOperator","isString","scrollInfo","currScroll","maxScroll","mult","isRTLisX","normalizeShortcuts","strReplace","evalFunc","eval","substr","parseToZeroOrNumber","isNaN","toFixed","normalizeIsRTLisX","operatorCurrScroll","invert","negate","getPerAxisValue","valueInternalType","defaultValue","valueArrLength","valueArrItem","resultDefault","valueType","generateMargin","marginTopRightBottomLeftArray","currValueType","valueDirections","marginLength","margin","axis","block","marginDefault","marginType","viewportScroll","viewportOffset","elementOffset","doNotScroll","elementScrollCoordinates","measuringElm","rawElementSize","width","height","elementSize","finalizeBlock","vars","getScrollbarVars","wh","_w_h","lt","_left_top","xy","_x_y","blockIsEnd","blockIsCenter","blockIsNearest","scrollNever","scrollIfNeeded","vpSize","vpOffset","elSize","elOffset","divide","elementCenterOffset","viewportCenterOffset","isInView","scrollStop","param1","param2","param3","getElements","elementName","host","padding","viewport","content","scrollbarHorizontal","scrollbar","track","handle","scrollbarVertical","scrollbarCorner","getState","stateProperty","prepare","extended","extendDeep","changePropertyName","destroyed","sleeping","widthAuto","heightAuto","overflowAmount","hideOverflow","hasOverflow","contentScrollSize","viewportSize","hostSize","documentMixed","ext","privateMethods","addExt","extensionOptions","instanceAdded","instanceContract","contractResult","registeredExtensionObj","extension","contractFulfilled","extensionFactory","contract","added","instanceRemoved","removed","valid","construct","setupResponsiveEventListener","element","eventNames","listener","passiveOrOptions","collected","method","onOff","events","passiveOrOptionsIsObj","passive","_passive","capture","_capture","nativeParam","addDestroyEventListener","targetElement","onElementResizedCallback","resizeObserver","strAnimationStartEvent","strChildNodes","constScroll","generateDiv","observe","dir","style","isDirty","rAFId","currWidth","currHeight","observerElement","shrinkElement","expandElement","expandElementChild","widthCache","heightCache","factor","reset","onResized","expandChildCSS","observerElementCSS","setTopRightBottomLeft","isIE","findFirst","onload","wnd","contentDocument","defaultView","directionChanged","scrollLeftValue","resizeObserverObj","disconnect","createMutationObservers","mutationTarget","mutationAttrName","mutationIsClass","oldMutationVal","newClassVal","hostClassNameRegex","contentTimeout","sizeAuto","action","mutationObserverContentLag","mutationObserver","contentLastUpdate","mutations","doUpdate","isUnknownMutation","textareaUpdate","mutation","doUpdateForce","mutatedAttrs","attributeName","oldValue","createHostClassNameRegExp","filter","hostClassNamesChanged","updateViewportAttrsFromTarget","connectMutationObservers","attributes","attributeOldValue","attributeFilter","subtree","childList","characterData","hostOnResized","changed","checkCache","hostOnMouseEnter","refreshScrollbarsAutoHide","hostOnMouseLeave","hostOnMouseMove","documentOnSelectStart","elm","eachUpdateOnLoad","updateOnLoadSelector","bodyMinSizeChanged","bodyMinSize","oldClassNames","newClassNames","regex","currClasses","diff","getArrayDifferences","idx","mutationType","strClosest","float","bodyMinSizeC","contentElementScrollSize","contentMeasureElement","getContentMeasureElement","textareaValueLength","setCSS","curr","cache","changedAttrs","checks","_elem","_attrs","check","isSizeAffectingCSSProperty","propertyName","flexBasis","affectingPropsX","affectingPropsXContentBox","affectingPropsY","affectingPropsYContentBox","_strS","_strVS","checkX","sizeIsAffected","checkPropertyName","attrs","targetAttr","origWidth","origHeight","wrapAttrOff","minWidth","minHeight","doMeasure","_originalWidth","_originalHeight","_dynamicWidth","_dynamicHeight","updateHints","displayIsHidden","hostSizeChanged","contentSizeChanged","changedOptions","swallow","checkCacheAutoForce","currentPreparedOptionsScrollbars","currentPreparedOptionsTextarea","scrollbarsVisibility","scrollbarsVisibilityChanged","scrollbarsAutoHide","scrollbarsAutoHideChanged","scrollbarsClickScrolling","scrollbarsClickScrollingChanged","scrollbarsDragScrolling","scrollbarsDragScrollingChanged","classNameChanged","resizeChanged","paddingAbsoluteChanged","clipAlwaysChanged","sizeAutoCapableChanged","ignoreOverlayScrollbarHiding","ignoreOverlayScrollbarHidingChanged","autoUpdateChanged","overflowBehaviorChanged","textareaDynWidth","textareaDynWidthChanged","textareaDynHeight","textareaDynHeightChanged","oldSize","newSize","sizeAutoObserverElementBCRect","textareaAutoWrapping","textareaAutoWrappingChanged","cssDirection","cssDirectionChanged","boxSizing","boxSizingChanged","getTopRightBottomLeftHost","isRTLLeft","isRTLRight","widthAutoResizeDetection","widthAutoObserverDetection","right","tmpCurrHostWidth","tmpCurrContentGlueWidth","tmpNewHostWidth","widthAutoChanged","wasWidthAuto","bottom","heightAutoChanged","wasHeightAuto","border","contentElementCSS","contentGlueElementCSS","getHostSize","getViewportSize","paddingAbsoluteX","r","paddingAbsoluteY","paddingElementCSS","textareaCSS","paddingValues","textareaSize","textareaSizeChanged","textareaDynOrigSize","strOverflowX","strOverflowY","strVisible","viewportElementResetCSS","resetXTmp","ys","resetBottomTmp","xs","contentSize","hostAbsoluteRectSize","contentGlueSize","textareaCoverCSS","setContentGlueElementCSSfunction","horizontal","scrollbarVars","strWH","_width_height","autoSize","borderSize","paddingSize","marginSize","hideOverflowForceTextarea","previousOverflowAmount","overflowBehaviorIsVS","overflowBehaviorIsVH","overflowBehaviorIsS","canScroll","viewportRect","setOverflowVariables","xyI","widthHeight","scrollMax","_Left_Top","fractionalOverflowAmount","checkFractionalOverflowAmount","setContentElementCSS","borderDesign","contentArrangeElementCSS","arrangeContent","arrangeChanged","scrollbarVarsInverted","strDirection","invertedAutoSize","addRemoveClass","setViewportCSS","viewportElementCSS","XY","_X_Y","elementStyle","webkitTransform","floatTmp","posLeftWithoutFloat","textareaInfo","getTextareaInfo","textareaRowsChanged","_rows","cursorRow","_cursorRow","cursorCol","_cursorColumn","widestRow","_widestRow","lastRow","lastCol","_columns","cursorIsLastPosition","_cursorPosition","_cursorMax","textareaScrollAmount","scrollbarsVisibilityVisible","scrollbarsVisibilityHidden","scrollbarsVisibilityAuto","refreshScrollbarsVisibility","showX","showY","refreshScrollbarAppearance","refreshScrollbarHandleLength","refreshScrollbarsInteractive","xScrollable","yScrollable","clipped","forced","validatedOpts","strParent","classNameResizeObserverHost","classNameTextareaElementFull","textareaClass","adoptAttrs","adoptAttrsMap","applyAdoptedAttrs","applyAdoptedAttrsElm","hostElementClassNames","hostElementCSS","selectOrGenerateDivByClass","setupStructureEvents","textareaUpdateIntervalID","scrollStopTimeoutId","textareaKeyDownRestrictedKeyCodes","textareaKeyDownKeyCodesList","scrollStopDelay","strFocus","updateTextarea","doClearInterval","clearInterval","textareaOnScroll","textareaOnDrop","textareaOnFocus","textareaOnFocusout","textareaOnKeyDown","keyCode","setInterval","textareaOnKeyUp","contentOnTransitionEnd","viewportOnScroll","nativeOverlayScrollbarsAreActive","horizontalElements","verticalElements","selectOrGenerateScrollbarDOM","isHorizontal","_scrollbar","_track","_handle","resetScrollbarDOM","setupScrollbarEvents","trackTimeout","mouseDownScroll","mouseDownOffset","mouseDownInvertedScale","scrollbarVarsInfo","_info","insideIFrame","strActive","strSnapHandle","strClickEvent","scrollDurationFactor","increaseDecreaseScrollAmountKeyCodes","getPointerPosition","getPreparedScrollbarsOption","increaseTrackScrollAmount","decreaseTrackScrollAmount","stopClickEventPropagation","documentKeyDown","documentKeyUp","onMouseTouchDownContinue","isTouchEvent","documentDragMove","scrollDelta","isFinite","documentMouseTouchUp","clientX","clientY","onHandleMouseTouchDown","onHandleMouseTouchDownAction","getHostElementInvertedScale","onTrackMouseTouchDown","decreaseScroll","handleToViewportRatio","scrollDistance","scrollBaseDuration","scrollFirstIterationDelay","trackOffset","ctrlKey","instantScroll","shiftKey","instantScrollTransition","isFirstIteration","scrollActionFinsished","transition","scrollActionInstantFinished","scrollAction","mouseOffset","scrollRange","scrollDuration","timeoutDelay","instantScrollPosition","rtlIsNormal","decreaseScrollCondition","scrollObj","animationObj","onTrackMouseTouchEnter","onTrackMouseTouchLeave","onScrollbarMouseTouchDown","shallBeVisible","scrollbarElement","delayfree","anyActive","handleCSS","digit","handleRatio","floor","_Width_Height","scrollOrTransition","transformOffset","translateValue","transitionDuration","isRTLisHorizontal","strTranslateBrace","strTransform","strTransition","nativeScroll","currentScroll","handleTrackDiff","getScrollRatio","getHandleOffset","scrollRatio","getCSSTransitionString","isTrack","element2","_l_t","setupScrollbarCornerEvents","reconnectMutationObserver","mouseDownPosition","mouseDownSize","pageOffset","getCoordinates","eventIsTrusted","releaseCapture","screenX","screenY","setCapture","args","dependent","extensionOnName","targetCSSObject","prefix","zeroX","zeroY","transitionStr","assembledValue","strResult","valueArray","regExpString","regExpMain","RegExp","regExpValidate","properties","splitCssStyleByComma","$1","withCurrClassNameOption","withOldClassNameOption","appendix","appendClasses","condition","strOwnerDocument","strHTMLElement","parentWindow","nodeName","a1","a2","k","toFloat","num","textareaCursorPosition","selectionStart","rowCols","textareaValue","textareaLength","textareaRowSplit","textareaLastRow","textareaCurrentCursorRowSplit","textareaLastCol","classesOrAttrs","selectParentOrOnlyChildren","onlyChildren","selectParent","path","splits","splitsLength","extendObj","extendObjRoot","current","doAdd","initBodyScroll","_bodyMouseTouchDownListener","bodyMouseTouchDownListener","activeElement","focus","pluginTargetElements","optsIsPlainObj","newDefaultOptions","currDefaultOptions","osInstance","extensionName","extNameTypeString","fn","overlayScrollbars","_elements","factory","undefined","OverlayScrollbars","OverlayScrollbarsComponent","_a","_a$options","rest","__rest","osTargetRef","useRef","useEffect","mergeHostClassNames","React__default","assign","ref","osClassNames"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}