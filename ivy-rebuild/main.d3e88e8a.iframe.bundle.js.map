{"version":3,"file":"main.d3e88e8a.iframe.bundle.js","mappings":"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","sources":["./.storybook/preview.js","./.storybook/preview.js-generated-config-entry.js","./projects/docs/src/stories/Introduction.stories.mdx","./projects/core/src/lib/enums/order.enum.ts","./projects/core/src/lib/utilities/utilities.ts","./projects/core/src/lib/core.component.ts","./projects/core/src/lib/pipes/sort-class.pipe.ts","./projects/core/src/lib/pipes/dash-case.pipe.ts","./projects/core/src/lib/pipes/highlight.pipe.ts","./projects/core/src/lib/pipes/capital-case.pipe.ts","./projects/core/src/lib/pipes/dynamic.pipe.ts","./projects/core/src/lib/gt-delta/gt-delta.component.ts","./projects/core/src/lib/core.module.ts","./projects/docs/src/app/examples/simple/simple.snippets.ts","./projects/docs/src/app/examples/simple/simple.component.ts","./projects/docs/src/app/examples/mobile-layout/mobileLayout.snippets.ts","./projects/docs/src/app/examples/mobile-layout/mobile-layout.component.ts","./projects/docs/src/app/examples/advanced/advanced.snippets.ts","./projects/docs/src/app/examples/advanced/advanced.component.ts","./projects/docs/src/app/components/tabs/tabs.component.ts","./projects/docs/src/app/examples/custom-templates/custom-templates.snippets.ts","./projects/docs/src/app/examples/custom-templates/custom-templates.component.ts","./projects/docs/src/app/examples/pagination/pagination.snippets.ts","./projects/docs/src/app/examples/pagination/pagination.component.ts","./projects/core/src/lib/pagination/pagination.component.ts","./projects/core/src/lib/pagination/pagination.module.ts","./projects/docs/src/app/examples/horizontal-table/horizontal-table.snippets.ts","./projects/docs/src/app/examples/horizontal-table/horizontal-table.component.ts","./projects/docs/src/app/examples/nested-data/nested.snippets.ts","./projects/docs/src/app/examples/nested-data/nested-data.component.ts","./projects/docs/src/app/examples/transpose/transpose.snippets.ts","./projects/docs/src/app/examples/transpose/transpose.component.ts","./projects/docs/src/stories/Table.stories.mdx","webpack:///./projects/docs/src/stories/ sync ^\\.(?9e9a","./projects/docs/src/stories/ sync ^\\.(","./generated-stories-entry.cjs"],"sourcesContent":["import { setCompodocJson } from \"@storybook/addon-docs/angular\";\nimport docJson from \"../documentation.json\";\n\nsetCompodocJson(docJson);\n\nexport const parameters = {\n  actions: { argTypesRegex: \"^on[A-Z].*\" },\n  controls: {\n    matchers: {\n      color: /(background|color)$/i,\n      date: /Date$/,\n    },\n  },\n  docs: { inlineStories: true },\n  themes: {\n    //default: \"Swimbird - Dark\",\n    default: \"Bootstrap\",\n    clearable: false,\n    list: [\n      //{ name: \"Swimbird - Dark\", class: \"theme-sb-dark\", color: \"#00aced\" },\n      //{ name: \"Swimbird - Light\", class: \"theme-sb-light\", color: \"#00aced\" },\n      {\n        name: \"Bootstrap\",\n        class: \"theme-bootstrap\",\n        color: \"var(--bs-primary)\",\n      },\n    ],\n    onChange: (theme) => {\n      document.body.setAttribute(\"data-theme\", theme.class);\n    },\n  },\n};\n","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable import/no-unresolved */\nimport { addDecorator, addParameters, addLoader, addArgs, addArgTypes, addArgsEnhancer, addArgTypesEnhancer, setGlobalRender } from '/home/runner/work/angular-generic-table/angular-generic-table/node_modules/@storybook/client-api';\nimport * as config from '/home/runner/work/angular-generic-table/angular-generic-table/.storybook/preview.js';\nObject.keys(config).forEach(function (key) {\n  var value = config[key];\n\n  switch (key) {\n    case 'args':\n      {\n        return addArgs(value);\n      }\n\n    case 'argTypes':\n      {\n        return addArgTypes(value);\n      }\n\n    case 'decorators':\n      {\n        return value.forEach(function (decorator) {\n          return addDecorator(decorator, false);\n        });\n      }\n\n    case 'loaders':\n      {\n        return value.forEach(function (loader) {\n          return addLoader(loader, false);\n        });\n      }\n\n    case 'parameters':\n      {\n        return addParameters(_objectSpread({}, value), false);\n      }\n\n    case 'argTypesEnhancers':\n      {\n        return value.forEach(function (enhancer) {\n          return addArgTypesEnhancer(enhancer);\n        });\n      }\n\n    case 'argsEnhancers':\n      {\n        return value.forEach(function (enhancer) {\n          return addArgsEnhancer(enhancer);\n        });\n      }\n\n    case 'render':\n      {\n        return setGlobalRender(value);\n      }\n\n    case 'globals':\n    case 'globalTypes':\n      {\n        var v = {};\n        v[key] = value;\n        return addParameters(v, false);\n      }\n\n    case '__namedExportsOrder':\n    case 'decorateStory':\n    case 'renderToDOM':\n      {\n        return null; // This key is not handled directly in v6 mode.\n      }\n\n    default:\n      {\n        // eslint-disable-next-line prefer-template\n        return console.log(key + ' was not supported :( !');\n      }\n  }\n});","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta } from '@storybook/addon-docs';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Introduction\" mdxType=\"Meta\" />\n    <h1>{`Angular Generic Table Docs`}</h1>\n    <p>{`Generic table version 5 has been rebuilt to be more efficient and to make it easier to customize and add new features. It still relies on native html tables for layout and rendering. Follow the instructions below to get started with the latest release candidate.`}</p>\n    <h2>{`Install`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`npm install @angular-generic-table/core@rc --save\n`}</code></pre>\n    <h2>{`Import module`}</h2>\n    <p>{`We recommend import `}<inlineCode parentName=\"p\">{`GenericTableCoreModule`}</inlineCode>{` into a shared module eg. `}<inlineCode parentName=\"p\">{`SharedModule`}</inlineCode>{` that can be imported into other, preferably lazy loaded modules when needed.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [...],\n  imports: [\n    ...\n    GenericTableCoreModule\n  ],\n  exports: [\n    GenericTableCoreModule\n  ]\n})\nexport class SharedModule {}\n`}</code></pre>\n    <h2>{`Import styling`}</h2>\n    <p>{`We recommend setting up your Angular project to use scss (SASS) for css preprocessing.`}</p>\n    <p>{`Once configured to use scss, it's just a matter of including the scss to your main styles file, typically it would be `}<inlineCode parentName=\"p\">{`styles.scss`}</inlineCode>{` located at the root of the `}<inlineCode parentName=\"p\">{`src`}</inlineCode>{` folder unless you've changed it.`}</p>\n    <h3>{`Add scss`}</h3>\n    <p><inlineCode parentName=\"p\">{`{project}/src/styles.scss`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`// import base styles from angular-generic-table/core\n@use '~@angular-generic-table/core/scss' as generic-table-styles;\n@include generic-table-styles.styles(); // all styles\n\n// @include generic-table-styles.search-style(); // search (highlight) style\n// @include generic-table-styles.mobile-style(); // mobile layout style\n// @include generic-table-styles.pagination-style(); // pagination styles\n`}</code></pre>\n    <h3>{`Override scss variables`}</h3>\n    <p>{`It's possible to override the scss variables used by generic table by passing them when importing the scss.\n`}<inlineCode parentName=\"p\">{`{project}/src/styles.scss`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`// import base styles from angular-generic-table/core and override scss variables\n@use '~@angular-generic-table/core/scss' as generic-table-styles with (\n    $highlight-background-color: purple,\n    $mobile-style-max-width: 375px\n);\n@include generic-table-styles.styles();\n`}</code></pre>\n    <p><strong parentName=\"p\">{`SCSS Variables`}</strong></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Default value`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$highlight-background-color:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`#ffdd00;`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$mobile-style-selector:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`'table.table-mobile';`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$mobile-style-max-width:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`576px;`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$mobile-style-header-font-weight:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`500;`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$mobile-style-header-background-color:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`#fff;`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$mobile-style-button-selector:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`'.btn-sm';`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$mobile-style-border-bottom:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`solid 1px #dedede;`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$mobile-style-button-font-size:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`1rem;`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$mobile-style-button-padding:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`0.5625rem 1rem;`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$pagination-ellipsis-content:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`'...';`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$pagination-active-color:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`#000;`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`$pagination-justify-content:`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`center;`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3>{`Have other needs?`}</h3>\n    <p>{`More examples and use cases coming soon! In the meantime create an `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/hjalmers/angular-generic-table/issues\"\n      }}>{`issue over at github`}</a></p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.parameters = { docsOnly: true };\n\nconst componentMeta = { title: 'Introduction', includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","export enum Order {\n  ASC = 'asc',\n  DESC = 'desc',\n}\n","import { TableRow } from '../models/table-row.interface';\nimport { TableConfig } from '../models/table-config.interface';\n\nexport let dashed: (s: string) => string;\ndashed = (s: string) => s.replace(/[A-Z]/g, (m) => '-' + m.toLowerCase());\n\nexport let capitalize: (s: string) => string;\ncapitalize = (s) =>\n  (s.charAt(0).toUpperCase() + s.slice(1))\n    .replace(/_/g, ' ')\n    .replace(/([A-Z][a-z]+)/g, ' $1')\n    .replace(/([A-Z]{2,})/g, ' $1')\n    .replace(/\\s{2,}/g, ' ')\n    .trim();\n\nexport let chunk: (\n  array: Array<any>,\n  chunkSize: number\n) => Array<Array<TableRow>>;\nchunk = (array, chunkSize) => {\n  if (chunkSize < 0) {\n    throw new Error('Invalid chunk size');\n  }\n  if (chunkSize === 0 && !chunkSize) {\n    return [array];\n  }\n  const CHUNK = [];\n  for (let i = 0, len = array.length; i < len; i += chunkSize) {\n    CHUNK.push(array.slice(i, i + chunkSize));\n  }\n  return CHUNK;\n};\n\nexport let search: (\n  text: string,\n  caseSensitive: boolean,\n  data: Array<TableRow>,\n  config: TableConfig\n) => TableRow[];\nsearch = (\n  text: string,\n  caseSensitive: boolean,\n  data: Array<TableRow>,\n  config: TableConfig\n) => {\n  if (config.columns) {\n    const searchColumns = Object.keys(config.columns).filter(\n      // @ts-ignore\n      (key) =>\n        config.columns &&\n        !config.columns[key]?.hidden &&\n        config.columns[key]?.search !== false\n    );\n\n    const FILTERED = [];\n    for (let i = 0; i < data.length; i++) {\n      const row = data[i];\n      const match =\n        Object.entries(row)\n          .filter(([key, value]) => searchColumns.indexOf(key) !== -1)\n          .reduce((acc, [key, value], index): string => {\n            return (\n              acc +\n              (index === 0 ? '' : ' ? ') +\n              (caseSensitive ? value + '' : (value + '').toLowerCase())\n            );\n          }, '')\n          .indexOf(text) !== -1;\n      if (match) {\n        FILTERED[FILTERED.length] = row;\n      }\n    }\n    return FILTERED;\n  } else {\n    return data;\n  }\n};\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  EMPTY,\n  isObservable,\n  Observable,\n  of,\n  ReplaySubject,\n  Subject,\n} from 'rxjs';\nimport { TableConfig } from './models/table-config.interface';\nimport { KeyValue } from '@angular/common';\nimport {\n  map,\n  shareReplay,\n  startWith,\n  switchMap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { TableColumn } from './models/table-column.interface';\nimport { Order } from './enums/order.enum';\nimport { chunk, search } from './utilities/utilities';\nimport { TableRow } from './models/table-row.interface';\nimport { TableSort } from './models/table-sort.interface';\nimport { TableMeta } from './models/table-meta.interface';\n\n@Component({\n  selector: 'angular-generic-table',\n  templateUrl: './core.component.html',\n  styles: [],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CoreComponent {\n  @Input() set loading(isLoading: Observable<boolean> | boolean) {\n    this._loading$.next(isLoading);\n  }\n  @Input()\n  set page(page: number) {\n    this._currentPage$.next(page);\n  }\n\n  @Input()\n  set search(string: Observable<string> | string | null) {\n    this._searchBy$.next(string);\n  }\n\n  @Input()\n  set config(config: Observable<TableConfig> | TableConfig) {\n    this._tableConfig$.next(config);\n  }\n\n  @Input()\n  set data(data: Observable<Array<TableRow>> | Array<TableRow>) {\n    this._data$.next(data);\n  }\n\n  get loading$(): Observable<boolean> {\n    return this._loading$.pipe(\n      startWith(false),\n      map((value) => (isObservable(value) ? value : of(value))),\n      switchMap((obs) => obs),\n      shareReplay(1)\n    );\n  }\n\n  private _loading$: ReplaySubject<Observable<boolean> | boolean> =\n    new ReplaySubject(1);\n  sortBy$: Subject<TableSort> = new Subject();\n  // tslint:disable-next-line:variable-name\n  private _sortBy: TableSort | undefined;\n\n  // tslint:disable-next-line:variable-name\n  private _searchBy$: ReplaySubject<Observable<string> | string | null> =\n    new ReplaySubject(1);\n  searchBy$: Observable<string | null> = this._searchBy$.pipe(\n    startWith(''),\n    map((value) => (isObservable(value) ? value : of(value))),\n    switchMap((obs) => obs),\n    shareReplay(1)\n  );\n\n  // tslint:disable-next-line:variable-name\n  private _tableConfig$: ReplaySubject<TableConfig | Observable<TableConfig>> =\n    new ReplaySubject(1);\n  tableConfig$: Observable<TableConfig> = this._tableConfig$.pipe(\n    map((value) => (isObservable(value) ? value : of(value))),\n    switchMap((obs) => obs),\n    shareReplay(1)\n  );\n\n  private _data$: ReplaySubject<Array<TableRow> | Observable<Array<TableRow>>> =\n    new ReplaySubject(1);\n  data$: Observable<Array<TableRow>> = this._data$.pipe(\n    map((value) => (isObservable(value) ? value : of(value))),\n    switchMap((obs) => combineLatest([obs])),\n    withLatestFrom(this.tableConfig$),\n    map(([[data], config]) => {\n      // if columns or rows contains config for mapTo...\n      if (\n        (config.columns &&\n          !!Object.values(config.columns).find((column) => !!column.mapTo)) ||\n        (config.rows &&\n          !!Object.values(config.rows).find((column) => !!column.mapTo))\n      ) {\n        // ...map data to new keys on row...\n        const newData: TableRow[] = [];\n        for (let i = 0; i < data.length; i++) {\n          const row = data[i];\n          const newKeys = Object.entries(config.columns || config.rows || [])\n            .filter(([key, value]) => !!value.mapTo) // add keys for columns with mapTo config...\n            .reduce(\n              (previousValue, [key, value]) => ({\n                ...previousValue,\n                [key]: this.nestedValue(\n                  row,\n                  value.mapTo!.path,\n                  value.mapTo?.missingValue\n                ),\n              }),\n              {}\n            );\n          newData[i] = { ...row, ...newKeys };\n        }\n        data = newData;\n      }\n      return { data, config };\n    }),\n    switchMap((obs) =>\n      combineLatest([\n        of(obs),\n        this.sortBy$.pipe(startWith(EMPTY)),\n        this.searchBy$,\n      ])\n    ),\n    map(([table, sortBy, searchBy]) => {\n      // create a new array reference and sort new array (prevent mutating existing state)\n      table.data = [...table.data];\n      return !sortBy\n        ? searchBy\n          ? search(searchBy, false, table.data, table.config)\n          : table.data\n        : (searchBy\n            ? search(searchBy, false, table.data, table.config)\n            : table.data\n          )?.sort((a, b) => {\n            // TODO: improve logic\n            const typed = sortBy as TableSort;\n            return a[typed.sortBy] > b[typed.sortBy]\n              ? typed.sortByOrder === Order.ASC\n                ? 1\n                : -1\n              : b[typed.sortBy] > a[typed.sortBy]\n              ? typed.sortByOrder === Order.ASC\n                ? -1\n                : 1\n              : 0;\n          });\n    }),\n    shareReplay(1)\n  );\n\n  table$: Observable<TableMeta> = combineLatest([\n    this.data$,\n    this.tableConfig$,\n  ]).pipe(\n    map(([sorted, config]) => {\n      // if pagination is disabled...\n      if (!config.pagination || config.pagination.length === 0) {\n        // ...return unaltered array\n        return {\n          data: [sorted],\n          config,\n          info: { records: sorted.length, pageTotal: 1 },\n        };\n      }\n      // return record set\n      return {\n        data: chunk(sorted, +(config.pagination.length || 0)),\n        config,\n        info: {\n          records: sorted.length,\n          pageTotal: Math.ceil(\n            sorted.length / +(config.pagination.length || 0)\n          ),\n        },\n      };\n    }),\n    shareReplay(1)\n  );\n\n  private _currentPage$: BehaviorSubject<number> = new BehaviorSubject(0);\n  currentPage$ = combineLatest([this._currentPage$, this.table$]).pipe(\n    map(([page, table]: any) => {\n      // determine last page\n      const lastPage =\n        Math.ceil(\n          table.info.records /\n            (table.config?.pagination?.length || table.info.records)\n        ) - 1;\n      // determine max/min position\n      return +page < 0 ? 0 : +page > lastPage ? lastPage : +page;\n    }),\n    shareReplay(1)\n  );\n\n  colspan$ = this.tableConfig$.pipe(\n    switchMap((config) =>\n      config.columns\n        ? of(\n            Object.values(config.columns || config.rows || {}).filter(\n              (value) => value.hidden !== true\n            ).length\n          )\n        : this.data$.pipe(map((data) => data.length + 1))\n    )\n  );\n\n  sort(property: string): void {\n    const newSortOrder =\n      this._sortBy?.sortBy !== property ||\n      this._sortBy?.sortByOrder === Order.DESC ||\n      !this._sortBy.sortByOrder\n        ? Order.ASC\n        : Order.DESC;\n    const newSortBy = {\n      sortBy: property,\n      sortByOrder: newSortOrder,\n    };\n    this.sortBy$.next(newSortBy);\n    this._sortBy = newSortBy;\n  }\n\n  columnOrder = (\n    a: KeyValue<string, TableColumn>,\n    b: KeyValue<string, TableColumn>\n  ): number => {\n    return (a.value.order || 0) - (b.value.order || 0);\n  };\n\n  nestedValue(\n    object: any,\n    mapTo: string,\n    missingValue: string | number | null = null\n  ): unknown {\n    const levels = mapTo.split('.');\n    return levels.reduce(\n      (previousValue, currentValue, index) =>\n        previousValue[currentValue] ||\n        (index === levels.length - 1 ? missingValue : {}),\n      object\n    );\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Order } from '../enums/order.enum';\n\n@Pipe({\n  name: 'sortClass',\n})\nexport class SortClassPipe implements PipeTransform {\n  transform(\n    selection: { sortBy: string; sortByOrder: Order } | any,\n    property: string,\n    aria = false\n  ): string | null {\n    return selection?.sortBy === property\n      ? !aria\n        ? 'gt-sort-' + selection.sortByOrder\n        : selection.sortByOrder + 'ending'\n      : !aria\n      ? ''\n      : null;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { dashed } from '../utilities/utilities';\n\n@Pipe({\n  name: 'dashCase',\n})\nexport class DashCasePipe implements PipeTransform {\n  transform(s: string): any {\n    return dashed(s);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'highlight',\n})\nexport class HighlightPipe implements PipeTransform {\n  transform(text: any, searchTerm: string | null): string {\n    if (!searchTerm) {\n      return text;\n    }\n    const haystackAlwaysString = text + '';\n    let highlightedText = haystackAlwaysString; // fallback\n\n    let searchPattern;\n    try {\n      searchPattern = new RegExp(\n        '(' +\n          // @ts-ignore\n          searchTerm\n            .toLowerCase()\n            .match(/\".*?\"|[^ ]+/g) // extract words\n            .map(\n              (needle) => needle.replace(/\"(.*?)\"/, '$1') // strip away '\"'\n            )\n            .join('|') + // combine words\n          ')',\n        'ig'\n      );\n    } catch (error) {\n      return highlightedText;\n    }\n\n    const containsTagPattern = /(<.*?>)(.*)(<\\/.*?>)/gi;\n    const containsTagMatches = containsTagPattern.exec(haystackAlwaysString);\n\n    if (containsTagMatches) {\n      // tag exists in haystack\n      highlightedText =\n        containsTagMatches[1] +\n        containsTagMatches[2].replace(\n          searchPattern,\n          '<span class=\"gt-highlight-search\">$1</span>'\n        ) +\n        containsTagMatches[3];\n    } else {\n      highlightedText = haystackAlwaysString.replace(\n        searchPattern,\n        '<span class=\"gt-highlight-search\">$1</span>'\n      );\n    }\n\n    return highlightedText;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { capitalize } from '../utilities/utilities';\n\n@Pipe({\n  name: 'capitalCase',\n})\nexport class CapitalCasePipe implements PipeTransform {\n  transform(s: string): any {\n    return capitalize(s);\n  }\n}\n","import { Injector, Pipe, PipeTransform, Type } from '@angular/core';\n\n@Pipe({\n  name: 'dynamicPipe',\n})\nexport class DynamicPipe implements PipeTransform {\n  constructor(private injector: Injector) {}\n\n  transform(value: any, requiredPipe: Type<any>, pipeArgs: any[]): any {\n    const injector = Injector.create({\n      name: 'DynamicPipe',\n      parent: this.injector,\n      providers: [{ provide: requiredPipe }],\n    });\n    const pipe = injector.get(requiredPipe);\n    return pipe.transform(value, ...(pipeArgs || []));\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { TableRows } from '../models/table-row.interface';\n\n@Component({\n  selector: 'gt-delta',\n  template: `<span\n    *ngIf=\"{\n      value:\n        index === 0\n          ? initialValue\n          : ((baseIndex === undefined\n              ? data[index - 1][key]\n              : data[baseIndex][key]) -\n              data[index][key]) /\n            -Math.abs(\n              baseIndex === undefined\n                ? data[index - 1][key]\n                : data[baseIndex][key]\n            )\n    } as delta\"\n    [class]=\"[\n      classes.span,\n      !delta.value || !Number.isFinite(delta.value)\n        ? null\n        : delta.value > 0\n        ? classes.positive\n        : classes.negative\n    ]\"\n    [class.gt-delta-positive]=\"delta.value > 0 && Number.isFinite(delta.value)\"\n    [class.gt-delta-negative]=\"delta.value < 0\"\n    >{{\n      Number.isFinite(delta.value)\n        ? (delta.value | percent)\n        : delta.value === initialValue\n        ? initialValue\n        : notApplicableValue\n    }}</span\n  >`,\n  styles: [\n    `\n      :host {\n        display: inline-block;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GtDeltaComponent {\n  constructor() {}\n  Math = Math;\n  Number = Number;\n  @Input() data: TableRows = [];\n  @Input() index: number = 0;\n  @Input() baseIndex?: number;\n  @Input() classes = {\n    span: 'gt-delta',\n    positive: 'text-success',\n    negative: 'text-danger',\n  };\n  @Input() key: string = 'value';\n  @Input() notApplicableValue: string = 'n/a';\n  @Input() initialValue: string = '-';\n}\n","import { NgModule } from '@angular/core';\nimport { CoreComponent } from './core.component';\nimport { CommonModule } from '@angular/common';\nimport { SortClassPipe } from './pipes/sort-class.pipe';\nimport { DashCasePipe } from './pipes/dash-case.pipe';\nimport { HighlightPipe } from './pipes/highlight.pipe';\nimport { CapitalCasePipe } from './pipes/capital-case.pipe';\nimport { DynamicPipe } from './pipes/dynamic.pipe';\nimport { GtDeltaComponent } from './gt-delta/gt-delta.component';\n\n@NgModule({\n  declarations: [\n    CoreComponent,\n    SortClassPipe,\n    DashCasePipe,\n    HighlightPipe,\n    CapitalCasePipe,\n    CapitalCasePipe,\n    DynamicPipe,\n    GtDeltaComponent,\n  ],\n  imports: [CommonModule],\n  exports: [CoreComponent, GtDeltaComponent],\n})\nexport class GenericTableCoreModule {}\n","export const SIMPLE_SNIPPETS = [\n  {\n    name: 'basic-table.component.ts',\n    code: `import { Component } from '@angular/core';\n\n@Component({\n  selector: 'basic-table',\n  template: '<angular-generic-table [data]=\"data\" [config]=\"config\"></angular-generic-table>'\n})\nexport class SimpleComponent {\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config = {\n    columns: {\n      firstName: {},\n      lastName: {},\n      gender: {},\n      favoriteFood: {},\n    },\n  };\n`,\n    language: 'typescript',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { BasicTableComponent } from './basic-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [BasicTableComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [BasicTableComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import { Component } from '@angular/core';\nimport { Story } from '@storybook/angular/types-6-0';\nimport { SIMPLE_SNIPPETS } from './simple.snippets';\n\n@Component({\n  selector: 'docs-simple',\n  template: `\n    <div class=\"overflow-auto\">\n      <angular-generic-table\n        [data]=\"data\"\n        [config]=\"config\"\n      ></angular-generic-table>\n    </div>\n    <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n  `,\n  styles: [],\n})\nexport class SimpleComponent {\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config = {\n    columns: {\n      firstName: {},\n      lastName: {},\n      gender: {},\n      favoriteFood: {},\n    },\n  };\n\n  SNIPPETS = SIMPLE_SNIPPETS;\n}\n\nexport const Simple: Story<SimpleComponent> = (args: SimpleComponent) => ({\n  props: args,\n  component: SimpleComponent,\n});\n","export const MOBILE_LAYOUT_SNIPPETS = [\n  {\n    name: 'mobile-layout.component.ts',\n    code: `import {Component, Pipe, PipeTransform, TemplateRef, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {TableColumn, TableConfig, TableRow} from \"@angular-generic-table/core\";\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {map} from \"rxjs/operators\";\n\n@Pipe({\n  name: 'genderPipe',\n})\nexport class GenderPipe implements PipeTransform {\n  transform(gender: 'male' | 'female'): string {\n  return gender === 'male' ? '👨' : '👩';\n  }\n}\n\n@Component({\n  selector: 'docs-mobile-layout',\n  template: \\`\n    <div class=\"d-flex justify-content-end mb-1 align-items-center\">\n      {{clicked}} <button class=\"btn btn-link d-sm-none \" (click)=\"toggleLayout()\">{{(mobileLayout$ | async)? 'Desktop ' : 'Mobile '}} layout</button>\n    </div>\n    <div [class.overflow-auto]=\"(mobileLayout$ | async) === false\">\n      <angular-generic-table [data]=\"data\" [config]=\"config$\"></angular-generic-table>\n    </div>\n    <ng-template #actions let-row=\"row\" let-col=\"col\" let-index=\"index\">\n      <button class=\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\" (click)=\"clickAction(row, col, index)\">Click me!</button>\n    </ng-template>\n  \\`,\n  styles: [\\`\n    .table th {\n      white-space: nowrap;\n    }\n  \\`],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MobileLayoutComponent {\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  clicked = '';\n\n  mobileLayout$ = new BehaviorSubject(true);\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config$: Observable<TableConfig> = this.mobileLayout$.pipe(\n    map(mobileLayout => ({\n      mobileLayout,\n      columns: {\n        firstName: {\n          mobileHeader: true,\n          sortable: true\n        },\n        lastName: {\n          mobileHeader: true,\n          sortable: true\n        },\n        gender: {\n          mobileHeader: true,\n          transform: {\n            pipe: GenderPipe\n          }\n        },\n        favoriteFood: {\n          mobileHeader: true\n        },\n        action: {\n          mobileHeader: false,\n          header: false,\n          templateRef: this.actions,\n        },\n      },\n    }))\n  );\n\n  toggleLayout = (): void => {\n    this.mobileLayout$.next(!this.mobileLayout$.getValue());\n  }\n  clickAction(row: TableRow, column: { key: string; value: TableColumn }, index: number): void {\n    console.log('clicked row:', row, 'col:', column);\n    this.clicked = \\`Clicked row number: \\${index}\\`;\n  }\n}`,\n    language: 'typescript',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { MobileLayoutComponent } from './mobile-layout.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [MobileLayoutComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [MobileLayoutComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import {\n  Component,\n  Pipe,\n  PipeTransform,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Story } from '@storybook/angular/types-6-0';\nimport {\n  TableColumn,\n  TableConfig,\n  TableRow,\n} from '@angular-generic-table/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MOBILE_LAYOUT_SNIPPETS } from './mobileLayout.snippets';\n\n@Pipe({\n  name: 'genderPipe',\n})\nexport class GenderPipe implements PipeTransform {\n  transform(gender: 'male' | 'female'): string {\n    return gender === 'male' ? '👨' : '👩';\n  }\n}\n\n@Component({\n  selector: 'docs-mobile-layout',\n  template: `\n    <div class=\"d-flex justify-content-end mb-1 align-items-center\">\n      {{ clicked }}\n      <button class=\"btn btn-link d-sm-none \" (click)=\"toggleLayout()\">\n        {{ (mobileLayout$ | async) ? 'Desktop ' : 'Mobile ' }} layout\n      </button>\n    </div>\n    <div [class.overflow-auto]=\"(mobileLayout$ | async) === false\">\n      <angular-generic-table\n        [data]=\"data\"\n        [config]=\"config$\"\n      ></angular-generic-table>\n    </div>\n    <ng-template #actions let-row=\"row\" let-col=\"col\" let-index=\"index\">\n      <button\n        class=\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\"\n        (click)=\"clickAction(row, col, index)\"\n      >\n        Click me!\n      </button>\n    </ng-template>\n    <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n  `,\n  styles: [\n    `\n      .table th {\n        white-space: nowrap;\n      }\n    `,\n  ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MobileLayoutComponent {\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  clicked = '';\n\n  mobileLayout$ = new BehaviorSubject(true);\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config$: Observable<TableConfig> = this.mobileLayout$.pipe(\n    map((mobileLayout) => ({\n      mobileLayout,\n      columns: {\n        firstName: {\n          mobileHeader: true,\n          sortable: true,\n        },\n        lastName: {\n          mobileHeader: true,\n          sortable: true,\n        },\n        gender: {\n          mobileHeader: true,\n          transform: {\n            pipe: GenderPipe,\n          },\n        },\n        favoriteFood: {\n          mobileHeader: true,\n        },\n        action: {\n          mobileHeader: false,\n          header: false,\n          templateRef: this.actions,\n        },\n      },\n    }))\n  );\n\n  SNIPPETS = MOBILE_LAYOUT_SNIPPETS;\n\n  toggleLayout = (): void => {\n    this.mobileLayout$.next(!this.mobileLayout$.getValue());\n  };\n  clickAction(\n    row: TableRow,\n    column: { key: string; value: TableColumn },\n    index: number\n  ): void {\n    console.log('clicked row:', row, 'col:', column);\n    this.clicked = `Clicked row number: ${index}`;\n  }\n}\n\nexport const Mobile: Story<MobileLayoutComponent> = (\n  args: MobileLayoutComponent\n) => ({\n  props: args,\n  component: MobileLayoutComponent,\n});\n","export const ADVANCED_DOCS = [\n  {\n    name: 'advanced.component.html',\n    code: `<div class=\"row gx-2 gy-3 mb-3\">\n  <div class=\"col-12 col-sm-auto\">\n    <button class=\"btn btn-primary w-100\" (click)=\"addData()\">Add random data</button>\n  </div>\n  <div class=\"col-12 col-sm-auto\">\n    <button class=\"btn btn-danger w-100\" (click)=\"removeData()\">Remove data</button>\n  </div>\n  <div class=\"col-12 col-sm-auto\">\n    <button class=\"btn btn-secondary w-100\" (click)=\"simulateLoad()\">Load</button>\n  </div>\n</div>\n<form [formGroup]=\"paginationForm\">\n  <div class=\"row\">\n    <div class=\"form-group col-12 col-sm-auto\">\n      <label for=\"length_input\">Length</label>\n      <input id=\"length_input\" formControlName=\"length\" type=\"number\" class=\"form-control\">\n    </div>\n    <div class=\"form-group col-12 col-sm-auto\">\n      <label for=\"search_input\">Search</label>\n      <input id=\"search_input\" formControlName=\"search\" type=\"text\" class=\"form-control\">\n    </div>\n  </div>\n</form>\n<div class=\"mx-n3 mx-sm-0\">\n  <angular-generic-table [data]=\"data$\" [config]=\"tableConfig$\" [page]=\"(currentPage$ | async)!\" [search]=\"search$\" [loading]=\"loading$\" #table>\n    <div class=\"table-loading gt-skeleton-loader\"></div>\n    <div class=\"table-no-data alert alert-info mt-3\">\n      Table is empty\n    </div>\n  </angular-generic-table>\n</div>\n<div class=\"row justify-content-between justify-content-sm-center align-items-center mt-3\" *ngIf=\"{current: (currentPage$ | async) || 0,total: (table.table$ | async)?.info?.pageTotal || 1\n} as pagination\">\n  <div class=\"col-auto\">\n    <button class=\"btn btn-primary\" (click)=\"prev()\" [disabled]=\"pagination.current === 0\">Prev</button>\n  </div>\n  <div class=\"col-auto\">\n    <button class=\"btn btn-primary\" (click)=\"next()\" [disabled]=\"pagination.total -1 === pagination.current\">Next</button>\n  </div>\n  <div class=\"col-auto\">Current page: {{pagination.current +1}}</div>\n  <div class=\"col-auto\">Total pages: {{pagination.total}}</div>\n  <div class=\"col-auto\">\n    Records: {{(data$ | async).length}}\n  </div>\n  <div class=\"col-auto\">\n    {{clicked}}\n  </div>\n</div>\n<ng-template #actions let-row=\"row\" let-col=\"col\" let-index=\"index\">\n  <button class=\"btn btn-outline-primary btn-sm my-sm-n3\" (click)=\"clickAction(row, col, index)\">Click me!</button>\n</ng-template>\n<ng-template #color let-row=\"row\" let-col=\"col\">\n  <div [style.background]=\"row[col.key]\" style=\"width: 1.5rem; height: 1.5rem; border-radius: 50%\"></div>\n</ng-template>`,\n    language: 'xml',\n  },\n  {\n    name: 'advanced.component.ts',\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\nimport { FormBuilder } from '@angular/forms';\nimport { TableColumn, TableConfig, TableRow } from '@angular-generic-table/core';\nimport { withLatestFrom } from 'rxjs/operators';\n\n@Component({\n  selector: 'docs-advanced',\n  templateUrl: './advanced.component.html',\n  styles: [],\n})\nexport class AdvancedComponent implements OnInit {\n  get currentPage$(): Observable<number> {\n    return this._currentPage$.asObservable();\n  }\n\n  set currentPage(value: number) {\n    this._currentPage$.next(value);\n  }\n  constructor(private fb: FormBuilder) {}\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n  paginationForm = this.fb.group({\n    length: [10],\n    search: [''],\n  });\n  search$ = this.paginationForm.get('search')?.valueChanges as Observable<string>;\n  loading$ = new BehaviorSubject(true);\n  data$: BehaviorSubject<any> = new BehaviorSubject([\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteColor: '#26BFAF',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteColor: '#0f0',\n      favoriteFood: 'Pizza',\n    },\n  ]);\n\n  private _currentPage$ = new BehaviorSubject(0);\n\n  clicked: string = '';\n  maleFirstNames = ['Peter', 'Clark', 'Ruben', 'John', 'Jack', 'Roscoe'];\n  femaleFirstNames = ['Mary Jane', 'Kim', 'Sarah', 'Michelle', 'Ann'];\n  lastNames = ['Andersson', 'Smith', 'Parker', 'Kent', 'Rogers', 'Lane', 'Jackson'];\n  foods = ['Pizza', 'Pasta', 'Hamburger', 'Pancakes', 'Tacos', 'Lasagna', 'Meatloaf'];\n  colors = ['#33d60b', '#dcafff', '#3fc9ff', '#ff1600', '#5238b1', '#fff'];\n\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\n\n  addData(): void {\n    this.data$.next([...this.data$.getValue(), this.randomRecord()]);\n  }\n\n  removeData(): void {\n    this.data$.next([]);\n  }\n\n  simulateLoad(): void {\n    this.loading$.next(true);\n    // set loading state to false after 2 seconds\n    setTimeout(() => this.loading$.next(false), 2000);\n  }\n\n  clickAction(row: TableRow, column: { key: string; value: TableColumn }, index: number): void {\n    console.log('clicked row:', row, 'col:', column);\n    this.clicked = \\`clicked row number: \\${index}\\`;\n  }\n\n  randomRecord(): TableRow {\n    const random = Math.floor(Math.random() * 2);\n    const newRecord = {\n      firstName: random\n        ? this.maleFirstNames[Math.floor(Math.random() * this.maleFirstNames.length)]\n        : this.femaleFirstNames[Math.floor(Math.random() * this.femaleFirstNames.length)],\n      lastName: this.lastNames[Math.floor(Math.random() * this.lastNames.length)],\n      gender: random ? 'male' : 'female',\n      favoriteColor: this.colors[Math.floor(Math.random() * this.colors.length)],\n      favoriteFood: this.foods[Math.floor(Math.random() * this.foods.length)],\n    };\n    console.log('added new random record:', newRecord);\n\n    return newRecord;\n  }\n\n  next = () => {\n    this.currentPage = this._currentPage$.value + 1;\n  };\n  prev = () => {\n    this.currentPage = this._currentPage$.value - 1;\n  };\n\n  ngOnInit(): void {\n    this.simulateLoad();\n    this.paginationForm\n      .get('length')\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\n      .subscribe(([length, config]) => {\n        length = +length;\n        this.tableConfig$.next({\n          ...config,\n          pagination: { ...config.pagination, length },\n        });\n      });\n    this.tableConfig$.next({\n      class: 'table table-mobile text-nowrap mb-0',\n      columns: {\n        firstName: {\n          header: 'First name',\n          mobileHeader: true,\n          sortable: true,\n          order: 0,\n        },\n        lastName: {\n          header: 'Last name',\n          mobileHeader: true,\n          hidden: false,\n          sortable: true,\n        },\n        gender: {\n          mobileHeader: 'Sex',\n          sortable: true,\n          order: 1,\n        },\n        favoriteColor: {\n          header: 'Favorite color',\n          mobileHeader: true,\n          templateRef: this.color,\n          sortable: false,\n          order: 2,\n          search: false,\n          class: 'custom-class',\n        },\n        favoriteFood: {\n          mobileHeader: true,\n          header: 'Favorite food',\n          hidden: false,\n          sortable: true,\n          order: 0,\n        },\n        action: {\n          mobileHeader: false,\n          header: false,\n          templateRef: this.actions,\n          order: 6,\n        },\n      },\n      pagination: {\n        length: this.paginationForm.get('length')?.value || 0,\n      },\n    });\n  }\n}`,\n    language: 'typescript',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AdvancedComponent } from './advanced.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [AdvancedComponent],\n  imports: [BrowserModule, ReactiveFormsModule, GenericTableCoreModule],\n  bootstrap: [AdvancedComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\nimport { UntypedFormBuilder } from '@angular/forms';\nimport {\n  TableConfig,\n  TableRow,\n  TableColumn,\n} from '@angular-generic-table/core';\nimport { withLatestFrom } from 'rxjs/operators';\nimport { Story } from '@storybook/angular/types-6-0';\nimport { ADVANCED_DOCS } from './advanced.snippets';\n\n@Component({\n  selector: 'docs-advanced',\n  templateUrl: './advanced.component.html',\n  styles: [],\n})\nexport class AdvancedComponent implements OnInit {\n  get currentPage$(): Observable<number> {\n    return this._currentPage$.asObservable();\n  }\n\n  set currentPage(value: number) {\n    this._currentPage$.next(value);\n  }\n  constructor(private fb: UntypedFormBuilder) {}\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n  paginationForm = this.fb.group({\n    length: [10],\n    search: [''],\n  });\n  search$ = this.paginationForm.get('search')\n    ?.valueChanges as Observable<string>;\n  loading$ = new BehaviorSubject(true);\n  data$: BehaviorSubject<any> = new BehaviorSubject([\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteColor: '#26BFAF',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteColor: '#0f0',\n      favoriteFood: 'Pizza',\n    },\n  ]);\n\n  private _currentPage$ = new BehaviorSubject(0);\n\n  clicked: string = '';\n  maleFirstNames = ['Peter', 'Clark', 'Ruben', 'John', 'Jack', 'Roscoe'];\n  femaleFirstNames = ['Mary Jane', 'Kim', 'Sarah', 'Michelle', 'Ann'];\n  lastNames = [\n    'Andersson',\n    'Smith',\n    'Parker',\n    'Kent',\n    'Rogers',\n    'Lane',\n    'Jackson',\n  ];\n  foods = [\n    'Pizza',\n    'Pasta',\n    'Hamburger',\n    'Pancakes',\n    'Tacos',\n    'Lasagna',\n    'Meatloaf',\n  ];\n  colors = ['#33d60b', '#dcafff', '#3fc9ff', '#ff1600', '#5238b1', '#fff'];\n\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\n  SNIPPETS = ADVANCED_DOCS;\n\n  addData(): void {\n    this.data$.next([...this.data$.getValue(), this.randomRecord()]);\n  }\n\n  removeData(): void {\n    this.data$.next([]);\n  }\n\n  simulateLoad(): void {\n    this.loading$.next(true);\n    // set loading state to false after 2 seconds\n    setTimeout(() => this.loading$.next(false), 2000);\n  }\n\n  clickAction(\n    row: TableRow,\n    column: { key: string; value: TableColumn },\n    index: number\n  ): void {\n    console.log('clicked row:', row, 'col:', column);\n    this.clicked = `clicked row number: ${index}`;\n  }\n\n  randomRecord(): TableRow {\n    const random = Math.floor(Math.random() * 2);\n    const newRecord = {\n      firstName: random\n        ? this.maleFirstNames[\n            Math.floor(Math.random() * this.maleFirstNames.length)\n          ]\n        : this.femaleFirstNames[\n            Math.floor(Math.random() * this.femaleFirstNames.length)\n          ],\n      lastName:\n        this.lastNames[Math.floor(Math.random() * this.lastNames.length)],\n      gender: random ? 'male' : 'female',\n      favoriteColor:\n        this.colors[Math.floor(Math.random() * this.colors.length)],\n      favoriteFood: this.foods[Math.floor(Math.random() * this.foods.length)],\n    };\n    console.log('added new random record:', newRecord);\n\n    return newRecord;\n  }\n\n  next = () => {\n    this.currentPage = this._currentPage$.value + 1;\n  };\n  prev = () => {\n    this.currentPage = this._currentPage$.value - 1;\n  };\n\n  ngOnInit(): void {\n    this.simulateLoad();\n    this.paginationForm\n      .get('length')\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\n      .subscribe(([length, config]) => {\n        length = +length;\n        this.tableConfig$.next({\n          ...config,\n          pagination: { ...config.pagination, length },\n        });\n      });\n    this.tableConfig$.next({\n      class: 'table text-nowrap mb-0',\n      mobileLayout: true,\n      columns: {\n        firstName: {\n          header: 'First name',\n          mobileHeader: true,\n          sortable: true,\n          order: 0,\n        },\n        lastName: {\n          header: 'Last name',\n          mobileHeader: true,\n          hidden: false,\n          sortable: true,\n        },\n        gender: {\n          mobileHeader: 'Sex',\n          sortable: true,\n          order: 1,\n        },\n        favoriteColor: {\n          header: 'Favorite color',\n          mobileHeader: true,\n          templateRef: this.color,\n          sortable: false,\n          order: 2,\n          search: false,\n          class: 'custom-class',\n        },\n        favoriteFood: {\n          mobileHeader: true,\n          header: 'Favorite food',\n          hidden: false,\n          sortable: true,\n          order: 0,\n        },\n        action: {\n          mobileHeader: false,\n          header: false,\n          templateRef: this.actions,\n          order: 6,\n          class: 'py-1 text-end',\n        },\n      },\n      pagination: {\n        length: this.paginationForm.get('length')?.value || 0,\n      },\n    });\n  }\n}\n\nexport const Advanced: Story<AdvancedComponent> = (\n  args: AdvancedComponent\n) => ({\n  props: args,\n  component: AdvancedComponent,\n});\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Story } from '@storybook/angular/types-6-0';\nimport hljs from 'highlight.js/lib/core';\nimport { HighlightResult } from 'highlight.js';\n\nimport typescript from 'highlight.js/lib/languages/typescript';\nimport xml from 'highlight.js/lib/languages/xml';\nimport scss from 'highlight.js/lib/languages/scss';\n\nhljs.registerLanguage('typescript', typescript);\nhljs.registerLanguage('scss', scss);\nhljs.registerLanguage('xml', xml);\n\n@Component({\n  selector: 'docs-tabs',\n  template: `\n    <ul class=\"nav nav-tabs mt-4 flex-nowrap text-nowrap overflow-auto\">\n      <li class=\"nav-item\" *ngFor=\"let item of content; let i = index\">\n        <button\n          class=\"nav-link btn-link\"\n          [class.active]=\"activeIndex === i\"\n          (click)=\"view(i)\"\n        >\n          {{ item.name }}\n        </button>\n      </li>\n    </ul>\n    <ng-container *ngIf=\"activeContent\">\n      <pre><code [innerHTML]=\"activeContent?.value\" class=\"{{'language-' + activeContent?.language}}\"></code></pre>\n    </ng-container>\n  `,\n  styleUrls: ['./tabs.component.scss'],\n})\nexport class TabsComponent implements OnInit {\n  get content(): any {\n    return this._content;\n  }\n\n  @Input() set content(value: any) {\n    this._content = value;\n  }\n  constructor() {}\n  activeIndex = 0;\n  activeContent: HighlightResult | undefined;\n\n  private _content: Array<{}> = [];\n  ngOnInit(): void {\n    this.activeContent = hljs.highlight(this.content[this.activeIndex].code, {\n      language: this.content[this.activeIndex].language,\n    });\n  }\n\n  view(index: number): void {\n    this.activeIndex = index;\n    this.activeContent = hljs.highlight(this.content[index].code, {\n      language: this.content[index].language,\n    });\n  }\n}\n\nexport const Tabs: Story<TabsComponent> = (args: TabsComponent) => ({\n  props: args,\n  component: TabsComponent,\n});\n","export const CUSTOM_TEMPLATES_DOCS = [\n  {\n    name: 'custom-templates.component.ts',\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { TableColumn, TableConfig, TableRow } from '@angular-generic-table/core';\nimport { ReplaySubject } from 'rxjs';\n\n@Component({\n  selector: 'custom-templates',\n  templateUrl: \\`./custom-templates.component.html\\`\n})\nexport class CustomTemplatesComponent implements OnInit {\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n  clicked = '';\n\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteColor: '#26BFAF',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteColor: '#0f0',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config$: ReplaySubject<TableConfig> = new ReplaySubject(1);\n  ngOnInit(): void {\n    this.config$.next({\n      columns: {\n        firstName: {},\n        lastName: {},\n        gender: {},\n        favoriteColor: {\n          templateRef: this.color,\n        },\n        favoriteFood: {},\n        action: {\n          templateRef: this.actions,\n        },\n      },\n    });\n  }\n  clickAction(row: TableRow, column: { key: string; value: TableColumn }, index: number): void {\n    console.log('clicked row:', row, 'col:', column);\n    this.clicked = \\`clicked row number: \\${index}\\`;\n  }\n}`,\n    language: 'typescript',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { CustomTemplatesComponent } from './custom-templates-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [CustomTemplatesComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [CustomTemplatesComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n  {\n    name: 'custom-templates.component.html',\n    code: `<angular-generic-table [data]=\"data\" [config]=\"config$\"></angular-generic-table>\n<ng-template #actions let-row=\"row\" let-col=\"col\" let-index=\"index\">\n <button class=\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\" (click)=\"clickAction(row, col, index)\">Click me!</button>\n</ng-template>\n<ng-template #color let-row=\"row\" let-col=\"col\">\n <div [style.background]=\"row[col.key]\" style=\"width: 1.5rem; height: 1.5rem; border-radius: 50%\"></div>\n</ng-template>\n{{ clicked }}`,\n    language: 'xml',\n  },\n];\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { Story } from '@storybook/angular/types-6-0';\nimport {\n  TableConfig,\n  TableRow,\n  TableColumn,\n} from '@angular-generic-table/core';\nimport { ReplaySubject } from 'rxjs';\nimport { CUSTOM_TEMPLATES_DOCS } from './custom-templates.snippets';\n\n@Component({\n  selector: 'docs-custom-templates',\n  template: `\n    <div class=\"overflow-auto\">\n      <angular-generic-table\n        [data]=\"data\"\n        [config]=\"config$\"\n      ></angular-generic-table>\n    </div>\n    <ng-template #actions let-row=\"row\" let-col=\"col\" let-index=\"index\">\n      <button\n        class=\"btn btn-outline-primary btn-sm my-sm-n3 text-nowrap\"\n        (click)=\"clickAction(row, col, index)\"\n      >\n        Click me!\n      </button>\n    </ng-template>\n    <ng-template #color let-row=\"row\" let-col=\"col\">\n      <div\n        [style.background]=\"row[col.key]\"\n        style=\"width: 1.5rem; height: 1.5rem; border-radius: 50%\"\n      ></div>\n    </ng-template>\n    {{ clicked }}\n    <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n  `,\n})\nexport class CustomTemplatesComponent implements OnInit {\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n  clicked = '';\n\n  data = [\n    {\n      firstName: 'Peter',\n      lastName: 'Parker',\n      gender: 'male',\n      favoriteColor: '#26BFAF',\n      favoriteFood: 'Pasta',\n    },\n    {\n      firstName: 'Mary Jane',\n      lastName: 'Watson',\n      gender: 'female',\n      favoriteColor: '#0f0',\n      favoriteFood: 'Pizza',\n    },\n  ];\n  config$: ReplaySubject<TableConfig> = new ReplaySubject(1);\n\n  SNIPPETS = CUSTOM_TEMPLATES_DOCS;\n  ngOnInit(): void {\n    this.config$.next({\n      columns: {\n        firstName: {},\n        lastName: {},\n        gender: {},\n        favoriteColor: {\n          templateRef: this.color,\n        },\n        favoriteFood: {},\n        action: {\n          templateRef: this.actions,\n        },\n      },\n    });\n  }\n  clickAction(\n    row: TableRow,\n    column: { key: string; value: TableColumn },\n    index: number\n  ): void {\n    console.log('clicked row:', row, 'col:', column);\n    this.clicked = `clicked row number: ${index}`;\n  }\n}\n\nexport const CustomTemplates: Story<CustomTemplatesComponent> = (\n  args: CustomTemplatesComponent\n) => ({\n  props: args,\n  component: CustomTemplatesComponent,\n});\n","export const ADVANCED_DOCS = [\n  {\n    name: 'pagination.component.html',\n    code: `<form [formGroup]=\"paginationForm\">\n  <div class=\"row gy-3\">\n    <div class=\"form-group col-12 col-sm-auto\">\n      <label for=\"length_input\">Length</label>\n      <input id=\"length_input\" formControlName=\"length\" type=\"number\" class=\"form-control\">\n    </div>\n    <div class=\"form-group col-12 col-sm-auto\">\n      <label for=\"search_input\">Search</label>\n      <input id=\"search_input\" formControlName=\"search\" type=\"text\" class=\"form-control\">\n    </div>\n  </div>\n</form>\n<div class=\"mx-n3 mx-sm-0 my-3 overflow-auto\">\n  <angular-generic-table [data]=\"data$\" [config]=\"tableConfig$\" [search]=\"search$\" [loading]=\"loading$\" #table>\n    <div class=\"table-loading gt-skeleton-loader\"></div>\n    <div class=\"table-no-data alert alert-info mt-3\">\n      Table is empty\n    </div>\n  </angular-generic-table>\n</div>\n<angular-generic-table-pagination [table]=\"table\">\n</angular-generic-table-pagination>`,\n    language: 'xml',\n  },\n  {\n    name: 'pagination.component.ts',\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\nimport { FormBuilder } from '@angular/forms';\nimport { TableConfig } from '@angular-generic-table/core';\nimport { pluck, tap, withLatestFrom } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'docs-pagination',\n  templateUrl: './pagination.component.html',\n  styles: [],\n})\nexport class PaginationComponent implements OnInit {\n  constructor(private fb: FormBuilder, private http: HttpClient) {}\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n  paginationForm = this.fb.group({\n    length: [10],\n    search: [''],\n  });\n  search$ = this.paginationForm.get('search')?.valueChanges as Observable<string>;\n  loading$ = new BehaviorSubject(true);\n  data$: Observable<any> = this.http.get('https://private-730c61-generictable.apiary-mock.com/data').pipe(\n    pluck('data'),\n    tap((_) => this.loading$.next(false))\n  );\n\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\n\n  ngOnInit(): void {\n    this.paginationForm\n      .get('length')\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\n      .subscribe(([length, config]) => {\n        length = +length;\n        this.tableConfig$.next({\n          ...config,\n          pagination: { ...config.pagination, length },\n        });\n      });\n    this.tableConfig$.next({\n      class: 'table text-nowrap',\n      columns: {\n        first_name: {\n          sortable: true,\n        },\n        last_name: {\n          sortable: true,\n        },\n        gender: {\n          sortable: true,\n        },\n        birthday: {\n          sortable: true,\n          class: 'text-end',\n          transform: {\n            pipe: DatePipe,\n            args: ['longDate'],\n          },\n        },\n      },\n      pagination: {\n        length: this.paginationForm.get('length')?.value || 0,\n      },\n    });\n  }\n}`,\n    language: 'typescript',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { PaginationComponent } from './pagination.component';\nimport { GenericTableCoreModule, GenericTablePaginationModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [PaginationComponent],\n  imports: [\n    BrowserModule,\n    GenericTableCoreModule,\n    GenericTablePaginationModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  bootstrap: [PaginationComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\nimport { UntypedFormBuilder } from '@angular/forms';\nimport { TableConfig } from '@angular-generic-table/core';\nimport { pluck, tap, withLatestFrom } from 'rxjs/operators';\nimport { Story } from '@storybook/angular/types-6-0';\nimport { ADVANCED_DOCS } from './pagination.snippets';\nimport { HttpClient } from '@angular/common/http';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'docs-pagination',\n  templateUrl: './pagination.component.html',\n  styles: [],\n})\nexport class PaginationComponent implements OnInit {\n  constructor(private fb: UntypedFormBuilder, private http: HttpClient) {}\n  @ViewChild('actions', { static: true }) actions: TemplateRef<any> | undefined;\n  @ViewChild('color', { static: true }) color: TemplateRef<any> | undefined;\n  paginationForm = this.fb.group({\n    length: [10],\n    search: [''],\n  });\n  search$ = this.paginationForm.get('search')\n    ?.valueChanges as Observable<string>;\n  loading$ = new BehaviorSubject(true);\n  data$: Observable<any> = this.http\n    .get('https://private-730c61-generictable.apiary-mock.com/data')\n    .pipe(\n      pluck('data'),\n      tap((_) => this.loading$.next(false))\n    );\n\n  tableConfig$: ReplaySubject<TableConfig> = new ReplaySubject(1);\n  SNIPPETS = ADVANCED_DOCS;\n\n  ngOnInit(): void {\n    this.paginationForm\n      .get('length')\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\n      .subscribe(([length, config]) => {\n        length = +length;\n        this.tableConfig$.next({\n          ...config,\n          pagination: { ...config.pagination, length },\n        });\n      });\n    this.tableConfig$.next({\n      class: 'table text-nowrap',\n      columns: {\n        first_name: {\n          sortable: true,\n        },\n        last_name: {\n          sortable: true,\n        },\n        gender: {\n          sortable: true,\n        },\n        birthday: {\n          sortable: true,\n          class: 'text-end',\n          transform: {\n            pipe: DatePipe,\n            args: ['longDate'],\n          },\n        },\n      },\n      pagination: {\n        length: this.paginationForm.get('length')?.value || 0,\n      },\n    });\n  }\n}\n\nexport const Pagination: Story<PaginationComponent> = (\n  args: PaginationComponent\n) => ({\n  props: args,\n  component: PaginationComponent,\n});\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { combineLatest, ReplaySubject } from 'rxjs';\nimport { map, pluck, switchMap } from 'rxjs/operators';\nimport { CoreComponent } from '../core.component';\nimport {\n  GtPaginationAriaLabels,\n  GtPaginationClasses,\n} from '../models/gt-pagination';\n\n@Component({\n  selector: 'angular-generic-table-pagination',\n  templateUrl: './pagination.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaginationComponent {\n  get paginationLength(): number {\n    return this._paginationLength;\n  }\n\n  @Input() set paginationLength(value: number) {\n    this._paginationLength = +value;\n  }\n  get classes(): GtPaginationClasses {\n    return this._classes;\n  }\n\n  @Input() set classes(value: GtPaginationClasses) {\n    this._classes = value;\n  }\n  get ariaLabels(): GtPaginationAriaLabels {\n    return this._ariaLabels;\n  }\n\n  @Input() set ariaLabels(value: GtPaginationAriaLabels) {\n    this._ariaLabels = value;\n  }\n  get table(): CoreComponent | undefined {\n    return this._table;\n  }\n  @Input() set table(value: any) {\n    this._table = value;\n    this.table$.next(value);\n  }\n\n  table$: ReplaySubject<CoreComponent> = new ReplaySubject(1);\n  private _table: CoreComponent | undefined;\n  private _ariaLabels: GtPaginationAriaLabels = {\n    nav: 'Table pagination',\n    button: 'Go to page ',\n  };\n  private _classes: GtPaginationClasses = {\n    ul: 'pagination',\n    li: 'page-item',\n    button: 'page-link',\n  };\n  private _paginationLength: number = 5;\n  pagination$ = this.table$.pipe(\n    switchMap((core) =>\n      combineLatest([core?.table$.pipe(pluck('info')), core?.currentPage$])\n    ),\n    map(([info, currentPage]) => this.generateList(info.pageTotal, currentPage))\n  );\n\n  generateList(pages: number, currentPosition: number): Array<number> {\n    const middle = Math.floor(this.paginationLength / 2);\n    const length =\n      pages < this.paginationLength ? pages : this.paginationLength;\n\n    return Array.from({ length }, (_, i) => {\n      if (i === 0) {\n        return 1;\n      } else if (pages < this.paginationLength) {\n        return i + 1;\n      } else if (i + 1 === length) {\n        return pages;\n      } else if (currentPosition > middle && currentPosition < pages - middle) {\n        return i + currentPosition - (middle - 1);\n      } else if (\n        currentPosition > middle &&\n        currentPosition < pages - (middle - 1)\n      ) {\n        return i + currentPosition - middle;\n      } else if (\n        currentPosition > middle &&\n        currentPosition === pages - (middle - 1)\n      ) {\n        return i + currentPosition - (middle + 1);\n      } else if (currentPosition > middle && currentPosition === pages - 1) {\n        return i + currentPosition - (middle + 2);\n      } else {\n        return i + 1;\n      }\n    });\n  }\n\n  goto(page: number): void {\n    if (this.table) {\n      this.table.page = page - 1;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PaginationComponent } from './pagination.component';\n\n@NgModule({\n  declarations: [PaginationComponent],\n  imports: [CommonModule],\n  exports: [PaginationComponent],\n})\nexport class GenericTablePaginationModule {}\n","export const HORIZONTAL_TABLE_SNIPPETS = [\n  {\n    name: 'horizontal-table.component.ts',\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { GtDeltaComponent, TableConfig, TableRows } from '@angular-generic-table/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'docs-horizontal',\n  templateUrl: './horizontal-table.component.html',\n  styles: [],\n})\nexport class TransposeComponent implements OnInit {\n  @ViewChild('feelings', { static: true }) feelings:\n    | TemplateRef<any>\n    | undefined;\n  @ViewChild('delta', { static: true }) delta: TemplateRef<GtDeltaComponent> | undefined;\n  @ViewChild('deltaIndex', { static: true }) deltaIndex:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  loading$ = new BehaviorSubject(false);\n  config: TableConfig = {};\n  data: TableRows = [];\n\n  ngOnInit(): void {\n    this.config = {\n      stickyHeaders: {\n        row: true,\n      },\n      mobileLayout: true,\n      rows: {\n        year: {\n          class: 'text-end',\n          header: false\n        },\n        value: {\n          class: 'text-end'\n        },\n        delta: {\n          header: 'Delta %',\n          templateRef: this.delta,\n          class: 'text-end'\n        },\n        deltaIndex: {\n          header: 'Since inception %',\n          templateRef: this.deltaIndex,\n          class: 'text-end'\n        },\n        feeling: {\n          templateRef: this.feelings,\n          class: 'text-end'\n        },\n      },\n    };\n    this.load();\n  }\n  simulateLoad(): void {\n    this.loading$.next(true);\n    // set loading state to false after 2 seconds\n    setTimeout(() => this.loading$.next(false), 2000);\n  }\n  empty(): void {\n    this.data = [];\n  }\n  load(): void {\n    this.data = [\n      {\n        year: '2017',\n        value: 50,\n        feeling: 'neutral'\n      },\n      {\n        year: '2018',\n        value: 75,\n        feeling: 'positive'\n      },\n      {\n        year: '2019',\n        value: 100,\n        feeling: 'thrilled'\n      },\n      {\n        year: '2020',\n        value: 250,\n        feeling: 'thrilled'\n      },\n      {\n        year: '2021',\n        value: 50,\n        feeling: 'negative'\n      }\n    ];\n  }\n}\n`,\n    language: 'typescript',\n  },\n  {\n    name: 'horizontal-table.component.html',\n    code: `<button class=\"btn btn-outline-primary\" (click)=\"simulateLoad()\">Simulate load</button>\n<button class=\"btn btn-outline-danger mx-3\" (click)=\"empty()\">Empty</button>\n<button class=\"btn btn-outline-primary\" (click)=\"load()\">Reset</button>\n<div class=\"overflow-auto\">\n  <angular-generic-table\n    [data]=\"data\"\n    [config]=\"config\"\n    [loading]=\"loading$\"\n  >\n    <div class=\"table-loading gt-skeleton-loader\"></div>\n    <div class=\"table-no-data alert alert-info mt-3\">Table is empty</div>\n  </angular-generic-table>\n</div>\n<ng-template #feelings let-row=\"row\" let-col=\"col\">\n  <div [ngSwitch]=\"row[col.key]\">\n    <ng-container *ngSwitchCase=\"'thrilled'\">😀</ng-container>\n    <ng-container *ngSwitchCase=\"'positive'\">🙂</ng-container>\n    <ng-container *ngSwitchCase=\"'neutral'\">😐</ng-container>\n    <ng-container *ngSwitchCase=\"'negative'\">😭</ng-container>\n  </div>\n</ng-template>\n<ng-template #delta let-data=\"data\" let-index=\"index\">\n  <gt-delta [index]=\"index\" [data]=\"data\"></gt-delta>\n</ng-template>\n<ng-template #deltaIndex let-data=\"data\" let-index=\"index\">\n  <gt-delta [index]=\"index\" [baseIndex]=\"0\" [data]=\"data\"></gt-delta>\n</ng-template>`,\n    language: 'xml',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HorizontalTableComponent } from './horizontal-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [HorizontalTableComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [HorizontalTableComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { Story } from '@storybook/angular/types-6-0';\nimport { HORIZONTAL_TABLE_SNIPPETS } from './horizontal-table.snippets';\nimport {\n  GtDeltaComponent,\n  TableConfig,\n  TableRows,\n} from '@angular-generic-table/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'docs-horizontal-table',\n  template: `\n    <button class=\"btn btn-outline-primary\" (click)=\"simulateLoad()\">\n      Simulate load\n    </button>\n    <button class=\"btn btn-outline-danger mx-3\" (click)=\"empty()\">Empty</button>\n    <button class=\"btn btn-outline-primary\" (click)=\"load()\">Reset</button>\n    <div class=\"overflow-auto\">\n      <angular-generic-table\n        [data]=\"data\"\n        [config]=\"config\"\n        [loading]=\"loading$\"\n      >\n        <div class=\"table-loading gt-skeleton-loader\"></div>\n        <div class=\"table-no-data alert alert-info mt-3\">Table is empty</div>\n      </angular-generic-table>\n    </div>\n    <ng-template #feelings let-row=\"row\" let-col=\"col\">\n      <div [ngSwitch]=\"row[col.key]\">\n        <ng-container *ngSwitchCase=\"'thrilled'\">😀</ng-container>\n        <ng-container *ngSwitchCase=\"'positive'\">🙂</ng-container>\n        <ng-container *ngSwitchCase=\"'neutral'\">😐</ng-container>\n        <ng-container *ngSwitchCase=\"'negative'\">😭</ng-container>\n      </div>\n    </ng-template>\n    <ng-template #delta let-data=\"data\" let-index=\"index\">\n      <gt-delta [index]=\"index\" [data]=\"data\"></gt-delta>\n    </ng-template>\n    <ng-template #deltaIndex let-data=\"data\" let-index=\"index\">\n      <gt-delta [index]=\"index\" [baseIndex]=\"0\" [data]=\"data\"></gt-delta>\n    </ng-template>\n    <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n  `,\n  styles: [],\n})\nexport class HorizontalTableComponent implements OnInit {\n  @ViewChild('feelings', { static: true }) feelings:\n    | TemplateRef<any>\n    | undefined;\n  @ViewChild('delta', { static: true }) delta:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  @ViewChild('deltaIndex', { static: true }) deltaIndex:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  loading$ = new BehaviorSubject(false);\n  config: TableConfig = {};\n  data: TableRows = [];\n\n  ngOnInit(): void {\n    this.config = {\n      stickyHeaders: {\n        row: true,\n      },\n      mobileLayout: true,\n      rows: {\n        year: {\n          class: 'text-end',\n          header: false,\n        },\n        value: {\n          class: 'text-end',\n        },\n        delta: {\n          header: 'Delta %',\n          templateRef: this.delta,\n          class: 'text-end',\n        },\n        deltaIndex: {\n          header: 'Since inception %',\n          templateRef: this.deltaIndex,\n          class: 'text-end',\n        },\n        feeling: {\n          templateRef: this.feelings,\n          class: 'text-end',\n        },\n      },\n    };\n    this.load();\n  }\n  simulateLoad(): void {\n    this.loading$.next(true);\n    // set loading state to false after 2 seconds\n    setTimeout(() => this.loading$.next(false), 2000);\n  }\n  empty(): void {\n    this.data = [];\n  }\n  load(): void {\n    this.data = [\n      {\n        year: '2017',\n        value: 50,\n        feeling: 'neutral',\n      },\n      {\n        year: '2018',\n        value: 75,\n        feeling: 'positive',\n      },\n      {\n        year: '2019',\n        value: 100,\n        feeling: 'thrilled',\n      },\n      {\n        year: '2020',\n        value: 250,\n        feeling: 'thrilled',\n      },\n      {\n        year: '2021',\n        value: 50,\n        feeling: 'negative',\n      },\n    ];\n  }\n\n  SNIPPETS = HORIZONTAL_TABLE_SNIPPETS;\n}\n\nexport const Horizontal: Story<HorizontalTableComponent> = (\n  args: HorizontalTableComponent\n) => ({\n  props: args,\n  component: HorizontalTableComponent,\n});\n","export const NESTED_SNIPPETS = [\n  {\n    name: 'nested-data.component.ts',\n    code: `import {Component, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {TableConfig, TableRows} from \"@angular-generic-table/core\";\n\n@Component({\n  selector: 'nested-data',\n  template: \\`\n    <div class=\"row gy-3\">\n      <div class=\"col col-sm-auto\">\n        <button class=\"btn btn-outline-primary mb-3\" (click)=\"loadData()\">\n          Load other data\n        </button>\n      </div>\n      <div class=\"col col-sm-auto\">\n        <button class=\"btn btn-outline-primary mb-3\" (click)=\"resetData()\">\n          Reset\n        </button>\n      </div>\n    </div>\n    <angular-generic-table [data]=\"data\" [config]=\"config\"></angular-generic-table>\n    <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n    <ng-template #gender let-row=\"row\" let-col=\"col\">\n      <div [ngSwitch]=\"row[col.key]\">\n        <ng-container *ngSwitchCase=\"'male'\">♂️</ng-container>\n        <ng-container *ngSwitchCase=\"'female'\">♀️</ng-container>\n      </div>\n    </ng-template>\n  \\`,\n  styles: [],\n})\nexport class NestedDataComponent implements OnInit {\n  @ViewChild('gender', { static: true }) gender: TemplateRef<any> | undefined;\n\n  config: TableConfig = {};\n  data: TableRows = [];\n  ngOnInit(): void {\n    this.resetData();\n    this.config = {\n      columns: {\n        firstName: {\n          sortable: true,\n          mapTo: { path: 'name.first' },\n        },\n        lastName: {\n          mapTo: { path: 'name.last' },\n        },\n        gender: {\n          mapTo: { path: 'data.details.gender' },\n          templateRef: this.gender,\n        },\n        favoriteFood: {\n          mapTo: { path: 'data.details.favoriteFood', missingValue: 'n/a' },\n        },\n        missing: {\n          mapTo: { path: 'data.missingKey.noMatch', missingValue: 'n/a' },\n        },\n      },\n    };\n  }\n\n  resetData() {\n    this.data = [\n      {\n        name: {\n          first: 'Peter',\n          last: 'Parker',\n        },\n        data: {\n          details: {\n            gender: 'male',\n            favoriteFood: 'Pasta',\n          },\n        },\n      },\n      {\n        name: {\n          first: 'Mary Jane',\n          last: 'Watson',\n        },\n        data: {\n          details: {\n            gender: 'female',\n            favoriteFood: 'Pizza',\n          },\n        },\n      },\n    ];\n  }\n\n  loadData(): void {\n    this.data = [\n      {\n        name: {\n          first: 'John',\n          last: 'Doe',\n        },\n        data: {\n          details: {\n            gender: 'male',\n            favoriteFood: 'Pasta',\n          },\n        },\n      },\n      {\n        name: {\n          first: 'Jane',\n          last: 'Doe',\n        },\n        data: {\n          details: {\n            gender: 'female',\n            favoriteFood: 'Pizza',\n          },\n        },\n      },\n      {\n        name: {\n          first: 'Foo',\n          last: 'Bar',\n        },\n        data: {},\n      },\n    ];\n  }\n}`,\n    language: 'typescript',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { NestedDataComponent } from './nested-data.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [NestedDataComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [NestedDataComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import { NESTED_SNIPPETS } from './nested.snippets';\nimport { Story } from '@storybook/angular/types-6-0';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { TableConfig, TableRows } from '@angular-generic-table/core';\n\n@Component({\n  selector: 'nested-data',\n  template: `\n    <div class=\"row gy-3\">\n      <div class=\"col col-sm-auto\">\n        <button class=\"btn btn-outline-primary mb-3\" (click)=\"loadData()\">\n          Load other data\n        </button>\n      </div>\n      <div class=\"col col-sm-auto\">\n        <button class=\"btn btn-outline-primary mb-3\" (click)=\"resetData()\">\n          Reset\n        </button>\n      </div>\n    </div>\n    <div class=\"overflow-auto\">\n      <angular-generic-table\n        [data]=\"data\"\n        [config]=\"config\"\n      ></angular-generic-table>\n    </div>\n    <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n    <ng-template #gender let-row=\"row\" let-col=\"col\">\n      <div [ngSwitch]=\"row[col.key]\">\n        <ng-container *ngSwitchCase=\"'male'\">♂️</ng-container>\n        <ng-container *ngSwitchCase=\"'female'\">♀️</ng-container>\n      </div>\n    </ng-template>\n  `,\n  styles: [],\n})\nexport class NestedDataComponent implements OnInit {\n  @ViewChild('gender', { static: true }) gender: TemplateRef<any> | undefined;\n\n  config: TableConfig = {};\n  data: TableRows = [];\n  ngOnInit(): void {\n    this.resetData();\n    this.config = {\n      columns: {\n        firstName: {\n          sortable: true,\n          mapTo: { path: 'name.first' },\n        },\n        lastName: {\n          mapTo: { path: 'name.last' },\n        },\n        gender: {\n          mapTo: { path: 'data.details.gender' },\n          templateRef: this.gender,\n        },\n        favoriteFood: {\n          mapTo: { path: 'data.details.favoriteFood', missingValue: 'n/a' },\n        },\n        missing: {\n          mapTo: { path: 'data.missingKey.noMatch', missingValue: 'n/a' },\n        },\n      },\n    };\n  }\n\n  resetData() {\n    this.data = [\n      {\n        name: {\n          first: 'Peter',\n          last: 'Parker',\n        },\n        data: {\n          details: {\n            gender: 'male',\n            favoriteFood: 'Pasta',\n          },\n        },\n      },\n      {\n        name: {\n          first: 'Mary Jane',\n          last: 'Watson',\n        },\n        data: {\n          details: {\n            gender: 'female',\n            favoriteFood: 'Pizza',\n          },\n        },\n      },\n    ];\n  }\n\n  loadData(): void {\n    this.data = [\n      {\n        name: {\n          first: 'John',\n          last: 'Doe',\n        },\n        data: {\n          details: {\n            gender: 'male',\n            favoriteFood: 'Pasta',\n          },\n        },\n      },\n      {\n        name: {\n          first: 'Jane',\n          last: 'Doe',\n        },\n        data: {\n          details: {\n            gender: 'female',\n            favoriteFood: 'Pizza',\n          },\n        },\n      },\n      {\n        name: {\n          first: 'Foo',\n          last: 'Bar',\n        },\n        data: {},\n      },\n    ];\n  }\n\n  SNIPPETS = NESTED_SNIPPETS;\n}\n\nexport const Nested: Story<NestedDataComponent> = (\n  args: NestedDataComponent\n) => ({\n  props: args,\n  component: NestedDataComponent,\n});\n","export const TRANSPOSE_SNIPPETS = [\n  {\n    name: 'transpose.component.ts',\n    code: `import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { TableConfig, TableRows, GtDeltaComponent } from '@angular-generic-table/core';\nimport { FormBuilder } from '@angular/forms';\nimport { withLatestFrom } from 'rxjs/operators';\n\n@Component({\n  selector: 'docs-transpose',\n  templateUrl: './transpose.component.html',\n  styles: []\n})\nexport class TransposeComponent implements OnInit {\n  @ViewChild('delta', { static: true }) delta:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  @ViewChild('deltaIndex', { static: true }) deltaIndex:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  @ViewChild('combined', { static: true }) combined:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  loading$ = new BehaviorSubject(false);\n  reactiveForm = this.fb.group({\n    length: [10],\n    search: [''],\n  });\n  search$ = this.reactiveForm.get('search')?.valueChanges as Observable<string>;\n  tableConfig$: BehaviorSubject<TableConfig> = new BehaviorSubject<TableConfig>(\n    {}\n  );\n  data: TableRows = [];\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.transpose();\n    this.load();\n    this.reactiveForm\n      .get('length')\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\n      .subscribe(([length, config]) => {\n        length = +length;\n        this.tableConfig$.next({\n          ...config,\n          pagination: { ...config.pagination, length },\n        });\n      });\n  }\n\n  simulateLoad(): void {\n    this.loading$.next(true);\n    // set loading state to false after 2 seconds\n    setTimeout(() => this.loading$.next(false), 2000);\n  }\n  empty(): void {\n    this.data = [];\n  }\n  load(): void {\n    this.data = [\n      {\n        year: '2010',\n        value: 15,\n      },\n      {\n        year: '2011',\n        value: 30,\n      },\n      {\n        year: '2012',\n        value: 25,\n      },\n      {\n        year: '2013',\n        value: 0,\n      },\n      {\n        year: '2014',\n        value: 40,\n      },\n      {\n        year: '2015',\n        value: 60,\n      },\n      {\n        year: '2016',\n        value: -5,\n      },\n      {\n        year: '2018',\n        value: 75,\n      },\n      {\n        year: '2019',\n        value: 100,\n      },\n      {\n        year: '2020',\n        value: 250,\n      },\n      {\n        year: '2021',\n        value: 50,\n      },\n      {\n        year: '2022',\n        value: 60,\n      },\n    ];\n  }\n  transpose(): void {\n    if (this.tableConfig$.value.columns) {\n      this.tableConfig$.next({\n        stickyHeaders: {\n          row: true,\n          column: true,\n        },\n        rows: {\n          year: {\n            sortable: true,\n            header: false,\n            class: 'text-end',\n          },\n          value: {\n            class: 'text-end',\n          },\n          delta: {\n            header: 'Delta %',\n            templateRef: this.delta,\n            class: 'text-end',\n          },\n          deltaIndex: {\n            header: 'Since inception %',\n            templateRef: this.deltaIndex,\n            class: 'text-end',\n          },\n          combined: {\n            header: 'Value with change',\n            templateRef: this.combined,\n            class: 'text-end text-nowrap',\n          },\n        },\n      });\n    } else {\n      this.tableConfig$.next({\n        stickyHeaders: {\n          row: true,\n          column: true,\n        },\n        columns: {\n          year: {\n            sortable: true,\n          },\n          value: {\n            class: 'text-end',\n          },\n          delta: {\n            header: 'Delta %',\n            templateRef: this.delta,\n            class: 'text-end',\n          },\n          deltaIndex: {\n            header: 'Since inception %',\n            templateRef: this.deltaIndex,\n            class: 'text-end',\n          },\n          combined: {\n            header: 'Value with change',\n            templateRef: this.combined,\n            class: 'text-end text-nowrap',\n          },\n        },\n        pagination: { length: this.reactiveForm.get('length')?.value },\n      });\n    }\n  }\n}\n`,\n    language: 'typescript',\n  },\n  {\n    name: 'horizontal-table.component.html',\n    code: `<form [formGroup]=\"reactiveForm\">\n  <div class=\"row gy-3 gx-3 align-items-end mb-3\">\n    <div class=\"form-group col-6 col-sm-auto\">\n      <label for=\"length_input\">Number of rows</label>\n      <input\n        id=\"length_input\"\n        formControlName=\"length\"\n        type=\"number\"\n        class=\"form-control\"\n      />\n    </div>\n    <div class=\"form-group col-6 col-sm-auto\">\n      <label for=\"search_input\">Search</label>\n      <input\n        id=\"search_input\"\n        formControlName=\"search\"\n        type=\"text\"\n        class=\"form-control\"\n      />\n    </div>\n    <div class=\"col-auto\">\n      <button\n        class=\"btn btn-outline-primary w-100\"\n        (click)=\"simulateLoad()\"\n      >\n        Simulate load\n      </button>\n    </div>\n    <div class=\"col col-sm-auto\">\n      <button class=\"btn btn-outline-danger w-100\" (click)=\"empty()\">\n        Empty\n      </button>\n    </div>\n    <div class=\"col col-sm-auto\">\n      <button class=\"btn btn-outline-primary w-100\" (click)=\"load()\">\n        Reset\n      </button>\n    </div>\n    <div class=\"col col-sm-auto\">\n      <button class=\"btn btn-outline-primary w-100\" (click)=\"transpose()\">\n        Transpose\n      </button>\n    </div>\n  </div>\n  <div class=\"overflow-auto\">\n    <angular-generic-table\n      #table\n      [data]=\"data\"\n      [config]=\"tableConfig$\"\n      [loading]=\"loading$\"\n      [search]=\"search$\"\n    >\n      <div class=\"table-loading gt-skeleton-loader\"></div>\n      <div class=\"table-no-data alert alert-info mt-3\">Table is empty</div>\n    </angular-generic-table>\n  </div>\n  <angular-generic-table-pagination [table]=\"table\">\n  </angular-generic-table-pagination>\n  <ng-template #delta let-index=\"index\" let-data=\"data\">\n    <gt-delta [index]=\"index\" [data]=\"data\"></gt-delta>\n  </ng-template>\n  <ng-template #deltaIndex let-index=\"index\" let-data=\"data\">\n    <gt-delta [index]=\"index\" [data]=\"data\" [baseIndex]=\"0\"></gt-delta>\n  </ng-template>\n  <ng-template\n    #combined\n    let-index=\"index\"\n    let-data=\"data\"\n    let-row=\"row\"\n    let-col=\"col\"\n  >\n    {{ row.value }}\n    <ng-container *ngIf=\"index > 0\">\n      (<gt-delta [index]=\"index\" [data]=\"data\"></gt-delta>)\n    </ng-container>\n  </ng-template>\n</form>`,\n    language: 'xml',\n  },\n  {\n    name: 'app.module.ts',\n    code: `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HorizontalTableComponent } from './horizontal-table.component';\nimport { GenericTableCoreModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [HorizontalTableComponent],\n  imports: [BrowserModule, GenericTableCoreModule],\n  bootstrap: [HorizontalTableComponent]\n})\nexport class AppModule {}`,\n    language: 'typescript',\n  },\n];\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport {\n  TableConfig,\n  TableRows,\n  GtDeltaComponent,\n} from '@angular-generic-table/core';\nimport { UntypedFormBuilder } from '@angular/forms';\nimport { withLatestFrom } from 'rxjs/operators';\nimport { Story } from '@storybook/angular/types-6-0';\nimport { TRANSPOSE_SNIPPETS } from './transpose.snippets';\n\n@Component({\n  selector: 'docs-transpose',\n  template: `\n    <form [formGroup]=\"reactiveForm\">\n      <div class=\"row gy-3 gx-3 align-items-end mb-3\">\n        <div class=\"form-group col-6 col-sm-auto\">\n          <label for=\"length_input\">Number of rows</label>\n          <input\n            id=\"length_input\"\n            formControlName=\"length\"\n            type=\"number\"\n            class=\"form-control\"\n          />\n        </div>\n        <div class=\"form-group col-6 col-sm-auto\">\n          <label for=\"search_input\">Search</label>\n          <input\n            id=\"search_input\"\n            formControlName=\"search\"\n            type=\"text\"\n            class=\"form-control\"\n          />\n        </div>\n        <div class=\"col-auto\">\n          <button\n            class=\"btn btn-outline-primary w-100\"\n            (click)=\"simulateLoad()\"\n          >\n            Simulate load\n          </button>\n        </div>\n        <div class=\"col col-sm-auto\">\n          <button class=\"btn btn-outline-danger w-100\" (click)=\"empty()\">\n            Empty\n          </button>\n        </div>\n        <div class=\"col col-sm-auto\">\n          <button class=\"btn btn-outline-primary w-100\" (click)=\"load()\">\n            Reset\n          </button>\n        </div>\n        <div class=\"col col-sm-auto\">\n          <button class=\"btn btn-outline-primary w-100\" (click)=\"transpose()\">\n            Transpose\n          </button>\n        </div>\n      </div>\n      <div class=\"overflow-auto\">\n        <angular-generic-table\n          #table\n          [data]=\"data\"\n          [config]=\"tableConfig$\"\n          [loading]=\"loading$\"\n          [search]=\"search$\"\n        >\n          <div class=\"table-loading gt-skeleton-loader\"></div>\n          <div class=\"table-no-data alert alert-info mt-3\">Table is empty</div>\n        </angular-generic-table>\n      </div>\n      <angular-generic-table-pagination [table]=\"table\">\n      </angular-generic-table-pagination>\n      <ng-template #delta let-index=\"index\" let-data=\"data\">\n        <gt-delta [index]=\"index\" [data]=\"data\"></gt-delta>\n      </ng-template>\n      <ng-template #deltaIndex let-index=\"index\" let-data=\"data\">\n        <gt-delta [index]=\"index\" [data]=\"data\" [baseIndex]=\"0\"></gt-delta>\n      </ng-template>\n      <ng-template\n        #combined\n        let-index=\"index\"\n        let-data=\"data\"\n        let-row=\"row\"\n        let-col=\"col\"\n      >\n        {{ row.value }}\n        <ng-container *ngIf=\"index > 0\">\n          (<gt-delta [index]=\"index\" [data]=\"data\"></gt-delta>)\n        </ng-container>\n      </ng-template>\n      <docs-tabs [content]=\"SNIPPETS\"></docs-tabs>\n    </form>\n  `,\n  styles: [],\n})\nexport class TransposeComponent implements OnInit {\n  @ViewChild('delta', { static: true }) delta:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  @ViewChild('deltaIndex', { static: true }) deltaIndex:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  @ViewChild('combined', { static: true }) combined:\n    | TemplateRef<GtDeltaComponent>\n    | undefined;\n  loading$ = new BehaviorSubject(false);\n  reactiveForm = this.fb.group({\n    length: [10],\n    search: [''],\n  });\n  search$ = this.reactiveForm.get('search')?.valueChanges as Observable<string>;\n  tableConfig$: BehaviorSubject<TableConfig> = new BehaviorSubject<TableConfig>(\n    {}\n  );\n  data: TableRows = [];\n\n  constructor(private fb: UntypedFormBuilder) {}\n\n  ngOnInit(): void {\n    this.transpose();\n    this.load();\n    this.reactiveForm\n      .get('length')\n      ?.valueChanges.pipe(withLatestFrom(this.tableConfig$))\n      .subscribe(([length, config]) => {\n        length = +length;\n        this.tableConfig$.next({\n          ...config,\n          pagination: { ...config.pagination, length },\n        });\n      });\n  }\n\n  simulateLoad(): void {\n    this.loading$.next(true);\n    // set loading state to false after 2 seconds\n    setTimeout(() => this.loading$.next(false), 2000);\n  }\n  empty(): void {\n    this.data = [];\n  }\n  load(): void {\n    this.data = [\n      {\n        year: '2010',\n        value: 15,\n      },\n      {\n        year: '2011',\n        value: 30,\n      },\n      {\n        year: '2012',\n        value: 25,\n      },\n      {\n        year: '2013',\n        value: 0,\n      },\n      {\n        year: '2014',\n        value: 40,\n      },\n      {\n        year: '2015',\n        value: 60,\n      },\n      {\n        year: '2016',\n        value: -5,\n      },\n      {\n        year: '2018',\n        value: 75,\n      },\n      {\n        year: '2019',\n        value: 100,\n      },\n      {\n        year: '2020',\n        value: 250,\n      },\n      {\n        year: '2021',\n        value: 50,\n      },\n      {\n        year: '2022',\n        value: 60,\n      },\n    ];\n  }\n  transpose(): void {\n    if (this.tableConfig$.value.columns) {\n      this.tableConfig$.next({\n        stickyHeaders: {\n          row: true,\n          column: true,\n        },\n        rows: {\n          year: {\n            sortable: true,\n            header: false,\n            class: 'text-end',\n          },\n          value: {\n            class: 'text-end',\n          },\n          delta: {\n            header: 'Delta %',\n            templateRef: this.delta,\n            class: 'text-end',\n          },\n          deltaIndex: {\n            header: 'Since inception %',\n            templateRef: this.deltaIndex,\n            class: 'text-end',\n          },\n          combined: {\n            header: 'Value with change',\n            templateRef: this.combined,\n            class: 'text-end text-nowrap',\n          },\n        },\n      });\n    } else {\n      this.tableConfig$.next({\n        stickyHeaders: {\n          row: true,\n          column: true,\n        },\n        columns: {\n          year: {\n            sortable: true,\n          },\n          value: {\n            class: 'text-end',\n          },\n          delta: {\n            header: 'Delta %',\n            templateRef: this.delta,\n            class: 'text-end',\n          },\n          deltaIndex: {\n            header: 'Since inception %',\n            templateRef: this.deltaIndex,\n            class: 'text-end',\n          },\n          combined: {\n            header: 'Value with change',\n            templateRef: this.combined,\n            class: 'text-end text-nowrap',\n          },\n        },\n        pagination: { length: this.reactiveForm.get('length')?.value },\n      });\n    }\n  }\n  SNIPPETS = TRANSPOSE_SNIPPETS;\n}\n\nexport const Transpose: Story<TransposeComponent> = (\n  args: TransposeComponent\n) => ({\n  props: args,\n  component: TransposeComponent,\n});\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Story } from '@storybook/addon-docs';\nimport {moduleMetadata} from \"@storybook/angular\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {CommonModule} from \"@angular/common\";\nimport {GenericTableCoreModule} from \"../../../core/src/lib/core.module\";\nimport {Simple, SimpleComponent} from \"../app/examples/simple/simple.component\";\nimport {Mobile, MobileLayoutComponent} from \"../app/examples/mobile-layout/mobile-layout.component\";\nimport {Advanced, AdvancedComponent} from \"../app/examples/advanced/advanced.component\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {TabsComponent} from \"../app/components/tabs/tabs.component\";\nimport {CustomTemplates, CustomTemplatesComponent} from \"../app/examples/custom-templates/custom-templates.component\";\nimport {Pagination, PaginationComponent} from \"../app/examples/pagination/pagination.component\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {GenericTablePaginationModule} from \"../../../core/src/lib/pagination/pagination.module\";\nimport {Horizontal, HorizontalTableComponent} from \"../app/examples/horizontal-table/horizontal-table.component\";\nimport {Nested, NestedDataComponent} from \"../app/examples/nested-data/nested-data.component\"; import {\n  Transpose\n} from '../app/examples/transpose/transpose.component';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst Preview = makeShortcode(\"Preview\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Meta title=\"Examples\" decorators={[moduleMetadata({\n      declarations: [CustomTemplatesComponent, SimpleComponent, AdvancedComponent, PaginationComponent, HorizontalTableComponent, TabsComponent, MobileLayoutComponent, NestedDataComponent],\n      imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n    })]} mdxType=\"Meta\" />\n    <h1>{`Examples`}</h1>\n    <h2>{`Basic table`}</h2>\n    <p>{`Pass `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`config`}</inlineCode>{` to table to generate a table. The example below uses the minimal configuration needed to generate a table with static data.`}</p>\n    <Story name=\"Basic table\" args={{\n      data: [{\n        firstName: 'Mark',\n        lastName: 'Parker',\n        gender: 'male',\n        favoriteFood: 'Pasta'\n      }, {\n        firstName: 'Mary Jane',\n        lastName: 'Watson',\n        gender: 'female',\n        favoriteFood: 'Pizza'\n      }]\n    }} mdxType=\"Story\">\n  {Simple.bind({})}\n    </Story>\n    <h2>{`Nested data table`}</h2>\n    <p>{`Generic table can generate tables based on nested JSON structures, just use `}<inlineCode parentName=\"p\">{`mapTo`}</inlineCode>{` option and pass string path to object value as `}<inlineCode parentName=\"p\">{`path`}</inlineCode>{` and optionally a `}<inlineCode parentName=\"p\">{`missingValue`}</inlineCode>{` value which will be used if key is undefined.`}</p>\n    <Story name=\"Nested data\" args={{\n      data: [{\n        name: {\n          first: 'Peter',\n          last: 'Parker'\n        },\n        data: {\n          details: {\n            gender: 'male',\n            favoriteFood: 'Pasta'\n          }\n        }\n      }, {\n        name: {\n          first: 'Mary Jane',\n          last: 'Watson'\n        },\n        data: {\n          details: {\n            gender: 'female',\n            favoriteFood: 'Pizza'\n          }\n        }\n      }]\n    }} mdxType=\"Story\">\n  {Nested.bind({})}\n    </Story>\n    <h2>{`Custom templates`}</h2>\n    <p>{`Define custom templates and assign them to different columns using the `}<inlineCode parentName=\"p\">{`templateRef`}</inlineCode>{` property when declaring `}<inlineCode parentName=\"p\">{`columns`}</inlineCode>{` in `}<inlineCode parentName=\"p\">{`config`}</inlineCode>{`.`}</p>\n    <Story name=\"Custom templates\" args={{\n      data: [{\n        firstName: 'Peter',\n        lastName: 'Parker',\n        gender: 'male',\n        favoriteColor: '#26BFAF',\n        favoriteFood: 'Pasta'\n      }, {\n        firstName: 'Mary Jane',\n        lastName: 'Watson',\n        gender: 'female',\n        favoriteColor: '#0f0',\n        favoriteFood: 'Pizza'\n      }]\n    }} mdxType=\"Story\">\n  {CustomTemplates.bind({})}\n    </Story>\n    <h2>{`Advanced example`}</h2>\n    <p>{`Example showcasing:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Row sort`}</li>\n      <li parentName=\"ul\">{`Loading state`}</li>\n      <li parentName=\"ul\">{`Empty state`}</li>\n      <li parentName=\"ul\">{`Global search`}</li>\n      <li parentName=\"ul\">{`Mobile table layout with sticky header (resize viewport to < 576px to view example)`}</li>\n      <li parentName=\"ul\">{`Custom pagination`}</li>\n      <li parentName=\"ul\">{`Add/remove data`}</li>\n      <li parentName=\"ul\">{`Custom templates`}</li>\n    </ul>\n    <Story name=\"Advanced\" args={{\n      data: [{\n        firstName: 'Peter',\n        lastName: 'Parker',\n        gender: 'male',\n        favoriteColor: '#26BFAF',\n        favoriteFood: 'Pasta'\n      }, {\n        firstName: 'Mary Jane',\n        lastName: 'Watson',\n        gender: 'female',\n        favoriteColor: '#0f0',\n        favoriteFood: 'Pizza'\n      }]\n    }} mdxType=\"Story\">\n  {Advanced.bind({})}\n    </Story>\n    <h2>{`Pagination example`}</h2>\n    <p>{`What would a table be without pagination? To simplify things for you, Angular Generic Table provides a basic pagination component. Just pass a reference to the table like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-markup\"\n      }}>{`<angular-generic-table #tableRef\" .../>\n<angular-generic-table-pagination [table]=\"tableRef\"/>\n`}</code></pre>\n    <Preview mdxSource=\"%0A%3Cdiv%20class=%22overflow-auto%22%3E%0A%20%20%3Ctable%3E%0A%20%20%20%20%3Cthead%3E%0A%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%3Cth%3E@Input%3C/th%3E%0A%20%20%20%20%20%20%3Cth%3EDescription%3C/th%3E%0A%20%20%20%20%20%20%3Cth%3EType%3C/th%3E%0A%20%20%20%20%20%20%3Cth%3EDefault%3C/th%3E%0A%20%20%20%20%3C/tr%3E%0A%20%20%20%20%3C/thead%3E%0A%20%20%20%20%3Ctbody%3E%0A%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3Etable%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3ETable%20connected%20to%20the%20pagination%20control.%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3ETable%20component%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3En/a%3C/code%3E%3C/td%3E%0A%20%20%20%20%3C/tr%3E%0A%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3EpaginationLength%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3ENumber%20of%20pagination%20buttons%20to%20show.%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3Enumber%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3E5%3C/code%3E%3C/td%3E%0A%20%20%20%20%3C/tr%3E%0A%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3Eclasses%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3EClasses%20for%20pagination%20elements.%20Pass%20an%20object%20with%20key%20values,%20where%20key%20is%20element%20and%20value%20is%20classes%20to%20be%20applied.%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3EGtPaginationClasses%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3E&#123;%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20&nbsp;nav:%20null,%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20&nbsp;ul:%20'pagination',%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20&nbsp;li:%20'page-item',%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20&nbsp;button:%20'page-link'%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20&#125;%0A%20%20%20%20%20%20%3C/code%3E%3C/td%3E%0A%20%20%20%20%3C/tr%3E%0A%20%20%20%20%3Ctr%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3EariaLabels%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3EAria%20labels%20for%20pagination%20elements.%20Pass%20an%20object%20with%20key%20values,%20where%20key%20is%20element%20and%20value%20is%20aria%20label%20to%20use.%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3EGtPaginationAriaLabels%3C/code%3E%3C/td%3E%0A%20%20%20%20%20%20%3Ctd%3E%3Ccode%3E%0A%20%20%20%20%20%20%20%20&#123;%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20&nbsp;nav:%20'Table%20navigation',%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20&nbsp;button:%20'Go%20to%20page%20'%3Cbr%20/%3E%0A%20%20%20%20%20%20%20%20&#125;%0A%20%20%20%20%20%20%3C/code%3E%3C/td%3E%0A%20%20%20%20%3C/tr%3E%0A%20%20%20%20%3C/tbody%3E%0A%20%20%3C/table%3E%0A%20%20%3C/div%3E%0A\" mdxType=\"Preview\">\n  <div class=\"overflow-auto\">\n  <table>\n    <thead>\n    <tr>\n      <th>@Input</th>\n      <th>Description</th>\n      <th>Type</th>\n      <th>Default</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr>\n      <td><code>table</code></td>\n      <td>Table connected to the pagination control.</td>\n      <td>Table component</td>\n      <td><code>n/a</code></td>\n    </tr>\n    <tr>\n      <td><code>paginationLength</code></td>\n      <td>Number of pagination buttons to show.</td>\n      <td><code>number</code></td>\n      <td><code>5</code></td>\n    </tr>\n    <tr>\n      <td><code>classes</code></td>\n      <td>Classes for pagination elements. Pass an object with key values, where key is element and value is classes to be applied.</td>\n      <td><code>GtPaginationClasses</code></td>\n      <td><code>&#123;<br />\n        &nbsp;nav: null,<br />\n        &nbsp;ul: 'pagination',<br />\n        &nbsp;li: 'page-item',<br />\n        &nbsp;button: 'page-link'<br />\n        &#125;\n      </code></td>\n    </tr>\n    <tr>\n      <td><code>ariaLabels</code></td>\n      <td>Aria labels for pagination elements. Pass an object with key values, where key is element and value is aria label to use.</td>\n      <td><code>GtPaginationAriaLabels</code></td>\n      <td><code>\n        &#123;<br />\n        &nbsp;nav: 'Table navigation',<br />\n        &nbsp;button: 'Go to page '<br />\n        &#125;\n      </code></td>\n    </tr>\n    </tbody>\n  </table>\n  </div>\n    </Preview>\n    <h3>{`Import module`}</h3>\n    <p>{`In order to use the pagination component provided by angular generic table, you need to import it.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { GenericTableCoreModule, GenericTablePaginationModule } from '@angular-generic-table/core';\n\n@NgModule({\n  declarations: [...],\n  imports: [\n    ...\n    GenericTableCoreModule,\n    GenericTablePaginationModule\n  ],\n  exports: [\n    GenericTableCoreModule,\n    GenericTablePaginationModule\n  ]\n})\nexport class SharedModule {}\n`}</code></pre>\n    <Story name=\"Pagination\" mdxType=\"Story\">\n  {Pagination.bind({})}\n    </Story>\n    <h2>{`Horizontal example`}</h2>\n    <p>{`Declare `}<inlineCode parentName=\"p\">{`rows`}</inlineCode>{` instead of `}<inlineCode parentName=\"p\">{`columns`}</inlineCode>{` to get a horizontal table where records are added as columns instead of rows. The example below freezes the first column by setting `}<inlineCode parentName=\"p\">{`stickyHeaders.row`}</inlineCode>{` to true, it also uses `}<inlineCode parentName=\"p\">{`<gt-delta>`}</inlineCode>{` which is a helper component to display the delta between two values (by default it compares against previous row or column).`}</p>\n    <Story name=\"Horizontal table\" mdxType=\"Story\">\n  {Horizontal.bind({})}\n    </Story>\n    <h3>{`Transpose table (flip layout)`}</h3>\n    <p>{`Here's a similar example with `}<code>{`search`}</code>{` and `}<code>{`pagination`}</code>{`, that let the user switch from row-layout to column-layout.`}</p>\n    <Story name=\"Transpose table\" mdxType=\"Story\">\n  {Transpose.bind({})}\n    </Story>\n    <h2>{`Toggle mobile layout`}</h2>\n    <p>{`Use mobile layout for table by setting `}<inlineCode parentName=\"p\">{`mobileLayout`}</inlineCode>{` config option to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` for table (or by adding class `}<inlineCode parentName=\"p\">{`.table-mobile`}</inlineCode>{` to table). Using config option is the preferred way as it will not only add the correct styling but also hide mobile headers automatically when option changes. Generic table uses CSS to create an layout optimized for mobiles, i.e the markup stays the same and it's still use table elements for rendering. Resize the window or view the example below on a small screen to checkout the mobile version as well as the ability toggle to desktop layout.`}</p>\n    <h3>{`Set breakpoint for mobile layout`}</h3>\n    <p>{`Since Generic table relies solely on CSS and media queries to accomplish the mobile layout, it's just a matter of declaring a breakpoint using `}<inlineCode parentName=\"p\">{`SCSS`}</inlineCode>{`. Override the default value of `}<inlineCode parentName=\"p\">{`576px`}</inlineCode>{`\n(bootstrap breakpoint for small screens), by passing a new value for `}<inlineCode parentName=\"p\">{`$mobile-style-max-width`}</inlineCode>{` like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`@use '@angular-generic-table/core/scss' as generic-table-styles with (\n  $mobile-style-max-width: 375px\n);\n@include generic-table-styles.styles();\n`}</code></pre>\n    <Story name=\"Toggle mobile layout\" mdxType=\"Story\">\n  {Mobile.bind({})}\n    </Story>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const basicTable = Simple.bind({});\nbasicTable.storyName = 'Basic table';\nbasicTable.args = {\n  data: [{\n    firstName: 'Mark',\n    lastName: 'Parker',\n    gender: 'male',\n    favoriteFood: 'Pasta'\n  }, {\n    firstName: 'Mary Jane',\n    lastName: 'Watson',\n    gender: 'female',\n    favoriteFood: 'Pizza'\n  }]\n};\nbasicTable.parameters = { storySource: { source: 'Simple.bind({})' } };\n\nexport const nestedData = Nested.bind({});\nnestedData.storyName = 'Nested data';\nnestedData.args = {\n  data: [{\n    name: {\n      first: 'Peter',\n      last: 'Parker'\n    },\n    data: {\n      details: {\n        gender: 'male',\n        favoriteFood: 'Pasta'\n      }\n    }\n  }, {\n    name: {\n      first: 'Mary Jane',\n      last: 'Watson'\n    },\n    data: {\n      details: {\n        gender: 'female',\n        favoriteFood: 'Pizza'\n      }\n    }\n  }]\n};\nnestedData.parameters = { storySource: { source: 'Nested.bind({})' } };\n\nexport const customTemplates = CustomTemplates.bind({});\ncustomTemplates.storyName = 'Custom templates';\ncustomTemplates.args = {\n  data: [{\n    firstName: 'Peter',\n    lastName: 'Parker',\n    gender: 'male',\n    favoriteColor: '#26BFAF',\n    favoriteFood: 'Pasta'\n  }, {\n    firstName: 'Mary Jane',\n    lastName: 'Watson',\n    gender: 'female',\n    favoriteColor: '#0f0',\n    favoriteFood: 'Pizza'\n  }]\n};\ncustomTemplates.parameters = { storySource: { source: 'CustomTemplates.bind({})' } };\n\nexport const advanced = Advanced.bind({});\nadvanced.storyName = 'Advanced';\nadvanced.args = {\n  data: [{\n    firstName: 'Peter',\n    lastName: 'Parker',\n    gender: 'male',\n    favoriteColor: '#26BFAF',\n    favoriteFood: 'Pasta'\n  }, {\n    firstName: 'Mary Jane',\n    lastName: 'Watson',\n    gender: 'female',\n    favoriteColor: '#0f0',\n    favoriteFood: 'Pizza'\n  }]\n};\nadvanced.parameters = { storySource: { source: 'Advanced.bind({})' } };\n\nexport const pagination = Pagination.bind({});\npagination.storyName = 'Pagination';\npagination.parameters = { storySource: { source: 'Pagination.bind({})' } };\n\nexport const horizontalTable = Horizontal.bind({});\nhorizontalTable.storyName = 'Horizontal table';\nhorizontalTable.parameters = { storySource: { source: 'Horizontal.bind({})' } };\n\nexport const transposeTable = Transpose.bind({});\ntransposeTable.storyName = 'Transpose table';\ntransposeTable.parameters = { storySource: { source: 'Transpose.bind({})' } };\n\nexport const toggleMobileLayout = Mobile.bind({});\ntoggleMobileLayout.storyName = 'Toggle mobile layout';\ntoggleMobileLayout.parameters = { storySource: { source: 'Mobile.bind({})' } };\n\nconst componentMeta = { title: 'Examples', decorators: [moduleMetadata({\n  declarations: [CustomTemplatesComponent, SimpleComponent, AdvancedComponent, PaginationComponent, HorizontalTableComponent, TabsComponent, MobileLayoutComponent, NestedDataComponent],\n  imports: [BrowserModule, CommonModule, GenericTableCoreModule, GenericTablePaginationModule, ReactiveFormsModule, HttpClientModule]\n})], includeStories: [\"basicTable\",\"nestedData\",\"customTemplates\",\"advanced\",\"pagination\",\"horizontalTable\",\"transposeTable\",\"toggleMobileLayout\"],  };\n\nconst mdxStoryNameToKey = {\"Basic table\":\"basicTable\",\"Nested data\":\"nestedData\",\"Custom templates\":\"customTemplates\",\"Advanced\":\"advanced\",\"Pagination\":\"pagination\",\"Horizontal table\":\"horizontalTable\",\"Transpose table\":\"transposeTable\",\"Toggle mobile layout\":\"toggleMobileLayout\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"./projects/docs/src/stories sync recursive ^\\\\.(?:(?:^%7C\\\\/%7C(?:(?:(?%21(?:^%7C\\\\/)\\\\.).)*?)\\\\/)(?%21\\\\.)(?=.)[^/]*?\\\\.stories\\\\.(js%7Cjsx%7Cts%7Ctsx))$\";\nmodule.exports = webpackEmptyContext;","var map = {\n\t\"./Introduction.stories.mdx\": \"./projects/docs/src/stories/Introduction.stories.mdx\",\n\t\"./Table.stories.mdx\": \"./projects/docs/src/stories/Table.stories.mdx\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./projects/docs/src/stories sync recursive ^\\\\.(?:(?:^%7C\\\\/%7C(?:(?:(?%21(?:^%7C\\\\/)\\\\.).)*?)\\\\/)(?%21\\\\.)(?=.)[^/]*?\\\\.stories\\\\.mdx)$\";","\"use strict\";\n\nvar _frameworkImportPath = require(\"@storybook/angular\");\n\n/* eslint-disable import/no-unresolved */\n(0, _frameworkImportPath.configure)([require.context('./projects/docs/src/stories', true, /^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.mdx)$/),require.context('./projects/docs/src/stories', true, /^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(js|jsx|ts|tsx))$/)], module, false);"],"names":["setCompodocJson","docJson","parameters","actions","argTypesRegex","controls","matchers","color","date","docs","inlineStories","themes","default","clearable","list","name","class","onChange","theme","document","body","setAttribute","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_defineProperty","obj","key","value","defineProperty","configurable","writable","config","forEach","addArgs","addArgTypes","decorator","addDecorator","loader","addLoader","addParameters","_objectSpread","target","i","arguments","length","source","getOwnPropertyDescriptors","defineProperties","enhancer","addArgTypesEnhancer","addArgsEnhancer","setGlobalRender","v","console","log","layoutProps","MDXContent","components","props","mdxType","title","parentName","isMDXComponent","__page","Error","docsOnly","componentMeta","includeStories","mdxStoryNameToKey","page","mdxComponentAnnotations","Order","dashed","capitalize","chunk","search","s","replace","m","toLowerCase","charAt","toUpperCase","slice","trim","array","chunkSize","CHUNK","len","text","caseSensitive","data","columns","searchColumns","hidden","FILTERED","row","entries","indexOf","reduce","acc","index","CoreComponent","_loading$","ReplaySubject","sortBy$","Subject","_searchBy$","searchBy$","this","pipe","startWith","map","isObservable","of","switchMap","obs","shareReplay","_tableConfig$","tableConfig$","_data$","data$","combineLatest","withLatestFrom","values","find","column","mapTo","rows","newData","newKeys","previousValue","nestedValue","path","missingValue","E","table","sortBy","searchBy","sort","a","b","typed","sortByOrder","ASC","table$","sorted","pagination","info","records","pageTotal","Math","ceil","_currentPage$","BehaviorSubject","currentPage$","lastPage","colspan$","columnOrder","order","loading","isLoading","next","string","loading$","property","newSortBy","_sortBy","DESC","levels","split","currentValue","Input","Component","selector","template","changeDetection","ChangeDetectionStrategy","SortClassPipe","transform","selection","aria","Pipe","DashCasePipe","HighlightPipe","searchTerm","haystackAlwaysString","searchPattern","highlightedText","RegExp","match","needle","join","error","containsTagMatches","exec","CapitalCasePipe","DynamicPipe","constructor","injector","requiredPipe","pipeArgs","Injector","parent","providers","provide","get","GtDeltaComponent","Number","classes","span","positive","negative","notApplicableValue","initialValue","GenericTableCoreModule","NgModule","declarations","imports","exports","SIMPLE_SNIPPETS","code","language","SimpleComponent","firstName","lastName","gender","favoriteFood","SNIPPETS","Simple","args","component","MOBILE_LAYOUT_SNIPPETS","GenderPipe","MobileLayoutComponent","clicked","mobileLayout$","config$","mobileLayout","mobileHeader","sortable","action","header","templateRef","toggleLayout","getValue","clickAction","ViewChild","static","encapsulation","ViewEncapsulation","Mobile","ADVANCED_DOCS","AdvancedComponent","fb","paginationForm","group","search$","valueChanges","favoriteColor","maleFirstNames","femaleFirstNames","lastNames","foods","colors","currentPage","prev","asObservable","addData","randomRecord","removeData","simulateLoad","setTimeout","random","floor","newRecord","ngOnInit","subscribe","UntypedFormBuilder","Advanced","typescript","scss","xml","TabsComponent","activeIndex","_content","content","activeContent","view","CUSTOM_TEMPLATES_DOCS","CustomTemplatesComponent","CustomTemplates","PaginationComponent","http","pluck","tap","_","first_name","last_name","birthday","Pagination","_ariaLabels","nav","button","_classes","ul","li","_paginationLength","pagination$","core","generateList","paginationLength","ariaLabels","_table","pages","currentPosition","middle","Array","from","goto","GenericTablePaginationModule","HORIZONTAL_TABLE_SNIPPETS","HorizontalTableComponent","stickyHeaders","year","delta","deltaIndex","feeling","feelings","load","empty","Horizontal","NESTED_SNIPPETS","NestedDataComponent","resetData","missing","first","last","details","loadData","Nested","TRANSPOSE_SNIPPETS","TransposeComponent","reactiveForm","transpose","combined","Transpose","Preview","makeShortcode","MDXDefaultShortcode","warn","decorators","moduleMetadata","BrowserModule","CommonModule","ReactiveFormsModule","HttpClientModule","bind","mdxSource","basicTable","storyName","storySource","nestedData","customTemplates","advanced","horizontalTable","transposeTable","toggleMobileLayout","webpackEmptyContext","req","e","resolve","id","module","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","require","configure"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}